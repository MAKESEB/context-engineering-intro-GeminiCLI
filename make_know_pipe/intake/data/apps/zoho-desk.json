{
  "rev": 13,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization",
        "request.headers.orgId"
      ]
    },
    "baseUrl": "https://desk.zoho.{{connection.ext}}/api/v1",
    "headers": {
      "orgId": "{{connection.orgId}}",
      "authorization": "Zoho-oauthtoken {{connection.accessToken}}"
    },
    "response": {
      "error": {
        "message": "[{{body.errorCode}}] {{body.message}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "zoho-desk",
  "_rpcs": {
    "getModules": {
      "api": [
        {
          "response": {
            "output": "{{getModules(parameters.actionType)}}"
          }
        }
      ],
      "rev": 3,
      "name": "getModules",
      "label": "Get Modules",
      "appName": "zoho-desk",
      "apiJsonc": "[\n\t{\n\t\t\"response\": {\n\t\t\t\"output\": \"{{getModules(parameters.actionType)}}\"\n\t\t}\n\t}\n]",
      "appVersion": 1,
      "parameters": [],
      "accountName": "zoho-desk",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getModuleFields": {
      "api": [
        {
          "url": "/organizationFields?module={{parameters.selectModule}}",
          "method": "GET",
          "response": {
            "output": "{{getModuleFields(parameters.actionType,parameters.selectModule,body.data)}}"
          }
        }
      ],
      "rev": 3,
      "name": "getModuleFields",
      "label": "Get Module Fields",
      "appName": "zoho-desk",
      "apiJsonc": "[\n\t{\t\"url\": \"/organizationFields?module={{parameters.selectModule}}\",\n\t\t\"method\": \"GET\",\n\t\t\"response\": {\n\t\t\t\"output\": \"{{getModuleFields(parameters.actionType,parameters.selectModule,body.data)}}\"\n\t\t}\n\t}\n]",
      "appVersion": 1,
      "parameters": [],
      "accountName": "zoho-desk",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getInterfaceFields": {
      "api": [
        {
          "url": "/organizationFields?module={{parameters.selectModule}}",
          "body": {},
          "method": "GET",
          "response": {
            "output": {
              "name": "{{getFieldName(parameters.selectModule,item.name)}}",
              "spec": "{{if(item.spec,item.spec,false)}}",
              "type": "{{hideFields(parameters.selectModule,item.name,getFieldType(item.type))}}",
              "label": "{{getFieldLabel(item.displayLabel,item.name)}}"
            },
            "iterate": "{{getInterfaceFields(body.data,parameters.selectModule)}}"
          }
        }
      ],
      "rev": 3,
      "name": "getInterfaceFields",
      "label": "Get Interface Fields",
      "appName": "zoho-desk",
      "apiJsonc": "[\n\t{\n\t\t\"url\": \"/organizationFields?module={{parameters.selectModule}}\",\n\t\t\"method\": \"GET\",\n\t\t\"body\": {},\n\t\t\"response\": {\n\t\t\t\"iterate\":\"{{getInterfaceFields(body.data,parameters.selectModule)}}\",\n\t\t\t\"output\": {\n\t\t\t\t\"name\":\"{{getFieldName(parameters.selectModule,item.name)}}\",\n\t\t\t\t\"type\":\"{{hideFields(parameters.selectModule,item.name,getFieldType(item.type))}}\",\n\t\t\t\t\"label\":\"{{getFieldLabel(item.displayLabel,item.name)}}\",\n\t\t\t\t\"spec\": \"{{if(item.spec,item.spec,false)}}\"\n\t\t\t}\n\t\t}\n\t}\n]",
      "appVersion": 1,
      "parameters": [],
      "accountName": "zoho-desk",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getOrganizationFields": {
      "api": [
        {
          "url": "/organizationFields?module={{parameters.selectModule}}",
          "body": {},
          "method": "GET",
          "response": {
            "output": {
              "help": "{{getFieldInfo(parameters.selectModule,item.name)}}",
              "name": "{{item.apiName}}",
              "type": "{{hideFields(parameters.selectModule,item.name,getFieldType(item.type))}}",
              "label": "{{getFieldLabel(item.displayLabel,item.name)}}",
              "options": "{{getFieldOptions(item)}}",
              "advanced": "{{!getIsMandatory(parameters.actionType,item.isMandatory,item.name)}}",
              "metadata": {
                "onlyDate": "{{if(item.type === 'Date', true, undefined)}}"
              },
              "required": "{{getIsMandatory(parameters.actionType,item.isMandatory,item.name)}}",
              "validate": "{{if(getFieldOptions(item), false, undefined)}}"
            },
            "iterate": "{{body.data}}"
          }
        }
      ],
      "rev": 4,
      "name": "getOrganizationFields",
      "label": "Get Organization Fields",
      "appName": "zoho-desk",
      "apiJsonc": "[\n    {\n        \"url\": \"/organizationFields?module={{parameters.selectModule}}\",\n        \"method\": \"GET\",\n        \"body\": { },\n        \"response\": {\n            \"iterate\": \"{{body.data}}\",\n            \"output\": {\n                \"label\": \"{{getFieldLabel(item.displayLabel,item.name)}}\",\n                \"name\": \"{{item.apiName}}\",\n                \"required\": \"{{getIsMandatory(parameters.actionType,item.isMandatory,item.name)}}\",\n                \"type\": \"{{hideFields(parameters.selectModule,item.name,getFieldType(item.type))}}\",\n                \"advanced\": \"{{!getIsMandatory(parameters.actionType,item.isMandatory,item.name)}}\",\n                \"options\": \"{{getFieldOptions(item)}}\",\n                \"help\": \"{{getFieldInfo(parameters.selectModule,item.name)}}\",\n                \"validate\": \"{{if(getFieldOptions(item), false, undefined)}}\",\n                \"metadata\": {\n                    \"onlyDate\": \"{{if(item.type === 'Date', true, undefined)}}\"\n                }\n            }\n        }\n    }\n]",
      "appVersion": 1,
      "parameters": [],
      "accountName": "zoho-desk",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getIntefaceFieldsForCreateObject": {
      "api": {
        "url": "/organizationFields?module={{parameters.selectModule}}",
        "body": {},
        "method": "GET",
        "response": {
          "output": "{{buildInterfaceFields(body.data, parameters)}}",
          "wrapper": {
            "name": "data",
            "spec": "{{add(output, parseJSON('{\"name\": \"id\",\"type\": \"text\",\"label\": \"ID\"}'))}}",
            "type": "collection",
            "label": "Data"
          }
        }
      },
      "rev": 2,
      "name": "getIntefaceFieldsForCreateObject",
      "label": "Get Inteface Fields for Create Object",
      "appName": "zoho-desk",
      "apiJsonc": "\n{\n    \"url\": \"/organizationFields?module={{parameters.selectModule}}\",\n    \"method\": \"GET\",\n    \"body\": { },\n    \"response\": {\n        \"output\": \"{{buildInterfaceFields(body.data, parameters)}}\",\n        \"wrapper\": {\n            \"name\": \"data\",\n            \"label\": \"Data\",\n            \"type\": \"collection\",\n            \"spec\": \"{{add(output, parseJSON('{\\\"name\\\": \\\"id\\\",\\\"type\\\": \\\"text\\\",\\\"label\\\": \\\"ID\\\"}'))}}\"\n        }\n    }\n}\n",
      "appVersion": 1,
      "parameters": [],
      "accountName": "zoho-desk",
      "altAccountName": null,
      "parametersJsonc": null
    }
  },
  "flags": {},
  "label": "Zoho Desk",
  "theme": "#088e45",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Other",
      "modules": [
        "getObject",
        "createObject",
        "searchObject",
        "deleteObject",
        "updateObject",
        "createComment",
        "closeTickets",
        "listObjects",
        "editSpamObjects",
        "makeApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000002b44944415458c3c5973b4f54511485bf212082821250111fa08189d858596865626369634cfc17365626b634dad0589a686361a309b58db58551322a0221c288515132f29e6571f665f60cf7314c0659c949cee3deb3d7d97baff3807d46ae99934902e8024ebab9cbc03c5002c8e59a6ab2dab895fb92162515ad2c487a2169c808ee29813649af148fb188a4474b93791c058612c62e00adb59dcd26700c389e30560436f79ac012f006786b063d3e34d956355c127648ea927447d29ac57f55d28db8246c6dc0562c9cbc56ccd0321529fe0266e3feab8b80639e143259f11801daac3ecfce90641330c339e01a700be87506b7176f650278e2fa475d7d06f8b32b026ed5578167c04086a35a81a7c016d0090cbbb149ebdf817a5470b30ee300d3ce482f70d6ea65a000f1db70560e1ca871e52cf01ad8a8f96e1378eedaa7813eab9780a934b7a5e10830e8dae3c0c3a4d5c076e8ce0387adeb3b309764202b040384930d60157857877108db6e34f71cf0a351024340b7d57f12b2390b2d40deb53f017f933e8e0d815b499e8a96bf02dfdcf865e0ba796602f868df7513421061328d6d560ef8049c22ec6e104ebd7b841c6927683c2270023865f5f5a83f296c69040eb153cb65b7ca5123d042084f8433408fd59708f26cc8037d3619047d17dcd802701b384890e0673796b77e08db6f31c5462a01afe5650b41e4ca0de0bdffb8460111a681df6904d254304c0803c0222109b3d04e75d80ac45c42523de0567291ca71da055c01be484abad68a90fd975c3b710b4e24e0fa475cbb9f70d0ac917c959779a0c3da252acad835816ee09c6be708275c67d6840e33a49c015904faa99c80b2956f654de6c8168131825a1a223048d0781978093c26b8b49e678d0837a069d8e54bc85d2cef4a5a97342ea937ee41d12c54d173461e10e4f30858d9b3f75c8a077aec99f57f0cef27fe010fbd2922ac61d7b10000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda7930000053d4944415478daed9b3f6c1c4514c67f7bb1636c07c7011b2786d88e631ba210fe150868a0815046349440449f880e515020d150505051218110154510148040a2404142200a2087b11ddb3809380e26b1a338fef728660e2fcbbcf5cece9ecf77f8934eb6666e66f77dbbf3def7deccc10e76f0bf4654eb1b48838854feed017a536c5806a680058028dad666f91120223d22f299885c159179e57359443e1791a744a41423aebe6109382e2237241b6645e4193b2ed3354ab53632030e01b764fc6e37f00a7020ebe4db9680d8131cf11c7a0c78acee09b0d80ddced39a6d967cc7627602fd09763dc5aa310d08bc77a8e197fbe5108e801f6788e5900261a8580ebc092e798df8199ac5f6eaab5859be03be065e0698c7313603fc6d3372b632681f95adf7821a8081a1169129166fbb74b443e4811436f368c108aa2a8f2598da268258aa255600ef83265d858656cdd139044eca9ee53beb2048cfacc595704c430acb45fc12304d62b01adc0a0d23703cc363a01b703fd4adf38b6269015858541bb3e5b8123182dde9673aa09e06b605971640731599f4680573120988098633a8649459fc468f85d39a7bc069c043e54fa47805b1dedeb4019fc2a42452d8123c0bbc0b3c06d01c603740047938d31a2877197f2aee119018209b03755024e010f84cc9580e6c84ae8116016b8b0a50458f403c70b347e09b3965de8000e2b7d93c09fb5206008a3cf8b425a2c4fab0e8f03377d2f5644141841afd909263f5ff798ef0bf46c6e005d057aafff2002624e492b3fad036780f7801b64db8358067e404f81877193bd049c03ff3d81d0376037fa9a1c035e022643372a321448e7313ec01ba13ea013f35aba50c6a33091012de811e022f0472d08e8c53826177e05560b24601f3ad9ff6c8b6d3501c398b7c0855c6b320569648fe251090e2620a1ca5caa6f919c5e390583e812f827c84776116f800b73c0741156c7c83e8cdb692f62ab4079101205dad123c06f960497314d985a7f898dccad8409819700519ee43dcab52e13e06c4308b8037dd7661c53d24e1a0f66b3f3394ce2d482d107d3c03bc0fb18cd90c41ef4b76d0aa31e732164091c04ba94beb2d21e6112a7fdc0471851f323f009f028ba93eb06ee52fa2614d2aa4ec030661924b102fc0c4ea7d406dc87c9f7fb81d730baff34702f7a3233805e0439176083ff12c8a0cafe424f66ba306f4e049c001ec7c4f75dc05724964d82805647fb3236dae40db7797d4013ba53ba8051662eb45b6357300e702f1bc9d2f7246279826c9785f3e8a9735509e8445765d398ea8c0b6318e7d799685fb304b89e64137ac275899c1238948003e8dbd6651c12d81ab60c9cf5bc56072672b890467626e4758203b825b090a330b9097a813b953e27d9552320b6268770efce2e02bf1465b9453fc657fce7762880ecbc6f80b6268354d9bfacdb207b10537748e23a26e30c421e02dad023c00c0e091c88a34afb2c05e41b7908a8c4728d9cbc3b42dab51e54fa2e1220812bc81305fa3079800bf703af036744648dfc679105a3174e000f29df1943174e5525e0106e090cc631be083c8fe71e9d0391bd3f8dc4b2c75ce10464d89a8adf78f3a61386212ddff082af0f28e17f72b31a9823a008124240277a5ebe95388be74990a20848db9ada2a4c016fe07f7eb01002fad0abc0d5c612e674d80bc037508cdcf68d024398325612e731e5acc92a1230630dbf5a94f199113bb0f896e360e2b722f288cfe1c4ba8335ae45443e8d19be26221f8bc848431b1f23a0574446adf13745e46d11e96e78e363043c6c7fb9b52022af8a487bc31b9e20e00911298bc8497b68b9d6b7b5e504b489c84043fd2e6f073bd8c1dfedcd4748bf4ca6140000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-06-22T08:52:36.48767+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda793000009994944415478daed9d5da85dc515c77f2737696248134d93a89884a426bd31d116adb4d09756d396beb40f2d5444aa2f69111104b5601f44a1b450a1f4cb87d20f5ae8433f1eda522cd2a2d2fa2088b62218b526698a37ad3109371f6a62ee47561fd6de647bb9b9f7cc9a336be69ccc0f824172f69e73d67faf9959b3d6da50a9542a954aa552a9542a958b885eee018c02220230065c075c0988e1323de00870003801d0eb55f3148f8820224b44e44e11795344a622fe4c8ac83322b247445637d7cefd152b0bd118e97a11794306c79488fc51446ea822289cc640f70cd0f85df689c84d2945b024f70f38cc748cb221d12db6018f009b527d872a8078c6809d09af7f23702f3096c20b5401c4b31ad898f81eb7021f4e71e12a8078d6025724bec7e5c0678081af05aa00e2d90aac73b8cf2780a583be6815403cbb80150ef7d9867a9b81520560a4e38ab738dd72150984560510c732603cf72062a80288e33260b3d3bd8e026f0dfaa25500716c420f7f3c38049c1af445ab00e2d888c6013c7819981df445ab00e2d84982add93c087010067f445c0510c7fb9ceef336f06a8a0b5701c4e1754e7b84c6030c9a2a8038fe01bce3709f83c0b11417ae0288e329e047e8162da53738089c4d71618f05cc48d2ebf5109133c083c0ef804f0297f25e2148f3ff7603d7627fe0f6b6f7ac0c116d268f886c14915f1bb382ce88c8a76b5ad810d388e01a11d96f10c084885c5d53c2869ffdc03ec3e74e922004dc5205e08be531de0f4ca61a5015801fcbd123dd50f60233a9065505e0c75ac24f0e9385805baa00fcd84c78464fb210704b15801f1b8195819f4916026ea902484c67fb368ed61084902c04dc5205e0c3126ca963c942c0dd8155d2b306d86ef85cf2107015800f96e29169e0b5d4031b8ac3a0661eeda173a8f789c82c702ef229b4148fbc852e029352a4003a0ba795c00ee07af434ed43f80aa0074c00bf1791278019a3102cc5236f34f74e4a710290f3ed566e04be0edc84cea1a12be841f265e07ee06722d2f79cdc11f22ec33d5f078ea7fe6245ad019a1f6c15700ff027e04be8fc99d3f8a002fc1a5a0710ca72740a08e55fe83a2029c57880c6f82b806f0377a2553725b101783fe14fe53ac2cbc704a72490223c40c755de01eca13ce3c770050586805b8a1040c3d5e83c7b49ee815c006b6996a57864125d032427bb003a4fff6d680974a9049566cd5900864eb5af933007a04b760134ac053e9f7b108b6029cd5a826e5f4379159d0692538a0076527699b5f55c7e25b6fe41497300ba9422801dd8b265bcb02eca3610be059c41bd8d0b5905d09927b75276df62ebb9bc25047c0a5d6fb8508207588a2d52e6c93fb1c5e5b7a281a0102681c35e5fac8440d05aca5dfd0bf00af00302a272737600a19e2d791248971204b00e7b9bb509e02fcd7f073d85f4d0a8df63680bf7d04599b57fd05e122781742941009bb1c5d8ff06dc07bc004881757396fe416e21e0961204304e78a38523c003e8dc5c6ad1a4c5b39d257112e85cb22d0223fbec3d873ef9a51a1f6c9eed18178b001a9663db01bc084c651efb62583cdb411cb280bae416c03ac20325c9ab6562884c0239049cf61c6f6e01588e4adde74903314920e73c079a5b00dbd16c9b10dce7490316cf368b0ac0d5b3651140c74d5e8bad5ac6759e34b095f0d7c89cc63104dc92d3038c3124f3a48122eb00e723a700acaf5a7909e779b25f223ddbbf710c01b7e41480b55ae625287307d060f56cae21e0969c02d84278a46c126d99523297001f307cee3fe02fec9c02b01c951e23839b0cc49204f22ecd198037ee02884c0249da306940589240b26d6d731d06599340821b26750a4efad99609fa50bc0bbc0926976cf16c87c924ec5c02b02481048780e714993e0c7c160db8ccd7aead871aff34f028da03b8ffc1c52581ec43fb01ba934b009657ad5843c01bd077ee7d173d9cb9e502df5bd013c66fa2c7cc97022702ef654d02710f01b7e45a045aaa65acf3e438f013b4b8f37e5408732b7c4e01df03be884e313f07ae31dccb9204922504dce2ea0122ab65ac21e071745176176aa087d114af6fa153d1df81efa011c607d00aa5a3d86af32d9e2d4b08b825c714e0522d33cf6e6329f015e02ad413dc067c94f3addebfcff9a7fe595404a1580eb7b284805b724c019ed532f3ed366e067e8b8ae25974c1f763deebf283ba7395de0a6eb11fc81b4bcbd4696c81920bed36b603bf69fe3e5fdad62108165bb1ade0162287002c2d53ad21e08512332f94af378bad3bd73260bde17359df0692630ab0d4014ea04d9342b124669ec4d6d7df9204922d04dce22680c810b0f5b5a9270d9f7b99a61024104b1248f6ec26ef29c01a02b6be36f539e076e0637dfefb69e071c20340604b02c916026ef116804b08b8f36f6750833e9eea0b4526812479217408de6b004bb58c5bc3a408ac4920495e081d82b700b661db01b8344c8ac092de56447d83b7007611de02cead61520457a261e0108af06c2e0298b30308c5ad61520443ebd93c3d80b55a66185e9b3ab49ecd53009696a9533447a525d2f16ca1fb7f28c4b3790ac05207789c02dce422589340b22f00c1570096a3526b08d8134b1288f5706be02417c0b0074afac09204524c7d83970718da40491f0cb567f31280b50eb0d4cee1b19eed0809df081e8297002c8112d054adcbfd7e8e6036019f337cee3512be103a042f01580225001f011e02d68b48f7a9cb46671ceb8107d1bcc2a04b50506cc3eb34d012280175ad5f056e009e04a64a10015a5fb09b70e343612d6e920a203204dc1de3c79b3fa340f624902e1e53c0326cf3ffa852548b1b0f015c461540972242c02d1e02b0044a46992242c02d1e02b0d4018e2a67d12ea7c5904c00917580a3caff707c1d4c3fa4f600d63ac051e579e0bfb907d125b500d6a0b1f28ad628fc1287f70187905a00965670a3ca2f80bf42390b40482f004bc3a451e449b431c54c49c687f402d8853668ba589906fe807627c9d604622192acce2373e5468169b4dfd04fd10614a7a02cd7df92727b66a90314b42eef001a2e2def175b981ebaca7f1a2d473b0a651abe25a50042eb0067803f038fa07be5b7193e018066309d2bd9e8c969cecc778ac861e98f2911795444d69472ee5f89a031e2171ac32ec60911b94f445655c38f088d00bed187f12744648f888c55e3e761e06b808024905780bb81a7a0ec85522580e6e95f25224f2ff0e43f21223bea7c3f823446fd60e3dee7322d22bf12912dd5f8234a63d8dd2272668ef14f8bc80f45647535fc08d308608f889ceb18ffb888dc2d222baaf1cb225520e82ace07710ea0af797f0c98ad8bbd11a7f1007789c85911795e443e55e7fb8b88c6d8ab45e46611d9548d5fa9542a954aa552a9542a954a31fc1fedfa2b53549bbf2c0000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\x89504e470d0a1a0a0000000d4948445200000200000002000806000000f478d4fa00000006624b474400ff00ff00ffa0bda79300000e904944415478daeddc4d721bc91585d1a2839e78e42df46abc4b2fd4137820b1454a045000f2e765de73223ce9e8964182c4fbea6595de2e97cb010064f9c7ec1700008c270000209000008040020000020900000824000020900000804002000002090000082400002090000080400200000209000008240000209000008040020000020900000824000020900000804002000002090000082400002090000080400200000209000008240000209000008040020000020900000824000020d0fbec1700b0a0cbec1730d9dbec17c0eb0400c079e983ffc3efdf0741b020470000e718fed75d0edf9fe5080080fb0cb77384c0420400c06d06dae384c0020400c07586d86b7cff0a130000f4641b50940000f89ea1d596ef6731020080516c030a1100008c26020a1000007f32a0faf33d9e4c0000308b089848000030930898440000309b0898400000402001004005b60083090000aa100103090080af0c21220800002a116083080000aa11010308000008240000a8c816a033010000810400c02fae3a6bf17e74240000209000008040020080ca1c03742200002090000080400200e007abe6babc371d08000008240000209000008040020000020900003799adc07bd498000080400200000209000008240000209000008040020048e7ee7222090000082400002090000080400200000209000008240080649e002096000060056fb35fc06e040000041200001048000040200100a4720320d10400000412000054e709800e04000004120000104800004020010024f20400f10400000412000054e609804e040000041200001048000040200100008104000055b901b0230100008104000004120000104800004020010040456e00ec4c0000890c17e20900000824008054b6004413000010480000c96c01882500807422a01eefc9000200e0c7c03174882200007e1102c4789ffd02000afa1c0197d92f067a100000b78dda08080d8612000035d83afce0086610f70000d46308d29d0000a8c90d89742500006a13017421000020900000a82f650b90f27596200000d66038d294000080400200601db60034230000209000008040020000020900002a707fc3600200000209000008240000209000008040020080d9dc0038810000804002000002090080755c66bf00f6210000209000008040020080993c013089000080400200000209008035780280a604000004120000cce206c089040000041200001048000040200100509f2700684e000030831b00271300001048000040200100008104000004120000b57902802e040000a37902a000010000810400000412000010480000d4e50640ba1100008ce406c02204000004120000104800004020010000810400404d9e00a02b01000081040000a37804b01001000081040000047a9ffd02e0016e8ada97d5f0577ed6e94e0050950fc02c9fdf6f3100030800aa30f0f9f0f1b32004f6e2fd2c46003093a1cf2d97c3d0806edc04c80c97c3f0e71c3f27d0890060341fe83c2aed6726edeb651201c028aefa79859f1d68cc3d00f4e6831ba0201b007a32fc81e37033674902805e0c7f5af333050d3902a0351fd2000bb001a025c31f5ee37788610400adf8e002588800a005c31fb8c60d804509005e65f8032c480000402001c02b5cfd032c4a00f02cc31fdaf23bc550028067f8a002ce700360610200000209001ee5ea1f60030200588575323424007884ab7f804d080080f9c435c30900cef201053cc2914d71020000020900ce70f50fb0190100acc03a191a13000073d9b0318500e01e1f4ec0a36c6c1620000020900000804002805bacff0136250080ea9c2743070200601e5b36a6110000b46463b308010000810400d7584d026c4c000095592743270200600e5b36a612000010480000d08a239b85080000082400f88eb3492a7035091d09000008240000c6b365633a01005464fd0f9d0900005a106d8b1100fcce6a92d90c12184000009518fe30880000aa4819feb66c94f03efb0500f152063f94220080590cfe7d782f172400e0071f60401401c067696793863e10cb4d80a432fc81683600a431f899296dcb466136002431fca13dbf578b1200a4f02105f089002081e10ff01b01c007679300410400bb73f50ff00d010030862d1ba5080076e6ea1ffaf23bb630010000810400000412001c87b349803802805d399b04b8410000f4b7e3964d642f4e000040200100008104003bae2601b8430000402001c08edc9c4425b66c942400007894c8de80000080400200000209806cce260142090000082400d88d9b93a8c4968db20400008f10d99b100000104800e4b29a04082600002090006027ce26a9c4968dd2040000041200009c65cbb6110190c96a12209c0000804002000002090076e16c924a1cb3519e0000e00c91bd190100008104401eab4900040000241200ecc0d92495d8b2b1040100c03d227b4302000002090000082400b2389b04e0380e01c0fa9c4d023c41000040200100d0ce8ec76cb66c9b120000104800004020019063c7d524004f1200acccd924c0930400401b3b6ed944f6c6040000041200001048000040200190c1d924005f080000082400005e67cbc672040000047a9ffd0280ab56bfaa74050985d900ec6ff52192cc0005ba1100ac286930aefab5aefaba21860080fa561ba6abbdde57edb8654b7b0f23090058c30a1fc86f8bbc4ee0100050cdadabc97fcf7e715718fcb0a0b7cb65c7ed153fedfae6ee3c6c3edeb37b5f6395f776e7f7e2ac2aef454bded700360050d3bda132fb03faec55ff8ec311b6200058cdecc137d2e5e7fffe2af6bd383bf80d7f28cc11c0de767c73770e805befd7db93ff5d4bcf5ef1a7be67abdaf9fde2131b0058c3b371d08a753f6cc65f050cebb81cd707f1dba77fa7a55707bfab4928ca06605faec6f634f2e64057fdb03101c04a5c4dfed03b02cedce1ef263f589c2300a8e1d1617aefef0b787be2cf74c5ff18df0b966603006b6b75fe6ef8731cb66c516c00607dafdc1cd873f01b2650980dc09e5ca9e579e6be0057fd104c00b00a5793f79d8d80ff1ec7f1af137f96e10f1b7304007b397373e099ff9edb7c9f589e0d00ccd763983cf3671a6ad96cd9c20800d8d7bd81fecfe338fe7358f743244700b0b75b4f08fcafe3ffafab4928ce06603faee4f8dde5e43f0382d800b0025793af33f0812f6c00602e83793dde33b6200000b0650b24000020900000804002602f3b9e4d5a4daec77b060b100000104800c03c3b6e6c588f8d4d280100709e68631b0200000209807dec78656235b91eef192c4200004020010090cbc6269800003867c76336820900a0155793b0100100f31898c03402600f3bae265386e32e5fe72e5f07c4789ffd0280bf87e78a2167f0c3a20400d4619832929fb7708e0000ee5b713b0337090000082400d6e7ca04808709002a723609d099000080400200e0b61d8fd96cd910000090480000402001b036ab49009e2200002090000080400200e03ac76c6c4b0000402001b0ae1daf4c001844005089d524c02002000002090080efed78cc66cbc6df04000004120000104800acc96a12809708000008240000feb4e3960dbe100000191cb3f1850000804002800a5c99000c2600d6e36c12809709000008240000f6e7988d3f080080af1cb311410000402001c06c569300130880b5584d02d084000080400200606f8ed9f8960000f8c5311b31040033b93201984400acc3950900cd08000008240000f6e5988dab0400c00f8ed98822000020900058c38e57265693001309000008240000f664cbc64d020060cf6336b849000040200100008104407d5693003427009845d8004c240080746294480200603f1e01e42e01c04caebc98cdcf20b104406d3e9ca01fbf5f441300cce6431860020140052280d1fccc114f0050850f6446d9fd67cd0d809c2200a864f70f66e6f333063fbdcf7e015c95fa41f5f175bb8aa1a5d4df27b84a00509510a005831fae100054e7031ca003f7000040200100b00f47669c260000209000a8c9b937005d0900000824000020900000d8831b0079880000804002000002090000082400eaf1082000dd090080f5b90190870900000824000020900000804002a0163700023084000080400200606d9e00e0290200000209000008240000209000a8c31300c0a39cfff334010000810400000412000010480000acc9f93f2f110035b8011080a104000004120000ebb1fee76502000002090080b5b8faa70901309f1b0001184e0000acc3d53fcd0800803518fe3425000020900000a8cfd53fcd090080da0c7fba10007379020080290400405daefee9460000d464f8d3950000a8c7f0a73b0100508be1cf1002601e370002bf33fc19460000d460f833d4fbec170010cee0670a1b0080790c7fa6b1010018cfe0673a0100308ec14f190200a03f839f7204c01c1e01840c063f65090080f60c7eca130000af33f0598e00a0171f88008509005a31f001162200c6dbed0640831f6041fe26405e61f8032cca06806718fc008bb301e051863fc00604008f30fc0136210038cbf007d88800186bd527000c7f80cd0800ee31fc0136e42900ae31f801366603c0770c7f80cd09007e67f803041000e3ac7003a0e10f104200f0c1f007082200380ec31f208ea700b219fc00a16c007219fe00c1044026c31f209c0018a3d21300863f0002208ce10fc0711c6e024c61f003f0850dc0fe0c7f00fe2000f666f803f02d01d0dfac1b000d7f00ae12007b32fc01b84900ecc7f007e02e4f01ecc3e007e0341b803d18fe003c4400f435e20640c31f80870980b519fe003c4500accbf007e06902604d863f002ff114c05a0c7e009ab0015887e10f403302a09f964f0018fe00342500ea33fc01684e00d466f803d0859b006b32f801e8ca06a01ec31f80ee04402d863f004308803a0c7f008611003518fe000c2500e633fc01184e00f4736fb0bf9df87700a00b01d0d7db83ff1c0086f0f700f467d803508e0d000004120000104800004020010000810400000412000010480000402001000081040000041200001048000040200100008104000004120000104800004020010000810400000412000010480000402001000081040000041200001048000040200100008104000004120000104800004020010000810400000412000010e8ff1104019316395d5f0000000049454e44ae426082",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "getObject": {
      "id": 45328,
      "api": {
        "url": "/{{parameters.selectModule}}/{{parameters.id}}",
        "method": "GET",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 6,
      "crud": "read",
      "name": "getObject",
      "epoch": null,
      "flags": {},
      "label": "Get an Object",
      "scope": [],
      "expect": [
        {
          "name": "selectModule",
          "type": "select",
          "label": "Module",
          "options": "rpc://app%23zoho-desk@1/getModules?actionType=get",
          "required": true
        },
        {
          "name": "id",
          "type": "text",
          "label": "ID",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/{{parameters.selectModule}}/{{parameters.id}}\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\":\"{{body}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        "rpc://app%23zoho-desk@1/getInterfaceFields"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "zoho-desk",
      "description": "Returns only one object that has a specified id from a selected module (ex: a task, a ticket, an account ...).",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"selectModule\",\n\t\t\"label\": \"Module\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://getModules?actionType=get\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\",\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\"\n\t},\n\t\"rpc://getInterfaceFields\"\n]",
      "parametersJsonc": "[]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listObjects": {
      "id": 45329,
      "api": {
        "qs": {
          "from": 0,
          "limit": 99,
          "sortBy": "{{parameters.sortBy}}",
          "viewId": "{{parameters.viewId}}"
        },
        "url": "/{{parameters.selectModule}}",
        "method": "GET",
        "response": {
          "output": "{{item}}",
          "iterate": "{{body.data}}"
        },
        "pagination": {
          "qs": {
            "from": "{{(pagination.page - 1) * 99}}"
          }
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "listObjects",
      "epoch": null,
      "flags": {},
      "label": "List Objects",
      "scope": [],
      "expect": [
        {
          "name": "selectModule",
          "type": "select",
          "label": "Module",
          "options": "rpc://app%23zoho-desk@1/getModules?actionType=list",
          "required": true
        },
        {
          "help": "ID of the view to apply while fetching the resources",
          "name": "viewId",
          "type": "text",
          "label": "View ID"
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/{{parameters.selectModule}}\",\n\t\"method\": \"GET\",\n\t\"qs\":{\n\t\t\"from\": 0,\n\t\t\"limit\": 99,\n\t\t\"sortBy\": \"{{parameters.sortBy}}\",\n\t\t\"viewId\": \"{{parameters.viewId}}\"\n\t},\n\t\"response\": {\n\t\t\"output\": \"{{item}}\",\n\t\t\"iterate\": \"{{body.data}}\"\n\t},\n\t\"pagination\": {\n\t\t\"qs\": {\n\t\t\t\"from\": \"{{(pagination.page - 1) * 99}}\"\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        "rpc://app%23zoho-desk@1/getInterfaceFields"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "zoho-desk",
      "description": "Returns a list that contains multiple objects from a selected module (multiple accounts, multiple contacts, multiple tickets ...).",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"selectModule\",\n\t\t\"label\": \"Module\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://getModules?actionType=list\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"viewId\",\n\t\t\"label\": \"View ID\",\n\t\t\"type\": \"text\",\n\t\t\"help\": \"ID of the view to apply while fetching the resources\"\n\t}\n]\n",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\"\n\t},\n\t\"rpc://getInterfaceFields\"\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeApiCall": {
      "id": 45330,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://desk.zoho.{{connection.ext}}/api/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 3,
      "crud": null,
      "name": "makeApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://desk.zoho.us|eu|in/api`\nFor example:`/v1/tickets`.",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://desk.zoho.{{connection.ext}}/api/{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n\t},\n    \"headers\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n\t},\n\t\"body\": \"{{parameters.body}}\",\n\t\"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n\t\t\t\"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "zoho-desk",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to `https://desk.zoho.us|eu|in/api`\\nFor example:`/v1/tickets`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n\t\t\"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n\t\t\"default\": [\n\t\t\t{\n\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\"value\": \"application/json\"\n\t\t\t}\n\t\t]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "closeTickets": {
      "id": 45331,
      "api": {
        "url": "/closeTickets",
        "body": {
          "ids": "{{parameters.listTickets}}"
        },
        "method": "POST",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 4,
      "crud": "update",
      "name": "closeTickets",
      "epoch": null,
      "flags": {},
      "label": "Close Tickets",
      "scope": [],
      "expect": [
        {
          "name": "listTickets",
          "type": "array",
          "label": "Tickets ID(s)",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/closeTickets\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"ids\":\"{{parameters.listTickets}}\"\n\t},\n\t\"response\": {\n\t\t\"output\": \"{{body}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "zoho-desk",
      "description": "Closes one or more tickets by specifying the ticket ID(s) in a list.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"listTickets\",\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Tickets ID(s)\",\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createObject": {
      "id": 45332,
      "api": {
        "url": "/{{parameters.selectModule}}",
        "body": "{{processInputParameters(parameters, metadata.expect, \"selectModule\")}}",
        "method": "POST",
        "response": {
          "error": {
            "400": {
              "type": "DataError",
              "message": "Your request was invalid"
            },
            "500": {
              "type": "ConnectionError",
              "message": "The server was not able to handle your request"
            },
            "type": "RuntimeError",
            "message": "Generic error message"
          },
          "output": {
            "data": "{{body}}"
          }
        }
      },
      "rev": 7,
      "crud": "create",
      "name": "createObject",
      "epoch": null,
      "flags": {},
      "label": "Create an Object",
      "scope": [],
      "expect": [
        {
          "name": "selectModule",
          "type": "select",
          "label": "Module",
          "options": "rpc://app%23zoho-desk@1/getModules?actionType=create",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/{{parameters.selectModule}}\",\n    \"method\": \"POST\",\n    \"body\": \"{{processInputParameters(parameters, metadata.expect, \\\"selectModule\\\")}}\",\n    \"response\": {\n        \"output\": {\n            \"data\": \"{{body}}\"\n        },\n        \"error\": {\n            \"type\": \"RuntimeError\",\n            \"message\": \"Generic error message\",\n            \"400\": {\n                \"type\": \"DataError\",\n                \"message\": \"Your request was invalid\"\n            },\n            \"500\": {\n                \"type\": \"ConnectionError\",\n                \"message\": \"The server was not able to handle your request\"\n            }\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23zoho-desk@1/getIntefaceFieldsForCreateObject"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "zoho-desk",
      "description": "Creates an object based on a selected module (ex: create an account, create a contact, create a ticket ...).",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"selectModule\",\n\t\t\"label\": \"Module\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://getModules?actionType=create\",\n\t\t\"required\": true\n\t}\n]\n",
      "samplesJsonc": "{}",
      "altAccountName": null,
      "interfaceJsonc": "[ \"rpc://getIntefaceFieldsForCreateObject\" ]",
      "parametersJsonc": "[]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteObject": {
      "id": 45333,
      "api": {
        "url": "/{{parameters.selectModule}}/moveToTrash",
        "body": {
          "{{getDeleteID(parameters.selectModule)}}": "{{parameters.ids}}"
        },
        "method": "POST",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 5,
      "crud": "delete",
      "name": "deleteObject",
      "epoch": null,
      "flags": {},
      "label": "Delete an Object",
      "scope": [],
      "expect": [
        {
          "name": "selectModule",
          "type": "select",
          "label": "Module",
          "options": "rpc://app%23zoho-desk@1/getModules?actionType=delete",
          "required": true
        },
        {
          "name": "ids",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "ID(s)",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/{{parameters.selectModule}}/moveToTrash\",\n\t\"method\": \"POST\",\n\t\"body\":{\n\t\t\"{{getDeleteID(parameters.selectModule)}}\":\"{{parameters.ids}}\"\n\t},\n\t\"response\": {\n\t\t\"output\": \"{{body}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "zoho-desk",
      "description": "Deletes a specified object based on id from a selected module (ex: delete an account, delete a contact, delete a ticket ...).",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"selectModule\",\n\t\t\"label\": \"Module\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://getModules?actionType=delete\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"ids\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"text\"\n\t\t},\n\t\t\"type\": \"array\",\n\t\t\"label\": \"ID(s)\",\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "searchObject": {
      "id": 45334,
      "api": {
        "qs": {
          "from": 0,
          "limit": 99,
          "sortBy": "{{parameters.sortBy}}",
          "{{getSearchBy(parameters.searchBy,parameters.customFields)}}": "{{getSearchValue(parameters.searchBy,parameters.searchValue,parameters.customFields,parameters.customFieldsApi)}}"
        },
        "url": "/{{parameters.selectModule}}/search",
        "method": "GET",
        "response": {
          "output": "{{item}}",
          "iterate": "{{body.data}}"
        },
        "pagination": {
          "qs": {
            "from": "{{(pagination.page - 1) * 99}}"
          }
        }
      },
      "rev": 6,
      "crud": "read",
      "name": "searchObject",
      "epoch": null,
      "flags": {},
      "label": "Search Objects",
      "scope": [],
      "expect": [
        {
          "name": "selectModule",
          "type": "select",
          "label": "Module",
          "default": 0,
          "options": "rpc://app%23zoho-desk@1/getModules?actionType=search",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "select",
          "label": "Sort by",
          "options": [
            {
              "label": "Relevance",
              "value": "relevance"
            },
            {
              "label": "Modified time",
              "value": "modifiedTime"
            },
            {
              "label": "Created time",
              "value": "createdTime"
            }
          ]
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/{{parameters.selectModule}}/search\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"{{getSearchBy(parameters.searchBy,parameters.customFields)}}\": \"{{getSearchValue(parameters.searchBy,parameters.searchValue,parameters.customFields,parameters.customFieldsApi)}}\",\n        \"from\": 0,\n        \"limit\": 99,\n        \"sortBy\": \"{{parameters.sortBy}}\"\n    },\n    \"response\": {\n        \"output\": \"{{item}}\",\n        \"iterate\": \"{{body.data}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"from\": \"{{(pagination.page - 1) * 99}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        "rpc://app%23zoho-desk@1/getInterfaceFields"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "zoho-desk",
      "description": "Returns multiple objects based on a search criteria from a selected module(ex: accounts where account name contains 'Joe', tickets where subject contains 'Hello', contacts where email contains domain '@gmail.com' ...).",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"selectModule\",\n\t\t\"label\": \"Module\",\n\t\t\"type\": \"select\",\n\t\t\"default\": 0,\n\t\t\"options\": \"rpc://getModules?actionType=search\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"sortBy\",\n\t\t\"label\": \"Sort by\",\n\t\t\"type\": \"select\",\n\t\t\"options\":[\n\t\t\t{\n\t\t\t\t\"label\": \"Relevance\",\n\t\t\t\t\"value\": \"relevance\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Modified time\",\n\t\t\t\t\"value\": \"modifiedTime\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Created time\",\n\t\t\t\t\"value\": \"createdTime\"\n\t\t\t}\n\t\t]\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\"\n\t},\n\t\"rpc://getInterfaceFields\"\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateObject": {
      "id": 45335,
      "api": {
        "url": "/{{parameters.selectModule}}/{{parameters.id}}",
        "body": "{{processInputParameters(parameters, metadata.expect, \"selectModule\")}}",
        "method": "PATCH",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 7,
      "crud": "update",
      "name": "updateObject",
      "epoch": null,
      "flags": {},
      "label": "Update an Object",
      "scope": [],
      "expect": [
        {
          "name": "selectModule",
          "type": "select",
          "label": "Module",
          "options": "rpc://app%23zoho-desk@1/getModules?actionType=update",
          "required": true
        },
        {
          "name": "id",
          "type": "text",
          "label": "ID",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/{{parameters.selectModule}}/{{parameters.id}}\",\n    \"method\": \"PATCH\",\n    \"body\": \"{{processInputParameters(parameters, metadata.expect, \\\"selectModule\\\")}}\",\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        "rpc://app%23zoho-desk@1/getInterfaceFields"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "zoho-desk",
      "description": "Updates a specific object based on id from a selected data (ex: update an account, update a ticket, update a contact ...).",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"selectModule\",\n\t\t\"label\": \"Module\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://getModules?actionType=update\",\n\t\t\"required\": true\n\t},\n\t{\t\"name\": \"id\",\n\t\t\"label\": \"ID\",\n\t\t\"type\":\"text\",\n\t\t\"required\":true\n\t}\n]",
      "samplesJsonc": "",
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\"\n\t},\n\t\"rpc://getInterfaceFields\"\n]",
      "parametersJsonc": "[]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createComment": {
      "id": 45336,
      "api": {
        "url": "/{{parameters.selectModule}}/{{parameters.id}}/comments",
        "body": {
          "content": "{{parameters.comment}}"
        },
        "method": "POST",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 5,
      "crud": "create",
      "name": "createComment",
      "epoch": null,
      "flags": {},
      "label": "Add a Comment",
      "scope": [],
      "expect": [
        {
          "name": "selectModule",
          "type": "select",
          "label": "Module",
          "options": "rpc://app%23zoho-desk@1/getModules?actionType=addComment",
          "required": true
        },
        {
          "name": "id",
          "type": "text",
          "label": "ID",
          "required": true
        },
        {
          "name": "comment",
          "type": "text",
          "label": "Comment",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/{{parameters.selectModule}}/{{parameters.id}}/comments\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"content\": \"{{parameters.comment}}\"\n\t},\n\t\"response\": {\n\t\t\"output\": \"{{body}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "comment",
          "type": "text",
          "label": "Comment"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "zoho-desk",
      "description": "Adds a comment to an object based on id for a particular module (tasks, tickets).",
      "expectJsonc": "[\t\n\t{\n\t\t\"name\": \"selectModule\",\n\t\t\"label\": \"Module\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://getModules?actionType=addComment\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"comment\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Comment\",\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\"\n\t},\n\t{\n\t\t\"name\": \"comment\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Comment\"\n\t}\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "editSpamObjects": {
      "id": 45337,
      "api": {
        "url": "/{{parameters.selectModule}}/markSpam",
        "body": "{{processInputParameters(parameters, metadata.expect, \"selectModule\")}}",
        "method": "POST",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 6,
      "crud": "update",
      "name": "editSpamObjects",
      "epoch": null,
      "flags": {},
      "label": "Edit Spam Objects",
      "scope": [],
      "expect": [
        {
          "name": "selectModule",
          "type": "select",
          "label": "Module",
          "options": "rpc://app%23zoho-desk@1/getModules?actionType=editSpam",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-desk",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/{{parameters.selectModule}}/markSpam\",\n    \"method\": \"POST\",\n    \"body\": \"{{processInputParameters(parameters, metadata.expect, \\\"selectModule\\\")}}\",\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "zoho-desk",
      "description": "Sets or unsets contacts/tickets as spam by specifying their ids into a list.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"selectModule\",\n\t\t\"label\": \"Module\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://getModules?actionType=editSpam\",\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "zoho-desk": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://desk.zoho.{{parameters.ext}}/api/v1/myinfo",
          "method": "GET",
          "headers": {
            "orgId": "{{parameters.orgId}}",
            "authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {
            "uid": "{{body.id}}",
            "error": {
              "400": {
                "message": "{{'Error '+ body.errorCode + ' ' + body.message}}"
              },
              "401": {
                "message": "{{'Error '+ body.errorCode + ' ' + body.message}}"
              },
              "message": "Error"
            },
            "valid": "{{if(body.errors[], false, true)}}",
            "metadata": {
              "type": "text",
              "value": "{{body.emailId}}"
            }
          }
        },
        "token": {
          "qs": {
            "code": "{{temp.code}}",
            "client_id": "{{ifempty(data.clientId, common.clientId)}}",
            "grant_type": "authorization_code",
            "redirect_uri": "{{oauth.redirectUri}}",
            "client_secret": "{{ifempty(parameters.clientSecret, switch(parameters.ext, 'com', common.clientSecret, 'eu', common.clientSecretEU, 'in', common.clientSecretIN, 'com.au', common.clientSecretAU))}}"
          },
          "log": {
            "sanitize": [
              "request.qs.code",
              "request.qs.client_secret",
              "response.data.accessToken",
              "response.data.refreshToken"
            ]
          },
          "url": "https://accounts.zoho.{{parameters.ext}}/oauth/v2/token",
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in_sec)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            }
          }
        },
        "refresh": {
          "qs": {
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "refresh_token",
            "client_secret": "{{ifempty(parameters.clientSecret, switch(parameters.ext, 'com', common.clientSecret, 'eu', common.clientSecretEU, 'in', common.clientSecretIN, 'com.au', common.clientSecretAU))}}",
            "refresh_token": "{{data.refreshToken}}"
          },
          "log": {
            "sanitize": [
              "request.qs.client_secret",
              "request.qs.refresh_token",
              "response.data.accessToken"
            ]
          },
          "url": "https://accounts.zoho.{{parameters.ext}}/oauth/v2/token",
          "type": "json",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in_sec)}}",
              "accessToken": "{{body.access_token}}"
            }
          },
          "condition": "{{data.expires < addMinutes(now, 1)}}"
        },
        "authorize": {
          "qs": {
            "scope": "{{join(oauth.scope, ',')}}",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "access_type": "offline",
            "redirect_uri": "{{oauth.redirectUri}}",
            "response_type": "code"
          },
          "url": "https://accounts.zoho.{{parameters.ext}}/oauth/v2/auth",
          "response": {
            "temp": {
              "code": "{{query.code}}"
            }
          }
        }
      },
      "rev": 7,
      "name": "zoho-desk",
      "type": "oauth",
      "label": "Zoho Desk",
      "scope": [
        "Desk.tickets.ALL",
        "Desk.contacts.ALL",
        "Desk.tasks.ALL",
        "Desk.basic.READ",
        "Desk.basic.CREATE",
        "Desk.settings.ALL",
        "Desk.search.READ",
        "Desk.events.ALL",
        "Desk.articles.ALL",
        "Desk.calls.ALL"
      ],
      "scopes": {
        "Desk.tasks.ALL": "Grants read and write access to tasks and related data",
        "Desk.basic.READ": "Grants read access to basic data, such as organizations, agents and departments",
        "Desk.events.ALL": "Grants read and write access to the events subscription",
        "Desk.tasks.READ": "Grants read access to tasks and related data",
        "Desk.events.READ": "Grants read access to the events subscription",
        "Desk.search.READ": "Grants access to search for data",
        "Desk.tasks.WRITE": "Grants write access to tasks and related data",
        "Desk.tickets.ALL": "Grants read and write access to tickets and related data.",
        "Desk.basic.CREATE": "Grants access to create basic data, such as organizations, agents and departments",
        "Desk.events.WRITE": "Grants write access to the events subscription",
        "Desk.settings.ALL": "Grants read and write access to settings data",
        "Desk.tasks.CREATE": "Grants access to create tasks",
        "Desk.tasks.DELETE": "Grants access to delete tasks",
        "Desk.tasks.UPDATE": "Grants update access to tasks and related data",
        "Desk.tickets.READ": "Grants read access to tickets and related data.",
        "Desk.articles.READ": "Grants read access to articles",
        "Desk.contacts.READ": "Grants read access to contacts, accounts and related data",
        "Desk.events.CREATE": "Grants access to create events subscription",
        "Desk.events.DELETE": "Grants delete access to the events subscription",
        "Desk.events.UPDATE": "Grants update access to the events subscription",
        "Desk.settings.READ": "Grants read access to settings data",
        "Desk.tickets.WRITE": "Grants write access to tickets.",
        "Desk.contacts.WRITE": "Grants write access to contacts, accounts and related data",
        "Desk.settings.WRITE": "Grants write access to settings data",
        "Desk.tickets.CREATE": "Grants access to create tickets",
        "Desk.tickets.DELETE": "Grants access to delete tickets",
        "Desk.tickets.UPDATE": "Grants update access to tickets and related data.",
        "Desk.articles.CREATE": "Grants access to create articles",
        "Desk.articles.DELETE": "Grants delete access to articles",
        "Desk.articles.UPDATE": "Grants update access to articles",
        "Desk.contacts.CREATE": "Grants access to create contacts and accounts",
        "Desk.contacts.UPDATE": "Grants update access to contacts, accounts and related data",
        "Desk.settings.CREATE": "Grants access to create new settings data",
        "Desk.settings.DELETE": "Grants access to delete settings data",
        "Desk.settings.UPDATE": "Grants access to update existing settings data"
      },
      "aliasTo": null,
      "appName": "zoho-desk",
      "install": {
        "common": {
          "clientId": "{{parameters.clientId}}",
          "clientSecret": "{{parameters.clientSecret}}",
          "clientSecretEU": "{{parameters.clientSecretEU}}",
          "clientSecretIN": "{{parameters.clientSecretIN}}"
        }
      },
      "apiJsonc": "{\n    \"authorize\": {\n        \"qs\": {\n            \"response_type\": \"code\",\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"scope\": \"{{join(oauth.scope, ',')}}\",\n            \"redirect_uri\": \"{{oauth.redirectUri}}\",\n            \"access_type\": \"offline\"\n        },\n        \"url\": \"https://accounts.zoho.{{parameters.ext}}/oauth/v2/auth\",\n        \"response\": {\n            \"temp\": {\n                \"code\": \"{{query.code}}\"\n            }\n        }\n    },\n    \"token\": {\n        \"url\": \"https://accounts.zoho.{{parameters.ext}}/oauth/v2/token\",\n        \"method\": \"POST\",\n        \"qs\": {\n            \"code\": \"{{temp.code}}\",\n            \"grant_type\": \"authorization_code\",\n            \"client_id\": \"{{ifempty(data.clientId, common.clientId)}}\",\n            \"client_secret\": \"{{ifempty(parameters.clientSecret, switch(parameters.ext, 'com', common.clientSecret, 'eu', common.clientSecretEU, 'in', common.clientSecretIN, 'com.au', common.clientSecretAU))}}\",\n            \"redirect_uri\": \"{{oauth.redirectUri}}\"\n        },\n        \"type\": \"urlencoded\",\n        \"response\": {\n            \"data\": {\n                \"expires\": \"{{addSeconds(now, body.expires_in_sec)}}\",\n                \"accessToken\": \"{{body.access_token}}\",\n                \"refreshToken\": \"{{body.refresh_token}}\"\n            }\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.qs.code\",\n                \"request.qs.client_secret\",\n                \"response.data.accessToken\",\n                \"response.data.refreshToken\"\n            ]\n        }\n    },\n    \"info\": {\n        \"url\": \"https://desk.zoho.{{parameters.ext}}/api/v1/myinfo\",\n        \"method\": \"GET\",\n        \"headers\": {\n            \"authorization\": \"Bearer {{connection.accessToken}}\",\n            \"orgId\": \"{{parameters.orgId}}\"\n        },\n        \"response\": {\n            \"uid\": \"{{body.id}}\",\n            \"metadata\": {\n                \"type\": \"text\",\n                \"value\": \"{{body.emailId}}\"\n            },\n            \"error\": {\n                \"message\": \"Error\",\n                \"400\": {\n                    \"message\": \"{{'Error '+ body.errorCode + ' ' + body.message}}\"\n                },\n                \"401\": {\n                    \"message\": \"{{'Error '+ body.errorCode + ' ' + body.message}}\"\n                }\n            },\n            \"valid\": \"{{if(body.errors[], false, true)}}\"\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.headers.authorization\"\n            ]\n        }\n    },\n    \"refresh\": {\n        \"condition\": \"{{data.expires < addMinutes(now, 1)}}\",\n        \"url\": \"https://accounts.zoho.{{parameters.ext}}/oauth/v2/token\",\n        \"method\": \"POST\",\n        \"qs\": {\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"grant_type\": \"refresh_token\",\n            \"client_secret\": \"{{ifempty(parameters.clientSecret, switch(parameters.ext, 'com', common.clientSecret, 'eu', common.clientSecretEU, 'in', common.clientSecretIN, 'com.au', common.clientSecretAU))}}\",\n            \"refresh_token\": \"{{data.refreshToken}}\"\n        },\n        \"type\": \"json\",\n        \"response\": {\n            \"data\": {\n                \"expires\": \"{{addSeconds(now, body.expires_in_sec)}}\",\n                \"accessToken\": \"{{body.access_token}}\"\n            }\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.qs.client_secret\",\n                \"request.qs.refresh_token\",\n                \"response.data.accessToken\"\n            ]\n        }\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "orgId",
          "type": "text",
          "label": "Organization ID",
          "editable": true,
          "required": true
        },
        {
          "name": "ext",
          "type": "select",
          "label": "Domain Extension",
          "options": [
            {
              "label": "Universal(.com)",
              "value": "com",
              "default": true
            },
            {
              "label": "Europe(.eu)",
              "value": "eu"
            },
            {
              "label": "India(.in)",
              "value": "in"
            },
            {
              "label": "Australia",
              "value": "com.au"
            }
          ],
          "editable": true,
          "required": true
        },
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "advanced": true,
          "editable": true
        },
        {
          "name": "clientSecret",
          "type": "password",
          "label": "Client Secret",
          "advanced": true,
          "editable": true
        }
      ],
      "scopeJsonc": "[\n\t\"Desk.tickets.ALL\",\n\t\"Desk.contacts.ALL\",\n\t\"Desk.tasks.ALL\",\n\t\"Desk.basic.READ\",\n\t\"Desk.basic.CREATE\",\n\t\"Desk.settings.ALL\",\n\t\"Desk.search.READ\",\n\t\"Desk.events.ALL\",\n\t\"Desk.articles.ALL\",\n\t\"Desk.calls.ALL\"\n]",
      "installSpec": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "text",
          "label": "Client Secret (US)",
          "required": true
        },
        {
          "name": "clientSecretEU",
          "type": "text",
          "label": "Client Secret (EU)",
          "required": true
        },
        {
          "name": "clientSecretIN",
          "type": "text",
          "label": "Client Secret (India)",
          "required": true
        }
      ],
      "scopesJsonc": "{\n\t\"Desk.tickets.ALL\": \"Grants read and write access to tickets and related data.\",\n\t\"Desk.tickets.READ\": \"Grants read access to tickets and related data.\",\n\t\"Desk.tickets.WRITE\": \"Grants write access to tickets.\",\n\t\"Desk.tickets.UPDATE\": \"Grants update access to tickets and related data.\",\n\t\"Desk.tickets.CREATE\": \"Grants access to create tickets\",\n\t\"Desk.tickets.DELETE\": \"Grants access to delete tickets\",\n\t\"Desk.contacts.READ\": \"Grants read access to contacts, accounts and related data\",\n\t\"Desk.contacts.WRITE\": \"Grants write access to contacts, accounts and related data\",\n\t\"Desk.contacts.UPDATE\": \"Grants update access to contacts, accounts and related data\",\n\t\"Desk.contacts.CREATE\": \"Grants access to create contacts and accounts\",\n\t\"Desk.tasks.ALL\": \"Grants read and write access to tasks and related data\",\n\t\"Desk.tasks.WRITE\": \"Grants write access to tasks and related data\",\n\t\"Desk.tasks.READ\": \"Grants read access to tasks and related data\",\n\t\"Desk.tasks.CREATE\": \"Grants access to create tasks\",\n\t\"Desk.tasks.UPDATE\": \"Grants update access to tasks and related data\",\n\t\"Desk.tasks.DELETE\": \"Grants access to delete tasks\",\n\t\"Desk.basic.READ\": \"Grants read access to basic data, such as organizations, agents and departments\",\n\t\"Desk.basic.CREATE\": \"Grants access to create basic data, such as organizations, agents and departments\",\n\t\"Desk.settings.ALL\": \"Grants read and write access to settings data\",\n\t\"Desk.settings.WRITE\": \"Grants write access to settings data\",\n\t\"Desk.settings.READ\": \"Grants read access to settings data\",\n\t\"Desk.settings.CREATE\": \"Grants access to create new settings data\",\n\t\"Desk.settings.UPDATE\": \"Grants access to update existing settings data\",\n\t\"Desk.settings.DELETE\": \"Grants access to delete settings data\",\n\t\"Desk.search.READ\": \"Grants access to search for data\",\n\t\"Desk.events.ALL\": \"Grants read and write access to the events subscription\",\n\t\"Desk.events.READ\": \"Grants read access to the events subscription\",\n\t\"Desk.events.WRITE\": \"Grants write access to the events subscription\",\n\t\"Desk.events.CREATE\": \"Grants access to create events subscription\",\n\t\"Desk.events.UPDATE\": \"Grants update access to the events subscription\",\n\t\"Desk.events.DELETE\": \"Grants delete access to the events subscription\",\n\t\"Desk.articles.READ\": \"Grants read access to articles\",\n\t\"Desk.articles.CREATE\": \"Grants access to create articles\",\n\t\"Desk.articles.UPDATE\": \"Grants update access to articles\",\n\t\"Desk.articles.DELETE\": \"Grants delete access to articles\"\n}",
      "installJsonc": "{\n\t\"common\": {\n\t\t\"clientId\": \"{{parameters.clientId}}\",\n\t\t\"clientSecret\": \"{{parameters.clientSecret}}\",\n\t\t\"clientSecretEU\": \"{{parameters.clientSecretEU}}\",\n\t\t\"clientSecretIN\": \"{{parameters.clientSecretIN}}\"\n\t}\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"orgId\",\n        \"type\": \"text\",\n        \"label\": \"Organization ID\",\n        \"required\": true,\n\t\t\"editable\": true\n    },\n    {\n        \"name\": \"ext\",\n        \"label\": \"Domain Extension\",\n        \"type\": \"select\",\n        \"required\": true,\n\t\t\"editable\": true,\n        \"options\": [\n            {\n                \"label\": \"Universal(.com)\",\n                \"value\": \"com\",\n                \"default\": true\n            },\n            {\n                \"label\": \"Europe(.eu)\",\n                \"value\": \"eu\"\n            },\n            {\n                \"label\": \"India(.in)\",\n                \"value\": \"in\"\n            },\n            {\n                \"label\": \"Australia\",\n                \"value\": \"com.au\"\n            }\n        ]\n    },\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"advanced\": true,\n\t\t\"editable\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"password\",\n        \"label\": \"Client Secret\",\n        \"advanced\": true,\n\t\t\"editable\": true\n    }\n]",
      "installSpecJsonc": "[\n\t{\n\t\t\"name\": \"clientId\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Client ID\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"clientSecret\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Client Secret (US)\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"clientSecretEU\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Client Secret (EU)\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"clientSecretIN\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Client Secret (India)\",\n\t\t\"required\": true\n\t}\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n\t\"baseUrl\": \"https://desk.zoho.{{connection.ext}}/api/v1\",\n\t\"headers\": {\n\t\t\"authorization\": \"Zoho-oauthtoken {{connection.accessToken}}\",\n\t\t\"orgId\": \"{{connection.orgId}}\"\n\t},\n\t\"response\": {\n\t\t\"error\": {\n\t\t\t\"message\": \"[{{body.errorCode}}] {{body.message}}\"\n\t\t}\n\t},\n\t\"log\": {\n\t\t\"sanitize\": [\"request.headers.authorization\",\"request.headers.orgId\"]\n\t}\n}",
  "countries": null,
  "_functions": {
    "isMissing": {
      "rev": 3,
      "code": "function isMissing(val)\n{\n\t//This function returns true or false if val is missing\n\t//val <string> : Value to be checked\n\t\n\treturn (undefined === val || null === val);\n}",
      "name": "isMissing",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(val)",
      "appVersion": 1
    },
    "isPresent": {
      "rev": 3,
      "code": "function isPresent(val)\n{\n\t//This function returns true or false if val is present\n\t//val <string> : Value to be checked\n\t\n\treturn (undefined !== val && null !== val);\n}",
      "name": "isPresent",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(val)",
      "appVersion": 1
    },
    "getModules": {
      "rev": 3,
      "code": "function getModules(actionType)\n{\n\t//This function creates the dropdown that keeps the modules name based on actionType\n\t//actionType <string> : Name of the action type, ex: \"get\", \"create\", \"search\",\"delete\"\n\t\n\t//Modules based on actionType(get,create,update,add)\n\tvar modules = {\n\t\t\"get\":[\"accounts\",\"contacts\",\"products\",\"tickets\",\"contracts\",\"tasks\"],\n\t\t\"create\":[\"accounts\",\"contacts\",\"products\",\"tickets\",\"contracts\",\"tasks\"],\n\t\t\"update\":[\"accounts\",\"contacts\",\"products\",\"tickets\",\"contracts\",\"tasks\"],\n\t\t\"delete\":[\"accounts\",\"contacts\",\"products\",\"tickets\",\"contracts\"],\n\t\t\"list\":[\"accounts\",\"contacts\",\"products\",\"tickets\",\"contracts\",\"tasks\"],\n\t\t\"search\":[\"accounts\",\"contacts\",\"products\",\"tickets\",\"tasks\"],\n\t\t\"addComment\":[\"accounts\",\"contacts\",\"products\",\"tickets\",\"contracts\",\"tasks\"],\n\t\t\"editSpam\": [\"contacts\",\"tickets\"]\n\t}\n\t\n\tif(iml.isMissing(modules[actionType]))\n\t\treturn null;\n\t\t\n\tvar sortModules = iml.sort(modules[actionType],\"asc\");\n\t\n\t//Values for actionType = [\"get\",\"create\",\"list\",\"search\",\"delete\",\"update\"]\n\tvar modulesRPC = {\n\t\t\"create\":\"rpc://getOrganizationFields\",\"update\":\"rpc://getOrganizationFields\",\n\t\t\"search\":\"rpc://getModuleFields\",\"list\":\"rpc://getModuleFields\",\"editSpam\":\"rpc://getModuleFields\"\n\t\t};\n\tvar res = [];\n\n\tfor(var i=0; i<sortModules.length; i++) {\n\t\tvar moduleObj = {};\n\t\t\n\t\t//Capitalize first Letter for Label\n\t\tmoduleObj.label = iml.capitalize(sortModules[i]);\n\t\t\n\t\t//Values\n\t\tmoduleObj.value = sortModules[i];\n\t\t\n\t\t//Add onChange depending on actionType\n\t\tif(iml.isPresent(modulesRPC[actionType]))\n\t\t\tmoduleObj.nested = modulesRPC[actionType] + \"?actionType=\" + actionType;\n\t\t\t\n\t\tres.push(moduleObj)\n\t}\n\t\n\treturn res;\n}",
      "name": "getModules",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(actionType)",
      "appVersion": 1
    },
    "hideFields": {
      "rev": 3,
      "code": "function hideFields(module,fieldName,fieldType) \n{\n\t//This function hides some fields to not be seen by user\n\t//Repairs some bugs found in request \"Get Organization Fields\" from Zoho Desk\n\t//module <string> : Name of the module, ex: \"accounts\",\"contacts\",\"tickets\"\n\t//fieldName <string> : Name of the field, ex: \"accountId\",\"productName\",\"phone\"\n\t//fieldType <string> : Type of the field returned by \"Get Organization Fields\" RPC\n\t\n\tvar hiddenFields = {\n\t\t\"tickets\":[\"accountId\"]\n\t}\n\t\n\t//Verify if field must appear to user\n\tif(iml.isPresent(hiddenFields[module])) {\n\t\tvar hiddenFieldsModule = hiddenFields[module];\n\t\tif (hiddenFieldsModule.includes(fieldName))\n\t\t\tfieldType = \"hidden\";\n\t}\n\treturn fieldType;\n}",
      "name": "hideFields",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(module,fieldName,fieldType)",
      "appVersion": 1
    },
    "getDeleteID": {
      "rev": 3,
      "code": "function getDeleteID(module) \n{\n\t//This function retrieves the IDs name for Delete operation\n\t//module <string> : Name of the module, ex: \"Accounts\",\"Contacts\", \"Tickets\"\n\t\n\t//Uncomment next line to debug the module\n\t//debug(\"Module: \" + module);\n\treturn module.slice(0, -1) + \"Ids\";\n}",
      "name": "getDeleteID",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(module)",
      "appVersion": 1
    },
    "getSearchBy": {
      "rev": 4,
      "code": "function getSearchBy(searchBy,customFields) \n{\n\t//This function returns the name of the searchBy parameter\n\t//searchBy <string> : Search after a specific field\n\t//customFields <string> : Keeps all the customFields into a string, every custom field is delimited by ','\n\t\n\tif(iml.contains(customFields,searchBy))\n\t\treturn \"customField1\";\n\treturn searchBy;\n}",
      "name": "getSearchBy",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(searchBy,customFields)",
      "appVersion": 1
    },
    "getFieldInfo": {
      "rev": 3,
      "code": "function getFieldInfo(module,fieldName) \n{\n\t//This function retrieves help information about a field\n\t//module <string> : Name of the module, ex: \"Accounts\", \"Contacts\"\n\t//fieldName <string> : Name of the field, ex: \"accountName\", \"code\"\n\t\n\tvar helpInfo = {\n\t\t\"accounts\": {\n\t\t\t\"accountName\":\"Name of the account\",\"website\":\"Website of the account\",\"ownerId\":\"ID of account owner\",\n\t\t\t\"associatedSLAIds\":\"IDs of the SLAs associated with the account. An account can have multiple SLAs, but only one SLA per department can be mapped to it\",\n\t\t\t\"industry\":\"Industry in which the account operates\",\"code\":\"Zip code\"\n\t\t},\n\t\t\"calls\": {\n\t\t\t\"departmentId\":\"ID of the department associated with the call and ticket\",\"subject\":\"Subject of the call\",\n\t\t\t\"startTime\":\"Time when the call started. The value of this key must be recorded in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ.\",\n\t\t\t\"direction\":\"Direction of the call: inbound or outbound\",\"duration\":\"Duration of the call in seconds\",\"status\":\"Completion status of the call\",\n\t\t\t\"ownerId\":\"ID of the user to whom the call is assigned\",\"ticketId\":\"ID of the ticket associated with the call\",\n\t\t\t\"contactId\":\"ID of the contact associated with the call\",\"reminder\":\"Details of the reminder associated with the call\"\n\t\t},\n\t\t\"contacts\": {\n\t\t\t\"facebook\":\"Facebook ID of the contact\",\"twitter\":\"Twitter ID of the contact\",\"secondaryEmail\":\"Secondary email ID of the contact\",\n\t\t\t\"email\":\"Email ID of the contact\",\"zip\":\"Zip code\",\"title\":\"Contact title\",\"type\":\"Contact type\",\n\t\t\t\"ownerId\":\"ID of the user who creates the contact\",\"accountId\":\"Account to which the contact is mapped\"\n\t\t},\n\t\t\"contracts\": {\n\t\t\t\"associatedSLAId\":\"ID of the SLA associated with the contract\",\"accountId\":\"ID of the account associated with the contract\",\n\t\t\t\"departmentId\":\"ID of the department to which the contract belongs\",\"productId\":\"ID of the product associated with the contract\",\n\t\t\t\"contractNumber\":\"Serial number of the contract\",\"notificationAgentIds\":\"List of agents to be notified\",\"ownerId\":\"ID of the contract owner\"\n\t\t},\n\t\t\"products\": {\n\t\t\t\"departmentIds\":\"IDs of departments associated with the product\",\"Department\":\"IDs of departments associated with the product\",\n\t\t\t\"ownerId\":\"ID of user to whom the product is assigned\",\"productName\":\"Name of the product\",\"productCode\":\"Reference code of the product\",\n\t\t\t\"productCategory\":\"Category to which the product belongs\",\"manufacturer\":\"Organization that manufactures the product\",\n\t\t\t\"unitPrice\":\"Price of the product\",\"description\":\"Description of the product\"\n\t\t},\n\t\t\"tasks\": {\n\t\t\t\"departmentId\":\"Department associated with the task\",\"subject\":\"Subject of the task\",\"ticketId\":\"Ticket ID, if the task is associated with a particular ticket\",\n\t\t\t\"dueDate\":\"Due date for completing the task\",\"ownerId\":\"Owner of the task\",\"category\":\"Category of the task\",\"status\":\"Status of task completion\"\n\t\t},\n\t\t\"tickets\": {\n\t\t\t\"subject\":\"Subject of the ticket\",\"departmentId\":\"ID of the department to which the ticket belongs\",\"contactId\":\"ID of the contact who raised the ticket\",\n\t\t\t\"productId\":\"ID of the product to which the ticket is mapped\",\"uploads\":\"File attachments in the ticket.\",\"assigneeId\":\"ID of agent to whom the ticket is assigned\",\n\t\t\t\"channel\":\"Channel through which the ticket originated\",\"webUrl\":\"URL to access the resource\",\"teamId\":\"ID of the team assigned to resolve the ticket\"\n\t\t}\n\t}\n\t\n\t//Verify if an information about a field exists\n\tvar help = (iml.isPresent(helpInfo[module])) ? helpInfo[module] : false;\n\tif(help && iml.isPresent(help[fieldName]))\n\t\treturn help[fieldName]\n\t\n\treturn null;\n}",
      "name": "getFieldInfo",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(module,fieldName)",
      "appVersion": 1
    },
    "getFieldName": {
      "rev": 3,
      "code": "function getFieldName(module,fieldName)\n{\t\n\t//This function changes the field name, repairs some bugs from Zoho Desk\n\t//module <string> : The module name, ex: \"accounts\", \"contacts\"\n\t//fieldName <string> : The name of the field, ex: departmentId, contactId\n\t\n\tvar fieldNames = {\n\t\t\"products\": {\"Department\":\"departmentIds\"},\n\t\t\"tasks\": {\"Description\":\"description\"}\n\t};\n\t\n\tvar moduleFields = (iml.isPresent(fieldNames[module])) ? fieldNames[module] : false;\n\tif(moduleFields && iml.isPresent(moduleFields[fieldName]))\n\t\tfieldName = moduleFields[fieldName];\n\t\n\treturn fieldName;\n}",
      "name": "getFieldName",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(module,fieldName)",
      "appVersion": 1
    },
    "getFieldType": {
      "rev": 5,
      "code": "function getFieldType(type) {\n  //This function makes the conversion between Zoho Desk data type and Integromat Data type\n  //type <string> : Data type returned by Zoho Desk\n\n  var fieldType;\n  type = type.toLowerCase();\n\n  switch (type) {\n    case 'lookup':\n    case 'long':\n    case 'phone':\n    case 'fax':\n    case 'textarea':\n      fieldType = 'text';\n      break;\n    case 'picklist':\n      fieldType = 'select';\n      break;\n    case 'list':\n    case 'multiselect':\n      fieldType = 'array';\n      break;\n    case 'object':\n      fieldType = 'collection';\n      break;\n    case 'date':\n    case 'datetime':\n      fieldType = 'date';\n      break;\n    case 'percent':\n    case 'decimal':\n    case 'currency':\n      fieldType = 'number';\n      break;\n    default:\n      fieldType = type;\n  }\n\n  return fieldType;\n}\n",
      "name": "getFieldType",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(type)",
      "appVersion": 1
    },
    "getFieldLabel": {
      "rev": 3,
      "code": "function getFieldLabel(label,name) \n{\n\t//This function changes the label for certain fields\n\t//label <string> : The default label name that can be changed, ex: \"Name\", \"Product\"\n\t//name <string> : The name of the field, ex: \"accountId\", \"contactId\"\n\t\n\tname = name.toLowerCase();\n\t\n\tvar map = {\n\t\t\"accountid\":\"Account ID\", \"productid\":\"Product ID\",\"associatedslaid\":\"Associated SLA ID\",\n\t\t\"ticketid\":\"Ticket ID\",\"departmentid\":\"Department ID\", \"contactid\":\"Contact ID\", \"assigneeid\":\"Assignee ID\",\n\t\t\"starttime\":\"Start Time\"\n\t};\n\t\n\tif(iml.isPresent(map[name]))\n\t\treturn map[name];\n\t\n\tif(name===\"ownerid\")\n\t\treturn label + \" ID\";\n\t\n\treturn label;\n}",
      "name": "getFieldLabel",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(label,name)",
      "appVersion": 1
    },
    "getIsMandatory": {
      "rev": 3,
      "code": "function getIsMandatory(actionType,isMandatory,fieldName)\n{\n\t//Returns if a field is mandatory or not\n\t//actionType <string> : Name of the action type, ex: \"search\",\"update\",\"create\"\n\t//isMandatory <bool> : Parameter returned from \"Get Organization Fields\"\n\t//fieldName <string> : Name of the field, ex: \"departmentId\", \"accountID\"\n\t\n\tif (actionType===\"update\")\n\t\tisMandatory = false;\n\tif (fieldName===\"departmentId\" && actionType!==\"update\")\n\t\tisMandatory = true;\n\t\t\n\treturn isMandatory;\n}",
      "name": "getIsMandatory",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(actionType,isMandatory,fieldName)",
      "appVersion": 1
    },
    "getSearchValue": {
      "rev": 4,
      "code": "function getSearchValue(searchBy,searchValue,customFields,customFieldsApi) \n{\n\t//This function returned the Search Value\n\t//searchBy <string> : Search after a specific field\n\t//searchValue <string> : Search value set in input by user\n\t//2 types of search: exact match, wildcard match (value passed partially)\n\t//wildcard match adds character \"*\" after the searchValue\n\t\n\t\n\tgetCustomFieldIndex = () => {\n\t\tlet index = 0;\n\t\twhile(customFields[index] != searchBy){\n\t\t\tindex++;\n\t\t}\n\t\t\n\t\treturn index;\n\t}\n\t\n\t//Verify if is a custom field and returns the value\n\tif(iml.contains(customFields, searchBy))\n\t\treturn customFieldsApi[getCustomFieldIndex()] + \":\" + searchValue;\n\t\n\tvar wildCardFields = [\n\t\t\t\"accountName\",\"title\",\"categoryName\",\"fullName\", \"firstName\", \"lastName\",\"email\", \"phone\",\"mobile\",\n\t\t\t\"tag\", \"productName\",\"productCode\",\"subject\", \"description\", \"category\", \"contactName\"\n\t];\n\t\n\t//Makes a \"Like\" request\n\tif(iml.contains(wildCardFields,searchBy))\n\t\tsearchValue+= \"*\";\n\t\n\treturn searchValue;\n}",
      "name": "getSearchValue",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(searchBy,searchValue,customFields,customFieldsApi)",
      "appVersion": 1
    },
    "getCustomFields": {
      "rev": 4,
      "code": "function getCustomFields(fields) \n{\n\t//This function retrieves the custom fields names into an array\n\t//fields <object> : All the fields from a selected module\n\t//fields object is build using RPC \"Get Organization Fields\"\n\t\n\tvar item;\n\tvar customFields = [];\n\tfor (var itemKey in fields) {\n\t\titem = fields[itemKey];\n\t\tif(item.isCustomField)\n\t\t\tcustomFields.push(item);\n\t}\n\t\n\t//Uncomment next line to see the custom fields\n\t//debug(customFields);\n\t\n\treturn customFields;\n}",
      "name": "getCustomFields",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(fields)",
      "appVersion": 1
    },
    "getFieldOptions": {
      "rev": 3,
      "code": "function getFieldOptions(item) \n{\n\t//This function returns the default options set in RPC \"Get Organization Fields\"\n\t//item <object> : Object that contains all the data for a specific field\n\t\n\tif(iml.isPresent(item.allowedValues))\n\t\treturn item.allowedValues;\n\treturn null;\n}",
      "name": "getFieldOptions",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(item)",
      "appVersion": 1
    },
    "getModuleFields": {
      "rev": 3,
      "code": "function getModuleFields(actionType,module,fields)\n{\t\n\t//This function returns the parameters needed for \"List Object\" or \"Search Object\"\n\t//actionType <string> : Name of the action type, ex: \"create\", \"list\", \"search\"\n\t//module <string> : Name of the module, ex: \"accounts\",\"contacts\",\"tickets\"\n\t//fields <object> : Fields returned from \"Get Organization Fields\" RPC\n\t\n\t//Uncomment next line to debug incomming fields\n\t//debug(fields);\n\t\n\tvar res;\n\t\n\tswitch(actionType) {\n\t\tcase \"list\":\n\t\t\tres = iml.getListParameters(module);\n\t\t\tbreak;\n\t\tcase \"search\":\n\t\t\tres = iml.getSearchParameters(module,fields);\n\t\t\tbreak;\n\t\tcase \"editSpam\":\n\t\t\tres = iml.getEditSpamParameters(module);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tres = null;\n\t}\n\t\n\treturn res;\n}",
      "name": "getModuleFields",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(actionType,module,fields)",
      "appVersion": 1
    },
    "markCustomField": {
      "rev": 3,
      "code": "function markCustomField(name,isCustomField) \n{\n\t//This function marks a custom field by concatenating with \"-custom-\"\n\t//name <string> : Name of the field returned by \"Get Organization Fields\" RPC\n\t//isCustomfield <boolean> : Marked by \"Get Organization Fields\" RPC, if is or not a Custom Field\n\t//At update concatenated string \"-custom-\" will be removed\n\t\n\tif(isCustomField)\n\t\tname += \"-custom-\";\n\t\n\treturn name;\n}",
      "name": "markCustomField",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(name,isCustomField)",
      "appVersion": 1
    },
    "getListParameters": {
      "rev": 3,
      "code": "function getListParameters(module) \n{\n\t//This function creates the \"Sort By\" dropdown used in \"List Object\"\n\t//module <string> : Name of the module, ex: accounts, contacts\n\t\n\tvar input = [];\n\t\n\tvar sortByValues = {\n\t\t\"accounts\": [\"Account Name\",\"Created Time\"],\n\t\t\"contacts\": [\"First Name\",\"Last Name\",\"Created Time\"],\n\t\t\"contracts\": [\"Account Name\",\"Contract Name\",\"Contract End Date\",\"Contract Start Date\",\"Created Time\",\"Modified Time\"],\n\t\t\"products\": [\"Product Name\",\"Product Code\",\"Unit Price\",\"Created Time\",\"Modified Time\"],\n\t\t\"tasks\": [\"Due Date\",\"Created Time\"],\n\t\t\"tickets\":[\"Due Date\",\"Recent Thread\",\"Created Time\",\"Ticket Number\"]\n\t}\n\t\n\t//Verify if an information about a field exists\n\tif (iml.isPresent(sortByValues[module])) {\n\t\t\tvar sortByObj = {\n\t\t\t\t\"name\": \"sortBy\",\n\t\t\t\t\"label\": \"Sort By\",\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"options\": iml.buildDropdownOptions(sortByValues[module])\n\t\t\t};\n\t\t\timl.add(input,sortByObj);\n\t}\n\t\n\treturn input;\n}",
      "name": "getListParameters",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(module)",
      "appVersion": 1
    },
    "getInterfaceFields": {
      "rev": 4,
      "code": "function getInterfaceFields(organizationFields, module) {\n  //Function used to get extra fields for Interface\n  //organizationFields <object> : Fields returned by \"Get Organization Fields\" RPC\n  //module <string> : The name of the module, ex: \"accounts\", \"contacts\"\n\n  const extraModuleFields = {\n    \"accounts\": [\n      {\n        \"name\": \"zohoCRMAccount\", \"type\": \"collection\", \"label\": \"Zoho CRM Account\",\n        \"spec\": [\n          {\n            \"name\": \"id\",\n            \"type\": \"text\",\n            \"label\": \"ID\"\n          }\n        ]\n      }\n    ],\n    \"contacts\": [\n      {\n        \"name\": \"zohoCRMContact\", \"type\": \"collection\", \"label\": \"Zoho CRM Contact\",\n        \"spec\": [\n          {\n            \"name\": \"id\",\n            \"type\": \"text\",\n            \"label\": \"ID\"\n          },\n          {\n            \"name\": \"type\",\n            \"type\": \"text\",\n            \"label\": \"Type\"\n          }\n        ]\n      }\n    ]\n  };\n  \n  if (iml.isPresent(extraModuleFields[module]))\n    return iml.merge(organizationFields, extraModuleFields[module]);\n\n  return organizationFields;\n}",
      "name": "getInterfaceFields",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(organizationFields, module)",
      "appVersion": 1
    },
    "getSearchParameters": {
      "rev": 4,
      "code": "function getSearchParameters(module,fields) \n{\n\t//Return the search parameters: Search By <dropdown>, Search Value <input>, Custom Field <hidden>\n\t//module <string> : Name of the module, ex: \"accounts\", \"contacts, \"tickets\"\n\t//fields <object> : Fields returned by \"Get Organization Fields\" RPC, used to extract Custom Fields\n\t\n\tvar input = [];\n\tvar searchBy = {\n\t\t\"accounts\": [\"Id\",\"Account Name\"],\n\t\t\"articles\": [\"Id\",\"Department Id\",\"Title\",\"Category Name\",\"Category Id\"],\n\t\t\"contacts\": [\"Id\",\"Full Name\",\"First Name\",\"Last Name\",\"Email\",\"Phone\",\"Mobile\",\"Account Name\",\"Tag\"],\n\t\t\"products\": [\"Id\",\"Department Id\",\"Product Name\",\"Product Code\",\"Contact Id\",\"Account Id\"],\n\t\t\"tasks\": [\"Id\",\"Department Id\",\"Subject\",\"Ticket Number\",\"Status\",\"Priority\"],\n\t\t\"tickets\": [\"Id\",\"Department Id\",\"Ticket Number\",\"Subject\",\"Description\",\"Status\",\"Priority\",\"Email\",\"Phone\",\"Channel\",\"Category\",\"Assignee Id\",\"Contact Id\",\"Account Id\",\"Product Id\",\"Contact Name\",\"Account Name\",\"Product Name\", \"Tag\"]\n\t}\n\t\n\tvar customFields = iml.getCustomFields(fields);\n\tvar customFieldsName = customFields.map(cf => cf.name)\n\t\n\tif(iml.isPresent(searchBy[module])) {\n\t\tvar searchFields = iml.merge(searchBy[module],customFieldsName);\n\t\tvar searchByObj = {\n\t\t\t\"name\": \"searchBy\",\n\t\t\t\"label\": \"Search By\",\n\t\t\t\"type\": \"select\",\n\t\t\t\"options\": iml.buildDropdownOptions(searchFields,customFieldsName),\n\t\t\t\"required\": true\n\t\t};\n\t\t\n\t\tinput.push(searchByObj);\n\t\t\n\t\tvar searchValueObj = {\n\t\t\t\"name\": \"searchValue\",\n\t\t\t\"label\": \"Search Value\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"required\": true\n\t\t};\n\t\t\n\t\tinput.push(searchValueObj);\n\t\t\n\t\tif(customFields.length > 0) {\n\t\t\tvar customFieldsObj = {\n\t\t\t\t\"name\": \"customFields\",\n\t\t\t\t\"label\": \"customfields\",\n\t\t\t\t\"type\": \"hidden\",\n\t\t\t\t\"default\": customFieldsName\n\t\t\t}\n\n\t\t\tvar customFieldsApiObj = {\n\t\t\t\t\"name\": \"customFieldsApi\",\n\t\t\t\t\"label\": \"customfieldsapi\",\n\t\t\t\t\"type\": \"hidden\",\n\t\t\t\t\"default\": customFields.map(cf => cf.apiName)\n\t\t\t}\n\n\t\t\tinput.push(customFieldsObj);\n\t\t\tinput.push(customFieldsApiObj)\n\t\t}\n\t}\n\t\n\tif(!iml.length(input))\n\t\tdebug(\"Could not handle request 'Search Object' for module '\" + module + \"'\");\n\t\n\treturn input;\n}",
      "name": "getSearchParameters",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(module,fields)",
      "appVersion": 1
    },
    "buildDropdownOptions": {
      "rev": 4,
      "code": "function buildDropdownOptions(options,customFields,rpc) \n{\n\t//This function builds the options into a dropdown\n\t//options <array> : A list of label names, ex: options = [Id, Account Name]\n\t//rpc <string> : RPC name if you want to make a nested dropdown, ex: rpc= \"rpc://getModuleFields\"\n\t\n\tvar dropdownOptions = [];\n\tvar obj;\n\tvar callRPC = (iml.isPresent(rpc)) ? rpc : null;\n\tfor(var i=0; i<options.length; i++) {\n\t\tobj = {};\n\t\tobj.label = options[i];\n\t\tobj.value = iml.contains(customFields, options[i]) ? options[i] : iml.replace(options[i].charAt(0).toLowerCase() + options[i].slice(1),\" \",\"\");\n\t\tif(callRPC)\n\t\t\tobj.nested = rpc;\n\t\tdropdownOptions.push(obj);\n\t}\n\t\n\t//Uncomment next line to see dropdown options\n\t//debug(dropdownOptions)\n\t\n\treturn dropdownOptions;\n}",
      "name": "buildDropdownOptions",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(options,customFields,rpc)",
      "appVersion": 1
    },
    "buildInterfaceFields": {
      "rev": 2,
      "code": "function buildInterfaceFields(fields, parameters) {\n\n  const extraModuleFields = {\n    \"accounts\": [\n      {\n        \"name\": \"zohoCRMAccount\", \"type\": \"collection\", \"label\": \"Zoho CRM Account\",\n        \"spec\": [\n          {\n            \"name\": \"id\",\n            \"type\": \"text\",\n            \"label\": \"ID\"\n          }\n        ]\n      }\n    ],\n    \"contacts\": [\n      {\n        \"name\": \"zohoCRMContact\", \"type\": \"collection\", \"label\": \"Zoho CRM Contact\",\n        \"spec\": [\n          {\n            \"name\": \"id\",\n            \"type\": \"text\",\n            \"label\": \"ID\"\n          },\n          {\n            \"name\": \"type\",\n            \"type\": \"text\",\n            \"label\": \"Type\"\n          }\n        ]\n      }\n    ]\n  };\n\n  const results = [];\n  const customFields = {\n    name: 'customFields',\n    label: 'Custom Fields',\n    type: 'collection',\n    spec: []\n  };\n\n  fields.forEach(field => {\n    const obj = {\n      name: iml.getFieldName(parameters.selectModule, field.name),\n      type: iml.hideFields(parameters.selectModule, field.name, iml.getFieldType(field.type)),\n      label: iml.getFieldLabel(field.displayLabel, field.name),\n      spec: iml.ifempty(field.spec, undefined)\n    }\n    if (field.isCustomField) {\n      customFields.spec.push(obj);\n      return;\n    }\n    results.push(obj);\n  });\n\n  results.push(customFields)\n\n  if (iml.isPresent(extraModuleFields[parameters.selectModule]))\n    return iml.merge(results, extraModuleFields[parameters.selectModule]);\n\n  return results;\n}",
      "name": "buildInterfaceFields",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(fields, parameters)",
      "appVersion": 1
    },
    "getEditSpamParameters": {
      "rev": 3,
      "code": "function getEditSpamParameters(module) \n{\n\t//This function retrieves the parameters needed for Edit Spam interface \n\t//module <string> : Name of the module, ex: \"Accounts\", \"Contacts\"\n\t\n\tvar singuralModule = iml.substring(module,0,module.length-1);\n\tvar inputParameters = [\n\t\t{\n\t\t\t\"name\": \"ids\",\n\t\t\t\"type\": \"array\",\n\t\t\t\"label\": iml.capitalize(singuralModule) + \" ID(s)\",\n\t\t\t\"help\": \"ID(s) of the \" + singuralModule + \" that must be marked or unmarked as spam\",\n\t\t\t\"required\": true\n\t\t},\n\t\t{\n\t\t\t\"name\": \"isSpam\",\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"label\": \"Spam\",\n\t\t\t\"help\": \"Key that marks or unmarks a single \" + singuralModule + \" or multiple \" + module + \" as spam\",\n\t\t\t\"required\": true\n\t\t},\n\t\t{\n\t\t\t\"name\": \"handleExistingTickets\",\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"label\": \"Handle Existing Tickets\",\n\t\t\t\"help\": \"Key that marks or unmarks tickets from the contact(s) as spam\",\n\t\t\t\"required\": true\n\t\t}\n\t];\n\t\n\t//Verify if an information about a field exists\n\tif (module===\"tickets\") {\n\t\t\tvar contactSpam = {\n\t\t\t\t\"name\": \"contactSpam\",\n\t\t\t\t\"label\": \"Contact Spam\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"help\": \"Key that marks or unmarks the associated contact as spam\",\n\t\t\t\t\"required\": true\n\t\t\t};\n\t\t\timl.add(inputParameters,contactSpam);\n\t}\n\t\n\treturn inputParameters;\n}",
      "name": "getEditSpamParameters",
      "test": null,
      "appName": "zoho-desk",
      "arguments": "(module)",
      "appVersion": 1
    },
    "processInputParameters": {
      "rev": 6,
      "code": "function processInputParameters(parameters, mappableParam, omit) {\n  //This function sets the parameters in input\n  //parameters <object> : Parameters set in request\n  //omit <string> : Field that will be omited from input parameters\n\n  if (!parameters) return null;\n\n  // return new_parameters;\n  return Object.entries(parameters)\n    .filter(([key]) => !omit.includes(key))\n    .reduce((newParameters, [key, value]) => {\n      if (mappableParam.some(param => param.name === key && (param.metadata && param.metadata.onlyDate))) {\n        value = iml.formatDate(value, 'YYYY-MM-DD');\n      }\n      if (key.startsWith(\"cf_\")) {\n        newParameters.cf = newParameters.cf || {};\n        newParameters.cf[key] = value;\n      } else {\n        newParameters[key] = value;\n      }\n      return newParameters;\n    }, {});\n}",
      "name": "processInputParameters",
      "test": "it('should return null for null parameters', () => {\n  const parameters = null;\n  const result = processInputParameters(parameters, [], []);\n  assert.strictEqual(result, null);\n});\n\nit('should omit specified fields', () => {\n  const parameters = { field1: 'value1', field2: 'value2', field3: 'value3' };\n  const omit = ['field1', 'field2'];\n  const result = processInputParameters(parameters, [], omit);\n  assert.deepStrictEqual(result, { field3: 'value3' });\n});\n\nit('should format date fields when required', () => {\n  const parameters = { dateField: '2023-10-12' };\n  const mappableParam = [{ name: 'dateField', metadata: { onlyDate: true } }];\n  const result = processInputParameters(parameters, mappableParam, []);\n  assert.deepStrictEqual(result, { dateField: '2023-10-12' }); // Ensure date formatting is correct\n});\n\nit('should map \"cf_\" fields to the \"cf\" object', () => {\n  const parameters = { cf_field1: 'value1', cf_field2: 'value2' };\n  const result = processInputParameters(parameters, [], []);\n  assert.deepStrictEqual(result, { cf: { cf_field1: 'value1', cf_field2: 'value2' } });\n});\n\nit('should handle a combination of operations', () => {\n  const parameters = { field1: 'value1', dateField: '2023-10-12', cf_field1: 'value2' };\n  const omit = ['field1'];\n  const mappableParam = [{ name: 'dateField', metadata: { onlyDate: true } }];\n  const result = processInputParameters(parameters, mappableParam, omit);\n  assert.deepStrictEqual(result, { cf: { cf_field1: 'value2' }, dateField: '2023-10-12' });\n});",
      "appName": "zoho-desk",
      "arguments": "(parameters, mappableParam, omit)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-06-22T08:52:46.352088+00:00",
  "categories": [],
  "opensource": false,
  "description": null,
  "iconColor32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af40000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000004494944415458c3c597c96f1b7514c73f6fc64b1c3b5ed2ec4ed2362129525b10124b950b1207402d3d220402b108a98223974a80c41984845471e00f801362e9090901aa04455c4a01898aa4e99238ce5227e3dde3197be6c7c18edb265e5a9396ef6d34f39bdfe7bdf77def37234a29c5ff28cf5ebf30631558ca6ea0a8c5e5d17426fb8609fb7bef0fc0990b5ff1e9c56fd04400d044636eec301f3df91653d1d15dcf6b7bb979b96af3dbda250c3347a65c20532eb065e6f8f6f22f7cf6e7d9a66bf61420631558c9a7d044434410915a2604fe3196b19dcabd05582f1a6c140d5c5cdc1dde1e0df6e3d576577c4f3d10ebe9632e7e84647e93b5e216a952a61ea5c6a1d82452f7c53d0398ec1be2f313efe1b82e6717cff3f60f9f5071aaf83d5e66fac79baed953001121e80d0010f205504aa150447c410e8447fe1b80ab14ae725bded7ebc6dbd6829168986e38d8cf48b0bf3b0057b9fcb47c912fe7cf9129e781dd7554289e39f018af1f3d8e2682ab140be9042e0a4138101e26e20f7507f0f3ca5fbcf1dd87240b9b34f110008eeb60562d5e39fc343edd4bb1627225b386d4616762e3f8f4e65b756cc3b38be7592d6ce2d33de8d2faf1a9c8283edd0bc0a699255948a189a08bc6a1fec996ebda66a05cb5993712483dadf1d02073f1c378340fdcd2e71e4de785079f6a5cafe45318660e107abd3d4c47c7ba034897f32ce736100485e2d4c32739fdc44bbb86ccceca5cc9ac52aa5a80625f20cc4478a83b80d5c21629338308f8751f4707a76a756b6586ba168c0455d701201e1a602010e90ee05a768dbc5d0220eabfbd97777e466cb760c5a97239bdd2388ea7a3638dd970d7000be904b653458091e03e86ebbdec2a9773893ff871e977fcba9793d3733c323c0340ce2e723db78e562fcc6c6ca26dc65a02b8ca65c148a0eab11c8c8e12f107819a37ce5cf89aac55a0ecd80c04220d808d629af5a28188e0d53cccf64fb42d574b80826d72357bb3970fc526f0687a2d4aabc4d5ec2a39ab88ab542333004bb90db2561180b0af978391d176fbb7064899599285cd5b7af96624637d037c71e27d2cc746179d99d8cd83e6727a05cbb1510a8682314683fbba0348e46e6094730004bd01a6a3f1c63dbfee6d74c44ecda71338ca4510f6878789f68468a796a36d3193c4ac5828602010211e1aa0934a158b2be9e46d23d85f9f8e779d8179631947b968a251a898fcbafa37b366b6e58928a2b19859e1d2d6129a0882301b6b6fc09600b65361319daca548845429c3a9ef3fee188de55428576d04a1c7e3e781d8389dd414206315b89e5baf8de0fac029576dccaaddf665dbdd5e550e137d83ccc4e274525380f5a2c18d521a91da59efd3bc1dc7efad9a0c0e71faf117190f0d7607702dbb4ed62a2208c7a78ef1da9167e9f1f881ce7f711ac2fec80853d1b1a61fa17704b06dc0371f7a8e0fe65e65b0377ac7d1dfad9a02e4ed12ef1e7b99771e7dbeed41b217929d7fc74a29b6ca39fa7cbd1d5d7f4f00eeb7fe056931b53d5fd9dbbf0000000049454e44ae426082",
  "iconColor64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda7930000086e4944415478daed9a5b6c235719c7ff67667c8dedd8b95feca49bcda5db65bbddb6acb6a85dc2d2f66141a22b15280f9580f2426105a8e20181c4034220b13c54bc000f4848e50190105408b52f14b6b41428d0d0151b3b974d633b4ee2d8e35b7c1bcff9787092c69999d4e3cbc69bf28ff2329e3367ce6fcef9beffb9302222bc8f251cf50b1cb5def700a4a37e817a14ce6c623eb90a82fe68f5589d98e91983cfee3e7e00a2b92d7ceea5efe36fb19b6060baf7d8440bcef44fe06b0f7e12974f5c8028d4dfb13b1ec09bebf3f8ebda7fa172d5f09eb2aae0d5c87f7033f10e9effe8557c6ae623753fbfe363c0821c85a25600008c31c37f4910b15548e37b6ffc02ab998de3018088b02847c0c1c1187bcffb452620985cc5f5f0dcf10090af94b09c8e198efd83628c41e12a4272e47800908b5944b2f1babefe7e9909821d0d20964b20514843a8b30710112441c489eee1e3016025b38e5cb960aa4c97c58e93de91baefefe834e8b2382009224a8ab2370c1818849dc87f500442afa31b7e77fff10070317016dffed067f14af8dfe0446000d6b613984fac829336337022f85dfde8b577d75d07ebf4d9202782c22b202230c6b0954fe32b7ffc115e5c7c4dd313145ec1e73f70193f79fcb9ba036747c700001018834db4c02e5961132d1875f7e1b1f107340d2422081030d3133095353a1e809e36f32970e29aeb36c982299fdfd4b3ee38002a571194c32050cd9726001e6b17eeea1e3ade00b2e5026ee9b84322c250970f435dbdc71b40bc90422c97807030068030ee1982d7d665ea792d4d83d9721e739b8b08ca111494124c3a5800c049ef286603f7c12e59757f0f67362117b3baf383299f1f56d1723400feb91ec477df7801d72373c8950b86ab37878950353fcf5fba8aa74f3fae7bcf622a8a42a5545b8e0822ab6600b36ac91098db5cc4175efe015e5c7a6dcfbab206fe44262053dac6bf36428675059361a83a26c869b1e3a477d4f4bb37dd034aaa821fbef92bbcbdb50c8989a6676efb4544109880807bc0b0aec554545b0e845ebb0701131678574df780a5d41afe1c7e0b22139a6afcae6c9205933efd2f992ae6b09ad9d08c7f4e8451771ffa9c5ed3f535dd0396e428920641894030130a080497c581718f7e2e5fdf4e60232f6b5d200813dd237059ecb71f40488ea05451b46989089c0802639adf8c25e0c381fb30e1d59fcfafa4d7912de56b50572d30c34c4f000233dfa19b02404408c9617070884caab9ce18c363e3f7e3c9e95938246b5d1dc121d97061e41eb8ad4e63d8aa16b655346f815b02605b29622915d5ba3254a7a5d7669fc5a9def166aaa881aa0b1b80dbea34b50ab45f4d05c14431a3bb66c78930e91dc5b867b0258d07aab097536bba1678d0e9c3b0cb9c056e098068368ead4246b36647204cfafc703610948c9428a411c9c6752df09867103e9bebf603584aad615ba95db36bc6951da6486e0b8962c6d002db0cac735b0184e4302a5cd50c01bb64c3748341c948cba9356c2bc59a6bad80dd300085571092231acf4f20f86c2ec35cdea88206b01d920d930d58e05d359c05b2a53c56d2ebdaf14f8461572f06bb7cbae58a953282c9302abcb2d7184e550334e5f3eb6e6a28bc820523d87637021e7debdc56001b7919ebdb096d0600e144f7b0612e9f8b2fe1676fff01bf5f7a1d0a5741441870faf0d4a94bf8d2b927d063f768ca640c6073228cb87a31d08005de55c343e09dcc0652c55c4d502222b01d572609a2a64c85abf8f15bbf43ae5cc027261f86c8049ce99fc0c74f3e841bf165ac6f2775ebda34804d204c7847e0b2e8c36e2b80053982a25ad65cb70812667cfa41295bce633eb98a5f07ff84682e8e2f9fbb02bfab1f3fbff112e69361f439f4d7f3570f813ded0b98da0b3ca886874068675e6e116a1fe1b63a3061109436f33262b904c080976ffd037f8fcd2355caa1ac2ab830721a5e835cbe20475154cb9a146815a5a6b34d43e80a4a098b3a169813a1dfe9c5a8ab4fb75c5e2981836011244882886c390f9109b04b569c1b9c345cce0ac9fa8b206e8b131326f601f5d4500f48163308673775e70063ee41f438f40f2b9dea1dc70b97bf89542957d3188989b87f705a1f76e570d8230d5ae0a600ace51288e753bad3dc29df281c924db79c5db2e262e0aca9bae46216e18c016ccf404327c3f6aba121b09c5ed36c5bef2e67cdf48c35f542077518ec49af31ecb60208c91194794573dd21591b9e971be9563a86ac92afb9b60b7bba05b04d0350b98a50526f6baaeaca5a390506aae976f794d87ed9252ba67c8d5be08601186d4d71220c77f5a2bf095776502a71849261703dd83617c65a00db3480782185b5dc96664c3230142a25cd8cad196d6c277123b102e1c06beecd379cbe069ffcae4c6781d5cc06e403ae0ca8eee38792617ce3fa4f7165ea1158c4e6d65b15b582df2efe0537132b1ad8ef35df682b00bdad29a07a464f258e5f065fc16f165eadbe74a3674fd8bb274304304df7af5a60bfee7ca3ed0076b7a6f42a678c41a06aa054cd3e5847071bbf43001641c2748b569c4c012856ca5894a387ded38adda1c344003c3627a67dad01602a08a64afa5b53b7532aa9383f740a77b7c87099ea01b19cfed614b033dcdb75e08c3180082a718cb907f1dc073f0d97d571fb01dc4ac7902de735df9f13076fe3693b460c36c982f30353f8d6434fe3a2ffde963ddb1480053982b2aaecedc155f7ff38fcee013c31f530069cdeb67402ab2861cae7c78591d34d2d7f350580134750aeba3291b1bdc69f1d98c4b5d96771d17f6fdb03603b543780fd5b53440402e1d1f107716df68bb8a7efaea36e47fb016ce5d388e6b6c000084cc053775fc2771e79c670f5e74e51dd0056b39b88e7537058ecb87aee0abe7efe33e8367924ad135537805c398f01a70f5f7de0493c73e663b049e68ea375aaea3e2d9e2de711cb2530e11d698907ef1475fc71f976eb8e3b2afb7f002dd6ff0024a2993b92659ba70000000049454e44ae426082",
  "installSpec": [],
  "inviteToken": "6d2cdad24be2a4c2e29e86e19f0c8bed",
  "versionFull": "1.2.6",
  "compiledName": "zoho-desk",
  "iconColor128": "\\",
  "iconColor256": "\\x89504e470d0a1a0a0000000d49484452000001000000010008060000005c72a8660000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000026224944415478daed9d797424577defbf55bd77abbbd5daa596461a49a319cf62e231de668c6d0231606cb3d9276c0e8b5f800721c4790702491ee12490003e2461cb238f84bc133881b099c5700206cc621bc7cbd8789b4523a9b5b4ba5bdd52ef5ddd5dcb7d7f947a2c8b198f4652dd5255fd3ee7788eff18bbefedaefbbdb77ebfdffdfe04c6180341108e44347b000441980709004138181200827030240004e160480008c2c190001084832101200807430240100e860480201c0c09004138181200827030240004e160480008c2c1b8cd1e00419c0b4969a0d8a842630c0287cf6300040001b70f6dde00dca2cbecafc0704800881d475395f1ab8527f1e5a77f84634b93905505bc14c0258ae80f75626fc72e5cdebf0f97f5edc3ee683ffc6eafd95f8b2108e40740ec2424a5812f3cfe3dfcc323df40aaba0c0102041e8b7f1506008c81413f090c86bb71cde0c578ddc4b538123f80902760f657b4ad9000103b065553f17f1eff1efeeafe2fa1dc94200a02049eab7f0dad65c1c0c018d01588e286d12bf08e17dc8c4b7bf7c06593d703120062c7f048fa24de78f7df20514cc325ee9cf8345b3d11000c23913ebce792d7e0ad075f8e882f64f6d0b6cccef9960947a36a2abe7dea97982b65209ab4eb9f0b4110f4d30804cc94d2f8f0fd5fc29fffea8b582867cd1eda96210120760439a984fb934f42639a69c7fef32108025c8288bad2c4bf3ef943fcc9cf3e879962caec616d091200624790a9ad2051caecd8c5bf164110c018c3dd530fe0033fff0292e59cd943da342400c48e2059cea126d72170c9f76d9d9650fd60fa417cf2a1afa2d294cc1ed2a62001207604d3c545d49486d9c3b820044180ca347cf9991fe13f8eff04568ca7930010a6a33186e9420a4d55367b28178c2808a834ebf8ecb16fe389ecb4d9c3b9f0f19b3d0082a8c975244a6900b0440c603da220e0547e1e5f7ce26ed495a6d9c3b9b0b19b3d0082a8c812664b69cbbcffafa7255a774f3d80473327cd1ece05410240984ebaba825cadc8b5e477bb112020555dc15d93f741d154b387b361480008d39929a6506ad62c7b02009e4d0dde9378048962daece16c181200c27412c534248b6500ce862808982b65f068e694d943d9f898cd1e00e16c644dc14c310555d3cc1ecab65095eb78387dc232f32101204c45921b982e2c02607ceefc1b882008606038be3c8b72b366f67036040900612aa5660d8bd565e861348b2b007411982b65906f94cd1eca862001204c65ae9441b656b07406602d02807cbd8c7c9d048020ce4bb29243d9e21980e72240612aaa72ddec816c081200c25412c5b4254b809f0f2b89190900611a0d45c6899539c8162a9cd90856ba124402409886a43690aa2c03b0e61d80732102f058c433900480308d65a984854ad6568b1f6008787c68f787cd1ec8862001204c2355c9e919000bbd339f0fc680815017da7d6d660f6543900010a631575e82a4346cb4fc751bf1ddd17e120082783e1863389d4f5aeefefcf9e624080286223df0b93c660f6743900010a6206b0ae6cb4b5099356ae6374ac0edc3fece61cbc4354800085328356b9829a620c03e19000620e8f66157a4d7eca16c181200c21456a412e64a4bb659fc3a0c9d8128fa439d660f64c3900010a690aaaea0d4a8c2f25700d7a03186e1482fba8351b387b26148000853481453a8d92803c01883006028dc8380db67f670360c0900610af3e5acad320000e071b9b1bf73185e8b6400001200c224dca2cb3657805bf85c5e0c47ad130004480008931889f4c26fa1a3f2f9606068f7853014ee317b2817040900610a87fbf66228dc0dcd82edb4ce0663406fa80383e16eb3877241900010a630161dc0ebf7fd2edca2cb923df5d6a28f9f6128dc8390c76ff6702e081200c2145ca288b71dbc01af1cbd12809e42b3b21008828089d820026e6b0980dbec0110ce251eeec227ae7d27821e3fbe3ff5c0196bb00b8b0d3efbf7cd2c2af28a1e8cb60f40b458649304803095d1f6017cfa25efc58d6357e1bba7efc353b919e4eb950dc98020000da589b22ca1a13421423445041880366f0023d17e13bec1ad21302b9fbb08dbc01883a43490a9e6516a5637bc902b4d094fe566f0c3e9ffc62f177e83aa2ce9a7088e42a0310d63ed71fce0751fc76e8b89009d00881d812008087afcd8dd7ee10be848fc206edd7b1dbe75ea97b8f3e1af21514ce97d46388900630c836ddd88f9ace102b4160a0212b620e60fe3f64337e0ce6bdf85fe502718476b4e066024da87a0c5320000090061230441c02b47afc23b5f7033dca29b4b568131069720623c1687d765bd03350900612b5ca2885bf75e8789d820344ea780a0c78f89d8a0d953df14240084ed188af4e0b2fe7d0087da020686368f1fbb227d664f7b53900010b6c3e7f26024d20717076f7ec680feb62ef48662664f7b53900010b6c425f079b419741310abb800af870480b01d8aa6225dcd43d58c351c3d630212e981dfed357bda9b820480b01d75a589b972060cccf05a009fdb8b8b3a86b99d38b61b6b8e9a209e87957a09b3a5b4e11d8718741bf091a8350380000900614332d53cd2d5150e8e430c9dfe0806dbace501b0161200c276cc9533a8c975e34f008c6130dc8d1e8b6600001200c2864ce6939064630d475bf505f1b62e042d6c6d460240d88aa6aa60bab00885a986b71c70892e5cd4396cd90c00400240d88c8a5cc34c69b5e598c10ae073792ce901b0161200c256ac4865cc736839c6c010f606b12b622d17e0f5900010b662bebc847cbd02a3cfff8c013dc1187685add507603d240084ad4814d3ab1900e378d605b81b115fd0ec296f091200c23630c6305548a2a1c91c3e4dc0787b1c418bb900af870480b00d35a581c942523f9f1b8cc7e5c2582c0e9768ed2564edd113c41aaa4d09f3a52580832968d0edc788453d00d6420240d886c5ea3232b5bce125c00c0c515f685306a63b0d1200c236248a6914ea656e25c05d81a8d953de322400846d4856b2a8abc69600032d17e07e843d01b3a7bc654800085b20ab0a8e2fcf425655433f87310651103012e983cfc225c02dace7636c01186350980a4533f661341b01023ca28b8bf7def990940612c5f4aa0988b1fb5ac0edc3de8e21b3a7bc2d90006c03b2aa60492ae0747e01538545242b39646b05141b158eed29f82340404f3086c3bd7b70247e1043e11ed39a63e61b152c5697b99880843c7ecbb5003b1724009b843186a55a010f2c3e859fcc3e8a87d3273057caa0d294206bca6a2a9a677f1afe08ab7f06dc5e5cd4398cf75cf21adc32712d021efed763e74b4b485756b8dc01e80eb6a32fd4c17d8e464002708130c690950ab86bf257f8e6c95fe0b1a549141bd5330d295bb7d0f4e7d05aada2374b4395712c730a77dcfb39a4aacb78dfa5b7c0e7f2701dc342258b9a626c0930a0fffe23913e74f8235ce76714240017404391f1b3b963f8ec63dfc6fdc92721c90d88820897604e5bea9d844b70a1d4ace1530f7f1da3d101dcb2f75a6e9fcd18c3a99505d415e34d400400c3915e044d38e5180109c00659964af8fc6377e1ff3ef17d2c55f3fac2df01c1af9d844b10b1522fe15f9ffc01aedbf53bdcf2e44d5546a29882ca34c3dd793d2e0f263a86e0b6c96f4f69c00d305bcae07ffdfcf3b8f3a1af215b2b40a41dff9c888288c79626f164769adb67969b12e6ca19fdf5cbe0dfc5eff2623862ed2bc06b2101380fa7f349bcf7279fc67f9eb817b2a6d0e23f0f028072b386679613dc3e332b15305bcc700900b6fb42180a5bdb04642df40af03c24cb59fcf9afbe881f251e3a13e423ce0f630c0d83dfc7d7922ce7506c56c1c3046430dc8d81b62e6e73331a3a019c834a53c29d0f7f0d774ffd9a16ff05220a22021e7ef7e4a78b8b5c4c40181806daba10e23837a32101380b8c317ce3e4cff1e5a77f0c9569b4f82f9080dbc7ad50863186c9fc021aaaf126202e41c4459dc30858d8067c3d240067e199e5597ce6d8b7506e4aa655b659150686366f00714ec7e4aa5cc7743105c0f800a0d7e5c648b4cf561b0209c03a144dc5bf3ffd231c5f9ea5c5bf09180306dabab8a500cbcd1ae64a192e25c06d9e80e54d40d74302b08ea773097cf7f47d5c3acbda110686e1482fda7d6d5c3e2f555dc612271390ce4014bb2ddc08f46c9000ac813186ef4fdd8f44d1f8ceb27684315d3407c3ddf0b9f99402278a69949b35437f2f06063086785b17a27e3ec2c60b12803564a5027e9478181a05fe368dcfe5c1be8e5d100daec86b315d4c41323ae5b87aa36b3c16b75506002001780e4f64a731995f30fc3eb95d61d03300bcde931baa8cc9fc3c544d33fcb35ca20b7b6283f088f62a9da1277d0d4fe566506ad4e8f0bf691862fe3006c29d5c3e4d921b4814330098e1172f831c539b3c210158a5a134f164761a8aa6983d14cbc218c340a813bd413e77e50b8d0a52d56540100c8f01843c015bdd01684102b04a4d6960ae9401607c3ed98ee895727aa92cafabb2d385453d03c0a104381eee426f30c6655e3c21015865a95640b292a3c5bf055c8288898e21f85d7ccc32172b39d4e486f1262060d81ded4784536a93272400ab2c94b358968a708a8b8f11785c6e0c477ab98828630ca70b49340d2e01d64d40040c47fa10b0810bf07a480056992f6720294d5afe9ba45529c7ebaaaca4347032bf0095199f01f0bbbdd8db3168cbd3210900009569783a9730dc52cace30a65700f2b2cbaec812162b39c36f6a3200418f0fa3d1012ef3e20d0900f40cc07c7989ca7f3709630c2e51c48d63577173cb4d5757b0505e32bc041860e8f4476ce302bc1e120000c54615f3e5252affdd048c31a84cc3d1f841dcb6ff7a6e1580a9caf26acd86f17d008722bde80eb67399176fec55d6b449d2d515cc97b31c7693df8671e8656fc8b8f1ecce7f4dfc627ce29a776298e34599d3852424a561ec1c57539bbbc23db62b016e41020060bebc846a53e27a026839cc30068882008fcb6da1f387009fcb835d911edc3c7614b71d78194639b6ca563515a756741310c35d804537263a86e0e5dce780172400004ee51750337837594b6bd78fb775e3ca81fdb8b477029d81a865fc070408e80dc5b0b76308f1b66eee16d935a58185f2923e1683bf339fdb83511b9600b770bc00289a8a99620a8aa61abe9b0080c618fc2e0f5e357e35de73c9ab71b07b1441b78f828f1740be5ec67431c5c50538ea0d61970d4b805b385e002ab28499628a8ba73c630c3e9707efbee4d5f8b3cbdf88769bdd2de745babac2ad04b82fd4c1cddecc0c1c9f05c8d7cbba010887c5cfc070c3e81578ff65afa7c5bf0512c5b4e125c0addfabbfad13616fc0ec291b86e30560beb4847cbd0cc33de5017406a2b8fdd02bd111b0476349b3385d487289d9888280bd1dbbb85a9cf3c6f1029028a55195250e5d6535ec8d0de170ef84d953b6340d55c65421098d4309b04774632c3ac025366416f69dd906992ea40cf794d7a3fe02f6778e20e20d9a3d654b5393eb9829a60d8fd93000214f00233633015d8fa305a026d7712a3fcfa518c7258abaa594cbf171d72d91938a58ac2c73c89ae8ee467674015a8ba305a02ad7315bca001c5a7f05dc3edbef263c982b6550e011b3610c7da10e7404c2664fd9501c2d00a9ea3232d5152e9ef2116f1063edf6bc51c69399621a15836336ad12e0b1f601843cf6cd00000e1780d952068546854b3e7930dc8dde90fd2ca578a2310d538524640ebe8d2e41c4782c0e9f4d4b805b385a0016ca59e33de5a19f0046a27d085300704bd4e40626f30bd038c46c026e9f234e6c8e15005953f0cc7202b26aec6ed2b2941a89f4dbaaabac19546449f76d34dc048421e8f1dbd604642d8e1500496962b698e1620212f078b939e5d89964398b348f980d03fa42315bba00afc7b10250a89791ac64b974950dbafd1875c071d268e6cb4b2836aa1c7e33dd0538e6b777060070b0002c9cd94d8c7f98ba0251f4dbd4528a278952060d836336ad9a90a1708f235ed91c2d005c3ce519c370a48feaffb788ac2a985c9947934306c0e7f2604f6c102ed1fecbc3fe333c0b8c313cb33ccbc5520a0086233d08b9ed7ba1840792d2c01c071310dd05d88f89d8a0d953e6822305a0a92a982d65a0726803ee7579b0af73984a80b7484e2a62b694e15202dcee0ba1dfc61e006b71a40094e5daaa0bb0f104dc5edbd793f3205d5d41ae56e0e3021cee714cd1962305205b2b20c1cb52cad7c6ad5b8e9d499432a8293c4c408081b62edbba00afc79102b050cea2d4acc1f80b2540bcad0b036d9d664fd9d230c6706a659e4bd5a64b1031111be4d6e0d46c1c2900a70b49d4e43a174ba978d839bb895134541989521a1a87988dcfedc1782cee189356c70980c618a60a8b869b8000fa6eb2af63d811f9642329376bfa2b1b87a2adb027e8a85736c70980ee28930260bc0bb0d7a57bca3b6537318a9c54e4d2b98981a13bd88e211bdb80afc77102509625dd0598c36e12f106c904641b982b655032b8049831063086785b17623ee738363b4e00164a4bc8d60a5c7693ae401423111280ad325d4ca1a6d48dff2041c0782c8ea08362368e138044298d72d3d8aeb20cd077937017a2be90d953b6341ad3305d48415655c33fcb2d88188d0e706f7566268e1380b9520675d5e074d26a09f09ed890a3761323a8c90d4c159258955543097afc5c9b9cee041c25000da589e3cbb35035e33de5dda21be3b1b8a37613232835ab982da561b4712b0343bbafcd71559b8e2a50af290d244a69000c82c1cd1e821e1fc6383aca30c630534ce19ed947902ce7b6fbff8e5d915edc307a250638d7c827cb39e4a4122713900e479880acc55102b02c95b8790084bd41ae5d653530dc3df56b7ce481ff8762a302711b058e3106afcb8387d327f1f72f7e3757a7dc44296d78060078d6042464e33e8067c351029028a591938ae051023c14ee417730ca655e8aa68231863f38f032949a557ce6d8b7506854216ec33c35e81d8d8fc60fe1b57bae818f7389ec4c216578cce68c6f63d479be8d8e128085f212aa06970003fa6e321aed47c4cb2703f048fa247ebdf834de7ee806bcfff23760a0ad0b7ffbe05730575a82286ceeddb955ca3c14eec6ed875e89b71d7c05fa421da8c812826e3f17b38c86d2c4a9fc3c544dddd613cdd908b8bdd8138b1b3ea79d86630440631a4eaecca3a9ca861794888280e1681f374ff9132bb3f8d8835fc64c71111fbce2cd78ebc19723ded685ff7ddf97f078f63444b6f1aa47c6183430045c5ebc74e485f8d317de8a2bfbf7a3a929f8f6e42f712c730a1fb8fc8d5cd29b92d2c43c47131027d880afc7310250579a982ea6a031069768ec1920e8f6e340e708b712e0e9420ac54615fff2c40fb150cee16faebe1d2fdb7d397a43317ce8975fc4bd738fe9c7dcf38ca7b5ebef691fc4bb7ee726bc79fff568f785717c39817f7afc3bf8cf13f7e2c6b1abb809db9254c04239c7c504a43310419f037d1b1d2300e5660d8be5554f79838b80421e3fb700604daee3742109403fe5fc60fad7c8d60af8c4b5efc291f8017cfea577e0a30ffe3bbe79f21768a8cdb31ea51963d018439bd78f1bc78ee04f2ebd0597f4ec41a151c13fffe6bbf8c26fbe8f13cbb360002eea1c86dfcd270e305f5a424e2ac0e8988dc61846a303e80ab47399d74ec2310290ace430575ee25202dc138aa19f93074055ae9fb9db200802c080ff4e1dc7ffbce753f8c891b7e1a6f123f8d475efc650b81b9f3bf61d54e4da99bfdb32c010001cecda8d3f3afc1adc32712d821e3f7eb1f01b7cf6d8b7f1d3d94751531a102120e0f672cd6c2c54f4ce4d465fdb0680a14837421e670500010709c06265195559e26229351ce94507274ff96cad80acf4ecdd064110200238be3c873ffed96790ace670fba11bf0c1cbdf849e600c773ef4352c56962142dff9a2be106edd7b1dfee892d7e0a2ce61cc9632f8e4435fc5579eb9078bd5658810e01244684c43c41bc228a742198d6938b93c8786da34fc37f3886e8cb5c7e1161db31ccee098199fcacfa3261bef022c40e0ea293f555844be5e7ece226989c0522d8f8fdcff6fc8d60af8d317de8a77bde055180af7e0c3f77f092796e7f0c2bebd78dfa5afc34d6347c1c0f0f593f7e273c7eec2a39993509906714df51d03d01188201eeee632af862a63b69481c618dc06671cf40c80335c80d7e30801503415d38545c89a0297c1e924afcb8d039d23dc4a80e7ca99b3da9b0b821eeb28376bf88747be8ec54a0e7f71e56db879fc287a8231fc62fe71bc6ee25a8cb60fe0f1a5497ceeb1bbf0bdd3f7a3d4a8411484df8a1530c6b03bd28708a706a7857a0589128f6bdb0c616f087187b800afc71102509525cc9632008c3701f1bbbd188af07194513415a7f349289a7ace85220a229aaa82af3c730f529565fcdd35efc09503fb71e5c07e2cd5f2f8c747bf812f3e7137a60b8b0084b3d60d3cdbdfa017414efd0db252018b951c9712e0c1701709809d59a99731534c41e45002dce18f700b94494a03d3c5c5f3a6365b01bf7b661f41fec765fcf5d56f87a269f8c747bf81fb924fa2a1cacf39ee9f0d8fe8c6582ccead5b4eb29243a5c9216603dd04a4cda1addb1d2100c9720ecb5209c69700eb0f537f884f06a0d8a862b1b2bca1d4662b43f048e6246effaf4f42d65464a5c29920dff90879fc18e758297772651e55d9581310c6185c82883db1410438a536771a8e108099628a8b0b3000ec8af422c8299d345f5ebaa076d92d114855970108e7ddf5cfcc0d0c6dde0037b34c9563ccc6e372634f6cd0f052e39d8a230460aab0883a8774922888d8d7b18b5b06607113c7e45670f04268f537e8f2f369705a95ebab1e00c69700873c7e0c72ca6cec446c2f7b92d2c0e942121a33de51c6e7f6723501d5edcd8d6f96c1c03012ed47d4cfc72cb3d4aceac54d3c4a80fd510c3bd8b7d1f602506dd6cf78ca1bed28c3d305b8a9ca38b5b2005933d62befcce5a6482fb7abc00b2d13100e319bfeb64e743ab875bbed05205d5bb9a0f7e4cdc218d01d68c730a70c40439591950a008c4f6dfa5c5e4c740c199e4569315d5c44a559e310b31130de3ee0e8ce4db61780d9621a454e8e3243911e8439a593dca20be155671e66a061a6dee03484bdb1212ef30280d962864be7265110b02736082fa7db8d3b11db0bc05c7909350ee924005c779380db8757edb91a9dfe08544d83c6b6ff1f95691020e055e3477171f7289779d59526260b0bd098f1c6ad418fcf7126a0ebb1751640d6149c589983ccd46db1c77a3e7c2e0f263a76714d27dd3c7e14e5660dfffc9bef2359c96eeb298731869037809bc6aec21d97decacddebc2ad73155580460740680a1cd439d9b6c2d0092dcc0543ea95fd231b082cd2c47199fcb83b71c7c39ae1fb96cd5eb703be7c41074fb301ce9e376ff1f00725201996ade78e35606f48462e8e354b4b553b1b500949b35646a79c3dfffb1fa9e6c463ed92588180c77db26979d286690af73a8da5cf56d8cfa9c5902dcc2d63180442983547599c36ea2fbe677f9f9b800db99b972c670e356fdda36b03bda8f00a7cb4d3b155b0bc0427969b552ce385aae3abba3fd88387c37d92aaaa6e2d4ca3c644d31fcb37cab1e00bc529b3b155b0bc0647e0175c5f84a39b7e8c268b4dfd1e9a4ed40529a9859356e35dc05d8ed73a40bf07a6c2b000da589a9c222540ee924bfcb8b098e7972bb529125242b394e319b3647ba00afc7b6025095ebab0f93f1e9a490c7cfcd04c4ce2c94b3faf566c3ab361946a27d8eeb0378366c2b00e9da8a7e0780433a69a0ad0b039c5c80ed4cb29245b95933bc710b83debacd697d00cf866d0520555941a151058f74d2ae480f3a7c7c5c80edcca99505d415638d5b013d6633d63ec0adc1c94ec6b60230554842921b8667004441c068fb00fc0e6b2ab9ddc8aa829962caf0db8d801eb3d9db41311bc0a602a0310d93f9052e77e5bda2077b6343dcbcf2ec4a55a9638e83712b0310f2fa31e05013d0f5d8f2a9adc90dcc96327ad71b831fa680c74701c06d20572b62aab868bc712b63e80f7572b337dbe9d852008acd2aa6574d408c85a12b1071b4a3cc7691a9ada050af8047cc66a0ad8b4b77632b604b0148575690e16202c2d01bec4077904a80b7ca4c31859a627c09b02808186b1fe0e6dbb8d3b1a500cc953286f7016c79008cb5c71172783df976702abf008943d5a64774635fc72e6e9d9b763ab61480a962d2f03e8080ee023cd131089f433de5b70b496960a690d22fe9187c6c0b52d1d673b09d0034551993f92417479980db87d128d5936f95aa5cc74c914f1fc0765f1b4628667306db0980ee289304607c0970c41774bca5d47690ad1590aef2280106fa4231f404dbcd9ef28ec1760290af9791aaacf0719409c6100f533e79ab4c1752861bb7ea311b86d1e800421e2a016e613b014894d258e1e428b33bdacfcd05d8cecc96d286f70104f413e1782cced5e26ca7633b01982b2da1221b6f02a23bcaf4513a698ba89a8aa9c22214c6a104d8edc3583bbf06a756c05602d02a016eaa7c1c65c6c95166cbd4940626f30bfa11ddc0afb2d50770b7c35d80d7632b0190942626f3c67bca33e8174a7685f97401b233c546f58ca5b9a13100307405a27407601db612804a53c2e2aaa38c91414001fa03d5d48cef5e637716ca4b58aa15b8546dee8ef6a3ddc7a7c1a955b095002c5672ba0b108753794d6ee0743e69f6942dcff1e5394e19006038d2cbadc18955b095002c54b228358c759469a1680aee9d7f0c8546c5ec695b964a53c23db38f70316ef5ba3cd8131ba412e075d84a004ee7935c1c650441802888b87fe129fc70fa41b3a76d597e38fd207e3a7b0c8260ec2b1ba0bb00ef890d9a3de51d876d0440d6149c2e24d1e4e029dfa222d770e7435fc3fdc927cd9ebee57870f1197cf2a1af22df2873b8b4cdd0e60da0dfe16dc0ce866d0440921b58286701185b02dc4210f4a8f533cb09fcf14f3f8bbb267f854a53020c6cd56d07aab284ef4cde87f7fef4d37832370dd1e0802da0576d0e477ad14fc6adbf856d7a0366a522a60b49ae7979411000063c959bc6bb7efcf778c9f0615c3f7219c6dbe308b8bd24056ba82b4dcc9532f8afc443f871e261e4eb65c3b33540cb05986130dc8d30b900ff16b611804c750539c9f812e0f5b444a0d0a8e09b277f81bba71e40c41b82c7659baf765b68aa0a2ab2b41aa311b82cfe162e41c46874003e179500afc7364fe96c29034931d605f85ce8af03fae1bfa92ac84a45d0abc07af4ef88e7c26fe17379b0b76388aa36cf826d04e0c4ca1c6a4a03a22912a0d37ab0d7fe49984bab0438de668ff6e9db8d2d828075a58944918fa30c612d18187a421d7407e01cd84200cacd1a271760c2723086fe5007dafd54027c366c2100cb5211290e4d25096ba197000b18a16bdbe7c416029028a50daf2727ac895b147151c730bcd407f0acd84200660a7c1c6508eb1170fbb02b42d7b6cf85e50540d1544c1616a070682a49580b0686a8af8d0280cf83e505a0a6e8d77219e5dd89753006f48662e827139073627901a8346bba0780090526c4cea555023cde1ea712e0e7c1f202305bca60a996a70c00f15bb845170ef7eea10cc0f3607901982b65506ef2310121ac0303d0e10fe3f2fe8bcc1eca8ec6f202305d48a1a192371ff15c34a6e170ef04f6778e983d941d8da505a0ae34712a3f4f1900e23930c61070fb70f3f851c4fc61b387b3a3b1b400488a6e0222808f0908610d34a6e1929e71dcb0fb0ab387b2e3b1b400a4ab2b982f2fd1e227cec01843d0e3c76d07ae473c4c3700cf87a5052059c961a55e065dbd25007df16b4cc3f52397e1b513d79a3d1c4b606901982da64d33012176160c80c618f6778ee08357bc111df4eebf212c2b002ad37062650e0d85320084fededf1b8ae12faffa035cd2b3c7ece15806cb3a02d59526e6cb4b60601004cbea18b1455a157fedbe103e74c59bf0aa3d4729267401585600f2f532a60b6402e264f4777eb6baf3df86b71c78393ca2651f6953b0ecb795ad1590ae92098813d1777dfdb6dfc5dda3f88bab6ec34d6357c14d8bff82b1ec3736575e4255aed309c041b49a7c6a4c43d4d7869bc68ee08e17de8a835dbbe9d8bf492c2b00a756e651e3d007903097d6a26760600c88f882b8ac6f1fde7ee806bc62f71568a39b7e5bc2920220ab0aa60a49289a0a97c101c0e73c80fabf105cd0bf6f51101074fbd11b8ae1aa810378f59eab71347e089dfe08edfadb802505a0aad431534c195e02dc0a32053c3eb4fb42e8f047e01244d2008371092262fe36f40463188ef6e105dd6338d0358291483f026e2f2dfc6dc4920250a857f43b00063d08add452c41bc2ef0e1fc64d63477071f72862be303d7c1c102020e0f122e8f6c3e7f2d0776e20961480d9521a79834a805bbbfe782c8e3fbbfc0d78edc435087b83664f99200cc19202305d48a12c4bdbbefc5b3bff65fdfbf0f16bde81abe38768f7216c8de50440630c5385453455655b058031065110f0b2dd57e0a357df8e035dbbcd9e2a41188ee50440521a385d4882316ddb4a8035a6c1e7f2e00d17bd147f79e56d188af4983d4d82e082f504406e2059ce02dbe002dc3af287bd41bcf7f06bf1bec3b7500f39c251584e00162a592c56735b2e016e05fbfadb3af1a12bde84b71c7c19b9c7128ec372023057caa050af6ca904b8b5f8f7770ee32347df861bc7ae825b74993d3582e08ee50460bebc84badadcf47fdfba4872247e007f77cd3b7065ff7e8af4138ec5520220ab0a8e2fcf415655889b58b47aa45fc42b46afc0c7aebe1dfb3a87cd9e1241988aa50440521a982b65366502a2310d01b70f6f3df80abcfff2d7234efde208c25a0290938a982d652ee8c8de8af4477d6d78dfe1d7e1bd875f8b882f64f65408624760290148555790ad15361c00648c4103c3505b373e74e59bf1e6fdbf07bfdb6bf6340862c760290158282f6dd805b815e93fd4bd1b1f7bd11fe2a5c39752a49f20d6611901608ce1e95c0235e5fc2e40ad48ffd58387f0f16bde89cbfaf6917518419c05cb084043953157ce40630c6ef1dc01408d317844176e1e3f8abf3af256eced18327be804b163b18c00949a35248ae9e7ddfd5b91feff71f18df8c0e5af474f3066f6b009624763190158968a982f67cf7a946f05fb3afc61dc71e9ad78cf25af21af3882d800961180f9f2124a8d2ad69b80b4827d23d13e7cf8c85b70ebdeebe07379cc1e2e415802cb0840b29c435d693e67f9b716ff0b7ac6f0b72ffa43bc64f83044ea1244101bc63202e0777b9f73fc678c411004bc74d7617cf445b7e370ef84d9432408cb6199edf268fc20aee8df0f8d31c8aa028fcb8ddfdff762fcd3efdd418b9f203689c05ac6f716e0f8f22cfee3f84fb05859c6a5bd13f8fd7d2f4667206af6b008c2b2584a0000bd2db8aaa9f0886ebac64b105bc472024010c4f6619918004110db0f09004138181200827030240004e160480008c2c190001084832101200807430240100e860480201c0c09004138181200827030240004e160480008c2c1fc7f8341235d6f17fee40000000049454e44ae426082",
  "iconColor512": "\\",
  "installJsonc": null,
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": null
}
