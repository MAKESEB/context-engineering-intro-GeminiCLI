{
  "rev": 39,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.x-authorization"
      ]
    },
    "baseUrl": "{{connection.controlRoomURL}}",
    "headers": {
      "x-authorization": "{{connection.accessToken}}"
    },
    "response": {
      "error": {
        "message": "[{{statusCode}}] {{body.message || 'Something wrong. Please try again.'}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "automation-anywhere",
  "_rpcs": {
    "getBots": {
      "api": {
        "url": "/v2/repository/workspaces/{{ifempty(parameters.workspace, 'public')}}/files/list",
        "body": {
          "page": {
            "length": 100,
            "offset": 0
          },
          "filter": {
            "field": "type",
            "value": "application/vnd.aa.taskbot",
            "operator": "eq"
          }
        },
        "method": "POST",
        "response": {
          "limit": 300,
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.list}}"
        },
        "pagination": {
          "body": {
            "page": {
              "length": 100,
              "offset": "{{(pagination.page - 1) * 100}}"
            },
            "filter": {
              "field": "type",
              "value": "application/vnd.aa.taskbot",
              "operator": "eq"
            }
          },
          "condition": "{{body.page.totalFilter > (pagination.page - 1) * 100}}"
        }
      },
      "rev": 6,
      "name": "getBots",
      "label": "Get Bots",
      "appName": "automation-anywhere",
      "apiJsonc": "{\n  \"url\": \"/v2/repository/workspaces/{{ifempty(parameters.workspace, 'public')}}/files/list\",\n  \"body\": {\n    \"page\": {\n      \"length\": 100,\n      \"offset\": 0\n    },\n    \"filter\": {\n      \"field\": \"type\",\n      \"value\": \"application/vnd.aa.taskbot\",\n      \"operator\": \"eq\"\n    }\n  },\n  \"method\": \"POST\",\n  \"response\": {\n    \"limit\": 300,\n    \"output\": {\n      \"label\": \"{{item.name}}\",\n      \"value\": \"{{item.id}}\"\n    },\n    \"iterate\": \"{{body.list}}\"\n  },\n  \"pagination\": {\n    \"body\": {\n      \"page\": {\n        \"length\": 100,\n        \"offset\": \"{{(pagination.page - 1) * 100}}\"\n      },\n      \"filter\": {\n        \"field\": \"type\",\n        \"value\": \"application/vnd.aa.taskbot\",\n        \"operator\": \"eq\"\n      }\n    },\n    \"condition\": \"{{body.page.totalFilter > (pagination.page - 1) * 100}}\"\n  }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "workspace",
          "type": "text",
          "label": "Workspace",
          "default": "public"
        }
      ],
      "accountName": "automation-anywhere2",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"workspace\",\n        \"type\": \"text\",\n        \"label\": \"Workspace\",\n        \"default\": \"public\"\n    }\n]"
    },
    "getPools": {
      "api": {
        "url": "/v2/devices/pools/list",
        "body": {
          "page": {
            "length": 100,
            "offset": 0
          }
        },
        "method": "POST",
        "response": {
          "limit": 300,
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.list}}"
        },
        "pagination": {
          "body": {
            "page": {
              "length": 100,
              "offset": "{{(pagination.page - 1) * 100}}"
            }
          },
          "condition": "{{body.page.totalFilter > (pagination.page - 1) * 100}}"
        }
      },
      "rev": 4,
      "name": "getPools",
      "label": "Get Pools",
      "appName": "automation-anywhere",
      "apiJsonc": "{\n    \"url\": \"/v2/devices/pools/list\",\n    \"method\": \"POST\",\n    \"body\": {\n        \"page\": {\n\t\t\t\"offset\": 0,\n\t\t\t\"length\": 100\n\t\t}\n    },\n    \"response\": {\n        \"limit\": 300,\n        \"iterate\": \"{{body.list}}\",\n        \"output\": {\n            \"label\": \"{{item.name}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    },\n    \"pagination\": {\n\t\t\"condition\": \"{{body.page.totalFilter > (pagination.page - 1) * 100}}\",\n\t\t\"body\": {\n\t\t\t\"page\": {\n\t\t\t\t\"offset\": \"{{(pagination.page - 1) * 100}}\",\n\t\t\t\t\"length\": 100\n\t\t\t}\n\t\t}\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "automation-anywhere2",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "parseURL": {
      "api": {
        "response": {
          "output": {
            "help": "Enter a path relative to `{{connection.controlRoomURL}}`.\nFor example: `/v2/devices/pools/list`.",
            "name": "url",
            "type": "text",
            "label": "URL",
            "required": true
          }
        }
      },
      "rev": 3,
      "name": "parseURL",
      "label": "Parse URL",
      "appName": "automation-anywhere",
      "apiJsonc": "{\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"name\": \"url\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"label\": \"URL\",\n\t\t\t\"help\": \"Enter a path relative to `{{connection.controlRoomURL}}`.\\nFor example: `/v2/devices/pools/list`.\",\n\t\t\t\"required\": true\n\t\t}\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "automation-anywhere2",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "getBotInputs": {
      "api": {
        "url": "/v2/repository/files/{{parameters.fileId}}/content",
        "method": "GET",
        "response": {
          "type": "json",
          "output": "{{formatBotInputs(body.variables)}}"
        }
      },
      "rev": 3,
      "name": "getBotInputs",
      "label": "Get Bot Inputs",
      "appName": "automation-anywhere",
      "apiJsonc": "{\n\t\"url\": \"/v2/repository/files/{{parameters.fileId}}/content\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"type\": \"json\",\n\t\t\"output\": \"{{formatBotInputs(body.variables)}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "automation-anywhere2",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "runAsUserIds": {
      "api": {
        "qs": {},
        "url": "/api/users",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.users}}"
        }
      },
      "rev": 1,
      "name": "runAsUserIds",
      "label": "Get Run as User IDs Parameter",
      "appName": "automation-anywhere",
      "apiJsonc": "{\n\t\"url\": \"/api/users\",\n\t\"method\": \"GET\",\n\t\"qs\": {},\n\t\"body\": {},\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"iterate\": \"{{body.users}}\",\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.name}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t}\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "automation-anywhere2",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getBotRunners": {
      "api": {
        "url": "/v1/devices/runasusers/list",
        "body": {
          "page": {
            "length": 100,
            "offset": 0
          }
        },
        "method": "POST",
        "response": {
          "limit": 300,
          "output": {
            "label": "{{item.username}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.list}}"
        },
        "pagination": {
          "body": {
            "page": {
              "length": 100,
              "offset": "{{(pagination.page - 1) * 100}}"
            }
          },
          "condition": "{{body.page.totalFilter > (pagination.page - 1) * 100}}"
        }
      },
      "rev": 5,
      "name": "getBotRunners",
      "label": "Get Bot Runners",
      "appName": "automation-anywhere",
      "apiJsonc": "{\n    \"url\": \"/v1/devices/runasusers/list\",\n    \"method\": \"POST\",\n    \"body\": {\n        \"page\": {\n            \"offset\": 0,\n            \"length\": 100\n        }\n    },\n    \"response\": {\n        \"limit\": 300,\n        \"iterate\": \"{{body.list}}\",\n        \"output\": {\n            \"label\": \"{{item.username}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    },\n    \"pagination\": {\n        \"condition\": \"{{body.page.totalFilter > (pagination.page - 1) * 100}}\",\n        \"body\": {\n            \"page\": {\n                \"offset\": \"{{(pagination.page - 1) * 100}}\",\n                \"length\": 100\n            }\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "automation-anywhere2",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    }
  },
  "flags": {},
  "label": "Automation Anywhere (Cloud)",
  "theme": "#df6839",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Bots",
      "modules": [
        "deployBot",
        "getBot",
        "listBots",
        "listBotRunners"
      ]
    },
    {
      "label": "Devices Pools",
      "modules": [
        "listDevicesPools"
      ]
    },
    {
      "label": "Activities",
      "modules": [
        "listActivities"
      ]
    },
    {
      "label": "Devices",
      "modules": [
        "listConnectedDevices"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "makeAPICall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda7930000021b4944415458c3edd6cf8b4d611807f0cf35c82431293f46a198c6626481d9f8b14023f90bf007b050fe024b2b0ba5b010324989d5ec089bb11049614161a1080b0d0b8666fa5a9c339c6e33d7bd5797cd7cebd439eff33ecffb7dbfeff33cef6116b3f8cfa8b5ea9064ea751eba300eb55acba1c09c3689afc1695cc6ce3a629d235059e4303e6104c7b0b8cd8db4a5c04a0c601837f01d5b3a4ea0b2fb6df88097e5e2a3d85b37a7630accc11edcc6643976171bd0db51054aacc32adcab8cbdc47b6c6f4785a6085482eec20bbcad982771a754a6ab930a2c5094dc2d8abaafd4fea82239d77592c000baf1601adb3b3cc7ee3ac5fe9e4025d8101e61ac6aafa870ab54a8bb130a2c51d4fa2ff9a7c143c5316dec0481ad8a9effacc19cb192c4509d72ed13a8937f14dfaab6f2a9f99dfd37b1193dcd2a30b78939bd8a4673befc9e9fa41f83e8c352c5cdf8155fb01e3b3092e48fb7e48c042abbdfa1c8f2378a3e704091132ff0141f15bd6021d6e2354e964a0c2779c5ccd7f58cf44a025d388b2758817e5c53b4e2cfd5c015c26b70a5f4598dabb88e8996fe19caf3ed4bf238c9dd24c793f44c9d7d031f494e2539986453921b498e34f26b14e87092b1244793ccfd53808adfbe24974a9f81242349964ee7dfa80abab11f6770ae19092bf6fb5884438a641dc78f56e55f96e44492e5adb4d68a0a83492e24b958be4f7b04b5998294b62e4cd4edae291225a6aaace518b398c53fc34fc05f1aae746ad12a0000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000004e74944415478daed9adb8b55551cc73fa3e3654c1cb594d4484ccde842684aa4761bad346f642542af11f510490fd143f43f885151bd4437a287b0182f915d50d1d2ca44a18b929017f2368ae5688e7e7a58bf23db83d38c3367ef69a6fd85cde1acbdcf5eebf75dbfdbfafd0e942851a2448912254a9428f1bf445dd113aad9b905a8ab2b7c19c5131082d701d38165c0b5c066e023e0584f1391bbf0712d567f57dbd4d6f8fc50bd3aa3197d0f21fc68f55bf598fa8c3a53fd403dafaea890d4e790d9fda5ea39f555b55f8cddac1e5437a98d3d4140bf02e759049c0756031762fc17e02b605a5c7d9680094013b013d896196f033e01060541859b41ae0464846902ae079a81e37089c7df08ec011e02c6142a7dde040406038b8193c0ba2ae1010e00eb8129c0ac2ae27a37c2d14d0dcfbf5e1d522d5c3cf34084c577d4fe4512909b06648498078c24d9fae9761edf0efc08dc07dc5098f4791210680416020781cfa1dd6caf0558035c07cc813e6006a1da4deae94878eadb132a9e9da1b6a86bd486a208c84503328b5f080c24c5feb60e7eb60bd80adc05dc5288f479111018430a6d7b49a1aea3c34e2bf029301c980fbdd40c32a9ef6371d859d5993c3f9e99a21e50b7aa238a20202f0de80f2c01ce9176b5b3d8037c09dc4e3a36f75a02269242dac5d4b79367fdf3a4703980e43f7237839a129059ec1c52486b2685b80e91216833f02bc97f8ccb55fa5a131068201d6c4e026bab84eb0c0e009f019381bba11739c37064d3d5e3eadaaec4f378c7dc488ddfffb7fca116a8990654a5be2348ceafb58baffb0ed801dc0b4cca4dfa5a1210180e2c20a5be1ba0cb85ce4a6a3c16980bbdc00caa54f7bdeea86ec6945ada3b45d60a35d180aad477009d4b7d3bc26e600b7027705b2ed2d78a80c05852e8da430a65ddadf35752e346e061f88f9a4126f55d16a9efca5a94b8e31d37aafbd56deac83c08a8afe17b1693497d2fb7fb99eed0506034a93b348a54301944329b13a4bae12152c76813f008c914d6aa35ed20d58a8089c0fda4d0b5fd3242f72399c84c528a3c0d184f8a1a0383948bbdc220e21429291a1acf3c4a3a279ca92509dd22a02af51d0bbc46dac1cabd7a602af004293c4e00ce02fb806f48fee250087b214818424aa327013791340560394953de0636a87f420ff713c34e1b22eb6b89d0855aa7dea1bea91e55cfa85bd497d4d9eaa84a986ca7484adc1fadce8a8cb08233111a17a8037bd4315ea69435581daebe182dafb3b1d8a595d6571753e3195159de1be5b513ea29f57575628ff415333bf572eccc53e1b557470f709bfab83ab43b0b8cdf0e569bd53fa2cc7e4f10dea6ee54e787d6154ec088a8deec579f567f8822e84a755c0dc321ea93d1497e21be5734eda87a38ee17d753c83434fe528f4429eb48105153db8cb96e50f7a91bd56131d62f76ffe73881ce2bc41c32bbb232e39c0e461db0e6aa9811f6ad20bc29b306d407d593a63f5be47a7cce2e689cba3b843f1cf69e0bfb19411785635d5545c0487597ba234c2377e15197ab7fc7e9efd9bc9d50cc798dfabdfa5b38dccaf8adea21f56bf5aa2208a857df8ddd7f23bc747e937209f12b22ca34ab0bd525eaba187b2e771f10138c8f5df8499d5c94e78db91bd55722dab4c5753ac6865de95aae388f8c098601cf933aba1f43712969ccdf403a53cc269d3336015f00ad57ba8e2eadba9ae53efbffbe12254a942851a244891225fa2efe01b7680f4df58cf8f90000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-04-20T07:07:04.755402+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda79300000b6f4944415478daed9d69ac5d5515c77fafed2b6d69cb642728d002a505e115c2a48c9641caa0041c083131d10f4e31a809247e508351a38d06a32646fde01012830a612e503a2020140501a59649435b6c29416a5b5a4adfebfbfb61ade3ddf7f4be77df74df39e7bef54b6e72cfbd67d87bed75d6d9e77fd6d91b8220088220088220088220088220088220088220088220088220088220088220088220a82a1d4517a0d548021807cc05ba80d9c09bc073c026a0a7a3a3edcd30f690947de649fa96a4f592f648ea95f4aea45724fd58d2c26cdda04d481aff34497f92b44f8de995f4b4a4b3c309da086fcca3bdf153f649dadbc021fe2a695138411be08d384ed2f7fc0ccf5827e9cb92ae94f459496b73ffff5c52673840c5710758e0d7f88ce7259d9e5c1a9074bca4479275b664eb04152569dccf2761be5bd217d2f09eacf73149bb1327f87a5c062a8c37de644977258dfab2a463f38deaebcef2eb7fc61f251d32961c605cd10568012701ef4b961f055eed63ddadc0ea64f954e04c60cc4481b67180a4c12e0166faf7ddc0ddc0befcfa89f87337b0cdbf4f0396165d97600878483fd8c378c6d31ee6fbdb66baa435b9bb852323025488a4b1cec4c278c61a2cccf7c70ee07e20dbc971c0b9b9fdb62d6de100094bb1300e16d6ef81ba705f47f2fb03c016ff3ed1f733a1e8ca0403c443f9e1929e4d42f91a4907353b8b7ddb4992ee4cb6dd24e9c48800152069a4f38113b29fb1b37afb0077b307b80be8f6e5c38125b9fdb7259577006702701916be015ec71c80668f7a93ff1f06362476b912985a74c55a4dbb38c0b1c079c9f25ae08541ee6323f59ac05958fe405b53690748c2f385c0d1febd07b80f787790bbdb876902bb7df910e0e2dc718232e11db82992eecd49bfc70cb6d1fa9086d74a9ad1ce0e50e908e074e1f2adf330b56bf960d98a6902192703a743fb4681ca3a40d2201f0466f8f73ea5df66249dc1e5d4a4e129982610498365c343f661921ecf65f6cc1aead9da8734bc5e965d5474955b422523404efa5d9cfcb59ae6d26f3376609a40af2f1f039c933b6edb504907703ab0f03cc5979b4abf4d7758db6e15a62580690b5751d31882a2f1503d57d2df072bfd0e70df9324dd9eecfb3549274504280139e97761f63376f60f54fa6dc61ee04e6ad2f01cda541aae9c03389d98f4dbe9cb5b809530f4f09f916cff18f5d2f0d5c0f4a22b3ed254d5018ec7cf48e7cfc04b237c8cbc34bc184b376b2b2ae50049f85d823db103937eefc1c2f6489297860f052ecf9523184dbc833655d2f2e14abf033cd62c4f2b4b758699ede400958a00ce62eab37ed73074e9b7195bb1074b190b693369b8320e9018fc22ec491d5878be872148bfcd483a830f522f0d5f058c2fda1e630e0fc933243d3152d2ef008f395dd2eae4982f499a1f116014498c7d06f5491af7337ce9b7193b803ba849c3f3682369b8120ee07460f7fea9f43ba0b4af211fb03e5d2c93863b314de080a20d3266506da48f1773d2eff4569f857eec0324fd2139f6bf259d1c116014488c7c2e303ffb19bb47df314ac57897fda5e1a5b9f25592d23b80d348fa5d05ad0bff19c9fe1fa7f6926907260a555e1aae8a032c022e4896d732f2d26f3336e0cf1b9cc5b441d670a91da00fe9b71b4bd81869e9b719bd98e690660d7f3857ce6024f10ed834490fe6a4df51bf0fef471a6e990e311a943a02385dd8fd7fc62a5a27fd36632b706fb2bc08381baa1b054aeb00b9acdf4cfa7d07d3e67b87b2cfe1909386dff2ef93b1cb4048c3238d87dc99929e4c42ee334586dce492b4bae84bd24851ca0890937ed3248ce5b45efa6dc64eeab386e751e157c84ae90049d94655fa6d462e6b381b506202700530a9203bb51f89f4fb42126a578c86f43bc0b24d94f4bb9c34bcb8e8b20d85d24580c488e7612f658049bfcb193de9b7197bb1cbc05e5f3e9c8aa68b95ce019c89d8000da9f4bb1a8a0bff19396938bd1dbd1438a8d0c20d81b23ac0427ca42ee709e0c5a20b956323f050b27c2a9e2e56254ae500b9b4af39febd1b7bf237d8011f5a4d2f260a65d2f0742a7a19280dc97df6434907ebc532de67273ac553399d6276d9cada1fa58a004e17705ab2bc921649bfaa1f3e7e82277e4c9174a0bf1f38515247b64e03dea03e6bf844fca965559ca03483212606bb8cfaacdf614bbfc9bea700eff1cf31d898c24761834bcec6c2f804ecc4e8c65e3ad98cbd73b853d2abbefc1a2648bd896913d70307531b64f2365a90a9dc0a4ae300ce2cea076b7e1e780a06d7fbcf35f83c2ca29c02bc175880f5d6b3c686818d0022ffecc56e47b76039096fe5b6bf001b6eb66c9dd68694c20172d2ef89c95f0f60617630fb9884c9c797001ff0fdcd61f80f6c3afc33c93f33a91f9c22e3682c69f407927aa0f85bd7fe28850338e3b17bffc9bebc0d5801fd1bd01bbe039b17f012e043d89b43b3687c660bbba4ecc274fd5d5838efc6c276afafd3e1651a0f1ce69f69c081d825a2af428d036ec41cef56e011496f37ab475194a244de88f3b147ad0bfce715c047819d8d0ca7da8490c701d7fae7786ae2d1ff5705dec63a92af00eb80f5befc3ad6cfd88e357cd6f8990374f831a662978c3998a39d845d5216f8f2e43e6cb91dd3307e8345b3ff42391da130925ef8276553ba49369bd7971af5befdb70ed9a44f37f99b3af969e07a256df5c7b6df9474bedf9e75f6d3a31f6c79274a3a42d24592be21e931d984948d7847d24a49d7ca4731a9ca5d42cb1968de7d62f823fb69f8ddb251c36e92cd0036b5d5c64eca355bd2a3ea9f77646f362f514c515767c02e499b1343fdd6cfb0749d4992aef1066ed4f02b255d27e9d0d13ec31227b841f57311fe4bd2abb9df24e94d49df973df11cbbd12031dc571223ed95f4899c487394a41f49dad1e08c5a25e9e34587563ff622491b92f2fd4a36b8d432ff3d75847d3215f1231e018b6e8ec28c36dd1b31e385e4cc18e7e1323fff6fb7a487fd8c3fb80c679197a153d2ad4939d7bbf322e91449bf96f456ce89b7b973cf2e433d8a30dab96e848c9fca3a7993257d46d61f48d924e96bf2913aca62b0245a5da75a67b047d2a755df71bcacc165ac4736e0755799ea345a06fb4e62885d922e974ddeb84cd2ce9c9156483acb2343d155e8ab4e4748fa5b52eedbb2109f7ce64afa61cef1257bcfe0d231e104aabd68913e4d7b42d2a9927eef613e6387a46ffbfaa5354ed2c0cb92b2bf219bc63ebf5ea7acefb22ee7041b65fd828eb2d673240d75a5eae7ee7d4036ed6bda59da24e9534aee0aca8cd76b89ea3bac37e61d37b141976cc2aa9e64fd0d7e692cadb38f8491c64bfa59cefb7b728dff8ca4a5553a1b549bc0724d528f867312274e305376c7900a49b7ab0449b0ad34d27c9998d3176bb3d0592523248d7a43ee127661a3ba24eb1f24e997c936bb245d51b5fa0fc640a9f49be77155b8479c84f6d7923afd447d745e7397838dc936cbaa6a8366c6c94bbf294fca73ecab5a71d53a79e9bb03fd8e2ee6db4c56bd26729f5adcf7292a25ec047ca4ad1ceb812f02cf41e59f9a7563e30964ef0ecca7f92b64bdd467124da6c52f9e8eaa032415bf184bc14ad90c7c15f80b54bbf173a38bfdd3bf4fc01245fa9b8c721a362671c62e5a9c5a56440498cefe1331ed06becb3067fc28219b3127c83807cb52daef96d059426d0e04b048b89776418da5df5e49bf9065e3165dc491ae2b92ce96e526643ceb361897ac3341965790ce80b255d2fbdbc626496553e937ebf4cd6b9b8aee5fe74e4937ab5edfd8e84eff3949d74bba45d296dc4971b3da2967408da5dfed92aeae728f7f80f59e2be9ee9c13f4e63ee9ef77c99e29145dfc1137c419aa7f1c7a8b2cd1a3e8e2b5baded9ebeebf54fd03ae3c6fcb14c1ec1172d1c51f7143cc96e9fdfb644fcc2aa7f40da3eec8de38ba46a681bcec27c37f64594377c81e02b53c8d2d65d4badb49858ec2a6665f07fc03daaad73f501b4cc4328c676019c8dbb03b863d63c91e41100441100441100441100441100441100441100441100441100441100441100441100c8fff01b72e04880584c0f80000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\x89504e470d0a1a0a0000000d4948445200000200000002000806000000f478d4fa00000006624b474400ff00ff00ffa0bda793000023a34944415478daeddd7da86767811ff06f8c373659cd84b26c5a1a77a565bb35ad354d84c47486ec0c580335a1c2d2ba925628cbfee1aed042c932eef42fdf7010b63069fea8615b41ac8810d604d6ad606a93cd0be8305949522badba4cbb0dd8252f1a8bd3ecf48ff33bde9b9bb973effd3de7fc9e73cef3f9c07027e39c9b731227cff7f7bc7ccf15172f5e0c00d09637d4be010060f304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a2400004083de58fb068043d94a724d9277ac7e7ee7aefffda5248f27f96e929793bc58fb868169120060fab692dc9ae48e24d726b9f780d79d5e7dfd6aba4070bef68300d371c5c58b176bdf0370693724f9500e37e8efa50f035f5ffdb850fbe180ba0400989ea349ee4a379dfff111beffe97421e0c9582280660900301d47927c34e30dfcbb9d4eb73cf048ed0707364f008069f8ddd5d74d0cfc3b9d4e17384ec7b20034450080bab6d20dfa9bfad4bf97d349cec446416886530050cf9124bf9df20d7e43e8ef41088046080050473ff8d7fcd4bf5b1f02ec0b80060800b0795b99dee0dfdb391b2104c0820900b059fd9aff14a6fdf7d2df9bf2205830ef0280cdba37d31efc77dee747d22d55000b64060036e777cbbfc546f541e5776adf08303c3300b019fd27e929aefbefe7bdb56f00189e1900d88ca96efadb4f3f0ba0361816460080f11d4df7429fa1f4ed7d8f2739bbfab557d2bd26f82dd97e815032cc7e034b01b04002008c6b2bdd6b7c871888fb81ffbe5cfad3f88bab1f9f58fdf5d1d5d7a1361dde10a70260315401c3b88e26797480ef733ac943491e3be4755be902c050af14360b000b6113208ceb8e01bec7e924a772f8c13fe95ef0f3896cbff0a7946381b01002008c6788c1f2d4ea47e99bfa3e91aee2b72404dc9be4b661fed100b50900309ed29dffa732ec6b7a1f49f94cc08974cb0ac0cc0900308ed241f27492cf65b8c1bff789c2ebefcdf6e64260c6040018c7ad29fbf4ff52c6db71ff50ca6601ee1ce9be800d1200601c259bff4ea73bea3796753613ee663320cc9c0000c3db4a59f1cf4b19bf75ef4cd69f05b837c9cd23df1f3032010086776bd63f737f3a5dc3dfd84a97172c03c0cc090030bc92e9ff97d2edd6df84af165e7fc386ee1318810000c39ad3daf8d9942d03fcedda0f00ac4f008061dd93f577ff9fcab89bff762bdd67706283f70a0c4c0080615d5770edb5d9fc2b772d0340a3040018cef194edfe7fa8c23d3f96b265808f54b867600002000ce7f694edfe7faac23d0fd134a81a186648008061940e822f65f8dadf833a5370ad6a609829010086717dcaaa7fbf51f1de9f8f6a60688e0000c3f850c1b5a75267fabf7721dd0c4489391d7f042200c010865803af35fddffb5cca3603bebdf2fd0387240040b9a3293bfbffb9da0f90f26ae0f7d77e00e070040028777bc1b5d767bcd7fe1e964e0068880000658ea4ececff83b51f6087d26ae09b6a3f007070020094b9396567ffcfd67e801d4a5b088f452700cc860000654ad6be5fcae6ab7ff753b20c706fba250d60060400585fe99af7e3b51fe0124aaa8113d5c0301b0200acef43597fc03b9d6eb09d1ad5c0d0080100d633e7eadffda80686060800b09e92b3ff49ddeadffda80686060800b09e92b3ffb5defc775017923c5af83d5403c3c4090070784752b6db7dcad3ffbd73510d0c8b2600c0e1bd23eb6ffe9b4af5ef7e5403c3c20900707877145e3f95eadffd7cbdf07ad5c0306102001c4e4b6bdb4f4635302c96000087734fcadefc775fed073804d5c0b06002001cce7505d75e9be955ffee4735302c940000077743ca06b4876a3fc01a5403c3420900707025d5bfa7927cbbf603ac6188e38a2ded9b80d91000e0608658cb9edbf47fafb41af8e6da0f00bc9e000007736b965bfdbb1fd5c0b04002001c4cc9d9ff539976f5ef7e2ea4ac13e0d5580680c91100607f5b29dfcd3ef5eadffd3c93f567014e26b9adf60300af2500c0fe8e66f9d5bffb296d2f3c51fb0180d71200607f25bdf6d7663ed5bffb510d0c0b2200c0e51d49f29382ebffb4f6030ca8b41a5827004c88000097774fbac16b1da7937cbef6030c6888638caa8161220400b8bceb0aae7d29f33dfbbf97d26ae0a3b51f00e80800b0b7d2eadfc76b3fc0084aab817502c0440800b0b7d2eadfc76a3fc0085403c34208007069cefeefed4cca3603aa0686091000e0d26e4dd9aef5259cfddf4be9b146cb00300102005c5a49f5ef9974fdf94ba61a18664e0080d72b1d9c9ecf72a7ff7ba5d5c0c76a3f00b44e0080d77b47d67ff3df9924f7d57e800d285d06b8bdf60340eb040078bd92e9ffe7b3bcb3ff7b79b0e0da2ba31a18aa1200e0b58ea46cf7ff0bb51f60839e8b6a60982d01005eeb63293bfbbfa4eadffda806861913006038d7a69de9ff9e6a6098290100b695ae493f54fb012a500d0c332500c0b69275e933499eaafd0015941e77d40900950800d0295d8b6ee1ecff5e4aaa814f26797bed0780160900d029a9fe3d9de41bb51fa0a2d24e80f7d77e00689100009d7f5c70edd559e69bff0ee3d1c2eb7502c0860900304cf56febcea5ac13e0a6da0f00ad1100a0abfe2d39fbdf42f5ef7e4a9701bc1b00364c0080b2e9ffebd3ded9ffbd94540327960160a304005a573afd5f3ae82d896a6098110180d6dd93b2ddff676b3fc084a8068619110068d95692eb0aaebf3aa6ff77530d0c332100d0b2eb937cbce0fa2fd57e8009520d0c332100d0b27b0bae3d9536ab7ff7a31a18664200a055a56bcdd7a7ddeadffda80686191000685549f56f5236cdbd74a59d0077d77e0068810040ab4acefe9f8ef6bffda806868913006851e91af3d531fdbf9f73493eb5e6b527a31a18462700d0a292eadf3349fe75ed079881f349ae2cb8fe587402c0a804005a5432fdff7c9cfd3fa89296c47bd36db404462200d09ad2e9ff176a3fc08c94540327aa8161540200adf958cadefcf7f9da0f3023a53325afc632008c460080c331fd7f3825d5c02793dc52fb0160a904005a527ab4ec1bb51f60864aab81df5ffb0160a904005a52f2cad93349be5dfb01664835304c9400402b4ad792edfe5fdf99947502a80686110800b4a2a4faf7544cff9728ed04b00c002310006845c9d9ffebd3ad65b3be926ae057a31a18062700d082d23564bdffe5cea5ec0d8137d57e00581a0180169454ff9e4a725fed075880d23704de1e9d003028018016944effdbfc378c926ae093498ed67e0058120180a52b9dfeff52ed075890d26ae03b6b3f002c8900c0d2dd93f5a7ff4fc7d9ff21a9068609110058b2ad24bf5270fdd531fd3f34d5c0301102004b767dcade2867fa7f788f65fd52a04427000c460060c94e165c7b2ac953b51f60812ea4ac144835300c440060a9b6d20d16ebba3ee53df65cda99947502a806860108002c5549f56f52b65b9dcb2bed04b8bbf603c01208002c55c9d9ff53d1fe37b6926ae02ba31a188a09002c51e91af10b31fd3fb673597f96a5e4b5cec08a00c0129556fffe41ed076840e932804e00282400b044a5d5bfa583130753da09a01a180a08002c4de9f4ff776a3f4043cea6ac13403530141000589a92eadf53493e5ffb011af2627402403502004b525afdebcd7f9b57ba0ca01300d62400b02447a3fa776e4aab817502c09a040096a4a4275ef56f1d17923c5ef83d2c03c01a040096a2f44898eadf7ace65fd598093498ed57e0098230180a52899fe2fe9a6a7dcf9946d06bcbdf603c01c09002c45e96b629dfdafebeb85d7ab06864312005882d23560bdfff53d93b26500d5c0704802004b5052fd7b26c97db51f80e26500d5c0704802004b5052fdfb7c9cfd9f8a070bae550d0c8724003077a5d3ffdfa8fd00fccc7329db8cf99eda0f00732200307725d5bf67927cbbf603f03343ccc4e8048003120098b3d2eadfc4f4ffd4a806860d11009833d5bfcba31a1836440060ce4acefe9f89eadf291aa21a5827001c8000c05c951ef97a3eaa7fa7ea5cca3a016eaafd003007020073555afdebecff7495b632aa068603100098ab5f2bbcdee6bf692b3d9e691900f62100304747d235bfadeb3bb51f807d3d93f53b015403c3010800cc51e9d9ffcfd77e00f6753e65214f3530ec4300608e9cfd6fc3570aae550d0cfb1000989b23297b698cb3fff3f15cca3a015403c3650800cccd27937c78cd6b9dfd9f97175316f612d5c0b02701803919624dd7d9ff79510d0c2311009893a359ffd37f62fa7f8e5403c3480400e6a4e4ecbfe9ff79520d0c231100988bad949ffd37fd3f4fe7a21a180627003017a5d5bf7f50fb0158db10d5c03a0160170180b928adfe2d1d44a8aba41af86492eb6b3f004c8d00c01c941ee552fd3b7fcfa46c33a06a60d84500600eee49d9d97fd5bff3573a83a31a1876110098831b0baf57fdbb0ca5d5c0b7d47e0098120180a92b7df39fb3ffcb515a0dfcfeda0f005322003075a56ffe73f67f394aab815f8d6a60f819018029db4af9f4bfb3ffcba21a180622003065a5d5bf0fd67e0006a71a180622003065a5d5bf8fd57e0006a71a180622003055a547b654ff2ed7b9a80686620200535532fdefecffb2a906860108004c5569f5afb3ffcba61a180a09004c91ea5ff6f364ca3603966c2e854510009822d5bfec6788191ecb00344d00608a54ff72105f2bb8563530cd1300989ad2e97f67ffdb7136aa81616d020053f3c9944dff3bfbdf0ed5c0504000604a4ad764af8cb3ffad29ad063e56fb01a01601802929adfe2d990e669e4aab816faffd00508b00c0949456ff3e5ffb01d838d5c0b0260180a950fdcbbace2539bde6b527b3feeba661d60400a642f52feb3a9f6e43dfba5e8d4e001a24003015aa7f29f195826b4fa60ba0d01401802950fd4ba9f329db0c7867ed07804d13009802d5bf943a1f9d007028020053a0fa972194b4409e4cf2f6da0f009b240050dbf1c2eb55ffd27b2eeb9f064892bb6b3f006c9200406d3766fde9fffba3fa976d43cc045906a0190200356da56cfaffd538fbcf6b9d29b85635304d1100a8a9b4fad7f43fbb3d1fd5c070200200359556ff9afe67b70b293b0d90a806a6110200b5a8fe652c67b2fe2c806a609a2100508bea5fc672bef07ad5c0344100a016d5bf8c493530ec4300a006d5bf8cedb9946d067c4fed0780b10900d4505afdfbef6a3f0093a71300f621005043c9d9ff2b63f31f07f3b5826b5503b37802009b565afdfbe5da0fc06c9c4dd932806a60164d0060d354ffb2292f462700ec490060934aab7f13d3ff1c4e6935f04db51f00c62200b049a567ff4dff7358aa81610f02009b547af6ff91da0fc0ec5c48f278e1f7b00cc02209006cca10d5bfb08e7329ab062e7961154c9600c0a6944cffdf1fd5bfacafb41a38510dcc0209006c4ac9f4ffab51fd4b99d26ae05b6a3f000c4d00601354ff525b6935b04e0016470060133e93b2e97fd5bf941aa2134035308b2200b0093f2db8f6d538fbcf301e2cb85635308b230030b6d2eadf92ff68c34edf8a6500f8190180b1a9fe652a2e443530fc8c00c098b6525ea56afa9f21a90686150180311d4df21b05d7974cd7c2a50c510dac13804510001853c9d9fffbd3fdc71a86545a0d7c32c9f5b51f028620003096d24f49cfc6f43fe33897b25900d5c02c8200c05854ff3255aa81210200e3297df39fea5fc6a41a98e609008ca1b431edd9da0fc0e2a906a67902006350fdcbd40d31c3a41a98591300184349f56f62f31f9bf1b5826b5503337b0200433b9ee4aa82ebbf5cfb0168c6d95806a061020043bb31eb97ffa8fe6593867843a06a60664b006048aa7f999bd26ae0bf5ffb01605d0200432aa9febd3fa6ffd9bcd26ae07746270033250030a4d2b3ff8fd47e009a334435f0d1da0f01eb100018ca10d5bf50c3b994cd02bca7f603c03a040086a2fa97b9520d4c93de58fb06588c0f165eaffa779afa81ed9a1dbff6965dbfe79777fcfcaa74ff2eafdef16bdfddf5fb5f5e7d7d65c7afd5defcf99574d3f9eb38b9bafec9cacf008722003084d246b4ff58fb011ab4956e50ef07f35fce767fc389248fa6dbe0f674928746be970facbede9cee6cfe8fd305823e48f401e2e574a1618cb0d05703af1b02ee8e00c0cc08000ce13329dbfdff54ed0758a8ad74efaeef07f77725b936c94b49be99e4ab97b9f6de0ddee7170ff17bfbff9ffd8d749bf77e98ed29fce7b37e38186206ea860cb39c001b21003004d5bff5f453f4bb07fa64ff417e8e1eb8ccfff61be982c17f4f17067e9c6ef6e0e51c6c80ff5aca97010400664300a0d4f1c2eb9dfd3f9c23e9a6ed3f94eed3fca3197f8a7e2ef60a07ff32c92fa45bcef841ba41fa52b305a52d94960198150180521f8ceadfb1ec9cc2bf7df56bbb3fd56f72aa7eae7eef12bfd68782c7d3cd149c8d65001a230050622b65d3ffcfc6f4ff4e5b496e4df273d99ec6ff78ed9b5aa8df2bff16af7332ddbb057ea7f6c3c141080094283dfbaffca79bd2bf39db9ff00df8f3f66aba2027d832790200254acffeb758fddb4feb7f68f5d78f27f97aed9b623027d3fd3b7db8f68dc07e0400d6a5faf7e0760ffa3ee52fdbed1100980101807595bef96fe9d5bffd7afe1dabbf36e8b7e578da9ce162460400d6a5faf7d26e884ffaadebbb041e8bbd004c9800c03a4aab7f9776f6bfdfc8f7fe240fc6c0cf7608b832c999381ac8045d71f1e2c5daf7c0fc7c3665d3ffff22f3ff64648a9f83ea3b07be92ee9d034b9dfd6266cc00b08e96ab7f8f24f9edd5cf0dfa1c44df397032dd0b87cea56b70fcb3da3746db04000eeb78b6df1ab78e394effeffcb4ff42963bf0dfb9ebaf7f9ae4fb49de96ae537ff7f9f63f4bf257575fdf9cee2543d7eef8faa3d5afff68f5fb92e4cf93fce56c9f2279dbeaef91247f33c94f56bff7302f089a937e69e09fadfed93c14cb0354620980c36a69fa7fe7c03ff741ffc4eaeb55499ed9f1eb2fafbebeb2fa3a857f3757acbebe61f5f517575fdf9a2e1cbc39977f29d09cdc91ee05464f26f9af49fc07998d3103c0610c71f67f0a03cc7e8e24b927c97599dfc07f62d75ff76fc37b25f3f8679f6c0f82afaebe7e6fd7d72b92fc877461a0ffffe45bd3bd33616ec1e01b3b7e7e47baf7123c9de4ffd5be3196cf0c0087713cebb7d6dd9f6efa7fca67a3e736f0ef1cece738d00fed8abc7ed6e07fd4bea935f441e0d9744b22300a33001cc652ab7f6f48f756bdef24b9aff6cdecc160bfbf8b79edac411f08de90e44de9da18df9ad77eea9ea2fefe040146250070504bacfedd39f07fa4f6cdecd20ff817d26d92bbd4fbebb9bc9d4b09afa40b05dfcff67ff77e31d30e048200a3b204c041954eff7f34d339ff7c3c5d5ffb0b99d627fe7ed0ff6e0cf89bd2cf12bc29dbaf609e6a20e8ef4f106010660038a892e9ffab328dc1ff48928f25f952a6b3c67f2cddeccad998d2afa15f367825c97f49d7dcf77349fe52ba66c7296d2afce6eaab20c020cc00701047927c26eb1fff3b91baebfffdc03f8535fe13d91ee4bf1d83fe94f5b3034792fc9d4c6f66a00f024e0db01601808398ebd9ffa90cfcfda7fc0be906fd29cc8670385724f96b493e9ced329fa97857ba20a9478043b104c0d8aecae607fffe38dfafa4eee6be63abafdf8fb6b7b9bb98e9fe3bdcb934f0bf93fccfda37c43c0800ece778e1f55fd8e0bd6e25f9cdd41df8770efa36f22dcfe3b56fe032be99e4c6247f25f60770009600d8cf5ca6ff8fa7dbb45563e03fb6e3e74f6de879a9e3864c731960b71b935c13fb03b80c33005cce1caa7ffbe9fe64f3837f3ff05bd76fc7f96c970d4d59dfbb6159803d9901e072a65efd7b34c9afa7fb44b64906feb6bd23c99fd4be8943e867039ecbf64b9fc00c009735d5eadf23493e99ee53ce2607ff7ee037cddfb667d22d8b4da923e072fad98077a63bcdf074ed1b621a0400f6523afdffe591eee937d37da231f053cb5f64fba543eb7a4b929b573fdf54bfc0d349de9be41fae7e3ed5530d6c882500f65232fdff40927f9561a7c78fa71bf837799eff58ece6e7d2ae4ef28124bfbfe6f537a45b977f4392bf97ae7d709345437725f961922737f8f764624a532ccb5532fdffd30c3bf8ff56363bf81f4bf79298a7d27d4a32f8b35be911bb7fb0fafa1749be95ae86f86de95efcb3090f25f9f924ff245d18a1419600b8942385d70f35fdbf73ad7f13837fdfd867aa9f8328fdf4fcc6bcf688de0f563fde96e49732fe8cc043abaf77a50b0166031a6309804b99c2d9ffe3497e2d9b59ebef07fec706b86fda31d432c05edffb17b299209024ef5efdbdbe1a275b9a610680a19556fff61bfd92f1077f9ff82931c432c0bfbfccf7fe4192ff93ed97fe7cf320df744d4facbede95e4c7a9fbf22e36440060b79ad5bffd94bf819fb9f84f85d75f9dcb07891fa5db23f0e6744160cc109074cb027725795f923f8a3f1f8b660980dd6a4dff6f62cadf543f437b63927f9af59701de956e803fa837a77bd7c5d84120e99637fe388e0b2e965300ec54a3fa772bc9bfcdb867fb8fad7e7c3bddd4a6c19fa194f6ecffdd74e53c07d5cf08dc98eda581b17c31c94d496e1bf9ef43256600d869d367ff3731e5df7feab7a6c958ae4e59c5ee5f4ff2bd35ae7b73bae3aad764dc198177a73b32f8f0887f0f2a3003c04e9b3cfb7f3ce30efefda7fea762f0675cff37c93f2fb8fe57d7bcee47e9fafdbf937167039e48571af4e994cf1232213601d22bfd837dd5217eef6fadbe8e39f87b510f9b7231c377021cc6ce6581b16603fa53028f263917fb0216c11200bd4d4cff6f25f93719afd8c7263f6a19b313e030fa6581674bbfd165bc7bf55571d0cc9901a057fae6bffd06ff3177f99f4837e0fbd44f2d6376021c46bf2cf0b7d215fbfcd108cffa44ba10705b848059b30780a4bcfa77bfb3fffd8b7cc618fcfb37f53d16833f750dd1093094ef24f96fe9cef48fa15f12b82df605cc9625009271cffef7ebfd634df9fbd4cf54947602dc98eed3fb90ae48f7fadf64bbfb7f68774569d02c9901600897fa83df9fef1f63bdff44b677f81bfc998ad24e80db72b84e8083b898eef8de33196f36e0a124b7c45b05674700a0b4faf7526ffedb4a3733f0e1acbfb1702f27565f6df4638afe73d63f12f8fbe9de043886ef25f9c3746bf763048127d2050021604604003e98f5a7ff1f483710efd40ffeeb7ecfbd9c58fd381be7fa99ae750a7d76fad511efedd5749bf67e98714340e9870a36440068db109b77767e0a3f92ee98dfd0837fbfd1ef9198f267fafea4f0fab14f673d996e49e0dda5dfe8129e487722427df00cd804d8b621cffe1f49f2998cf3c9ff6c0cfcccc7543a01f673245db8fe61b677f50f4557c00c980168db5067ff8fc7e00fbd213a0136e1c56cf7fb0f3d1bd0070a7b02264c006857e9f47f7ff6bf5fef1b72f03f966ef077b69fb99a5227c07e9e4c57ed3bf4be807e4f809e8089b204d0ae92e9ff24b92ec9cd29db447829fd2e7f1bfd98b3297602ece74892b7af7e3ee492c0bb63296092cc00b4ab74faff857401c2e00faf374427c0a6bd98ed817ae825014b01132400b4a9b4fa770c8ef8b134735a06d869e810d02f05303102409bc6d8b057e258acf7b33cff2b65a5401fa878effdbe80216702f4034c8c00404d7db9cf53d1eac7f25cccf43b012ee77c860b017d3f800d81132200b4672a297ce77abfc19fa57a3665b300d757beffa143c02d959f871d0480f60cbd6b7f1d36fbd18ab974025ccef924df4a1702860802660126420068cb14fee019fc69cd5c3703ee7421c31ce57b22f56735581100da7234753ffd1bfc69d1f399e61b02d7d1cf0494702260220480b6949efd2fe1981fad9a6327c05e2e64983d0153988d6c9e00d08e9a7fe0fa4ffe8ef9d1aa252c03f4ce175e6f196022048076d49afef7c91fca3b017ebdf603ec52ba1460196002048076d498fef7363fe8947602bc29c995b51f62870b99d6ac046b1000da50a3fad7e00faf55d209707fa67786fe6cca6601ec03a84c0068c3a6ab7f0dfef07aa59d00ffa8f603ec52f2e7fb8924d7d47e80d609000ccd863fd85be966c029bec86b5d6fa97d03ad1300966f93d5bf36fcc1e5fd79d65f063899eec55953527a22808a0480e5db54f5af4ffeb0bfd26580db6b3f00cb21002cdba636d968f883832b5d0698d211ba976bdf00eb1300966d1367ff0dfe7038259d0027937cb8f6030c644a41a64902c0b28d7df6dfe00f87777180ef3195237436f2cd9800b05c9bfa0f84c11f0eef8b299b05985a27003324002cd7fd1977faff4492c76a3f24cc54e966c0bb6b3fc08a69fc19130058473ff85fa87d2330634f165e3f85c1b724883842589900b04c634efff767fd0dfe50e6fbb119908a0480651a6bfadf597f18ce4f925c51f83d6a6e062c9981f85492e72bde3b110038383bfe6178257f9e6a6f06fcf0ea1ed66516b132016079c6acfe35f8c3b0fe34c9c70baebf3b7566014af71f3c5de19ed94500589e31aa7fedf88771bc9ab2ff0e9f4cf2de0af75dfae9ff8f2bdc33bb0800cb32c627013bfe615ca7d3ad89afebf66cf644c0fb0aafb7fe3f1102c0b20c5dfddbaffb1bfc613ca59b6afb13019b7855f06de90247c9a7ffa7e3bf2993f0c6da37c0a0c6a8feb5ee0fe3fbf4eaebba036b7fddfd19ef7cfdf124ef29b8c7a4fbf46ffa7f22cc002cc7d0d3ffd6fd617386385adbcf048cb11c705bca07ff9e02a0893003b01c434eff5bf787cdbb7ff5b56490edaf7d3cc9c303dcd3912477267967e17d25dda7ffcf0e704f0c4400588ea1a6ffadfb431d437d323e996eb0bd3dc957927c2b87fff37c24c9b194aff7eff6bd01bf1785048065187af38f757fa8638859809dd7f761e0f124e7d2edbebf5418d84a724d92b767bbdf7fc881ff533b9e8d89b8e2e2c5215e4d4d659fcd30d3ffa6fea1bef765f84fdebdcb1d371ce3efd7ff3d875a9260406600e899fa876978385d0018c35883fc419e8989710a60fe86acfe35f50fd3707fcaca81a6e253d93ee2c8c40800f33744f5af237f302de7d36de09b7308f8d4ea19bc3d74a20480791be2ecbfa97f98a627d3ad9dcf3104f483ff93b56f84bd0900f336d4d97f53ff304d0f677e21a0dff467f09f380160de4acffe3f1053ff3075730a01fd277f9bfe66c02980763d90e40b31f50f73f070921faf7e5e6b27ff7e4cfbcf8c00d03653ff301f8f24f9ee8ebf9e4a10e867263e1d1bfe66c512409b1e48f7d210605ece27f968a6b324d0dfc34763f09f1d3300ed32f50ff3f570ba6adfdea66703fa817fccd70f333255c0f3b695ee0fe0614e02f49ffe05005886db324e7fffa5f403bfb5fe053003306ffd20fe400e16026cfc83e57972f5e3861dbf36741030f02f90198065e8dfb17db910d00ffe36fec1b26d25b925c9cf67fb9d02eb04827ed0efdf2468aa7f610480e5389e4bd7023fb0fa6af08736ddb0faf14b49deb9cfef7d3cc90fd30df67bbd3a9885100096652b5d3b60d285812fac7e6ee00776ebabc40df28d120000a0417a0000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041020000344800008006090000d0200100001a240000408304000068900000000d120000a041ff1f03022587787b05400000000049454e44ae426082",
  "install": {},
  "ipmRepo": "https://ipme.integromat.com",
  "ipmTags": [
    "staging"
  ],
  "version": 1,
  "website": null,
  "_modules": {
    "getBot": {
      "id": 22057,
      "api": {
        "url": "/v2/repository/files/{{parameters.botId}}/content",
        "method": "GET",
        "response": {
          "output": {
            "variables": "{{get(parseJSON(body), 'variables')}}"
          }
        }
      },
      "rev": 7,
      "crud": "read",
      "name": "getBot",
      "epoch": null,
      "flags": {},
      "label": "Get a Bot",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "botId",
          "type": "select",
          "label": "Bot ID",
          "options": "rpc://app%23automation-anywhere@1/getBots",
          "required": true
        }
      ],
      "public": false,
      "typeId": 4,
      "appName": "automation-anywhere",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/v2/repository/files/{{parameters.botId}}/content\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"variables\": \"{{get(parseJSON(body), 'variables')}}\"\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "variables",
          "spec": {
            "spec": [
              {
                "name": "key",
                "type": "text",
                "label": "Key"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              },
              {
                "name": "description",
                "type": "text",
                "label": "Description"
              },
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              },
              {
                "name": "subtype",
                "type": "text",
                "label": "Subtype"
              },
              {
                "name": "readOnly",
                "type": "boolean",
                "label": "Read Only"
              },
              {
                "name": "input",
                "type": "boolean",
                "label": "Input"
              },
              {
                "name": "output",
                "type": "boolean",
                "label": "Output"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Variables"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "automation-anywhere2",
      "description": "Retrieves an existing bot.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"botId\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://getBots\",\n\t\t\"mode\": \"edit\",\n\t\t\"label\": \"Bot ID\",\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"variables\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n\t\t\t\t{\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"label\": \"Key\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"label\": \"Name\"\n                },\n                {\n                    \"name\": \"description\",\n                    \"type\": \"text\",\n                    \"label\": \"Description\"\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"text\",\n                    \"label\": \"Type\"\n                },\n                {\n                    \"name\": \"subtype\",\n                    \"type\": \"text\",\n                    \"label\": \"Subtype\"\n                },\n                {\n                    \"name\": \"readOnly\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Read Only\"\n                },\n                {\n                    \"name\": \"input\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Input\"\n                },\n                {\n                    \"name\": \"output\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Output\"\n                }\n            ]\n        },\n        \"label\": \"Variables\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listBots": {
      "id": 22058,
      "api": {
        "url": "/v2/repository/workspaces/public/files/list",
        "body": {
          "page": {
            "length": 100,
            "offset": 0
          },
          "sort": "{{parameters.sort}}",
          "filter": {
            "field": "{{parameters.field}}",
            "value": "{{parameters.value}}",
            "operator": "{{parameters.filter}}"
          }
        },
        "method": "POST",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseDates(item, 'lastModified')}}",
          "iterate": "{{body.list}}"
        },
        "pagination": {
          "body": {
            "page": {
              "length": 100,
              "offset": "{{(pagination.page - 1) * 100}}"
            },
            "sort": "{{parameters.sort}}",
            "filter": {
              "field": "{{parameters.field}}",
              "value": "{{parameters.value}}",
              "operator": "{{parameters.filter}}"
            }
          },
          "condition": "{{body.page.totalFilter > (pagination.page - 1) * 100}}"
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "listBots",
      "epoch": null,
      "flags": {},
      "label": "List Bots",
      "scope": [],
      "expect": [
        {
          "name": "field",
          "type": "text",
          "label": "Field"
        },
        {
          "name": "filter",
          "type": "select",
          "label": "Filter",
          "options": [
            {
              "label": "Less than",
              "value": "lt"
            },
            {
              "label": "Less Than or Equal",
              "value": "le"
            },
            {
              "label": "Equals",
              "value": "eq"
            },
            {
              "label": "Not Equals",
              "value": "ne"
            },
            {
              "label": "Greater Than or Equal",
              "value": "ge"
            },
            {
              "label": "Greater Than",
              "value": "gt"
            }
          ]
        },
        {
          "name": "value",
          "type": "text",
          "label": "Value"
        },
        {
          "name": "sort",
          "spec": [
            {
              "name": "field",
              "type": "text",
              "label": "Field"
            },
            {
              "name": "direction",
              "type": "select",
              "label": "Direction",
              "options": [
                {
                  "label": "Descending",
                  "value": "desc"
                },
                {
                  "label": "Ascending",
                  "value": "asc"
                }
              ]
            }
          ],
          "type": "array",
          "label": "Sort"
        },
        {
          "help": "Number of bots to return.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": false,
      "typeId": 9,
      "appName": "automation-anywhere",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/v2/repository/workspaces/public/files/list\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t//\"fields\": \"{{parameters.fields}}\",\n\t\t\"filter\": {\n\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t},\n\t\t\"sort\": \"{{parameters.sort}}\",\n\t\t\"page\": {\n\t\t\t\"offset\": 0,\n\t\t\t\"length\": 100\n\t\t}\n\t},\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.limit}}\",\n\t\t\"output\": \"{{parseDates(item, 'lastModified')}}\",\n\t\t\"iterate\": \"{{body.list}}\"\n\t},\n\t\"pagination\": {\n\t\t\"condition\": \"{{body.page.totalFilter > (pagination.page - 1) * 100}}\",\n\t\t\"body\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t\t},\n\t\t\t\"sort\": \"{{parameters.sort}}\",\n\t\t\t\"page\": {\n\t\t\t\t\"offset\": \"{{(pagination.page - 1) * 100}}\",\n\t\t\t\t\"length\": 100\n\t\t\t}\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "Bot ID"
        },
        {
          "name": "parentId",
          "type": "uinteger",
          "label": "Parent ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "path",
          "type": "text",
          "label": "Path"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "type",
          "type": "text",
          "label": "Type"
        },
        {
          "name": "size",
          "type": "text",
          "label": "Size"
        },
        {
          "name": "folder",
          "type": "boolean",
          "label": "Folder"
        },
        {
          "name": "folderCount",
          "type": "text",
          "label": "Folder Count"
        },
        {
          "name": "productionVersion",
          "type": "text",
          "label": "Production Version"
        },
        {
          "name": "latestVersion",
          "type": "text",
          "label": "Latest Version"
        },
        {
          "name": "locked",
          "type": "boolean",
          "label": "Locked"
        },
        {
          "name": "lockedBy",
          "type": "text",
          "label": "Locked by"
        },
        {
          "name": "createdBy",
          "type": "text",
          "label": "Created by"
        },
        {
          "name": "lastModifiedBy",
          "type": "text",
          "label": "Last Modified by"
        },
        {
          "name": "lastModified",
          "type": "date",
          "label": "Last Modified"
        },
        {
          "name": "permission",
          "spec": [
            {
              "name": "delete",
              "type": "boolean",
              "label": "Delete"
            },
            {
              "name": "download",
              "type": "boolean",
              "label": "Download"
            },
            {
              "name": "upload",
              "type": "boolean",
              "label": "Upload"
            },
            {
              "name": "run",
              "type": "boolean",
              "label": "Run"
            },
            {
              "name": "publishBotstore",
              "type": "boolean",
              "label": "Publish Botstore"
            },
            {
              "name": "viewContent",
              "type": "boolean",
              "label": "View Content"
            },
            {
              "name": "clone",
              "type": "boolean",
              "label": "Clone"
            },
            {
              "name": "editContent",
              "type": "boolean",
              "label": "Edit Content"
            },
            {
              "name": "createFolder",
              "type": "boolean",
              "label": "Create Folder"
            },
            {
              "name": "move",
              "type": "boolean",
              "label": "Move"
            },
            {
              "name": "cancelCheckout",
              "type": "boolean",
              "label": "Cancel Checkout"
            },
            {
              "name": "revertCheckout",
              "type": "boolean",
              "label": "Revert Checkout"
            },
            {
              "name": "viewHistory",
              "type": "boolean",
              "label": "View History"
            },
            {
              "name": "labelBots",
              "type": "boolean",
              "label": "Label Bots"
            }
          ],
          "type": "collection",
          "label": "Permission"
        },
        {
          "name": "workspaceId",
          "type": "uinteger",
          "label": "Workspace ID"
        },
        {
          "name": "botStatus",
          "type": "text",
          "label": "Bot Status"
        },
        {
          "name": "hasErrors",
          "type": "boolean",
          "label": "Has Errors"
        },
        {
          "name": "workspaceType",
          "type": "text",
          "label": "Workspace Type"
        },
        {
          "name": "metadata",
          "type": "boolean",
          "label": "Metadata"
        },
        {
          "name": "uri",
          "type": "text",
          "label": "URI"
        },
        {
          "name": "version",
          "type": "text",
          "label": "Version"
        },
        {
          "name": "hasTriggers",
          "type": "boolean",
          "label": "Has Triggers"
        },
        {
          "name": "isEdited",
          "type": "boolean",
          "label": "Is Edited"
        },
        {
          "name": "versionNumber",
          "type": "text",
          "label": "Version Number"
        },
        {
          "name": "botVersionLabel",
          "type": "text",
          "label": "Bot Version Label"
        },
        {
          "name": "originalVersion",
          "type": "text",
          "label": "Original Version"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "automation-anywhere2",
      "description": "Lists bots.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"field\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Field\"\n\t},\n\t{\n\t\t\"name\": \"filter\",\n\t\t\"type\": \"select\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Less than\",\n\t\t\t\t\"value\": \"lt\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Less Than or Equal\",\n\t\t\t\t\"value\": \"le\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Equals\",\n\t\t\t\t\"value\": \"eq\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Not Equals\",\n\t\t\t\t\"value\": \"ne\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than or Equal\",\n\t\t\t\t\"value\": \"ge\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than\",\n\t\t\t\t\"value\": \"gt\"\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Filter\"\n\t},\n\t{\n\t\t\"name\": \"value\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Value\"\n\t},\n\t//{\n\t//\t\"name\": \"fields\",\n\t//\t\"type\": \"array\",\n\t//\t\"label\": \"Fields\"\n\t//},\n\t{\n\t\t\"name\": \"sort\",\n\t\t\"type\": \"array\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"field\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Field\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"direction\",\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"options\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": \"Descending\",\n\t\t\t\t\t\t\"value\": \"desc\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": \"Ascending\",\n\t\t\t\t\t\t\"value\": \"asc\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"label\": \"Direction\"\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Sort\"\n\t},\n\t{\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"help\": \"Number of bots to return.\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"uinteger\",\n        \"label\": \"Bot ID\"\n    },\n    {\n        \"name\": \"parentId\",\n        \"type\": \"uinteger\",\n        \"label\": \"Parent ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"path\",\n        \"type\": \"text\",\n        \"label\": \"Path\"\n    },\n    {\n        \"name\": \"description\",\n        \"type\": \"text\",\n        \"label\": \"Description\"\n    },\n    {\n        \"name\": \"type\",\n        \"type\": \"text\",\n        \"label\": \"Type\"\n    },\n    {\n        \"name\": \"size\",\n        \"type\": \"text\",\n        \"label\": \"Size\"\n    },\n    {\n        \"name\": \"folder\",\n        \"type\": \"boolean\",\n        \"label\": \"Folder\"\n    },\n    {\n        \"name\": \"folderCount\",\n        \"type\": \"text\",\n        \"label\": \"Folder Count\"\n    },\n    {\n        \"name\": \"productionVersion\",\n        \"type\": \"text\",\n        \"label\": \"Production Version\"\n    },\n    {\n        \"name\": \"latestVersion\",\n        \"type\": \"text\",\n        \"label\": \"Latest Version\"\n    },\n    {\n        \"name\": \"locked\",\n        \"type\": \"boolean\",\n        \"label\": \"Locked\"\n    },\n    {\n        \"name\": \"lockedBy\",\n        \"type\": \"text\",\n        \"label\": \"Locked by\"\n    },\n    {\n        \"name\": \"createdBy\",\n        \"type\": \"text\",\n        \"label\": \"Created by\"\n    },\n    {\n        \"name\": \"lastModifiedBy\",\n        \"type\": \"text\",\n        \"label\": \"Last Modified by\"\n    },\n    {\n        \"name\": \"lastModified\",\n        \"type\": \"date\",\n        \"label\": \"Last Modified\"\n    },\n    {\n        \"name\": \"permission\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"delete\",\n                \"type\": \"boolean\",\n                \"label\": \"Delete\"\n            },\n            {\n                \"name\": \"download\",\n                \"type\": \"boolean\",\n                \"label\": \"Download\"\n            },\n            {\n                \"name\": \"upload\",\n                \"type\": \"boolean\",\n                \"label\": \"Upload\"\n            },\n            {\n                \"name\": \"run\",\n                \"type\": \"boolean\",\n                \"label\": \"Run\"\n            },\n            {\n                \"name\": \"publishBotstore\",\n                \"type\": \"boolean\",\n                \"label\": \"Publish Botstore\"\n            },\n            {\n                \"name\": \"viewContent\",\n                \"type\": \"boolean\",\n                \"label\": \"View Content\"\n            },\n            {\n                \"name\": \"clone\",\n                \"type\": \"boolean\",\n                \"label\": \"Clone\"\n            },\n            {\n                \"name\": \"editContent\",\n                \"type\": \"boolean\",\n                \"label\": \"Edit Content\"\n            },\n            {\n                \"name\": \"createFolder\",\n                \"type\": \"boolean\",\n                \"label\": \"Create Folder\"\n            },\n            {\n                \"name\": \"move\",\n                \"type\": \"boolean\",\n                \"label\": \"Move\"\n            },\n            {\n                \"name\": \"cancelCheckout\",\n                \"type\": \"boolean\",\n                \"label\": \"Cancel Checkout\"\n            },\n            {\n                \"name\": \"revertCheckout\",\n                \"type\": \"boolean\",\n                \"label\": \"Revert Checkout\"\n            },\n            {\n                \"name\": \"viewHistory\",\n                \"type\": \"boolean\",\n                \"label\": \"View History\"\n            },\n            {\n                \"name\": \"labelBots\",\n                \"type\": \"boolean\",\n                \"label\": \"Label Bots\"\n            }\n        ],\n        \"label\": \"Permission\"\n    },\n    {\n        \"name\": \"workspaceId\",\n        \"type\": \"uinteger\",\n        \"label\": \"Workspace ID\"\n    },\n    {\n        \"name\": \"botStatus\",\n        \"type\": \"text\",\n        \"label\": \"Bot Status\"\n    },\n    {\n        \"name\": \"hasErrors\",\n        \"type\": \"boolean\",\n        \"label\": \"Has Errors\"\n    },\n    {\n        \"name\": \"workspaceType\",\n        \"type\": \"text\",\n        \"label\": \"Workspace Type\"\n    },\n    {\n        \"name\": \"metadata\",\n        \"type\": \"boolean\",\n        \"label\": \"Metadata\"\n    },\n    {\n        \"name\": \"uri\",\n        \"type\": \"text\",\n        \"label\": \"URI\"\n    },\n    {\n        \"name\": \"version\",\n        \"type\": \"text\",\n        \"label\": \"Version\"\n    },\n    {\n        \"name\": \"hasTriggers\",\n        \"type\": \"boolean\",\n        \"label\": \"Has Triggers\"\n    },\n    {\n        \"name\": \"isEdited\",\n        \"type\": \"boolean\",\n        \"label\": \"Is Edited\"\n    },\n    {\n        \"name\": \"versionNumber\",\n        \"type\": \"text\",\n        \"label\": \"Version Number\"\n    },\n    {\n        \"name\": \"botVersionLabel\",\n        \"type\": \"text\",\n        \"label\": \"Bot Version Label\"\n    },\n    {\n        \"name\": \"originalVersion\",\n        \"type\": \"text\",\n        \"label\": \"Original Version\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deployBot": {
      "id": 22059,
      "api": [
        {
          "url": "/v3/automations/deploy",
          "body": {
            "fileId": "{{parameters.fileId}}",
            "poolIds": "{{parameters.poolIds}}",
            "botInput": "{{formatInput(parameters.botInput)}}",
            "runAsUserIds": "{{parameters.runAsUserIds || split(connection.id, '')}}"
          },
          "method": "POST",
          "response": {
            "temp": {
              "deploymentId": "{{body.deploymentId}}"
            },
            "error": {
              "400": {
                "message": "[{{statusCode}}] Selected runners must have a default device connected or a device pool must be selected in advanced settings."
              }
            },
            "output": null
          },
          "condition": "{{!parameters.deploymentType || parameters.deploymentType === 'v3'}}"
        },
        {
          "url": "/v4/automations/deploy",
          "body": {
            "botId": "{{parameters.fileId}}",
            "botInput": "{{formatInput(parameters.botInput)}}",
            "{{parameters.deploymentType}}": "{{temp[parameters.deploymentType]}}"
          },
          "temp": {
            "attendedRequest": {
              "queueDeployment": "{{parameters.queueDeployment}}",
              "deploymentDeviceId": "{{parameters.deploymentDeviceId}}",
              "launchInChildWindow": "{{parameters.launchInChildWindow}}"
            },
            "headlessRequest": {
              "sharedRunAsUserId": "{{parameters.sharedRunAsUserId}}",
              "numberOfExecutions": "{{parameters.numberOfExecutions}}",
              "queueOnSlotsExhaustion": "{{parameters.queueOnSlotsExhaustion}}"
            },
            "unattendedRequest": {
              "poolIds": "{{parameters.poolIds}}",
              "runAsUserIds": "{{parameters.runAsUserIds}}",
              "deviceUsageType": "{{parameters.deviceUsageType}}",
              "numOfRunAsUsersToUse": "{{parameters.numOfRunAsUsersToUse}}"
            }
          },
          "method": "POST",
          "response": {
            "temp": {
              "deploymentId": "{{body.deploymentId}}"
            },
            "error": {
              "400": {
                "message": "[{{statusCode}}] Selected runners must have a default device connected or a device pool must be selected in advanced settings."
              }
            },
            "output": null
          },
          "condition": "{{parameters.deploymentType && parameters.deploymentType !== 'v3'}}"
        },
        {
          "url": "/v3/activity/list",
          "body": {
            "filter": {
              "field": "deploymentId",
              "value": "{{temp.deploymentId}}",
              "operator": "eq"
            }
          },
          "temp": {
            "statusMap": {
              "QUEUED": "running",
              "UPDATE": "running",
              "RUNNING": "running",
              "UNKNOWN": "fail",
              "DEPLOYED": "running",
              "COMPLETED": "success",
              "RUN_FAILED": "fail",
              "RUN_PAUSED": "running",
              "DEPLOY_FAILED": "fail",
              "RUN_TIMED_OUT": "fail",
              "PENDING_EXECUTION": "running"
            }
          },
          "method": "POST",
          "repeat": {
            "delay": 2000,
            "condition": "{{if(parameters.actionType === 1, false, length(body.list) === 0 || temp.statusMap[body.list[].status] === 'running')}}"
          },
          "response": {
            "temp": {
              "executionId": "{{body.list[].id}}"
            },
            "error": {
              "message": "[{{statusCode}}] {{body.message || body.list[].message || body.list[].status || 'Something wrong. Please try again.'}}"
            },
            "valid": "{{temp.statusMap[body.list[].status] !== 'fail'}}",
            "output": null
          }
        },
        {
          "url": "/v3/activity/execution/{{temp.executionId}}",
          "method": "GET",
          "response": {
            "output": {
              "status": "{{body.status}}",
              "deploymentId": "{{temp.deploymentId}}",
              "botOutVariables": "{{formatVariables(body.botOutVariables.values)}}"
            }
          }
        }
      ],
      "rev": 19,
      "crud": null,
      "name": "deployBot",
      "epoch": null,
      "flags": {},
      "label": "Trigger a Bot",
      "scope": [],
      "expect": [
        {
          "name": "actionType",
          "type": "select",
          "label": "Type of Action",
          "options": [
            {
              "label": "Trigger the Bot",
              "value": 1
            },
            {
              "label": "Trigger and Wait for Bot Result",
              "value": 0
            }
          ],
          "mappable": false,
          "required": true
        },
        {
          "name": "workspace",
          "type": "select",
          "label": "Workspace",
          "default": "public",
          "options": {
            "store": [
              {
                "label": "Public",
                "value": "public"
              },
              {
                "label": "Private",
                "value": "private"
              }
            ],
            "nested": [
              {
                "help": "Select a bot that you want to trigger from Automation Anywhere. You can also link other modules or enter manual inputs via \"map\" toggle. [Learn more about map](kb://functions/array-functions#map-complex-array--key--key-for-filtering---possible-values-for-filtering-separated-by-a-comma--).",
                "name": "fileId",
                "type": "select",
                "label": "Bots",
                "options": {
                  "store": "rpc://app%23automation-anywhere@1/getBots",
                  "nested": [
                    "rpc://app%23automation-anywhere@1/getBotInputs"
                  ]
                },
                "required": true
              }
            ]
          },
          "mappable": false,
          "required": true
        },
        {
          "name": "deploymentType",
          "type": "select",
          "label": "Deployment Type",
          "default": "v3",
          "options": {
            "store": [
              {
                "label": "Legacy (API V3)",
                "value": "v3",
                "nested": [
                  {
                    "help": "Make sure that a selected bot runner has a connected default device or a device pool is selected in the advanced settings.",
                    "name": "runAsUserIds",
                    "type": "select",
                    "label": "Bot Runners",
                    "options": "rpc://app%23automation-anywhere@1/getBotRunners",
                    "multiple": true
                  },
                  {
                    "name": "poolIds",
                    "type": "select",
                    "label": "Device Pools",
                    "options": "rpc://app%23automation-anywhere@1/getPools",
                    "advanced": true,
                    "multiple": true
                  }
                ]
              },
              {
                "label": "Attended (API V4)",
                "value": "attendedRequest",
                "nested": [
                  {
                    "name": "deploymentDeviceId",
                    "type": "select",
                    "label": "Deployment Device",
                    "options": "rpc://app%23automation-anywhere@1/getBotRunners"
                  },
                  {
                    "name": "queueDeployment",
                    "type": "boolean",
                    "label": "Queue Deployment",
                    "default": false,
                    "required": true
                  },
                  {
                    "name": "launchInChildWindow",
                    "type": "boolean",
                    "label": "Launch in Child Window",
                    "default": false,
                    "required": true
                  }
                ]
              },
              {
                "label": "Unattended (API V4)",
                "value": "unattendedRequest",
                "nested": [
                  {
                    "help": "Make sure that a selected bot runner has a connected default device or a device pool is selected in the advanced settings.",
                    "name": "runAsUserIds",
                    "type": "select",
                    "label": "Bot Runners",
                    "options": "rpc://app%23automation-anywhere@1/getBotRunners",
                    "multiple": true,
                    "required": true
                  },
                  {
                    "name": "deviceUsageType",
                    "type": "select",
                    "label": "Device Usage Type",
                    "options": [
                      {
                        "label": "Prefer default device",
                        "value": "PREFER_DEFAULT_DEVICE"
                      },
                      {
                        "label": "Run on pool devices",
                        "value": "RUN_ON_POOL_DEVICES"
                      },
                      {
                        "label": "Prefer only on default device",
                        "value": "RUN_ONLY_ON_DEFAULT_DEVICE"
                      }
                    ],
                    "required": true
                  },
                  {
                    "name": "numOfRunAsUsersToUse",
                    "type": "uinteger",
                    "label": "Number of Bot Runner to Use",
                    "advanced": true
                  },
                  {
                    "name": "poolIds",
                    "type": "select",
                    "label": "Device Pools",
                    "options": "rpc://app%23automation-anywhere@1/getPools",
                    "advanced": true,
                    "multiple": true
                  }
                ]
              },
              {
                "label": "Headless (API V4)",
                "value": "headlessRequest",
                "nested": [
                  {
                    "name": "sharedRunAsUserId",
                    "type": "select",
                    "label": "Shared Bot Runner",
                    "options": "rpc://app%23automation-anywhere@1/getBotRunners"
                  },
                  {
                    "help": "Number of executions to run for a given Headless request.",
                    "name": "numberOfExecutions",
                    "type": "uinteger",
                    "label": "Number of Executions"
                  },
                  {
                    "name": "queueOnSlotsExhaustion",
                    "type": "boolean",
                    "label": "Queue on Slots Exhaustion",
                    "default": false,
                    "required": true
                  }
                ]
              }
            ]
          },
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "automation-anywhere",
      "samples": null,
      "apiJsonc": "[\n\t{\n\t\t\"condition\": \"{{!parameters.deploymentType || parameters.deploymentType === 'v3'}}\",\n\t\t\"url\": \"/v3/automations/deploy\",\n\t\t\"method\": \"POST\",\n\t\t\"body\": {\n\t\t\t\"fileId\": \"{{parameters.fileId}}\",\n\t\t\t\"runAsUserIds\": \"{{parameters.runAsUserIds || split(connection.id, '')}}\",\n\t\t\t\"poolIds\": \"{{parameters.poolIds}}\",\n\t\t\t\"botInput\": \"{{formatInput(parameters.botInput)}}\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"error\": {\n\t\t\t\t\"400\": {\n\t\t\t\t\t\"message\": \"[{{statusCode}}] Selected runners must have a default device connected or a device pool must be selected in advanced settings.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"output\": null,\n\t\t\t\"temp\": {\n\t\t\t\t\"deploymentId\": \"{{body.deploymentId}}\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t\"temp\": {\n\t\t\t\"attendedRequest\": {\n\t\t\t\t\"deploymentDeviceId\": \"{{parameters.deploymentDeviceId}}\",\n\t\t\t\t\"queueDeployment\": \"{{parameters.queueDeployment}}\",\n\t\t\t\t\"launchInChildWindow\": \"{{parameters.launchInChildWindow}}\"\n\t\t\t},\n\t\t\t\"unattendedRequest\": {\n\t\t\t\t\"runAsUserIds\": \"{{parameters.runAsUserIds}}\",\n\t\t\t\t\"deviceUsageType\": \"{{parameters.deviceUsageType}}\",\n\t\t\t\t\"numOfRunAsUsersToUse\": \"{{parameters.numOfRunAsUsersToUse}}\",\n\t\t\t\t\"poolIds\": \"{{parameters.poolIds}}\"\n\t\t\t},\n\t\t\t\"headlessRequest\": {\n\t\t\t\t\"numberOfExecutions\": \"{{parameters.numberOfExecutions}}\",\n\t\t\t\t\"sharedRunAsUserId\": \"{{parameters.sharedRunAsUserId}}\",\n\t\t\t\t\"queueOnSlotsExhaustion\": \"{{parameters.queueOnSlotsExhaustion}}\"\n\t\t\t}\n\t\t},\n\t\t\"condition\": \"{{parameters.deploymentType && parameters.deploymentType !== 'v3'}}\",\n\t\t\"url\": \"/v4/automations/deploy\",\n\t\t\"method\": \"POST\",\n\t\t\"body\": {\n\t\t\t\"{{parameters.deploymentType}}\": \"{{temp[parameters.deploymentType]}}\",\n\t\t\t\"botId\": \"{{parameters.fileId}}\",\n\t\t\t\"botInput\": \"{{formatInput(parameters.botInput)}}\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"error\": {\n\t\t\t\t\"400\": {\n\t\t\t\t\t\"message\": \"[{{statusCode}}] Selected runners must have a default device connected or a device pool must be selected in advanced settings.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"output\": null,\n\t\t\t\"temp\": {\n\t\t\t\t\"deploymentId\": \"{{body.deploymentId}}\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t\"temp\": {\n\t\t\t\"statusMap\": {\n\t\t\t\t\"COMPLETED\": \"success\",\n\t\t\t\t\"DEPLOYED\": \"running\",\n\t\t\t\t\"DEPLOY_FAILED\": \"fail\",\n\t\t\t\t\"QUEUED\": \"running\",\n\t\t\t\t\"PENDING_EXECUTION\": \"running\",\n\t\t\t\t\"RUNNING\": \"running\",\n\t\t\t\t\"UPDATE\": \"running\",\n\t\t\t\t\"RUN_FAILED\": \"fail\",\n\t\t\t\t\"RUN_PAUSED\": \"running\",\n\t\t\t\t\"RUN_TIMED_OUT\": \"fail\",\n\t\t\t\t\"UNKNOWN\": \"fail\"\n\t\t\t}\n\t\t},\n\t\t\"url\": \"/v3/activity/list\",\n\t\t\"method\": \"POST\",\n\t\t\"body\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"operator\": \"eq\",\n\t\t\t\t\"value\": \"{{temp.deploymentId}}\",\n\t\t\t\t\"field\": \"deploymentId\"\n\t\t\t}\n\t\t},\n\t\t\"repeat\": {\n\t\t\t\"condition\": \"{{if(parameters.actionType === 1, false, length(body.list) === 0 || temp.statusMap[body.list[].status] === 'running')}}\",\n\t\t\t\"delay\": 2000\n\t\t},\n\t\t\"response\": {\n\t\t\t\"valid\": \"{{temp.statusMap[body.list[].status] !== 'fail'}}\",\n\t\t\t\"error\": {\n\t\t\t\t\"message\": \"[{{statusCode}}] {{body.message || body.list[].message || body.list[].status || 'Something wrong. Please try again.'}}\"\n\t\t\t},\n\t\t\t\"output\": null,\n\t\t\t\"temp\": {\n\t\t\t\t\"executionId\": \"{{body.list[].id}}\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t\"url\": \"/v3/activity/execution/{{temp.executionId}}\",\n\t\t\"method\": \"GET\",\n\t\t\"response\": {\n\t\t\t\"output\": {\n\t\t\t\t\"deploymentId\": \"{{temp.deploymentId}}\",\n\t\t\t\t\"status\": \"{{body.status}}\",\n\t\t\t\t\"botOutVariables\": \"{{formatVariables(body.botOutVariables.values)}}\"\n\t\t\t}\n\t\t}\n\t}\n]",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "deploymentId",
          "type": "text",
          "label": "Deployment ID"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "botOutVariables",
          "spec": {
            "spec": [
              {
                "name": "variable",
                "type": "text",
                "label": "Variable"
              },
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              },
              {
                "name": "expression",
                "type": "text",
                "label": "Expression"
              },
              {
                "name": "string",
                "type": "text",
                "label": "String"
              },
              {
                "name": "number",
                "type": "text",
                "label": "Number"
              },
              {
                "name": "boolean",
                "type": "text",
                "label": "Boolean"
              },
              {
                "name": "repository",
                "type": "text",
                "label": "Repository"
              },
              {
                "name": "variableName",
                "type": "text",
                "label": "Variable Name"
              },
              {
                "name": "packageId",
                "type": "text",
                "label": "Package ID"
              },
              {
                "name": "packageName",
                "type": "text",
                "label": "Package Name"
              },
              {
                "name": "iteratorId",
                "type": "text",
                "label": "Iterator ID"
              },
              {
                "name": "iteratorName",
                "type": "text",
                "label": "Iterator Name"
              },
              {
                "name": "conditionalId",
                "type": "text",
                "label": "Conditional ID"
              },
              {
                "name": "conditionalName",
                "type": "text",
                "label": "Conditional Name"
              },
              {
                "name": "table",
                "spec": [
                  {
                    "name": "schema",
                    "spec": {
                      "spec": [
                        {
                          "name": "name",
                          "type": "text",
                          "label": "Name"
                        },
                        {
                          "name": "type",
                          "type": "text",
                          "label": "Type"
                        },
                        {
                          "name": "subtype",
                          "type": "text",
                          "label": "Sub Type"
                        }
                      ],
                      "type": "collection"
                    },
                    "type": "array",
                    "label": "Schema"
                  },
                  {
                    "name": "rows",
                    "spec": {
                      "spec": [
                        {
                          "name": "values",
                          "spec": {
                            "spec": [
                              {
                                "name": "type",
                                "type": "text",
                                "label": "Type"
                              },
                              {
                                "name": "expression",
                                "type": "text",
                                "label": "Expression"
                              },
                              {
                                "name": "string",
                                "type": "text",
                                "label": "String"
                              },
                              {
                                "name": "number",
                                "type": "text",
                                "label": "Number"
                              },
                              {
                                "name": "boolean",
                                "type": "text",
                                "label": "Boolean"
                              },
                              {
                                "name": "repository",
                                "type": "text",
                                "label": "Repository"
                              },
                              {
                                "name": "variableName",
                                "type": "text",
                                "label": "Variable Name"
                              },
                              {
                                "name": "packageId",
                                "type": "text",
                                "label": "Package ID"
                              },
                              {
                                "name": "packageName",
                                "type": "text",
                                "label": "Package Name"
                              },
                              {
                                "name": "iteratorId",
                                "type": "text",
                                "label": "Iterator ID"
                              },
                              {
                                "name": "iteratorName",
                                "type": "text",
                                "label": "Iterator Name"
                              },
                              {
                                "name": "conditionalId",
                                "type": "text",
                                "label": "Conditional ID"
                              },
                              {
                                "name": "conditionalName",
                                "type": "text",
                                "label": "Conditional Name"
                              },
                              {
                                "name": "list",
                                "type": "array",
                                "label": "List"
                              },
                              {
                                "name": "dictionary",
                                "type": "array",
                                "label": "Dictionary"
                              },
                              {
                                "name": "exceptionName",
                                "type": "text",
                                "label": "Exception Name"
                              },
                              {
                                "name": "thumbnailMetadataPath",
                                "type": "text",
                                "label": "Thumbnail Metadata Path"
                              },
                              {
                                "name": "screenshotMetadataPath",
                                "type": "text",
                                "label": "Screenshot Metadata Path"
                              },
                              {
                                "name": "properties",
                                "type": "array",
                                "label": "Properties"
                              },
                              {
                                "name": "triggerName",
                                "type": "text",
                                "label": "Trigger Name"
                              },
                              {
                                "name": "formElementId",
                                "type": "text",
                                "label": "Form Element ID"
                              },
                              {
                                "name": "formElementType",
                                "type": "text",
                                "label": "Form Element Type"
                              },
                              {
                                "name": "formInstanceId",
                                "type": "text",
                                "label": "Form Instance ID"
                              },
                              {
                                "name": "queueName",
                                "type": "text",
                                "label": "Queue Name"
                              },
                              {
                                "name": "taskbotSelf",
                                "type": "boolean",
                                "label": "Taskbot Self"
                              },
                              {
                                "name": "variableMapFilter",
                                "type": "array",
                                "label": "Variable Map Filter"
                              },
                              {
                                "name": "sessionTarget",
                                "type": "text",
                                "label": "Session Target"
                              },
                              {
                                "name": "securelyRecorded",
                                "type": "boolean",
                                "label": "Securely Recorded"
                              }
                            ],
                            "type": "collection"
                          },
                          "type": "array",
                          "label": "Values"
                        }
                      ],
                      "type": "collection"
                    },
                    "type": "array",
                    "label": "Rows"
                  }
                ],
                "type": "collection",
                "label": "Table"
              },
              {
                "name": "list",
                "spec": {
                  "spec": [
                    {
                      "name": "type",
                      "type": "text",
                      "label": "Type"
                    },
                    {
                      "name": "expression",
                      "type": "text",
                      "label": "Expression"
                    },
                    {
                      "name": "string",
                      "type": "text",
                      "label": "String"
                    },
                    {
                      "name": "number",
                      "type": "text",
                      "label": "Number"
                    },
                    {
                      "name": "boolean",
                      "type": "text",
                      "label": "Boolean"
                    },
                    {
                      "name": "repository",
                      "type": "text",
                      "label": "Repository"
                    },
                    {
                      "name": "variableName",
                      "type": "text",
                      "label": "Variable Name"
                    },
                    {
                      "name": "packageId",
                      "type": "text",
                      "label": "Package ID"
                    },
                    {
                      "name": "packageName",
                      "type": "text",
                      "label": "Package Name"
                    },
                    {
                      "name": "iteratorId",
                      "type": "text",
                      "label": "Iterator ID"
                    },
                    {
                      "name": "iteratorName",
                      "type": "text",
                      "label": "Iterator Name"
                    },
                    {
                      "name": "conditionalId",
                      "type": "text",
                      "label": "Conditional ID"
                    },
                    {
                      "name": "conditionalName",
                      "type": "text",
                      "label": "Conditional Name"
                    },
                    {
                      "name": "list",
                      "type": "array",
                      "label": "List"
                    },
                    {
                      "name": "dictionary",
                      "type": "array",
                      "label": "Dictionary"
                    },
                    {
                      "name": "exceptionName",
                      "type": "text",
                      "label": "Exception Name"
                    },
                    {
                      "name": "thumbnailMetadataPath",
                      "type": "text",
                      "label": "Thumbnail Metadata Path"
                    },
                    {
                      "name": "screenshotMetadataPath",
                      "type": "text",
                      "label": "Screenshot Metadata Path"
                    },
                    {
                      "name": "properties",
                      "type": "array",
                      "label": "Properties"
                    },
                    {
                      "name": "triggerName",
                      "type": "text",
                      "label": "Trigger Name"
                    },
                    {
                      "name": "formElementId",
                      "type": "text",
                      "label": "Form Element ID"
                    },
                    {
                      "name": "formElementType",
                      "type": "text",
                      "label": "Form Element Type"
                    },
                    {
                      "name": "formInstanceId",
                      "type": "text",
                      "label": "Form Instance ID"
                    },
                    {
                      "name": "queueName",
                      "type": "text",
                      "label": "Queue Name"
                    },
                    {
                      "name": "taskbotSelf",
                      "type": "boolean",
                      "label": "Taskbot Self"
                    },
                    {
                      "name": "variableMapFilter",
                      "type": "array",
                      "label": "Variable Map Filter"
                    },
                    {
                      "name": "sessionTarget",
                      "type": "text",
                      "label": "Session Target"
                    },
                    {
                      "name": "securelyRecorded",
                      "type": "boolean",
                      "label": "Securely Recorded"
                    }
                  ],
                  "type": "collection"
                },
                "type": "array",
                "label": "List"
              },
              {
                "name": "dictionary",
                "spec": {
                  "spec": [
                    {
                      "name": "key",
                      "type": "text",
                      "label": "Key"
                    },
                    {
                      "name": "value",
                      "spec": [
                        {
                          "name": "type",
                          "type": "text",
                          "label": "Type"
                        },
                        {
                          "name": "expression",
                          "type": "text",
                          "label": "Expression"
                        },
                        {
                          "name": "string",
                          "type": "text",
                          "label": "String"
                        },
                        {
                          "name": "number",
                          "type": "text",
                          "label": "Number"
                        },
                        {
                          "name": "boolean",
                          "type": "text",
                          "label": "Boolean"
                        },
                        {
                          "name": "repository",
                          "type": "text",
                          "label": "Repository"
                        },
                        {
                          "name": "variableName",
                          "type": "text",
                          "label": "Variable Name"
                        },
                        {
                          "name": "packageId",
                          "type": "text",
                          "label": "Package ID"
                        },
                        {
                          "name": "packageName",
                          "type": "text",
                          "label": "Package Name"
                        },
                        {
                          "name": "iteratorId",
                          "type": "text",
                          "label": "Iterator ID"
                        },
                        {
                          "name": "iteratorName",
                          "type": "text",
                          "label": "Iterator Name"
                        },
                        {
                          "name": "conditionalId",
                          "type": "text",
                          "label": "Conditional ID"
                        },
                        {
                          "name": "conditionalName",
                          "type": "text",
                          "label": "Conditional Name"
                        },
                        {
                          "name": "list",
                          "type": "array",
                          "label": "List"
                        },
                        {
                          "name": "dictionary",
                          "type": "array",
                          "label": "Dictionary"
                        },
                        {
                          "name": "exceptionName",
                          "type": "text",
                          "label": "Exception Name"
                        },
                        {
                          "name": "thumbnailMetadataPath",
                          "type": "text",
                          "label": "Thumbnail Metadata Path"
                        },
                        {
                          "name": "screenshotMetadataPath",
                          "type": "text",
                          "label": "Screenshot Metadata Path"
                        },
                        {
                          "name": "properties",
                          "type": "array",
                          "label": "Properties"
                        },
                        {
                          "name": "triggerName",
                          "type": "text",
                          "label": "Trigger Name"
                        },
                        {
                          "name": "formElementId",
                          "type": "text",
                          "label": "Form Element ID"
                        },
                        {
                          "name": "formElementType",
                          "type": "text",
                          "label": "Form Element Type"
                        },
                        {
                          "name": "formInstanceId",
                          "type": "text",
                          "label": "Form Instance ID"
                        },
                        {
                          "name": "queueName",
                          "type": "text",
                          "label": "Queue Name"
                        },
                        {
                          "name": "taskbotSelf",
                          "type": "boolean",
                          "label": "Taskbot Self"
                        },
                        {
                          "name": "variableMapFilter",
                          "type": "array",
                          "label": "Variable Map Filter"
                        },
                        {
                          "name": "sessionTarget",
                          "type": "text",
                          "label": "Session Target"
                        },
                        {
                          "name": "securelyRecorded",
                          "type": "boolean",
                          "label": "Securely Recorded"
                        }
                      ],
                      "type": "collection",
                      "label": "Value"
                    }
                  ],
                  "type": "collection"
                },
                "type": "array",
                "label": "Dictionary"
              },
              {
                "name": "exceptionName",
                "type": "text",
                "label": "Exception Name"
              },
              {
                "name": "thumbnailMetadataPath",
                "type": "text",
                "label": "Thumbnail Metadata Path"
              },
              {
                "name": "screenshotMetadataPath",
                "type": "text",
                "label": "Screenshot Metadata Path"
              },
              {
                "name": "properties",
                "type": "array",
                "label": "Properties"
              },
              {
                "name": "triggerName",
                "type": "text",
                "label": "Trigger Name"
              },
              {
                "name": "formElementId",
                "type": "text",
                "label": "Form Element ID"
              },
              {
                "name": "formElementType",
                "type": "text",
                "label": "Form Element Type"
              },
              {
                "name": "formInstanceId",
                "type": "text",
                "label": "Form Instance ID"
              },
              {
                "name": "queueName",
                "type": "text",
                "label": "Queue Name"
              },
              {
                "name": "taskbotSelf",
                "type": "boolean",
                "label": "Taskbot Self"
              },
              {
                "name": "variableMapFilter",
                "type": "array",
                "label": "Variable Map Filter"
              },
              {
                "name": "sessionTarget",
                "type": "text",
                "label": "Session Target"
              },
              {
                "name": "securelyRecorded",
                "type": "boolean",
                "label": "Securely Recorded"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Bot Out Variables"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "automation-anywhere2",
      "description": "Triggers a configured bot from Automation Anywhere.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"actionType\",\n\t\t\"type\": \"select\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Trigger the Bot\",\n\t\t\t\t\"value\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Trigger and Wait for Bot Result\",\n\t\t\t\t\"value\": 0\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Type of Action\",\n\t\t\"mappable\": false,\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"workspace\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Workspace\",\n\t\t\"options\": {\n\t\t\t\"store\": [\n\t\t\t\t{\n\t\t\t\t\t\"label\": \"Public\",\n\t\t\t\t\t\"value\": \"public\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": \"Private\",\n\t\t\t\t\t\"value\": \"private\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"nested\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"fileId\",\n\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\"options\": {\n\t\t\t\t\t\t\"store\": \"rpc://getBots\",\n\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\"rpc://getBotInputs\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"label\": \"Bots\",\n\t\t\t\t\t\"help\": \"Select a bot that you want to trigger from Automation Anywhere. You can also link other modules or enter manual inputs via \\\"map\\\" toggle. [Learn more about map](kb://functions/array-functions#map-complex-array--key--key-for-filtering---possible-values-for-filtering-separated-by-a-comma--).\",\n\t\t\t\t\t\"required\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"mappable\": false,\n\t\t\"required\": true,\n\t\t\"default\": \"public\"\n\t},\n\t{\n\t\t\"name\": \"deploymentType\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Deployment Type\",\n\t\t\"options\": {\n\t\t\t\"store\": [\n\t\t\t\t{\n\t\t\t\t\t\"label\": \"Legacy (API V3)\",\n\t\t\t\t\t\"value\": \"v3\",\n\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"runAsUserIds\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"options\": \"rpc://getBotRunners\",\n\t\t\t\t\t\t\t\"label\": \"Bot Runners\",\n\t\t\t\t\t\t\t\"help\": \"Make sure that a selected bot runner has a connected default device or a device pool is selected in the advanced settings.\",\n\t\t\t\t\t\t\t\"multiple\": true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"poolIds\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"options\": \"rpc://getPools\",\n\t\t\t\t\t\t\t\"label\": \"Device Pools\",\n\t\t\t\t\t\t\t\"multiple\": true,\n\t\t\t\t\t\t\t\"advanced\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": \"Attended (API V4)\",\n\t\t\t\t\t\"value\": \"attendedRequest\",\n\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"deploymentDeviceId\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"options\": \"rpc://getBotRunners\",\n\t\t\t\t\t\t\t\"label\": \"Deployment Device\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"queueDeployment\",\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"label\": \"Queue Deployment\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"default\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"launchInChildWindow\",\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"label\": \"Launch in Child Window\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"default\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": \"Unattended (API V4)\",\n\t\t\t\t\t\"value\": \"unattendedRequest\",\n\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"runAsUserIds\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"options\": \"rpc://getBotRunners\",\n\t\t\t\t\t\t\t\"label\": \"Bot Runners\",\n\t\t\t\t\t\t\t\"help\": \"Make sure that a selected bot runner has a connected default device or a device pool is selected in the advanced settings.\",\n\t\t\t\t\t\t\t\"multiple\": true,\n\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\"name\": \"deviceUsageType\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"label\": \"Device Usage Type\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"Prefer default device\",\n\t\t\t\t\t\t\t\t\t\"value\": \"PREFER_DEFAULT_DEVICE\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"Run on pool devices\",\n\t\t\t\t\t\t\t\t\t\"value\": \"RUN_ON_POOL_DEVICES\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"Prefer only on default device\",\n\t\t\t\t\t\t\t\t\t\"value\": \"RUN_ONLY_ON_DEFAULT_DEVICE\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"numOfRunAsUsersToUse\",\n\t\t\t\t\t\t\t\"type\": \"uinteger\",\n\t\t\t\t\t\t\t\"label\": \"Number of Bot Runner to Use\",\n\t\t\t\t\t\t\t\"advanced\": true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"poolIds\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"options\": \"rpc://getPools\",\n\t\t\t\t\t\t\t\"label\": \"Device Pools\",\n\t\t\t\t\t\t\t\"multiple\": true,\n\t\t\t\t\t\t\t\"advanced\": true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": \"Headless (API V4)\",\n\t\t\t\t\t\"value\": \"headlessRequest\",\n\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"sharedRunAsUserId\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"options\": \"rpc://getBotRunners\",\n\t\t\t\t\t\t\t\"label\": \"Shared Bot Runner\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"numberOfExecutions\",\n\t\t\t\t\t\t\t\"type\": \"uinteger\",\n\t\t\t\t\t\t\t\"label\": \"Number of Executions\",\n\t\t\t\t\t\t\t\"help\": \"Number of executions to run for a given Headless request.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"queueOnSlotsExhaustion\",\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"label\": \"Queue on Slots Exhaustion\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"default\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"mappable\": false,\n\t\t\"required\": true,\n\t\t\"default\": \"v3\"\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"deploymentId\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Deployment ID\"\n\t},\n\t{\n\t\t\"name\": \"status\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Status\"\n\t},\n\t{\n\t\t\"name\": \"botOutVariables\",\n\t\t\"type\": \"array\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"collection\",\n\t\t\t\"spec\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"variable\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Variable\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"expression\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Expression\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"boolean\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Boolean\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"repository\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Repository\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"variableName\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Variable Name\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"packageId\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Package ID\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"packageName\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Package Name\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"iteratorId\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Iterator ID\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"iteratorName\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Iterator Name\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"conditionalId\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Conditional ID\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"conditionalName\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Conditional Name\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"table\",\n\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"schema\",\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Name\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"subtype\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Sub Type\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"label\": \"Schema\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"rows\",\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"values\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"expression\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Expression\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"String\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Number\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Boolean\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"repository\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Repository\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"variableName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Variable Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"packageId\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Package ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"packageName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Package Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"iteratorId\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Iterator ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"iteratorName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Iterator Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"conditionalId\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Conditional ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"conditionalName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Conditional Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"list\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"List\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"dictionary\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Dictionary\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"exceptionName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Exception Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"thumbnailMetadataPath\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Thumbnail Metadata Path\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"screenshotMetadataPath\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Screenshot Metadata Path\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"properties\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"triggerName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Trigger Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"formElementId\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Form Element ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"formElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Form Element Type\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"formInstanceId\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Form Instance ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"queueName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Queue Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"taskbotSelf\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Taskbot Self\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"variableMapFilter\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Variable Map Filter\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"sessionTarget\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Session Target\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"securelyRecorded\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Securely Recorded\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Values\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"label\": \"Rows\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"label\": \"Table\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"list\",\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"expression\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Expression\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"String\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Number\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"boolean\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Boolean\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"repository\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Repository\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"variableName\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Variable Name\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"packageId\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Package ID\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"packageName\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Package Name\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"iteratorId\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Iterator ID\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"iteratorName\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Iterator Name\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"conditionalId\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Conditional ID\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"conditionalName\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Conditional Name\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"list\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"label\": \"List\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"dictionary\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"label\": \"Dictionary\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"exceptionName\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Exception Name\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"thumbnailMetadataPath\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Thumbnail Metadata Path\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"screenshotMetadataPath\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Screenshot Metadata Path\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"properties\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"label\": \"Properties\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"triggerName\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Trigger Name\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"formElementId\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Form Element ID\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"formElementType\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Form Element Type\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"formInstanceId\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Form Instance ID\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"queueName\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Queue Name\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"taskbotSelf\",\n\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\"label\": \"Taskbot Self\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"variableMapFilter\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"label\": \"Variable Map Filter\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"sessionTarget\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Session Target\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"securelyRecorded\",\n\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\"label\": \"Securely Recorded\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"label\": \"List\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"dictionary\",\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Key\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"expression\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Expression\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"String\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Number\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Boolean\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"repository\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Repository\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"variableName\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Variable Name\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"packageId\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Package ID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"packageName\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Package Name\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"iteratorId\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Iterator ID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"iteratorName\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Iterator Name\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"conditionalId\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Conditional ID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"conditionalName\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Conditional Name\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"list\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"List\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"dictionary\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Dictionary\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"exceptionName\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Exception Name\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"thumbnailMetadataPath\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Thumbnail Metadata Path\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"screenshotMetadataPath\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Screenshot Metadata Path\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"properties\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Properties\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"triggerName\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Trigger Name\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"formElementId\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Form Element ID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"formElementType\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Form Element Type\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"formInstanceId\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Form Instance ID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"queueName\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Queue Name\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"taskbotSelf\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Taskbot Self\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"variableMapFilter\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Variable Map Filter\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"sessionTarget\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Session Target\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"name\": \"securelyRecorded\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Securely Recorded\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"label\": \"Value\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"label\": \"Dictionary\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"exceptionName\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Exception Name\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"thumbnailMetadataPath\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Thumbnail Metadata Path\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"screenshotMetadataPath\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Screenshot Metadata Path\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"properties\",\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"label\": \"Properties\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"triggerName\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Trigger Name\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"formElementId\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Form Element ID\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"formElementType\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Form Element Type\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"formInstanceId\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Form Instance ID\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"queueName\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Queue Name\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"taskbotSelf\",\n\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\"label\": \"Taskbot Self\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"variableMapFilter\",\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"label\": \"Variable Map Filter\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"sessionTarget\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Session Target\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"securelyRecorded\",\n\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\"label\": \"Securely Recorded\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"label\": \"Bot Out Variables\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeAPICall": {
      "id": 22060,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "{{connection.controlRoomURL}}/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 6,
      "crud": null,
      "name": "makeAPICall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "name": "hidden",
          "type": "hidden",
          "label": "hidden"
        },
        "rpc://app%23automation-anywhere@1/parseURL",
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "POST",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body",
          "default": "{}"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "automation-anywhere",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"{{connection.controlRoomURL}}/{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n\t},\n    \"headers\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n\t},\n\t\"body\": \"{{parameters.body}}\",\n\t\"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n\t\t\t\"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "automation-anywhere2",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n\t\t\"name\": \"hidden\",\n\t\t\"type\": \"hidden\",\n\t\t\"label\": \"hidden\"\n\t},\n\t\"rpc://parseURL\",\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"POST\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n\t\t\"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n\t\t\"default\": [\n\t\t\t{\n\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\"value\": \"application/json\"\n\t\t\t}\n\t\t]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\",\n\t\t\"default\": \"{}\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listActivities": {
      "id": 22061,
      "api": {
        "url": "/v2/activity/list",
        "body": {
          "page": {
            "length": 100,
            "offset": 0
          },
          "filter": {
            "field": "{{parameters.field}}",
            "value": "{{parameters.value}}",
            "operator": "{{parameters.filter}}"
          }
        },
        "method": "POST",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseDates(formatFields(item), 'modifiedOn', 'createdOn', 'startDateTime', 'endDateTime')}}",
          "iterate": "{{body.list}}"
        },
        "pagination": {
          "body": {
            "page": {
              "length": 100,
              "offset": "{{(pagination.page - 1) * 100}}"
            },
            "filter": {
              "field": "{{parameters.field}}",
              "value": "{{parameters.value}}",
              "operator": "{{parameters.filter}}"
            }
          },
          "condition": "{{body.page.totalFilter > (pagination.page - 1) * 100}}"
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "listActivities",
      "epoch": null,
      "flags": {},
      "label": "List Activities",
      "scope": [],
      "expect": [
        {
          "name": "field",
          "type": "text",
          "label": "Field"
        },
        {
          "name": "filter",
          "type": "select",
          "label": "Filter",
          "options": [
            {
              "label": "Less than",
              "value": "lt"
            },
            {
              "label": "Less Than or Equal",
              "value": "le"
            },
            {
              "label": "Equals",
              "value": "eq"
            },
            {
              "label": "Not Equals",
              "value": "ne"
            },
            {
              "label": "Greater Than or Equal",
              "value": "ge"
            },
            {
              "label": "Greater Than",
              "value": "gt"
            }
          ]
        },
        {
          "name": "value",
          "type": "text",
          "label": "Value"
        },
        {
          "help": "Number of activities to return.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": false,
      "typeId": 9,
      "appName": "automation-anywhere",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/v2/activity/list\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"filter\": {\n\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t},\n\t\t\"page\": {\n\t\t\t\"offset\": 0,\n\t\t\t\"length\": 100\n\t\t}\n\t},\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.limit}}\",\n\t\t\"output\": \"{{parseDates(formatFields(item), 'modifiedOn', 'createdOn', 'startDateTime', 'endDateTime')}}\",\n\t\t\"iterate\": \"{{body.list}}\"\n\t},\n\t\"pagination\": {\n\t\t\"condition\": \"{{body.page.totalFilter > (pagination.page - 1) * 100}}\",\n\t\t\"body\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t\t},\n\t\t\t\"page\": {\n\t\t\t\t\"offset\": \"{{(pagination.page - 1) * 100}}\",\n\t\t\t\t\"length\": 100\n\t\t\t}\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "Activity ID"
        },
        {
          "name": "automationName",
          "type": "text",
          "label": "Automation Name"
        },
        {
          "name": "fileName",
          "type": "text",
          "label": "File Name"
        },
        {
          "name": "filePath",
          "type": "text",
          "label": "File Path"
        },
        {
          "name": "type",
          "type": "text",
          "label": "Type"
        },
        {
          "name": "startDateTime",
          "type": "text",
          "label": "Start Date Time"
        },
        {
          "name": "endDateTime",
          "type": "text",
          "label": "End Date Time"
        },
        {
          "name": "command",
          "type": "text",
          "label": "Command"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "progress",
          "type": "number",
          "label": "Progress"
        },
        {
          "name": "automationId",
          "type": "uinteger",
          "label": "Automation ID"
        },
        {
          "name": "userId",
          "type": "uinteger",
          "label": "User ID"
        },
        {
          "name": "deviceId",
          "type": "uinteger",
          "label": "Device ID"
        },
        {
          "name": "currentLine",
          "type": "number",
          "label": "Current Line"
        },
        {
          "name": "totalLines",
          "type": "number",
          "label": "Total Lines"
        },
        {
          "name": "fileId",
          "type": "uinteger",
          "label": "File ID"
        },
        {
          "name": "modifiedBy",
          "type": "text",
          "label": "Modified by"
        },
        {
          "name": "createdBy",
          "type": "text",
          "label": "Created by"
        },
        {
          "name": "modifiedOn",
          "type": "date",
          "label": "Modified on"
        },
        {
          "name": "createdOn",
          "type": "date",
          "label": "Created on"
        },
        {
          "name": "deploymentId",
          "type": "uinteger",
          "label": "Deployment ID"
        },
        {
          "name": "queueName",
          "type": "text",
          "label": "Queue Name"
        },
        {
          "name": "queueId",
          "type": "uinteger",
          "label": "Queue ID"
        },
        {
          "name": "usingRdp",
          "type": "boolean",
          "label": "Using RDP"
        },
        {
          "name": "message",
          "type": "text",
          "label": "Message"
        },
        {
          "name": "canManage",
          "type": "boolean",
          "label": "Can Manage"
        },
        {
          "name": "deviceName",
          "type": "text",
          "label": "Device Name"
        },
        {
          "name": "userName",
          "type": "text",
          "label": "User Name"
        },
        {
          "name": "botOutVariables",
          "spec": [
            {
              "name": "values",
              "spec": {
                "spec": [
                  {
                    "name": "field_name",
                    "type": "text",
                    "label": "Field Name"
                  },
                  {
                    "name": "type",
                    "type": "text",
                    "label": "Type"
                  },
                  {
                    "name": "expression",
                    "type": "text",
                    "label": "Expression"
                  },
                  {
                    "name": "string",
                    "type": "text",
                    "label": "String"
                  },
                  {
                    "name": "number",
                    "type": "text",
                    "label": "Number"
                  },
                  {
                    "name": "boolean",
                    "type": "text",
                    "label": "Boolean"
                  },
                  {
                    "name": "repository",
                    "type": "text",
                    "label": "Repository"
                  },
                  {
                    "name": "variableName",
                    "type": "text",
                    "label": "Variable Name"
                  },
                  {
                    "name": "packageId",
                    "type": "uinteger",
                    "label": "Package ID"
                  },
                  {
                    "name": "packageName",
                    "type": "text",
                    "label": "Package Name"
                  },
                  {
                    "name": "iteratorId",
                    "type": "uinteger",
                    "label": "Iterator ID"
                  },
                  {
                    "name": "iteratorName",
                    "type": "text",
                    "label": "Iterator Name"
                  },
                  {
                    "name": "conditionalId",
                    "type": "uinteger",
                    "label": "Conditional ID"
                  },
                  {
                    "name": "conditionalName",
                    "type": "text",
                    "label": "Conditional Name"
                  },
                  {
                    "name": "list",
                    "type": "array",
                    "label": "List"
                  },
                  {
                    "name": "dictionary",
                    "type": "array",
                    "label": "Dictionary"
                  },
                  {
                    "name": "exceptionName",
                    "type": "text",
                    "label": "Exception Name"
                  },
                  {
                    "name": "thumbnailMetadataPath",
                    "type": "text",
                    "label": "Thumbnail Metadata Path"
                  },
                  {
                    "name": "screenshotMetadataPath",
                    "type": "text",
                    "label": "Screenshot Metadata Path"
                  },
                  {
                    "name": "properties",
                    "type": "array",
                    "label": "Properties"
                  },
                  {
                    "name": "triggerName",
                    "type": "text",
                    "label": "Trigger Name"
                  },
                  {
                    "name": "formElementId",
                    "type": "uinteger",
                    "label": "Form Element ID"
                  },
                  {
                    "name": "formElementType",
                    "type": "text",
                    "label": "Form Element Type"
                  },
                  {
                    "name": "formInstanceId",
                    "type": "uinteger",
                    "label": "Form Instance ID"
                  },
                  {
                    "name": "queueName",
                    "type": "text",
                    "label": "Queue Name"
                  },
                  {
                    "name": "taskbotSelf",
                    "type": "boolean",
                    "label": "Taskbot Self"
                  },
                  {
                    "name": "variableMapFilter",
                    "type": "array",
                    "label": "Variable Map Filter"
                  },
                  {
                    "name": "sessionTarget",
                    "type": "text",
                    "label": "Session Target"
                  },
                  {
                    "name": "securelyRecorded",
                    "type": "boolean",
                    "label": "Securely Recorded"
                  }
                ],
                "type": "collection"
              },
              "type": "array",
              "label": "Values"
            }
          ],
          "type": "collection",
          "label": "Bot Out Variables"
        },
        {
          "name": "tenantUuid",
          "type": "text",
          "label": "Tenant UUID"
        },
        {
          "name": "automationPriority",
          "type": "text",
          "label": "Automation Priority"
        },
        {
          "name": "callbackInfo",
          "type": "text",
          "label": "Callback Info"
        },
        {
          "name": "runElevated",
          "type": "boolean",
          "label": "Run Elevated"
        },
        {
          "name": "botLabel",
          "type": "text",
          "label": "Bot Label"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "automation-anywhere2",
      "description": "Lists activities.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"field\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Field\"\n\t},\n\t{\n\t\t\"name\": \"filter\",\n\t\t\"type\": \"select\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Less than\",\n\t\t\t\t\"value\": \"lt\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Less Than or Equal\",\n\t\t\t\t\"value\": \"le\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Equals\",\n\t\t\t\t\"value\": \"eq\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Not Equals\",\n\t\t\t\t\"value\": \"ne\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than or Equal\",\n\t\t\t\t\"value\": \"ge\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than\",\n\t\t\t\t\"value\": \"gt\"\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Filter\"\n\t},\n\t{\n\t\t\"name\": \"value\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Value\"\n\t},\n\t{\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"help\": \"Number of activities to return.\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Activity ID\"\n\t},\n\t{\n\t\t\"name\": \"automationName\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Automation Name\"\n\t},\n\t{\n\t\t\"name\": \"fileName\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"File Name\"\n\t},\n\t{\n\t\t\"name\": \"filePath\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"File Path\"\n\t},\n\t{\n\t\t\"name\": \"type\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Type\"\n\t},\n\t{\n\t\t\"name\": \"startDateTime\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Start Date Time\"\n\t},\n\t{\n\t\t\"name\": \"endDateTime\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"End Date Time\"\n\t},\n\t{\n\t\t\"name\": \"command\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Command\"\n\t},\n\t{\n\t\t\"name\": \"status\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Status\"\n\t},\n\t{\n\t\t\"name\": \"progress\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Progress\"\n\t},\n\t{\n\t\t\"name\": \"automationId\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Automation ID\"\n\t},\n\t{\n\t\t\"name\": \"userId\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"User ID\"\n\t},\n\t{\n\t\t\"name\": \"deviceId\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Device ID\"\n\t},\n\t{\n\t\t\"name\": \"currentLine\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Current Line\"\n\t},\n\t{\n\t\t\"name\": \"totalLines\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Total Lines\"\n\t},\n\t{\n\t\t\"name\": \"fileId\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"File ID\"\n\t},\n\t{\n\t\t\"name\": \"modifiedBy\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Modified by\"\n\t},\n\t{\n\t\t\"name\": \"createdBy\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Created by\"\n\t},\n\t{\n\t\t\"name\": \"modifiedOn\",\n\t\t\"type\": \"date\",\n\t\t\"label\": \"Modified on\"\n\t},\n\t{\n\t\t\"name\": \"createdOn\",\n\t\t\"type\": \"date\",\n\t\t\"label\": \"Created on\"\n\t},\n\t{\n\t\t\"name\": \"deploymentId\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Deployment ID\"\n\t},\n\t{\n\t\t\"name\": \"queueName\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Queue Name\"\n\t},\n\t{\n\t\t\"name\": \"queueId\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Queue ID\"\n\t},\n\t{\n\t\t\"name\": \"usingRdp\",\n\t\t\"type\": \"boolean\",\n\t\t\"label\": \"Using RDP\"\n\t},\n\t{\n\t\t\"name\": \"message\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Message\"\n\t},\n\t{\n\t\t\"name\": \"canManage\",\n\t\t\"type\": \"boolean\",\n\t\t\"label\": \"Can Manage\"\n\t},\n\t{\n\t\t\"name\": \"deviceName\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Device Name\"\n\t},\n\t{\n\t\t\"name\": \"userName\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"User Name\"\n\t},\n    {\n        \"name\": \"botOutVariables\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"values\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"collection\",\n                    \"spec\": [\n                        {\n                            \"name\": \"field_name\",\n                            \"type\": \"text\",\n                            \"label\": \"Field Name\"\n                        },\n                        {\n                            \"name\": \"type\",\n                            \"type\": \"text\",\n                            \"label\": \"Type\"\n                        },\n                        {\n                            \"name\": \"expression\",\n                            \"type\": \"text\",\n                            \"label\": \"Expression\"\n                        },\n                        {\n                            \"name\": \"string\",\n                            \"type\": \"text\",\n                            \"label\": \"String\"\n                        },\n                        {\n                            \"name\": \"number\",\n                            \"type\": \"text\",\n                            \"label\": \"Number\"\n                        },\n                        {\n                            \"name\": \"boolean\",\n                            \"type\": \"text\",\n                            \"label\": \"Boolean\"\n                        },\n                        {\n                            \"name\": \"repository\",\n                            \"type\": \"text\",\n                            \"label\": \"Repository\"\n                        },\n                        {\n                            \"name\": \"variableName\",\n                            \"type\": \"text\",\n                            \"label\": \"Variable Name\"\n                        },\n                        {\n                            \"name\": \"packageId\",\n                            \"type\": \"uinteger\",\n                            \"label\": \"Package ID\"\n                        },\n                        {\n                            \"name\": \"packageName\",\n                            \"type\": \"text\",\n                            \"label\": \"Package Name\"\n                        },\n                        {\n                            \"name\": \"iteratorId\",\n                            \"type\": \"uinteger\",\n                            \"label\": \"Iterator ID\"\n                        },\n                        {\n                            \"name\": \"iteratorName\",\n                            \"type\": \"text\",\n                            \"label\": \"Iterator Name\"\n                        },\n                        {\n                            \"name\": \"conditionalId\",\n                            \"type\": \"uinteger\",\n                            \"label\": \"Conditional ID\"\n                        },\n                        {\n                            \"name\": \"conditionalName\",\n                            \"type\": \"text\",\n                            \"label\": \"Conditional Name\"\n                        },\n                        {\n                            \"name\": \"list\",\n                            \"type\": \"array\",\n                            \"label\": \"List\"\n                        },\n                        {\n                            \"name\": \"dictionary\",\n                            \"type\": \"array\",\n                            \"label\": \"Dictionary\"\n                        },\n                        {\n                            \"name\": \"exceptionName\",\n                            \"type\": \"text\",\n                            \"label\": \"Exception Name\"\n                        },\n                        {\n                            \"name\": \"thumbnailMetadataPath\",\n                            \"type\": \"text\",\n                            \"label\": \"Thumbnail Metadata Path\"\n                        },\n                        {\n                            \"name\": \"screenshotMetadataPath\",\n                            \"type\": \"text\",\n                            \"label\": \"Screenshot Metadata Path\"\n                        },\n                        {\n                            \"name\": \"properties\",\n                            \"type\": \"array\",\n                            \"label\": \"Properties\"\n                        },\n                        {\n                            \"name\": \"triggerName\",\n                            \"type\": \"text\",\n                            \"label\": \"Trigger Name\"\n                        },\n                        {\n                            \"name\": \"formElementId\",\n                            \"type\": \"uinteger\",\n                            \"label\": \"Form Element ID\"\n                        },\n                        {\n                            \"name\": \"formElementType\",\n                            \"type\": \"text\",\n                            \"label\": \"Form Element Type\"\n                        },\n                        {\n                            \"name\": \"formInstanceId\",\n                            \"type\": \"uinteger\",\n                            \"label\": \"Form Instance ID\"\n                        },\n                        {\n                            \"name\": \"queueName\",\n                            \"type\": \"text\",\n                            \"label\": \"Queue Name\"\n                        },\n                        {\n                            \"name\": \"taskbotSelf\",\n                            \"type\": \"boolean\",\n                            \"label\": \"Taskbot Self\"\n                        },\n                        {\n                            \"name\": \"variableMapFilter\",\n                            \"type\": \"array\",\n                            \"label\": \"Variable Map Filter\"\n                        },\n                        {\n                            \"name\": \"sessionTarget\",\n                            \"type\": \"text\",\n                            \"label\": \"Session Target\"\n                        },\n                        {\n                            \"name\": \"securelyRecorded\",\n                            \"type\": \"boolean\",\n                            \"label\": \"Securely Recorded\"\n                        }\n                    ]\n                },\n                \"label\": \"Values\"\n            }\n        ],\n        \"label\": \"Bot Out Variables\"\n    },\n\t{\n\t\t\"name\": \"tenantUuid\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Tenant UUID\"\n\t},\n\t{\n\t\t\"name\": \"automationPriority\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Automation Priority\"\n\t},\n\t{\n\t\t\"name\": \"callbackInfo\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Callback Info\"\n\t},\n\t{\n\t\t\"name\": \"runElevated\",\n\t\t\"type\": \"boolean\",\n\t\t\"label\": \"Run Elevated\"\n\t},\n\t{\n\t\t\"name\": \"botLabel\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Bot Label\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listBotRunners": {
      "id": 22062,
      "api": {
        "url": "/v1/devices/runasusers/list",
        "body": {
          "page": {
            "length": 100,
            "offset": 0
          },
          "sort": "{{parameters.sort}}",
          "filter": {
            "field": "{{parameters.field}}",
            "value": "{{parameters.value}}",
            "operator": "{{parameters.filter}}"
          }
        },
        "method": "POST",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.list}}"
        },
        "pagination": {
          "body": {
            "page": {
              "length": 100,
              "offset": "{{(pagination.page - 1) * 100}}"
            },
            "sort": "{{parameters.sort}}",
            "filter": {
              "field": "{{parameters.field}}",
              "value": "{{parameters.value}}",
              "operator": "{{parameters.filter}}"
            }
          },
          "condition": "{{body.page.totalFilter > (pagination.page - 1) * 100}}"
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "listBotRunners",
      "epoch": null,
      "flags": {},
      "label": "List Bot Runners",
      "scope": [],
      "expect": [
        {
          "name": "field",
          "type": "text",
          "label": "Field"
        },
        {
          "name": "filter",
          "type": "select",
          "label": "Filter",
          "options": [
            {
              "label": "Less than",
              "value": "lt"
            },
            {
              "label": "Less Than or Equal",
              "value": "le"
            },
            {
              "label": "Equals",
              "value": "eq"
            },
            {
              "label": "Not Equals",
              "value": "ne"
            },
            {
              "label": "Greater Than or Equal",
              "value": "ge"
            },
            {
              "label": "Greater Than",
              "value": "gt"
            }
          ]
        },
        {
          "name": "value",
          "type": "text",
          "label": "Value"
        },
        {
          "name": "sort",
          "spec": [
            {
              "name": "field",
              "type": "text",
              "label": "Field"
            },
            {
              "name": "direction",
              "type": "select",
              "label": "Direction",
              "options": [
                {
                  "label": "Descending",
                  "value": "desc"
                },
                {
                  "label": "Ascending",
                  "value": "asc"
                }
              ]
            }
          ],
          "type": "array",
          "label": "Sort"
        },
        {
          "help": "Number of runners to return.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": false,
      "typeId": 9,
      "appName": "automation-anywhere",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/v1/devices/runasusers/list\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t//\"fields\": \"{{parameters.fields}}\",\n\t\t\"filter\": {\n\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t},\n\t\t\"sort\": \"{{parameters.sort}}\",\n\t\t\"page\": {\n\t\t\t\"offset\": 0,\n\t\t\t\"length\": 100\n\t\t}\n\t},\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.limit}}\",\n\t\t\"output\": \"{{item}}\",\n\t\t\"iterate\": \"{{body.list}}\"\n\t},\n\t\"pagination\": {\n\t\t\"condition\": \"{{body.page.totalFilter > (pagination.page - 1) * 100}}\",\n\t\t\"body\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t\t},\n\t\t\t\"sort\": \"{{parameters.sort}}\",\n\t\t\t\"page\": {\n\t\t\t\t\"offset\": \"{{(pagination.page - 1) * 100}}\",\n\t\t\t\t\"length\": 100\n\t\t\t}\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "Runner ID"
        },
        {
          "name": "username",
          "type": "text",
          "label": "Username"
        },
        {
          "name": "device",
          "type": "text",
          "label": "Device"
        },
        {
          "name": "deviceId",
          "type": "uinteger",
          "label": "Device ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "automation-anywhere2",
      "description": "Lists bot runners.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"field\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Field\"\n\t},\n\t{\n\t\t\"name\": \"filter\",\n\t\t\"type\": \"select\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Less than\",\n\t\t\t\t\"value\": \"lt\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Less Than or Equal\",\n\t\t\t\t\"value\": \"le\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Equals\",\n\t\t\t\t\"value\": \"eq\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Not Equals\",\n\t\t\t\t\"value\": \"ne\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than or Equal\",\n\t\t\t\t\"value\": \"ge\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than\",\n\t\t\t\t\"value\": \"gt\"\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Filter\"\n\t},\n\t{\n\t\t\"name\": \"value\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Value\"\n\t},\n\t//{\n\t//\t\"name\": \"fields\",\n\t//\t\"type\": \"array\",\n\t//\t\"label\": \"Fields\"\n\t//},\n\t{\n\t\t\"name\": \"sort\",\n\t\t\"type\": \"array\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"field\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Field\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"direction\",\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"options\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": \"Descending\",\n\t\t\t\t\t\t\"value\": \"desc\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": \"Ascending\",\n\t\t\t\t\t\t\"value\": \"asc\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"label\": \"Direction\"\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Sort\"\n\t},\n\t{\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"help\": \"Number of runners to return.\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"uinteger\",\n        \"label\": \"Runner ID\"\n    },\n    {\n        \"name\": \"username\",\n        \"type\": \"text\",\n        \"label\": \"Username\"\n    },\n    {\n        \"name\": \"device\",\n        \"type\": \"text\",\n        \"label\": \"Device\"\n    },\n    {\n        \"name\": \"deviceId\",\n        \"type\": \"uinteger\",\n        \"label\": \"Device ID\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listDevicesPools": {
      "id": 22063,
      "api": {
        "url": "/v2/devices/pools/list",
        "body": {
          "page": {
            "length": 100,
            "offset": 0
          },
          "filter": {
            "field": "{{parameters.field}}",
            "value": "{{parameters.value}}",
            "operator": "{{parameters.filter}}"
          }
        },
        "method": "POST",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.list}}"
        },
        "pagination": {
          "body": {
            "page": {
              "length": 100,
              "offset": "{{(pagination.page - 1) * 100}}"
            },
            "filter": {
              "field": "{{parameters.field}}",
              "value": "{{parameters.value}}",
              "operator": "{{parameters.filter}}"
            }
          },
          "condition": "{{body.page.totalFilter > (pagination.page - 1) * 100}}"
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "listDevicesPools",
      "epoch": null,
      "flags": {},
      "label": "List Device's Pools",
      "scope": [],
      "expect": [
        {
          "name": "field",
          "type": "text",
          "label": "Field"
        },
        {
          "name": "filter",
          "type": "select",
          "label": "Filter",
          "options": [
            {
              "label": "Less than",
              "value": "lt"
            },
            {
              "label": "Less Than or Equal",
              "value": "le"
            },
            {
              "label": "Equals",
              "value": "eq"
            },
            {
              "label": "Not Equals",
              "value": "ne"
            },
            {
              "label": "Greater Than or Equal",
              "value": "ge"
            },
            {
              "label": "Greater Than",
              "value": "gt"
            }
          ]
        },
        {
          "name": "value",
          "type": "text",
          "label": "Value"
        },
        {
          "help": "Number of pools to return.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": false,
      "typeId": 9,
      "appName": "automation-anywhere",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/v2/devices/pools/list\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"filter\": {\n\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t},\n\t\t\"page\": {\n\t\t\t\"offset\": 0,\n\t\t\t\"length\": 100\n\t\t}\n\t},\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.limit}}\",\n\t\t\"output\": \"{{item}}\",\n\t\t\"iterate\": \"{{body.list}}\"\n\t},\n\t\"pagination\": {\n\t\t\"condition\": \"{{body.page.totalFilter > (pagination.page - 1) * 100}}\",\n\t\t\"body\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t\t},\n\t\t\t\"page\": {\n\t\t\t\t\"offset\": \"{{(pagination.page - 1) * 100}}\",\n\t\t\t\t\"length\": 100\n\t\t\t}\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "Pool ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "detailedStatus",
          "type": "text",
          "label": "Detailed Status"
        },
        {
          "name": "automationCount",
          "type": "uinteger",
          "label": "Automation Count"
        },
        {
          "name": "ownerIds",
          "spec": {
            "type": "uinteger"
          },
          "type": "array",
          "label": "Owner IDs"
        },
        {
          "name": "deviceCount",
          "type": "uinteger",
          "label": "Device Count"
        },
        {
          "name": "deviceIds",
          "spec": {
            "type": "uinteger"
          },
          "type": "array",
          "label": "Device IDs"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "automation-anywhere2",
      "description": "Lists device's pools.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"field\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Field\"\n\t},\n\t{\n\t\t\"name\": \"filter\",\n\t\t\"type\": \"select\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Less than\",\n\t\t\t\t\"value\": \"lt\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Less Than or Equal\",\n\t\t\t\t\"value\": \"le\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Equals\",\n\t\t\t\t\"value\": \"eq\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Not Equals\",\n\t\t\t\t\"value\": \"ne\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than or Equal\",\n\t\t\t\t\"value\": \"ge\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than\",\n\t\t\t\t\"value\": \"gt\"\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Filter\"\n\t},\n\t{\n\t\t\"name\": \"value\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Value\"\n\t},\n\t{\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"help\": \"Number of pools to return.\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"uinteger\",\n        \"label\": \"Pool ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"text\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"detailedStatus\",\n        \"type\": \"text\",\n        \"label\": \"Detailed Status\"\n    },\n    {\n        \"name\": \"automationCount\",\n        \"type\": \"uinteger\",\n        \"label\": \"Automation Count\"\n    },\n    {\n        \"name\": \"ownerIds\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"uinteger\"\n        },\n        \"label\": \"Owner IDs\"\n    },\n    {\n        \"name\": \"deviceCount\",\n        \"type\": \"uinteger\",\n        \"label\": \"Device Count\"\n    },\n    {\n        \"name\": \"deviceIds\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"uinteger\"\n        },\n        \"label\": \"Device IDs\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listConnectedDevices": {
      "id": 22064,
      "api": {
        "url": "/v2/devices/list",
        "body": {
          "page": {
            "length": 100,
            "offset": 0
          },
          "filter": {
            "field": "{{parameters.field}}",
            "value": "{{parameters.value}}",
            "operator": "{{parameters.filter}}"
          }
        },
        "method": "POST",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseDates(item, 'updatedOn')}}",
          "iterate": "{{body.list}}"
        },
        "pagination": {
          "body": {
            "page": {
              "length": 100,
              "offset": "{{(pagination.page - 1) * 100}}"
            },
            "filter": {
              "field": "{{parameters.field}}",
              "value": "{{parameters.value}}",
              "operator": "{{parameters.filter}}"
            }
          },
          "condition": "{{body.page.totalFilter > (pagination.page - 1) * 100}}"
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "listConnectedDevices",
      "epoch": null,
      "flags": {},
      "label": "List Connected Devices",
      "scope": [],
      "expect": [
        {
          "name": "field",
          "type": "text",
          "label": "Field"
        },
        {
          "name": "filter",
          "type": "select",
          "label": "Filter",
          "options": [
            {
              "label": "Less than",
              "value": "lt"
            },
            {
              "label": "Less Than or Equal",
              "value": "le"
            },
            {
              "label": "Equals",
              "value": "eq"
            },
            {
              "label": "Not Equals",
              "value": "ne"
            },
            {
              "label": "Greater Than or Equal",
              "value": "ge"
            },
            {
              "label": "Greater Than",
              "value": "gt"
            }
          ]
        },
        {
          "name": "value",
          "type": "text",
          "label": "Value"
        },
        {
          "help": "Number of devices to return.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": false,
      "typeId": 9,
      "appName": "automation-anywhere",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/v2/devices/list\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"filter\": {\n\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t},\n\t\t\"page\": {\n\t\t\t\"offset\": 0,\n\t\t\t\"length\": 100\n\t\t}\n\t},\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.limit}}\",\n\t\t\"output\": \"{{parseDates(item, 'updatedOn')}}\",\n\t\t\"iterate\": \"{{body.list}}\"\n\t},\n\t\"pagination\": {\n\t\t\"condition\": \"{{body.page.totalFilter > (pagination.page - 1) * 100}}\",\n\t\t\"body\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"operator\": \"{{parameters.filter}}\",\n\t\t\t\t\"value\": \"{{parameters.value}}\",\n\t\t\t\t\"field\": \"{{parameters.field}}\"\n\t\t\t},\n\t\t\t\"page\": {\n\t\t\t\t\"offset\": \"{{(pagination.page - 1) * 100}}\",\n\t\t\t\t\"length\": 100\n\t\t\t}\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "Device ID"
        },
        {
          "name": "type",
          "type": "text",
          "label": "Type"
        },
        {
          "name": "hostName",
          "type": "text",
          "label": "Host Name"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "poolName",
          "type": "text",
          "label": "Pool Name"
        },
        {
          "name": "updatedBy",
          "type": "text",
          "label": "Updated by"
        },
        {
          "name": "updatedOn",
          "type": "date",
          "label": "Updated on"
        },
        {
          "name": "botAgentVersion",
          "type": "text",
          "label": "Bot Agent Version"
        },
        {
          "name": "nickname",
          "type": "text",
          "label": "Nickname"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "maxCount",
          "type": "number",
          "label": "Max Count"
        },
        {
          "name": "defaultUsers",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "uinteger",
                "label": "User ID"
              },
              {
                "name": "username",
                "type": "text",
                "label": "Username"
              },
              {
                "name": "domain",
                "type": "text",
                "label": "Domain"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Default Users"
        },
        {
          "name": "lifespan",
          "type": "text",
          "label": "Lifespan"
        },
        {
          "name": "installationType",
          "type": "text",
          "label": "Installation Type"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "automation-anywhere2",
      "description": "Lists connected devices.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"field\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Field\"\n\t},\n\t{\n\t\t\"name\": \"filter\",\n\t\t\"type\": \"select\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Less than\",\n\t\t\t\t\"value\": \"lt\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Less Than or Equal\",\n\t\t\t\t\"value\": \"le\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Equals\",\n\t\t\t\t\"value\": \"eq\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Not Equals\",\n\t\t\t\t\"value\": \"ne\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than or Equal\",\n\t\t\t\t\"value\": \"ge\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Greater Than\",\n\t\t\t\t\"value\": \"gt\"\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Filter\"\n\t},\n\t{\n\t\t\"name\": \"value\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Value\"\n\t},\n\t{\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"help\": \"Number of devices to return.\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"uinteger\",\n        \"label\": \"Device ID\"\n    },\n    {\n        \"name\": \"type\",\n        \"type\": \"text\",\n        \"label\": \"Type\"\n    },\n    {\n        \"name\": \"hostName\",\n        \"type\": \"text\",\n        \"label\": \"Host Name\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"text\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"poolName\",\n        \"type\": \"text\",\n        \"label\": \"Pool Name\"\n    },\n    {\n        \"name\": \"updatedBy\",\n        \"type\": \"text\",\n        \"label\": \"Updated by\"\n    },\n    {\n        \"name\": \"updatedOn\",\n        \"type\": \"date\",\n        \"label\": \"Updated on\"\n    },\n    {\n        \"name\": \"botAgentVersion\",\n        \"type\": \"text\",\n        \"label\": \"Bot Agent Version\"\n    },\n    {\n        \"name\": \"nickname\",\n        \"type\": \"text\",\n        \"label\": \"Nickname\"\n    },\n    {\n        \"name\": \"description\",\n        \"type\": \"text\",\n        \"label\": \"Description\"\n    },\n    {\n        \"name\": \"maxCount\",\n        \"type\": \"number\",\n        \"label\": \"Max Count\"\n    },\n    {\n        \"name\": \"defaultUsers\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uinteger\",\n                    \"label\": \"User ID\"\n                },\n                {\n                    \"name\": \"username\",\n                    \"type\": \"text\",\n                    \"label\": \"Username\"\n                },\n                {\n                    \"name\": \"domain\",\n                    \"type\": \"text\",\n                    \"label\": \"Domain\"\n                }\n            ]\n        },\n        \"label\": \"Default Users\"\n    },\n    {\n        \"name\": \"lifespan\",\n        \"type\": \"text\",\n        \"label\": \"Lifespan\"\n    },\n    {\n        \"name\": \"installationType\",\n        \"type\": \"text\",\n        \"label\": \"Installation Type\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "automation-anywhere2": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.x-authorization"
            ]
          },
          "url": "{{parameters.controlRoomURL}}/v1/devices/runasusers/default/{{data.id}}",
          "headers": {
            "x-authorization": "{{connection.accessToken}}"
          },
          "response": {
            "uid": "{{data.id}}",
            "data": {
              "deviceId": "{{body.deviceId}}"
            },
            "error": {
              "message": "[{{statusCode}}] {{body.message || 'Only users with a default devices are allowed to establish a connection.'}}"
            },
            "valid": "{{body.deviceId !== 0}}",
            "metadata": {
              "type": "text",
              "value": "{{data.username}}"
            }
          }
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.apiKey",
              "request.body.password",
              "response.body.token"
            ]
          },
          "url": "{{parameters.controlRoomURL}}/v2/authentication",
          "body": {
            "apiKey": "{{parameters.apiKey}}",
            "password": "{{parameters.password}}",
            "username": "{{parameters.username}}",
            "multipleLogin": true
          },
          "method": "POST",
          "response": {
            "data": {
              "id": "{{body.user.id}}",
              "expires": "{{addSeconds(now, 1200)}}",
              "username": "{{body.user.username}}",
              "accessToken": "{{body.token}}"
            },
            "error": {
              "message": "[{{statusCode}}] {{body.message || 'Only users with permission to list and run bots are allowed to establish a connection.'}}"
            }
          },
          "condition": "{{if(data.accessToken, data.expires < addMinutes(now, 1), true)}}"
        }
      },
      "rev": 17,
      "name": "automation-anywhere2",
      "type": "oauth",
      "label": "Automation Anywhere (Cloud)",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "automation-anywhere",
      "install": {},
      "apiJsonc": "{\n\t\"token\": {\n\t\t\"condition\": \"{{if(data.accessToken, data.expires < addMinutes(now, 1), true)}}\",\n\t\t\"url\": \"{{parameters.controlRoomURL}}/v2/authentication\",\n\t\t\"body\": {\n\t\t\t\"username\": \"{{parameters.username}}\",\n\t\t\t\"apiKey\": \"{{parameters.apiKey}}\",\n\t\t\t\"password\": \"{{parameters.password}}\",\n\t\t\t\"multipleLogin\": true\n\t\t},\n\t\t\"method\": \"POST\",\n\t\t\"response\": {\n\t\t\t\"data\": {\n\t\t\t\t\"expires\": \"{{addSeconds(now, 1200)}}\",\n\t\t\t\t\"accessToken\": \"{{body.token}}\",\n\t\t\t\t\"id\": \"{{body.user.id}}\",\n\t\t\t\t\"username\": \"{{body.user.username}}\"\n\t\t\t},\n\t\t\t\"error\": {\n\t\t\t\t\"message\": \"[{{statusCode}}] {{body.message || 'Only users with permission to list and run bots are allowed to establish a connection.'}}\"\n\t\t\t}\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\n\t\t\t\t\"request.body.apiKey\",\n\t\t\t\t\"request.body.password\",\n\t\t\t\t\"response.body.token\"\n\t\t\t]\n\t\t}\n\t},\n\t\"info\": {\n\t\t\"url\": \"{{parameters.controlRoomURL}}/v1/devices/runasusers/default/{{data.id}}\",\n\t\t\"headers\": {\n\t\t\t\"x-authorization\": \"{{connection.accessToken}}\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"valid\": \"{{body.deviceId !== 0}}\",\n\t\t\t\"uid\": \"{{data.id}}\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"value\": \"{{data.username}}\"\n\t\t\t},\n\t\t\t\"data\": {\n\t\t\t\t\"deviceId\": \"{{body.deviceId}}\"\n\t\t\t},\n\t\t\t\"error\": {\n\t\t\t\t\"message\": \"[{{statusCode}}] {{body.message || 'Only users with a default devices are allowed to establish a connection.'}}\"\n\t\t\t}\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [ \"request.headers.x-authorization\" ]\n\t\t}\n\t}\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "The URL you received in the Automation Anywhere registration confirmation email. For example, `https://<your-domain>.automationanywhere.digital`. An Automation Anywhere unattended runner license and a default device are required to establish the connection.",
          "name": "controlRoomURL",
          "type": "url",
          "label": "Control Room URL",
          "required": true
        },
        {
          "help": "Enter your Automation Anywhere username.",
          "name": "username",
          "type": "text",
          "label": "Account Username",
          "required": true
        },
        {
          "help": "Choose between a `Password` and an `API Key` as an authentication method.",
          "name": "type",
          "type": "select",
          "label": "Authentication Method",
          "options": [
            {
              "label": "API Key",
              "value": "apiKey",
              "nested": [
                {
                  "help": "Enter your Automation Anywhere API key.",
                  "name": "apiKey",
                  "type": "text",
                  "label": "API Key",
                  "required": true
                }
              ]
            },
            {
              "label": "Password",
              "value": "password",
              "nested": [
                {
                  "help": "Enter your Automation Anywhere password.",
                  "name": "password",
                  "type": "password",
                  "label": "Password",
                  "required": true
                }
              ]
            }
          ],
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "installSpec": [],
      "scopesJsonc": "{\n}",
      "installJsonc": "{}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n\t{\n\t\t\"name\": \"controlRoomURL\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Control Room URL\",\n\t\t\"help\": \"The URL you received in the Automation Anywhere registration confirmation email. For example, `https://<your-domain>.automationanywhere.digital`. An Automation Anywhere unattended runner license and a default device are required to establish the connection.\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"username\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Account Username\",\n\t\t\"help\": \"Enter your Automation Anywhere username.\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"type\",\n\t\t\"type\": \"select\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"API Key\",\n\t\t\t\t\"value\": \"apiKey\",\n\t\t\t\t\"nested\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"apiKey\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"API Key\",\n\t\t\t\t\t\t\"help\": \"Enter your Automation Anywhere API key.\",\n\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Password\",\n\t\t\t\t\"value\": \"password\",\n\t\t\t\t\"nested\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"password\",\n\t\t\t\t\t\t\"type\": \"password\",\n\t\t\t\t\t\t\"label\": \"Password\",\n\t\t\t\t\t\t\"help\": \"Enter your Automation Anywhere password.\",\n\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Authentication Method\",\n\t\t\"help\": \"Choose between a `Password` and an `API Key` as an authentication method.\",\n\t\t\"required\": true\n\t}\n]",
      "installSpecJsonc": "[]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n\t\"baseUrl\": \"{{connection.controlRoomURL}}\",\n\t\"headers\": {\n\t\t\"x-authorization\": \"{{connection.accessToken}}\"\n\t},\n\t\"response\": {\n\t\t\"error\": {\n\t\t\t\"message\": \"[{{statusCode}}] {{body.message || 'Something wrong. Please try again.'}}\"\n\t\t}\n\t},\n\t\"log\": {\n\t\t\"sanitize\": [\n\t\t\t\"request.headers.x-authorization\"\n\t\t]\n\t}\n}",
  "countries": null,
  "_functions": {
    "parseJSON": {
      "rev": 3,
      "code": "function parseJSON(json) {\n\ttry {\n\t\treturn JSON.parse(json)\n\t} catch(e) {\n\t\treturn json\n\t}\n}",
      "name": "parseJSON",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(json)",
      "appVersion": 1
    },
    "parseDates": {
      "rev": 3,
      "code": "function parseDates(payload, ...fields) {\n\tlet object = Object.assign({}, payload)\n\tfunction parse(obj, path, index) {\n\t\tprop = obj[path[index]];\n\t\tif(obj[path[index]] !== \"\" && obj[path[index]])  {\n\t\t\tif (path.length - 1 == index) {\n\t\t\t\tobj[path[index]] = iml.parseDate(prop)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (Array.isArray(prop) && path[index + 1] === '...' && index + 2 < path.length) {\n\t\t\t\t\tprop.forEach(function(item) {\n\t\t\t\t\t\tparse(item, path, index + 2);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tparse(prop, path, index + 1);\n\t\t\t}\t\n\t\t}\n\t}\n\n\tif (object && fields && object !== \"undefined\" && fields !== \"undefined\") {\n\t\tfields.forEach(function(field){\t\t\t\t\n\t\t\tpath = field.split(/\\.(?!\\.|\\])|\\[|\\]\\./);\n\t\t\tif (path.length > 0)\n\t\t\t\tparse(object, path, 0);\n\t\t});\n\t}\n\n\treturn object;\n}",
      "name": "parseDates",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(payload, ...fields)",
      "appVersion": 1
    },
    "formatInput": {
      "rev": 4,
      "code": "function formatInput(obj) {\n\tif(obj === null || obj === undefined) return undefined\n\tif(Object.keys(obj)[0] === null || Object.keys(obj)[0] === undefined) return undefined\n\tlet result = {}\n\tObject.keys(obj).map(item => {\n\t\tif(item.split('[')[1].slice(0, -1) === 'STRING' || item.split('[')[1].slice(0, -1) === 'DATETIME') {\n\t\t\tresult[item.split('[')[0]] = {\n\t\t\t\ttype: item.split('[')[1].slice(0, -1),\n\t\t\t\tstring: obj[item]\n\t\t\t}\t\n\t\t}\n\t\tif(item.split('[')[1].slice(0, -1) === 'NUMBER') {\n\t\t\tresult[item.split('[')[0]] = {\n\t\t\t\ttype: item.split('[')[1].slice(0, -1),\n\t\t\t\tnumber: obj[item]\n\t\t\t}\t\n\t\t}\n\t\tif(item.split('[')[1].slice(0, -1) === 'BOOLEAN') {\n\t\t\tresult[item.split('[')[0]] = {\n\t\t\t\ttype: item.split('[')[1].slice(0, -1),\n\t\t\t\tboolean: obj[item]\n\t\t\t}\t\n\t\t}\n\t\tif(item.split('[')[1].slice(0, -1) === 'LIST') {\n\t\t\tresult[item.split('[')[0]] = {\n\t\t\t\ttype: item.split('[')[1].slice(0, -1),\n\t\t\t\tlist: obj[item]\n\t\t\t}\t\n\t\t}\n\t\tif(item.split('[')[1].slice(0, -1) === 'DICTIONARY') {\n\t\t\tresult[item.split('[')[0]] = {\n\t\t\t\ttype: item.split('[')[1].slice(0, -1),\n\t\t\t\tdictionary: obj[item]\n\t\t\t}\t\n\t\t}\n\t\tif(item.split('[')[1].slice(0, -1) === 'TABLE') {\n\t\t\tresult[item.split('[')[0]] = {\n\t\t\t\ttype: item.split('[')[1].slice(0, -1),\n\t\t\t\ttable: obj[item]\n\t\t\t}\t\n\t\t}\n\t})\n\treturn result\n} ",
      "name": "formatInput",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(obj)",
      "appVersion": 1
    },
    "formatFields": {
      "rev": 3,
      "code": "function formatFields(item) {\n\tif(item.botOutVariables !== null && item.botOutVariables !== undefined) {\n\t\tif(item.botOutVariables.values !== null && item.botOutVariables.values !== undefined) {\n\t\t\tlet array = []\n\t\t\tObject.keys(item.botOutVariables.values).map(field => {\n\t\t\t\tarray.push(Object.assign({\n\t\t\t\t\tfield_name: field\n\t\t\t\t}, item.botOutVariables.values[field]))\n\t\t\t})\n\t\t\titem.botOutVariables.values = array\n\t\t}\n\t}\n\treturn item\n}",
      "name": "formatFields",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(item)",
      "appVersion": 1
    },
    "formatBotInputs": {
      "rev": 6,
      "code": "function formatBotInputs(variables) {\n\tlet arrayInputs = []\n\tvariables.map(item => {\n\t\tif (item.input === true) {\n\t\t\tif(item.type === 'NUMBER') {\n\t\t\t\tarrayInputs.push({\n\t\t\t\t\t\"name\": `${item.name}[${item.type}]`,\n\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\"label\": item.name,\n\t\t\t\t\t\"help\": `Click the field to see the available variables.`\n\t\t\t\t})\n\t\t\t}\n\t\t\tif(item.type === 'STRING') {\n\t\t\t\tarrayInputs.push({\n\t\t\t\t\t\"name\": `${item.name}[${item.type}]`,\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": item.name,\n\t\t\t\t\t\"help\": `Click the field to see the available variables.`\n\t\t\t\t})\n\t\t\t}\n\t\t\tif(item.type === 'DATETIME') {\n\t\t\t\tarrayInputs.push({\n\t\t\t\t\t\"name\": `${item.name}[${item.type}]`,\n\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\"label\": item.name\n\t\t\t\t})\n\t\t\t}\n\t\t\tif(item.type === 'BOOLEAN') {\n\t\t\t\tarrayInputs.push({\n\t\t\t\t\t\"name\": `${item.name}[${item.type}]`,\n\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\"label\": item.name\n\t\t\t\t})\n\t\t\t}\n\t\t\tif(item.type === 'LIST') {\n\t\t\t\tarrayInputs.push({\n\t\t\t\t\t\"name\": `${item.name}[${item.type}]`,\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"STRING\",\n\t\t\t\t\t\t\t\t\t\"value\": \"STRING\",\n\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"String\",\n\t\t\t\t\t\t\t\t\t\t\t\"help\": `Click the field to see the available variables.`\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"NUMBER\",\n\t\t\t\t\t\t\t\t\t\"value\": \"NUMBER\",\n\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Number\",\n\t\t\t\t\t\t\t\t\t\t\t\"help\": `Click the field to see the available variables.`\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"BOOLEAN\",\n\t\t\t\t\t\t\t\t\t\"value\": \"BOOLEAN\",\n\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Boolean\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"DATETIME\",\n\t\t\t\t\t\t\t\t\t\"value\": \"DATETIME\",\n\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"String\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"label\": item.name\n\t\t\t\t})\n\t\t\t}\n\t\t\tif(item.type === 'DICTIONARY') {\n\t\t\t\tarrayInputs.push({\n\t\t\t\t\t\"name\": `${item.name}[${item.type}]`,\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"label\": \"Key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"STRING\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"STRING\",\n\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"String\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"help\": `Click the field to see the available variables.`\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"NUMBER\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"NUMBER\",\n\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Number\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"help\": `Click the field to see the available variables.`\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"BOOLEAN\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"BOOLEAN\",\n\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Boolean\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"DATETIME\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"DATETIME\",\n\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"String\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"label\": \"Value\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"label\": item.name\n\t\t\t\t})\n\t\t\t}\n\t\t\timl.formatBotInputs2(arrayInputs, item)\n\t\t}\n\t})\n\tif(arrayInputs.length === 0) return undefined\n\treturn {\n\t\t\"name\": \"botInput\",\n\t\t\"type\": \"collection\",\n\t\t\"spec\": arrayInputs,\n\t\t\"label\": \"Bot Input Variables (optional)\"\n\t}\n}",
      "name": "formatBotInputs",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(variables)",
      "appVersion": 1
    },
    "formatVariables": {
      "rev": 3,
      "code": "function formatVariables(object) {\n\tif(object === null || object === undefined) return undefined\n\tif(Object.keys(object).length === 0) return []\n\t\n\tlet result = []\n\t\n\tObject.keys(object).map(item => {\n\t\tresult.push({\n\t\t\tvariable: item,\n\t\t\t...object[item]\n\t\t})\n\t})\n\treturn result.map(item => {\n\t\tif(item.type === 'DATETIME') item.string = iml.parseDate(item.string)\n\t\tif(item.type === 'LIST') {\n\t\t\titem.list = item.list.map(item_child => {\n\t\t\t\tif(item_child.type === 'DATETIME') item_child.string = iml.parseDate(item_child.string)\n\t\t\t\treturn item_child\n\t\t\t})\n\t\t}\n\t\tif(item.type === 'DICTIONARY') {\n\t\t\titem.dictionary = item.dictionary.map(item_child_dictionary => {\n\t\t\t\tif(item_child_dictionary.value.type === 'DATETIME') item_child_dictionary.value.string = iml.parseDate(item_child_dictionary.value.string)\n\t\t\t\treturn item_child_dictionary\n\t\t\t})\n\t\t}\n\t\tif(item.type === 'TABLE') {\n\t\t\titem.table.rows = item.table.rows.map(item_table => {\n\t\t\t\titem_table.values.map(item_table_child => {\n\t\t\t\t\tif(item_table_child.type === 'DATETIME') item_table_child.string = iml.parseDate(item_table_child.string)\n\t\t\t\t\treturn item_table_child\n\t\t\t\t})\n\t\t\t\treturn item_table\n\t\t\t})\n\t\t}\n\t\treturn item\n\t})\n\t\n}",
      "name": "formatVariables",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(object)",
      "appVersion": 1
    },
    "checkPermissions": {
      "rev": 2,
      "code": "function checkPermissions(permissions) {\n\tlet result = permissions.filter(item => {\n\t\treturn item.id === 711 || item.id === 696\n\t})\n\t\n\tif(result.length === 2) {\n\t\treturn true\n\t}\n\treturn false\n}",
      "name": "checkPermissions",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(permissions)",
      "appVersion": 1
    },
    "formatBotInputs2": {
      "rev": 3,
      "code": "function formatBotInputs2(arrayInputs, item) {\n\tif(item.type === 'TABLE') {\n\t\tarrayInputs.push({\n\t\t\t\"name\": `${item.name}[${item.type}]`,\n\t\t\t\"type\": \"collection\",\n\t\t\t\"spec\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"schema\",\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"label\": \"Name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"STRING\",\n\t\t\t\t\t\t\t\t\t\"value\": \"STRING\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"NUMBER\",\n\t\t\t\t\t\t\t\t\t\"value\": \"NUMBER\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"BOOLEAN\",\n\t\t\t\t\t\t\t\t\t\"value\": \"BOOLEAN\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"label\": \"DATETIME\",\n\t\t\t\t\t\t\t\t\t\"value\": \"DATETIME\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"label\": \"Schema\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"rows\",\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"values\",\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"STRING\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"STRING\",\n\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"String\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"help\": `Click the field to see the available variables.`\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"NUMBER\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"NUMBER\",\n\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Number\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"help\": `Click the field to see the available variables.`\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"BOOLEAN\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"BOOLEAN\",\n\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Boolean\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"label\": \"DATETIME\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"DATETIME\",\n\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"String\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"label\": \"Type\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"label\": \"Values\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"label\": \"Rows\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"label\": item.name\n\t\t})\n\t}\n}",
      "name": "formatBotInputs2",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(arrayInputs, item)",
      "appVersion": 1
    },
    "getFilterProperty": {
      "rev": 3,
      "code": "function getFilterProperty(target, prop) {\n\treturn target[0][0][prop]\n}",
      "name": "getFilterProperty",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(target, prop)",
      "appVersion": 1
    },
    "formatRunnersArray": {
      "rev": 3,
      "code": "function formatRunnersArray(array, id, username) {\n\tif(array === undefined || array === null) array = []\n\tlet output = [...array, {\n\t\tid: iml.toString(id),\n\t\tusername\n\t}]\n\tdebug(array)\n\tarray.forEach(item => {\n\t\tif(item.id === iml.toString(id)) {\n\t\t\toutput = array\n\t\t}\n\t})\n\treturn output\n}",
      "name": "formatRunnersArray",
      "test": null,
      "appName": "automation-anywhere",
      "arguments": "(array, id, username)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-04-20T07:07:11.71848+00:00",
  "categories": [],
  "opensource": false,
  "description": "Automation Anywhere empowers people whose ideas, thought and focus make the companies they work for great. We deliver the world’s most sophisticated Digital Workforce Platform making work more human by automating business processes and liberating people.",
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "c6a09a22ee6dd73d3914f8383c220552",
  "versionFull": "1.11.18",
  "compiledName": "automation-anywhere",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": "[\n]"
}
