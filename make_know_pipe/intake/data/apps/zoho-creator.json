{
  "rev": 9,
  "base": {
    "qs": {
      "scope": "creatorapi",
      "authtoken": "{{connection.authToken}}"
    },
    "log": {
      "sanitize": [
        "request.qs.authtoken"
      ]
    },
    "baseUrl": "https://creator.zoho.{{connection.region}}/api/json",
    "response": {
      "error": {
        "200": {
          "message": "{{if(body.errorlist, body.errorlist.error.message, body.message)}}"
        },
        "message": "[{{statusCode}}] {{body.message}}"
      },
      "valid": "{{!body.errorlist}}"
    }
  },
  "beta": false,
  "docs": null,
  "name": "zoho-creator",
  "_rpcs": {
    "rpcTester": {
      "api": {
        "response": {
          "output": "getIterationArrayForFormsList(obj)"
        }
      },
      "rev": 3,
      "name": "rpcTester",
      "label": "TESTER",
      "appName": "zoho-creator",
      "apiJsonc": "{\n    \"response\": {\n        \"output\": \"getIterationArrayForFormsList(obj)\"\n    }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "obj",
          "type": "text",
          "label": "Object",
          "required": true
        }
      ],
      "accountName": "zoho-creator",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"obj\",\n        \"type\": \"text\",\n        \"label\": \"Object\",\n        \"required\": true\n    }\n]"
    },
    "rpcListFormFields": {
      "api": {
        "url": "https://creator.zoho.{{connection.region}}/api/{{connection.ownerName}}/json/{{parameters.appLinkName}}/form/{{ifempty(parameters.formLinkName, getViewLinkNameValue(parameters.viewLinkName, 'formlinkname'))}}/fields",
        "type": "json",
        "method": "GET",
        "response": {
          "output": "{{if(parameters.returnArrayAsOptionsRPC, convertFieldsToOptions(extractFormFields(body, parameters.shouldReturnArray, parameters.trigger)), extractFormFields(body, parameters.shouldReturnArray, parameters.trigger, parameters.update)}}"
        }
      },
      "rev": 3,
      "name": "rpcListFormFields",
      "label": "List Form Fields",
      "appName": "zoho-creator",
      "apiJsonc": "{\n    \"url\": \"https://creator.zoho.{{connection.region}}/api/{{connection.ownerName}}/json/{{parameters.appLinkName}}/form/{{ifempty(parameters.formLinkName, getViewLinkNameValue(parameters.viewLinkName, 'formlinkname'))}}/fields\",\n    \"method\": \"GET\",\n    \"type\": \"json\",\n    \"response\": {\n        \"output\": \"{{if(parameters.returnArrayAsOptionsRPC, convertFieldsToOptions(extractFormFields(body, parameters.shouldReturnArray, parameters.trigger)), extractFormFields(body, parameters.shouldReturnArray, parameters.trigger, parameters.update)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "appLinkName",
          "type": "text",
          "label": "Application Link Name",
          "required": true
        },
        {
          "name": "formLinkName",
          "type": "text",
          "label": "Form Link Name"
        },
        {
          "name": "viewLinkName",
          "type": "text",
          "label": "View Link Name"
        },
        {
          "name": "shouldReturnArray",
          "type": "boolean",
          "label": "Is Result An Array? (unchecked = Collection)",
          "nested": [
            {
              "name": "returnArrayAsOptionsRPC",
              "type": "boolean",
              "label": "Return Array in an Options RPC Format?",
              "default": false
            }
          ],
          "default": false
        },
        {
          "name": "trigger",
          "type": "boolean",
          "label": "Trigger",
          "default": false
        },
        {
          "name": "update",
          "type": "boolean",
          "label": "Update",
          "default": false
        }
      ],
      "accountName": "zoho-creator",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"text\",\n        \"label\": \"Application Link Name\",\n        \"required\": true\n    },\n    {\n        \"name\": \"formLinkName\",\n        \"type\": \"text\",\n        \"label\": \"Form Link Name\"\n    },\n    {\n        \"name\": \"viewLinkName\",\n        \"type\": \"text\",\n        \"label\": \"View Link Name\"\n    },\n    {\n        \"name\": \"shouldReturnArray\",\n        \"type\": \"boolean\",\n        \"label\": \"Is Result An Array? (unchecked = Collection)\",\n        \"default\": false,\n        \"nested\": [\n            {\n                \"name\": \"returnArrayAsOptionsRPC\",\n                \"type\": \"boolean\",\n                \"label\": \"Return Array in an Options RPC Format?\",\n                \"default\": false\n            }\n        ]\n    },\n    {\n        \"name\": \"trigger\",\n        \"label\": \"Trigger\",\n        \"type\": \"boolean\",\n        \"default\": false\n    },\n    {\n        \"name\": \"update\",\n        \"label\": \"Update\",\n        \"type\": \"boolean\",\n        \"default\": false\n    }\n]"
    },
    "rpcListApplications": {
      "api": {
        "url": "/applications",
        "response": {
          "type": "json",
          "output": {
            "label": "{{capitalize(item.application_name)}}",
            "value": "{{item.link_name}}"
          },
          "iterate": "{{body.result.application_list.applications[1].application}}"
        }
      },
      "rev": 3,
      "name": "rpcListApplications",
      "label": "List Applications",
      "appName": "zoho-creator",
      "apiJsonc": "{\n    \"url\": \"/applications\",\n    \"response\": {\n        \"type\": \"json\",\n        \"output\": {\n            \"label\": \"{{capitalize(item.application_name)}}\",\n            \"value\": \"{{item.link_name}}\"\n        },\n        \"iterate\": \"{{body.result.application_list.applications[1].application}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "zoho-creator",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "rpcViewRecordsInReport": {
      "api": {
        "qs": {
          "raw": true
        },
        "url": "/{{parameters.appLinkName}}/view/{{parameters.viewLinkName}}",
        "response": {
          "type": "json",
          "output": {
            "label": "{{item.ID}}",
            "value": "{{item.ID}}"
          },
          "iterate": "{{getIterationArrayForRecords(body, parameters.viewLinkName)}}"
        }
      },
      "rev": 3,
      "name": "rpcViewRecordsInReport",
      "label": "View Records in Report",
      "appName": "zoho-creator",
      "apiJsonc": "{\n    \"qs\": {\n        \"raw\": true\n    },\n    \"url\": \"/{{parameters.appLinkName}}/view/{{parameters.viewLinkName}}\",\n    \"response\": {\n        \"type\": \"json\",\n        \"output\": {\n            \"label\": \"{{item.ID}}\",\n            \"value\": \"{{item.ID}}\"\n        },\n        \"iterate\": \"{{getIterationArrayForRecords(body, parameters.viewLinkName)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "appLinkName",
          "type": "text",
          "label": "Application Link Name",
          "required": true
        },
        {
          "name": "viewLinkName",
          "type": "text",
          "label": "Report (View) Link Name",
          "required": true
        }
      ],
      "accountName": "zoho-creator",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"text\",\n        \"label\": \"Application Link Name\",\n        \"required\": true\n    },\n    {\n        \"name\": \"viewLinkName\",\n        \"type\": \"text\",\n        \"label\": \"Report (View) Link Name\",\n        \"required\": true\n    }\n]"
    },
    "rpcListFormsInApplication": {
      "api": {
        "url": "/{{parameters.appLinkName}}/forms",
        "response": {
          "type": "json",
          "output": {
            "label": "{{capitalize(item.componentname)}}",
            "value": "{{item.displayname}}"
          },
          "iterate": "{{slice(body.`application-name`[2].formList, 1)}}"
        }
      },
      "rev": 3,
      "name": "rpcListFormsInApplication",
      "label": "List Forms in Application",
      "appName": "zoho-creator",
      "apiJsonc": "{\n    \"url\": \"/{{parameters.appLinkName}}/forms\",\n    \"response\": {\n        \"type\": \"json\",\n        \"output\": {\n            \"label\": \"{{capitalize(item.componentname)}}\",\n            \"value\": \"{{item.displayname}}\"\n        },\n        \"iterate\": \"{{slice(body.`application-name`[2].formList, 1)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "appLinkName",
          "type": "text",
          "label": "Application Name",
          "required": true
        }
      ],
      "accountName": "zoho-creator",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"text\",\n        \"label\": \"Application Name\",\n        \"required\": true\n    }\n]"
    },
    "rpcListViewsInApplication": {
      "api": {
        "url": "/{{parameters.appLinkName}}/formsandviews",
        "response": {
          "type": "json",
          "output": {
            "label": "{{capitalize(item.displayname)}}",
            "value": "{ \"componentname\": \"{{item.componentname}}\", \"formlinkname\": \"{{item.formlinkname}}\" }"
          },
          "iterate": "{{slice(body.`application-name`[2].viewList, 1)}}"
        }
      },
      "rev": 3,
      "name": "rpcListViewsInApplication",
      "label": "List Views in Application",
      "appName": "zoho-creator",
      "apiJsonc": "{\n    \"url\": \"/{{parameters.appLinkName}}/formsandviews\",\n    \"response\": {\n        \"type\": \"json\",\n        \"output\": {\n            \"label\": \"{{capitalize(item.displayname)}}\",\n            \"value\": \"{ \\\"componentname\\\": \\\"{{item.componentname}}\\\", \\\"formlinkname\\\": \\\"{{item.formlinkname}}\\\" }\"\n        },\n        \"iterate\": \"{{slice(body.`application-name`[2].viewList, 1)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "appLinkName",
          "type": "text",
          "label": "Application Name",
          "required": true
        }
      ],
      "accountName": "zoho-creator",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"text\",\n        \"label\": \"Application Name\",\n        \"required\": true\n    }\n]"
    }
  },
  "flags": {},
  "label": "Zoho Creator",
  "theme": "#387bbb",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Application",
      "modules": [
        "watchApplications",
        "listApplications",
        "listFormsInApplication",
        "listViewsInApplication"
      ]
    },
    {
      "label": "Record",
      "modules": [
        "watchRecords",
        "addRecord",
        "deleteRecords",
        "editRecords",
        "viewRecordsInReport"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "makeApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000001bd4944415458c3edd63d6b544118c5f1b34131bea1858276169a08161689087e075fb0b2150b51f013d8ca82c4d652b1b0888d85585a69626340a3a058b895efdaa41323fe2c32819b259bbd097793c21c182e0c33f33f779e679e996453ffbb5a6b9d88c5f95b92fc49a2d55afd72ab9e51c049722cc9d524a3496693dc4ed24992b518a90d2f6d1cb378877bf880691c5d1c3368f81b4c5580e3788de70331d1033e52e90fc68a89698c3666a2077c09a06b4c074fb0b78e81a17ef0a2f1247793cc25b994e47db26cb21d4c329ce46b92f926ffbce7d656c69dc5474c621f76e242355483849f29f007d88fedb885f9ae645d17f83026f01d3730533b311b82dfc40f5c460bc7f10a8fb1bb8e8143788917bde257fa4ee1131e969807d731872b18aa183d876f38d9bdd68aa7a05fb44aabea6ff96ecdd2325f8fd34008b6a18d9fb8567661acd48f47d8d537111bca8376c9838912ce6738b2de27a18ddf78da542d98aa6962b298d881f338bce67ba1ce3dd035ee343ee37ea9847d192b6667a5d6cf24b998644f923b494616c15dfa92e4579203593809cd6843afe33e26d6e741b28c891305f8d6c293acb3ea4ba768c31fa51bfe2cdfd4a6fe01e8e0124749b76dd60000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000003144944415478daed9abd6b53511887df241262eb37ce82687551ff03054174705011441dc4561d1c7554c1c568ad8b0eeaa68338b8f80f88502b6875aa8b0e8222b460317129ad1f697d1c722e794d6f726f9293939bebf941a170dfde7b9ee77e9dbef788f8f8f8f8f8f8f8f8f8fc9fc9b83e20101c774844768bc85611591491f722f25244a645443219e74373030f0c0017804fc012b5548077c031206744a5270afe06f0d340ff01e6811fe6778032700ec8a64682821f55f0df8131602f700078604404dbd221a1c1992f01c3c1a5ae6a8a7582fa5b4213f8d3f560a676658884b37d2921e2cc8702a546423bf0a991d0097c0c09234026b1126cc0d7edab00dc5373858fc0a6440a50f0d72dc10bb01d1857029e031b1227a0017cd902fc0b05ff1ad8116c4f4c9ac08f58849fd4f0e66705b0a6a7cf0487f03bebe0d7519d45be0d9b53f43bfc7804fc5af360acf4ec159920789c4be821fc6ae0ae82ff023c02e69c4968027fc601fc1d053f0d1c02f2c02560414968792cadc217bb08ff26047e15701bf85d071f6ccf039795841270189bafcba4c2abfde5812bd4fa09af808d5604509b92da841f0a81df15033ef4cc52fbdfe1b1a95d00f6db1470545d6273541b152d4f40ccbe7254bb3f41a6f4995775c30abe041c6974592b69278045f337e7e38c2fdbae974ebdc6a85952755911294874173b1ba3a6c59176e716d80c3c8bb80506809bc02f53336bcef0b22bcfd40f024f4ced3cb0af1b0f419bafbf6d319e038354a7bc8184aff512d4fd5f547513c07a6b022224d89c0085bd099a4a30f0d7d498668183d87c0d2654c27133160dff0d38d5ce03ba1f25cc004fcdfdee06deb184c906126e290938874fa004f7f03124d8ec03369270d5d49d6cf558dd9260ab131cb72b9433c7ed7d9bdca184e435451d48487e5bbc8b120ac07d2520b91f46624888ddbda55f3f8dd990d004be3f3e8e76222135f0211246a324a40ebe1509aa265df01112ca541b1ec122a987fcbb482a1df011121a2d934b177c88848bc067962f949cc2f142c95e2f95dd23225b44a422221f44644244664452ba54d6c7c7c7c7c7c7c7c72741f90bece6fac4866757540000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-04-18T07:25:36.540668+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda793000006e24944415478daed9d498c15451c877f03cc200ace0450899a08174513441363a21e0c4445540e7af164a2180fc4b9a8881e8c110f1a5c00232ef1a41e88510f2e1c8c061397044e0ac6082a32cc68048d121681019cf779e87ed2a9bca57b5ebfd755ddff2fe90bd35455d7f7ebd75b75b564188661188661188661188661188661188661188661188661188661184619e82bba01450048d214498392ce933443524dd2214907251d93a4bebef2774ff9b73026962e49b3252d91b44cd255922e94345d12920e4b1a95b44dd216493b258d572108a50610d00fdc016c058ed39a1af027f03a7059fcff8bde0c6332c4f20681b5c0df64a306ec009659080224217f03309e517e927dc00a0b414024e46f044eb6d9cb27e2a5d662bdd13286a0946737b1a041496b25ad9234d060b5e392b64bda2a694c52bfa4458a4e0e172aba4a701993342ce963a91a5709c1e1fcec37dbf347800780a1fa1e9d581600af0227aaf44b500a52caff09b8a599c0f8dfcf05d65908022283fc9bdb898bff3eab4d08f6115d565a088a264ff94e991602dfc9e367bf4dd9b380e72c041e9290bf9ee6d7f99392efd46121f08d94f27fee44be53d7b916024fe8a57ca7ce3421b8dd42d0458a90efd4dd2e042316822e51a47ca70d16825e93417ed79fdc6508c1720b410ef824df69533d04cdc6176c07ceb70074808ff29db6cd013e6ad2aebf80ab2d009324b197bdd842fe9e02e54f035602079ab46d37708905601204207f2a703fd1d0b1461c061e04fa2c00192989fc8788c62116dd9d611188fc9526bf0b64907fabc7f21f36f993a02af2e3b2fa80b3ebeb563e2c29e5ff12b2fc7abb8179c093c0e7c03bc0924a872021ff8540e51fc920ff62e05da211c875aafb143120f97fe424ff3d477e9dd1ca85a024f21fc9417ef54290417ecf1fa61424bf3a2130f96d29efa01293ff3fb5783b8f54260429e5ef2d58fe7d9dc84f943517d8dc62cfff02580cac068e963e042591bf3a83fcb75bc8ff12b83c5e77005803fc53da1024e43f1fb8fc819ce5d7973421b82dc8105450fe5b69e53bffb75d08f600370615820cf27b9eee94f28f765bbe53c600f0588b107c0d5c1444001cf9cd064dfa2effd19ce47fd54abe5356ab104c004fe1fb00930aca7fb38dfc2bd26e6722044f34e9bb5dc07c6f035031f973f294ef943d1378a34199a7817b7add77591bde6eac7c51f2a700f7fa2cdfa9e34a60ac41d99bbc0b40bd414483207d942fe006e0d716f2d7a4943f8de87e4657e427ea1900de6f50fea7c00c1f03700ed1208746fc4e413734120178a649dbc681c749318c2b2ee702e08726657dd3a97ca7cdeb1bd4b18de8309b4bff4ce9bc8874db142fbe9265ba2f244d34f9db80a2d9c9ba897ffd9848ec307e9efc09b89ee8ae5aa787802944b38e9e6a52d68eb8ae4e0f01d3810f1a94ff09709657878044a367e2ef5d3f017702bfe5108241e0e56e8420d1d66b880e9d2e2ff5baffb236dee75bbf02ee02f6e714824d79872051f6e606659e04eef63600890df0f9c95f9e9783437986205e6f56bc03359af06a2721dc0e0e200479de104a1382ebda6d6742feba267df62fd1b3097ff7fe061b642148118214f2013e237aa7a0109f9d74b4ef43c00a0d8123bfd915d4f7c0b5c1ecfd0d3a27f410a47d2c3c04bc92360429e5ef22f4b7874a10822c0343b28460661bf9bb8397ef748eef2f82f42a04df023701cfb691bfb414f29dceb11044c3c2f703c72a23dfe99c328420cd08e121a28f4f9c263de595ef748eef7301e4f58e409610945fbed339be87a0a3b7841265a5094175e43b9d6321a8a27ca7734298142acf10244f0c775556bed339550ac130d1f4309b08f50e5fde942404692789aa3f95f47b8c7faf092804939e2fc86803670644b40a41919343db5c81dd2611025f6708b710749b928460383ed617dd9d619221045dfb444c9bb6d543d06abaf8f916800e082004f6c1886ee363083873c5629f8ce9053e852021bfd55bd02314700bbbd42442b0812e7d2a36651becb37145e18420d78f45a7acdbe4174d8610a4fe5c7cca3a4dbe2ff4320426df537a110293ef39dd0c414af9fb4c7ec12442b0b145087ecc1202931f1879862083fc72cfed1f1a7984c0e4074eca10ec259a2360a82e31b12c005eab8afc2c932305432c6650d25a49ab144ddee4725cd276495b258d49ea97b448d232490bd57802ad5149c392b648525f5f29bbaf1ca4fc2580e835ad8978a9b558af547b7e25704230cee41931f9819208c1d3c0c18ce26b44af73f77cac819123b1bc7e6005d16ca62752883f109f0c5e5a66f995398b49089c2d69a9a4e592164b9a2769baa219380f2b3ad1db26e94349df493a55e693bdf26e590be2304c5574a53057d20c49354987241d94744cb2b37cc3300cc3300cc3300cc3300cc3300cc3300cc3300cc3300cc3300cc330c2e13f31873422701d55900000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "addRecord": {
      "id": 21139,
      "api": {
        "qs": "{{prepareRecordForCreateOrUpdate(parameters, connection.authToken, connection.scope)}}",
        "url": "https://creator.zoho.{{connection.region}}/api/{{connection.ownerName}}/json/{{parameters.appLinkName}}/form/{{parameters.formLinkName}}/record/add",
        "method": "POST",
        "response": {
          "type": "json",
          "error": "{{body.formname[2].operation[2].status}}",
          "valid": "{{isAddResponseValid(body)}}",
          "output": "{{getNewRecordId(body)}}"
        }
      },
      "rev": 4,
      "crud": null,
      "name": "addRecord",
      "epoch": null,
      "flags": {},
      "label": "Add a Record",
      "scope": [],
      "expect": [
        {
          "name": "appLinkName",
          "type": "select",
          "label": "Application Name",
          "options": {
            "store": "rpc://app%23zoho-creator@1/rpcListApplications",
            "nested": [
              {
                "name": "formLinkName",
                "type": "select",
                "label": "Form Name",
                "options": {
                  "store": "rpc://app%23zoho-creator@1/rpcListFormsInApplication",
                  "nested": "rpc://app%23zoho-creator@1/rpcListFormFields"
                },
                "editable": true,
                "required": true
              }
            ]
          },
          "editable": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://creator.zoho.{{connection.region}}/api/{{connection.ownerName}}/json/{{parameters.appLinkName}}/form/{{parameters.formLinkName}}/record/add\",\n    \"qs\": \"{{prepareRecordForCreateOrUpdate(parameters, connection.authToken, connection.scope)}}\",\n    \"method\": \"POST\",\n    \"response\": {\n        \"type\": \"json\",\n        \"error\": \"{{body.formname[2].operation[2].status}}\",\n        \"valid\": \"{{isAddResponseValid(body)}}\",\n        \"output\": \"{{getNewRecordId(body)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "record_id",
          "type": "uinteger",
          "label": "Record ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[/* \n    \"ZohoCreator.form.CREATE\",\n    \"ZohoCreator.meta.application.READ\",\n    \"ZohoCreator.meta.form.READ\" */\n]",
      "accountName": "zoho-creator",
      "description": "Adds a new record to the selected application form.\nOnly the owner of the application can add a record to a private Form.\nAnyone with a valid authtoken can add a record to a public Form.\nAny user with a valid authtoken and share permission can add a record to a shared Form.",
      "expectJsonc": "[\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"select\",\n        \"label\": \"Application Name\",\n        \"options\": {\n            \"store\": \"rpc://app%23zoho-creator@1/rpcListApplications\",\n            \"nested\": [\n                {\n                    \"name\": \"formLinkName\",\n                    \"type\": \"select\",\n                    \"label\": \"Form Name\",\n                    \"options\": {\n                        \"store\": \"rpc://app%23zoho-creator@1/rpcListFormsInApplication\",\n                        \"nested\": \"rpc://app%23zoho-creator@1/rpcListFormFields\"\n                    },\n                    \"editable\": true,\n                    \"required\": true\n                }\n            ]\n        },\n        \"editable\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"record_id\",\n        \"type\": \"uinteger\",\n        \"label\": \"Record ID\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "editRecords": {
      "id": 21140,
      "api": {
        "qs": "{{prepareRecordForCreateOrUpdate(omit(parameters, 'criteria'), connection.authToken, connection.scope, ifempty(buildFilter(parameters.criteria), undefined))}}",
        "url": "https://creator.zoho.{{connection.region}}/api/{{connection.ownerName}}/json/{{parameters.appLinkName}}/view/{{getViewLinkNameValue(parameters.viewLinkName, 'componentname')}}/record/update",
        "type": "json",
        "method": "POST",
        "response": {
          "type": "json",
          "error": "{{body.formname[2].operation[2].status}}",
          "valid": "{{isEditResponseValid(body)}}",
          "output": {
            "Message": "Record was successfully updated."
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "editRecords",
      "epoch": null,
      "flags": {},
      "label": "Edit Records",
      "scope": [],
      "expect": [
        {
          "name": "appLinkName",
          "type": "select",
          "label": "Application Name",
          "options": {
            "store": "rpc://app%23zoho-creator@1/rpcListApplications",
            "nested": [
              {
                "name": "viewLinkName",
                "type": "select",
                "label": "View Name",
                "options": {
                  "store": "rpc://app%23zoho-creator@1/rpcListViewsInApplication",
                  "nested": [
                    {
                      "help": "Zoho Creator currently supports only AND rules.\nTo make sure, that you are editing the exact record that you want to edit, use as many filters as possible.",
                      "name": "criteria",
                      "type": "filter",
                      "label": "Criteria",
                      "options": {
                        "logic": "and",
                        "store": "rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true&returnArrayAsOptionsRPC=true",
                        "operators": [
                          {
                            "label": "All Types",
                            "options": [
                              {
                                "label": "equals",
                                "short": "==",
                                "value": "=="
                              },
                              {
                                "label": "not equals",
                                "short": "!=",
                                "value": "!="
                              }
                            ]
                          },
                          {
                            "label": "Numbers and Dates",
                            "options": [
                              {
                                "label": "less than",
                                "short": "<",
                                "value": "<"
                              },
                              {
                                "label": "less than or equal",
                                "short": "<=",
                                "value": "<="
                              },
                              {
                                "label": "greater than",
                                "short": ">",
                                "value": ">"
                              },
                              {
                                "label": "greater than or equal",
                                "short": ">=",
                                "value": ">="
                              }
                            ]
                          }
                        ]
                      },
                      "required": true
                    },
                    "rpc://app%23zoho-creator@1/rpcListFormFields?update=true"
                  ]
                },
                "editable": true,
                "required": true
              }
            ]
          },
          "editable": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://creator.zoho.{{connection.region}}/api/{{connection.ownerName}}/json/{{parameters.appLinkName}}/view/{{getViewLinkNameValue(parameters.viewLinkName, 'componentname')}}/record/update\",\n    \"qs\": \"{{prepareRecordForCreateOrUpdate(omit(parameters, 'criteria'), connection.authToken, connection.scope, ifempty(buildFilter(parameters.criteria), undefined))}}\",\n    \"type\": \"json\",\n    \"method\": \"POST\",\n    \"response\": {\n        \"type\": \"json\",\n        \"error\": \"{{body.formname[2].operation[2].status}}\",\n        \"valid\": \"{{isEditResponseValid(body)}}\",\n        \"output\": {\n            \"Message\": \"Record was successfully updated.\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "zoho-creator",
      "description": "Edit records that match the selected criteria.",
      "expectJsonc": "[\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"select\",\n        \"label\": \"Application Name\",\n        \"options\": {\n            \"store\": \"rpc://app%23zoho-creator@1/rpcListApplications\",\n            \"nested\": [\n                {\n                    \"name\": \"viewLinkName\",\n                    \"type\": \"select\",\n                    \"label\": \"View Name\",\n                    \"options\": {\n                        \"store\": \"rpc://app%23zoho-creator@1/rpcListViewsInApplication\",\n                        \"nested\": [\n                            {\n                                \"help\": \"Zoho Creator currently supports only AND rules.\\nTo make sure, that you are editing the exact record that you want to edit, use as many filters as possible.\",\n                                \"name\": \"criteria\",\n                                \"type\": \"filter\",\n                                \"required\": true,\n                                \"label\": \"Criteria\",\n                                \"options\": {\n                                    \"logic\": \"and\",\n                                    \"store\": \"rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true&returnArrayAsOptionsRPC=true\",\n                                    \"operators\": [\n                                        {\n                                            \"label\": \"All Types\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"equals\",\n                                                    \"short\": \"==\",\n                                                    \"value\": \"==\"\n                                                },\n                                                {\n                                                    \"label\": \"not equals\",\n                                                    \"short\": \"!=\",\n                                                    \"value\": \"!=\"\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"label\": \"Numbers and Dates\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"less than\",\n                                                    \"short\": \"<\",\n                                                    \"value\": \"<\"\n                                                },\n                                                {\n                                                    \"label\": \"less than or equal\",\n                                                    \"short\": \"<=\",\n                                                    \"value\": \"<=\"\n                                                },\n                                                {\n                                                    \"label\": \"greater than\",\n                                                    \"short\": \">\",\n                                                    \"value\": \">\"\n                                                },\n                                                {\n                                                    \"label\": \"greater than or equal\",\n                                                    \"short\": \">=\",\n                                                    \"value\": \">=\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            },\n                            \"rpc://rpcListFormFields?update=true\"\n                        ]\n                    },\n                    \"editable\": true,\n                    \"required\": true\n                }\n            ]\n        },\n        \"editable\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeApiCall": {
      "id": 21141,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://creator.zoho.{{connection.region}}/api/json/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 3,
      "crud": null,
      "name": "makeApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://creator.zoho.com/api/json`.\ne.g.`/applications`",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://creator.zoho.{{connection.region}}/api/json/{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "zoho-creator",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to `https://creator.zoho.com/api/json`.\\ne.g.`/applications`\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n        \"default\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchRecords": {
      "id": 21142,
      "api": {
        "qs": {
          "raw": true,
          "limit": "{{parameters.limit}}",
          "criteria": "{{ifempty(buildFilter(parameters.criteria), undefined)}}"
        },
        "url": "/{{parameters.appLinkName}}/view/{{getViewLinkNameValue(parameters.viewLinkName, 'componentname')}}",
        "type": "json",
        "method": "GET",
        "response": {
          "type": "json",
          "limit": "{{parameters.limit}}",
          "output": "{{recordResponse(item)}}",
          "iterate": "{{iterateRecords(body, getViewLinkNameValue(parameters.viewLinkName, 'formlinkname'))}}",
          "trigger": {
            "id": "{{item.ID}}",
            "date": "{{switch(parameters.select, 'create', parseDateTime(item.Added_Time), 'modify', parseDateTime(item.Modified_Time))}}",
            "type": "date",
            "order": "asc"
          }
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "watchRecords",
      "epoch": {
        "response": {
          "limit": 500,
          "output": {
            "date": "{{switch(parameters.select, 'create', parseDateTime(item.Added_Time), 'modify', parseDateTime(item.Modified_Time))}}",
            "label": "Record ID: {{item.ID}}"
          },
          "iterate": "{{iterateRecords(body, getViewLinkNameValue(parameters.viewLinkName, 'formlinkname'))}}"
        }
      },
      "flags": {},
      "label": "Watch Records",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/{{parameters.appLinkName}}/view/{{getViewLinkNameValue(parameters.viewLinkName, 'componentname')}}\",\n    \"method\": \"GET\",\n    \"type\": \"json\",\n    \"qs\": {\n        \"raw\": true,\n        \"limit\": \"{{parameters.limit}}\",\n        \"criteria\": \"{{ifempty(buildFilter(parameters.criteria), undefined)}}\"\n    },\n    \"response\": {\n        \"type\": \"json\",\n        \"iterate\": \"{{iterateRecords(body, getViewLinkNameValue(parameters.viewLinkName, 'formlinkname'))}}\",\n        \"trigger\": {\n            \"id\": \"{{item.ID}}\",\n            \"date\": \"{{switch(parameters.select, 'create', parseDateTime(item.Added_Time), 'modify', parseDateTime(item.Modified_Time))}}\",\n            \"type\": \"date\",\n            \"order\": \"asc\"\n        },\n        \"output\": \"{{recordResponse(item)}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true&trigger=true",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 500,\n        \"iterate\": \"{{iterateRecords(body, getViewLinkNameValue(parameters.viewLinkName, 'formlinkname'))}}\",\n        \"output\": {\n            \"label\": \"Record ID: {{item.ID}}\",\n            \"date\": \"{{switch(parameters.select, 'create', parseDateTime(item.Added_Time), 'modify', parseDateTime(item.Modified_Time))}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "help": "Depending on your selection, the `Added Time` or the `Modified Time` field must be included in the server response for objects chosen in the `View Name` dropdown below. See the following [help section](https://support.integromat.com/hc/en-us/articles/360011479199#h_b01df5f9-56fa-4209-975b-49da53f298ba) for step-by-step instructions.",
          "name": "select",
          "type": "select",
          "label": "Watch Records",
          "options": [
            {
              "label": "By Added Time",
              "value": "create",
              "default": true
            },
            {
              "label": "By Modified Time",
              "value": "modify"
            }
          ],
          "mappable": false,
          "required": true
        },
        {
          "name": "appLinkName",
          "type": "select",
          "label": "Application Name",
          "options": {
            "store": "rpc://app%23zoho-creator@1/rpcListApplications",
            "nested": [
              {
                "help": "Depending on your selection in the `Watch Records` dropdown above, the `Added Time` or the `Modified Time` field must be included in the server response. See the following [help section](https://support.integromat.com/hc/en-us/articles/360011479199#h_b01df5f9-56fa-4209-975b-49da53f298ba) for step-by-step instructions.",
                "name": "viewLinkName",
                "type": "select",
                "label": "View Name",
                "options": {
                  "store": "rpc://app%23zoho-creator@1/rpcListViewsInApplication",
                  "nested": [
                    {
                      "help": "Zoho Creator currently supports only AND rules.",
                      "name": "criteria",
                      "type": "filter",
                      "label": "Criteria",
                      "options": {
                        "logic": "and",
                        "store": "rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true&returnArrayAsOptionsRPC=true",
                        "operators": [
                          {
                            "label": "All Types",
                            "options": [
                              {
                                "label": "equals",
                                "short": "==",
                                "value": "=="
                              },
                              {
                                "label": "not equals",
                                "short": "!=",
                                "value": "!="
                              }
                            ]
                          },
                          {
                            "label": "Numbers and Dates",
                            "options": [
                              {
                                "label": "less than",
                                "short": "<",
                                "value": "<"
                              },
                              {
                                "label": "less than or equal",
                                "short": "<=",
                                "value": "<="
                              },
                              {
                                "label": "greater than",
                                "short": ">",
                                "value": ">"
                              },
                              {
                                "label": "greater than or equal",
                                "short": ">=",
                                "value": ">="
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "editable": true,
                "required": true
              }
            ]
          },
          "editable": true,
          "required": true
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "zoho-creator",
      "description": "Triggers when a new record is added in a form from application.\nNOTE: At least one of the `Added Time` and `Modified Time` fields must be included in the server response for this module to work. Please refer to the corresponding help section for step-by-step instructions.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "\"rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true&trigger=true\"",
      "parametersJsonc": "[\n    {\n        \"name\": \"select\",\n        \"label\": \"Watch Records\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"help\": \"Depending on your selection, the `Added Time` or the `Modified Time` field must be included in the server response for objects chosen in the `View Name` dropdown below. See the following [help section](https://support.integromat.com/hc/en-us/articles/360011479199#h_b01df5f9-56fa-4209-975b-49da53f298ba) for step-by-step instructions.\",\n        \"options\": [\n            {\n                \"label\": \"By Added Time\",\n                \"value\": \"create\",\n                \"default\": true\n            },\n            {\n                \"label\": \"By Modified Time\",\n                \"value\": \"modify\"\n            }\n        ]\n    },\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"select\",\n        \"label\": \"Application Name\",\n        \"options\": {\n            \"store\": \"rpc://app%23zoho-creator@1/rpcListApplications\",\n            \"nested\": [\n                {\n                    \"name\": \"viewLinkName\",\n                    \"type\": \"select\",\n                    \"label\": \"View Name\",\n\t\t\t\t\t\"help\": \"Depending on your selection in the `Watch Records` dropdown above, the `Added Time` or the `Modified Time` field must be included in the server response. See the following [help section](https://support.integromat.com/hc/en-us/articles/360011479199#h_b01df5f9-56fa-4209-975b-49da53f298ba) for step-by-step instructions.\",\n                    \"options\": {\n                        \"store\": \"rpc://app%23zoho-creator@1/rpcListViewsInApplication\",\n                        \"nested\": [\n                            {\n                                \"help\": \"Zoho Creator currently supports only AND rules.\",\n                                \"name\": \"criteria\",\n                                \"type\": \"filter\",\n                                \"label\": \"Criteria\",\n                                \"options\": {\n                                    \"logic\": \"and\",\n                                    \"store\": \"rpc://rpcListFormFields?shouldReturnArray=true&returnArrayAsOptionsRPC=true\",\n                                    \"operators\": [\n                                        {\n                                            \"label\": \"All Types\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"equals\",\n                                                    \"short\": \"==\",\n                                                    \"value\": \"==\"\n                                                },\n                                                {\n                                                    \"label\": \"not equals\",\n                                                    \"short\": \"!=\",\n                                                    \"value\": \"!=\"\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"label\": \"Numbers and Dates\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"less than\",\n                                                    \"short\": \"<\",\n                                                    \"value\": \"<\"\n                                                },\n                                                {\n                                                    \"label\": \"less than or equal\",\n                                                    \"short\": \"<=\",\n                                                    \"value\": \"<=\"\n                                                },\n                                                {\n                                                    \"label\": \"greater than\",\n                                                    \"short\": \">\",\n                                                    \"value\": \">\"\n                                                },\n                                                {\n                                                    \"label\": \"greater than or equal\",\n                                                    \"short\": \">=\",\n                                                    \"value\": \">=\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            }\n                        ]\n                    },\n                    \"editable\": true,\n                    \"required\": true\n                }\n            ]\n        },\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteRecords": {
      "id": 21143,
      "api": {
        "qs": {
          "criteria": "{{ifempty(buildFilter(parameters.criteria), undefined))}}"
        },
        "url": "https://creator.zoho.{{connection.region}}/api/{{connection.ownerName}}/json/{{parameters.appLinkName}}/form/{{getViewLinkNameValue(parameters.viewLinkName, 'formlinkname')}}/record/delete",
        "type": "json",
        "method": "POST",
        "response": {
          "type": "json",
          "error": "{{body.formname[2].operation[2].status}}",
          "valid": "{{isEditResponseValid(body)}}",
          "output": "{{body}}"
        }
      },
      "rev": 4,
      "crud": null,
      "name": "deleteRecords",
      "epoch": null,
      "flags": {},
      "label": "Delete Records",
      "scope": [],
      "expect": [
        {
          "name": "appLinkName",
          "type": "select",
          "label": "Application Name",
          "options": {
            "store": "rpc://app%23zoho-creator@1/rpcListApplications",
            "nested": [
              {
                "name": "viewLinkName",
                "type": "select",
                "label": "View Name",
                "options": {
                  "store": "rpc://app%23zoho-creator@1/rpcListViewsInApplication",
                  "nested": [
                    {
                      "help": "Zoho Creator currently supports only AND rules.",
                      "name": "criteria",
                      "type": "filter",
                      "label": "Criteria",
                      "options": {
                        "logic": "and",
                        "store": "rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true&returnArrayAsOptionsRPC=true",
                        "operators": [
                          {
                            "label": "All Types",
                            "options": [
                              {
                                "label": "equals",
                                "short": "==",
                                "value": "=="
                              },
                              {
                                "label": "not equals",
                                "short": "!=",
                                "value": "!="
                              }
                            ]
                          },
                          {
                            "label": "Numbers and Dates",
                            "options": [
                              {
                                "label": "less than",
                                "short": "<",
                                "value": "<"
                              },
                              {
                                "label": "less than or equal",
                                "short": "<=",
                                "value": "<="
                              },
                              {
                                "label": "greater than",
                                "short": ">",
                                "value": ">"
                              },
                              {
                                "label": "greater than or equal",
                                "short": ">=",
                                "value": ">="
                              }
                            ]
                          }
                        ]
                      },
                      "required": true
                    }
                  ]
                },
                "editable": true,
                "required": true
              }
            ]
          },
          "editable": true,
          "required": true
        }
      ],
      "public": false,
      "typeId": 4,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://creator.zoho.{{connection.region}}/api/{{connection.ownerName}}/json/{{parameters.appLinkName}}/form/{{getViewLinkNameValue(parameters.viewLinkName, 'formlinkname')}}/record/delete\",\n    \"qs\": {\n        \"criteria\": \"{{ifempty(buildFilter(parameters.criteria), undefined))}}\"\n    },\n    \"type\": \"json\",\n    \"method\": \"POST\",\n    \"response\": {\n        \"valid\": \"{{isEditResponseValid(body)}}\",\n        \"error\": \"{{body.formname[2].operation[2].status}}\",\n        \"output\": \"{{body}}\",\n        \"type\": \"json\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "zoho-creator",
      "description": "Delete records that match the selected criteria.",
      "expectJsonc": "[\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"select\",\n        \"label\": \"Application Name\",\n        \"options\": {\n            \"store\": \"rpc://app%23zoho-creator@1/rpcListApplications\",\n            \"nested\": [\n                {\n                    \"name\": \"viewLinkName\",\n                    \"type\": \"select\",\n                    \"label\": \"View Name\",\n                    \"options\": {\n                        \"store\": \"rpc://app%23zoho-creator@1/rpcListViewsInApplication\",\n                        \"nested\": [\n                            {\n                                \"help\": \"Zoho Creator currently supports only AND rules.\",\n                                \"name\": \"criteria\",\n                                \"type\": \"filter\",\n                                \"required\": true,\n                                \"label\": \"Criteria\",\n                                \"options\": {\n                                    \"logic\": \"and\",\n                                    \"store\": \"rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true&returnArrayAsOptionsRPC=true\",\n                                    \"operators\": [\n                                        {\n                                            \"label\": \"All Types\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"equals\",\n                                                    \"short\": \"==\",\n                                                    \"value\": \"==\"\n                                                },\n                                                {\n                                                    \"label\": \"not equals\",\n                                                    \"short\": \"!=\",\n                                                    \"value\": \"!=\"\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"label\": \"Numbers and Dates\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"less than\",\n                                                    \"short\": \"<\",\n                                                    \"value\": \"<\"\n                                                },\n                                                {\n                                                    \"label\": \"less than or equal\",\n                                                    \"short\": \"<=\",\n                                                    \"value\": \"<=\"\n                                                },\n                                                {\n                                                    \"label\": \"greater than\",\n                                                    \"short\": \">\",\n                                                    \"value\": \">\"\n                                                },\n                                                {\n                                                    \"label\": \"greater than or equal\",\n                                                    \"short\": \">=\",\n                                                    \"value\": \">=\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            }\n                        ]\n                    },\n                    \"editable\": true,\n                    \"required\": true\n                }\n            ]\n        },\n        \"editable\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listApplications": {
      "id": 21144,
      "api": {
        "qs": {
          "limit": "{{parameters.limit}}"
        },
        "url": "/applications",
        "response": {
          "temp": {
            "application_owner": "{{body.result.application_owner}}"
          },
          "type": "json",
          "limit": "{{parameters.limit}}",
          "output": "{{merge(item, temp)}}",
          "iterate": "{{body.result.application_list.applications[1].application}}"
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "listApplications",
      "epoch": null,
      "flags": {},
      "label": "List Applications",
      "scope": [],
      "expect": [
        {
          "help": "Maximum number of records returned in a single request to server.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"url\": \"/applications\",\n    \"response\": {\n        \"temp\": {\n            \"application_owner\": \"{{body.result.application_owner}}\"\n        },\n        \"type\": \"json\",\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{merge(item, temp)}}\",\n        \"iterate\": \"{{body.result.application_list.applications[1].application}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "created_time",
          "type": "date",
          "label": "Date Created"
        },
        {
          "name": "application_name",
          "type": "text",
          "label": "Application Name"
        },
        {
          "name": "application_owner",
          "type": "text",
          "label": "Application Owner"
        },
        {
          "name": "access",
          "type": "text",
          "label": "Access"
        },
        {
          "name": "link_name",
          "type": "text",
          "label": "Link Name"
        },
        {
          "name": "time_zone",
          "type": "timezone",
          "label": "Time Zone"
        },
        {
          "name": "dateformat",
          "type": "text",
          "label": "Date Format"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    //\"ZohoCreator.dashboard.READ\"\n]",
      "accountName": "zoho-creator",
      "description": "Lists all applications for this account",
      "expectJsonc": "[\n    {\n        \"help\": \"Maximum number of records returned in a single request to server.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"created_time\",\n        \"type\": \"date\",\n        \"label\": \"Date Created\"\n    },\n    {\n        \"name\": \"application_name\",\n        \"type\": \"text\",\n        \"label\": \"Application Name\"\n    },\n    {\n        \"name\": \"application_owner\",\n        \"type\": \"text\",\n        \"label\": \"Application Owner\"\n    },\n    {\n        \"name\": \"access\",\n        \"type\": \"text\",\n        \"label\": \"Access\"\n    },\n    {\n        \"name\": \"link_name\",\n        \"type\": \"text\",\n        \"label\": \"Link Name\"\n    },\n    {\n        \"name\": \"time_zone\",\n        \"type\": \"timezone\",\n        \"label\": \"Time Zone\"\n    },\n    {\n        \"name\": \"dateformat\",\n        \"type\": \"text\",\n        \"label\": \"Date Format\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchApplications": {
      "id": 21145,
      "api": {
        "qs": {
          "limit": "{{parameters.limit}}"
        },
        "url": "/applications",
        "method": "GET",
        "response": {
          "temp": {
            "application_owner": "{{body.result.application_owner}}"
          },
          "limit": "{{parameters.limit}}",
          "output": "{{merge(item, temp)}}",
          "iterate": "{{body.result.application_list.applications[1].application}}",
          "trigger": {
            "id": "{{item.application_name}}",
            "date": "{{item.created_time}}",
            "type": "date",
            "order": "desc"
          }
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "watchApplications",
      "epoch": {
        "response": {
          "limit": 500,
          "output": {
            "date": "{{item.created_time}}",
            "label": "{{item.application_name}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Applications",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/applications\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"response\": {\n        \"temp\": {\n            \"application_owner\": \"{{body.result.application_owner}}\"\n        },\n        \"iterate\": \"{{body.result.application_list.applications[1].application}}\",\n        \"trigger\": {\n            \"id\": \"{{item.application_name}}\",\n            \"date\": \"{{item.created_time}}\",\n            \"type\": \"date\",\n            \"order\": \"desc\"\n        },\n        \"output\": \"{{merge(item, temp)}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "created_time",
          "type": "date",
          "label": "Date Created"
        },
        {
          "name": "application_name",
          "type": "text",
          "label": "Application Name"
        },
        {
          "name": "application_owner",
          "type": "text",
          "label": "Application Owner"
        },
        {
          "name": "access",
          "type": "text",
          "label": "Access"
        },
        {
          "name": "link_name",
          "type": "text",
          "label": "Link Name"
        },
        {
          "name": "time_zone",
          "type": "timezone",
          "label": "Time Zone"
        },
        {
          "name": "dateformat",
          "type": "text",
          "label": "Date Format"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 500,\n        \"output\": {\n            \"date\": \"{{item.created_time}}\",\n            \"label\": \"{{item.application_name}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "zoho-creator",
      "description": "Triggers when a new application is created.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"created_time\",\n        \"type\": \"date\",\n        \"label\": \"Date Created\"\n    },\n    {\n        \"name\": \"application_name\",\n        \"type\": \"text\",\n        \"label\": \"Application Name\"\n    },\n    {\n        \"name\": \"application_owner\",\n        \"type\": \"text\",\n        \"label\": \"Application Owner\"\n    },\n    {\n        \"name\": \"access\",\n        \"type\": \"text\",\n        \"label\": \"Access\"\n    },\n    {\n        \"name\": \"link_name\",\n        \"type\": \"text\",\n        \"label\": \"Link Name\"\n    },\n    {\n        \"name\": \"time_zone\",\n        \"type\": \"timezone\",\n        \"label\": \"Time Zone\"\n    },\n    {\n        \"name\": \"dateformat\",\n        \"type\": \"text\",\n        \"label\": \"Date Format\"\n    }\n]",
      "parametersJsonc": "[\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "viewRecordsInReport": {
      "id": 21146,
      "api": {
        "qs": {
          "raw": true,
          "limit": "{{parameters.limit}}",
          "criteria": "{{ifempty(buildFilter(parameters.criteria), undefined)}}"
        },
        "url": "/{{parameters.appLinkName}}/view/{{getViewLinkNameValue(parameters.viewLinkName, 'componentname')}}",
        "type": "json",
        "method": "GET",
        "response": {
          "type": "json",
          "limit": "{{parameters.limit}}",
          "output": "{{recordResponse(item)}}",
          "iterate": "{{iterateRecords(body, getViewLinkNameValue(parameters.viewLinkName, 'formlinkname'))}}"
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "viewRecordsInReport",
      "epoch": null,
      "flags": {},
      "label": "View Records in Report",
      "scope": [],
      "expect": [
        {
          "help": "Maximum number of Request objects to return.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10,
          "required": true,
          "validate": {
            "min": 1
          }
        },
        {
          "name": "appLinkName",
          "type": "select",
          "label": "Application Name",
          "options": {
            "store": "rpc://app%23zoho-creator@1/rpcListApplications",
            "nested": [
              {
                "name": "viewLinkName",
                "type": "select",
                "label": "View Name",
                "options": {
                  "store": "rpc://app%23zoho-creator@1/rpcListViewsInApplication",
                  "nested": [
                    {
                      "help": "Zoho Creator currently supports only AND rules.",
                      "name": "criteria",
                      "type": "filter",
                      "label": "Criteria",
                      "options": {
                        "logic": "and",
                        "store": "rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true&returnArrayAsOptionsRPC=true",
                        "operators": [
                          {
                            "label": "All Types",
                            "options": [
                              {
                                "label": "equals",
                                "short": "==",
                                "value": "=="
                              },
                              {
                                "label": "not equals",
                                "short": "!=",
                                "value": "!="
                              }
                            ]
                          },
                          {
                            "label": "Numbers and Dates",
                            "options": [
                              {
                                "label": "less than",
                                "short": "<",
                                "value": "<"
                              },
                              {
                                "label": "less than or equal",
                                "short": "<=",
                                "value": "<="
                              },
                              {
                                "label": "greater than",
                                "short": ">",
                                "value": ">"
                              },
                              {
                                "label": "greater than or equal",
                                "short": ">=",
                                "value": ">="
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "editable": true,
                "required": true
              }
            ]
          },
          "editable": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"raw\": true,\n        \"limit\": \"{{parameters.limit}}\",\n        \"criteria\": \"{{ifempty(buildFilter(parameters.criteria), undefined)}}\"\n    },\n    \"url\": \"/{{parameters.appLinkName}}/view/{{getViewLinkNameValue(parameters.viewLinkName, 'componentname')}}\",\n    \"method\": \"GET\",\n    \"type\": \"json\",\n    \"response\": {\n        \"type\": \"json\",\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{recordResponse(item)}}\",\n        \"iterate\": \"{{iterateRecords(body, getViewLinkNameValue(parameters.viewLinkName, 'formlinkname'))}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "zoho-creator",
      "description": "Views all records matching the chosen criteria in a selected report.",
      "expectJsonc": "[\n    {\n        \"help\": \"Maximum number of Request objects to return.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 10,\n        \"required\": true,\n        \"validate\": {\n            \"min\": 1\n        }\n    },\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"select\",\n        \"label\": \"Application Name\",\n        \"options\": {\n            \"store\": \"rpc://app%23zoho-creator@1/rpcListApplications\",\n            \"nested\": [\n                {\n                    \"name\": \"viewLinkName\",\n                    \"type\": \"select\",\n                    \"label\": \"View Name\",\n                    \"options\": {\n                        \"store\": \"rpc://app%23zoho-creator@1/rpcListViewsInApplication\",\n                        \"nested\": [\n                            {\n                                \"help\": \"Zoho Creator currently supports only AND rules.\",\n                                \"name\": \"criteria\",\n                                \"type\": \"filter\",\n                                \"label\": \"Criteria\",\n                                \"options\": {\n                                    \"logic\": \"and\",\n                                    \"store\": \"rpc://rpcListFormFields?shouldReturnArray=true&returnArrayAsOptionsRPC=true\",\n                                    \"operators\": [\n                                        {\n                                            \"label\": \"All Types\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"equals\",\n                                                    \"short\": \"==\",\n                                                    \"value\": \"==\"\n                                                },\n                                                {\n                                                    \"label\": \"not equals\",\n                                                    \"short\": \"!=\",\n                                                    \"value\": \"!=\"\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"label\": \"Numbers and Dates\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"less than\",\n                                                    \"short\": \"<\",\n                                                    \"value\": \"<\"\n                                                },\n                                                {\n                                                    \"label\": \"less than or equal\",\n                                                    \"short\": \"<=\",\n                                                    \"value\": \"<=\"\n                                                },\n                                                {\n                                                    \"label\": \"greater than\",\n                                                    \"short\": \">\",\n                                                    \"value\": \">\"\n                                                },\n                                                {\n                                                    \"label\": \"greater than or equal\",\n                                                    \"short\": \">=\",\n                                                    \"value\": \">=\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            }\n                        ]\n                    },\n                    \"editable\": true,\n                    \"required\": true\n                }\n            ]\n        },\n        \"editable\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "\"rpc://app%23zoho-creator@1/rpcListFormFields?shouldReturnArray=true\"",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listFormsInApplication": {
      "id": 21147,
      "api": {
        "qs": {
          "limit": "{{parameters.limit}}"
        },
        "url": "/{{parameters.appName}}/forms",
        "temp": {
          "applicationname": "{{parameters.appName}}"
        },
        "response": {
          "type": "json",
          "limit": "{{parameters.limit}}",
          "output": "{{merge(item, temp)}}",
          "iterate": "{{slice(body.`application-name`[2].formList, 1)}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "listFormsInApplication",
      "epoch": null,
      "flags": {},
      "label": "Lists Forms in Application",
      "scope": [],
      "expect": [
        {
          "name": "appName",
          "type": "select",
          "label": "Application Name",
          "options": "rpc://app%23zoho-creator@1/rpcListApplications",
          "editable": true,
          "required": true
        },
        {
          "help": "Maximum number of records returned in a single request to server.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"url\": \"/{{parameters.appName}}/forms\",\n    \"temp\": {\n        \"applicationname\": \"{{parameters.appName}}\"\n    },\n    \"response\": {\n        \"type\": \"json\",\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{merge(item, temp)}}\",\n        \"iterate\": \"{{slice(body.`application-name`[2].formList, 1)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "linkid",
          "type": "uinteger",
          "label": "Link ID"
        },
        {
          "name": "type",
          "type": "integer",
          "label": "Type"
        },
        {
          "name": "componentname",
          "type": "text",
          "label": "Component Name"
        },
        {
          "name": "displayname",
          "type": "text",
          "label": "Display Name"
        },
        {
          "name": "applicationname",
          "type": "text",
          "label": "Application Link Name"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "zoho-creator",
      "description": "Lists all forms in the selected application.\nOnly the owner can see the list of forms in an application.",
      "expectJsonc": "[\n    {\n        \"name\": \"appName\",\n        \"type\": \"select\",\n        \"label\": \"Application Name\",\n        \"options\": \"rpc://app%23zoho-creator@1/rpcListApplications\",\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"help\": \"Maximum number of records returned in a single request to server.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"linkid\",\n        \"type\": \"uinteger\",\n        \"label\": \"Link ID\"\n    },\n    {\n        \"name\": \"type\",\n        \"type\": \"integer\",\n        \"label\": \"Type\"\n    },\n    {\n        \"name\": \"componentname\",\n        \"type\": \"text\",\n        \"label\": \"Component Name\"\n    },\n    {\n        \"name\": \"displayname\",\n        \"type\": \"text\",\n        \"label\": \"Display Name\"\n    },\n    {\n        \"name\": \"applicationname\",\n        \"type\": \"text\",\n        \"label\": \"Application Link Name\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listViewsInApplication": {
      "id": 21148,
      "api": {
        "qs": {
          "limit": "{{parameters.limit}}"
        },
        "url": "/{{parameters.appLinkName}}/formsandviews",
        "temp": {
          "applicationname": "{{parameters.appLinkName}}"
        },
        "response": {
          "type": "json",
          "limit": "{{parameters.limit}}",
          "output": "{{merge(item, temp)}}",
          "iterate": "{{slice(body.`application-name`[2].viewList, 1)}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "listViewsInApplication",
      "epoch": null,
      "flags": {},
      "label": "List Views in Application",
      "scope": [],
      "expect": [
        {
          "name": "appLinkName",
          "type": "select",
          "label": "Application Name",
          "options": "rpc://app%23zoho-creator@1/rpcListApplications",
          "editable": true,
          "required": true
        },
        {
          "help": "Maximum number of records returned in a single request to server.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "zoho-creator",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"url\": \"/{{parameters.appLinkName}}/formsandviews\",\n    \"temp\": {\n        \"applicationname\": \"{{parameters.appLinkName}}\"\n    },\n    \"response\": {\n        \"type\": \"json\",\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{merge(item, temp)}}\",\n        \"iterate\": \"{{slice(body.`application-name`[2].viewList, 1)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "linkid",
          "type": "uinteger",
          "label": "Link ID"
        },
        {
          "name": "type",
          "type": "integer",
          "label": "Type"
        },
        {
          "name": "componentid",
          "type": "text",
          "label": "Component ID"
        },
        {
          "name": "componentname",
          "type": "text",
          "label": "Component Name"
        },
        {
          "name": "displayname",
          "type": "text",
          "label": "Display Name"
        },
        {
          "name": "applicationname",
          "type": "text",
          "label": "Application Link Name"
        },
        {
          "name": "formlinkname",
          "type": "text",
          "label": "Form Link Name"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "zoho-creator",
      "description": "Lists all views in the selected application",
      "expectJsonc": "[\n    {\n        \"name\": \"appLinkName\",\n        \"type\": \"select\",\n        \"label\": \"Application Name\",\n        \"options\": \"rpc://app%23zoho-creator@1/rpcListApplications\",\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"help\": \"Maximum number of records returned in a single request to server.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"linkid\",\n        \"type\": \"uinteger\",\n        \"label\": \"Link ID\"\n    },\n    {\n        \"name\": \"type\",\n        \"type\": \"integer\",\n        \"label\": \"Type\"\n    },\n    {\n        \"name\": \"componentid\",\n        \"label\": \"Component ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"componentname\",\n        \"type\": \"text\",\n        \"label\": \"Component Name\"\n    },\n    {\n        \"name\": \"displayname\",\n        \"type\": \"text\",\n        \"label\": \"Display Name\"\n    },\n    {\n        \"name\": \"applicationname\",\n        \"type\": \"text\",\n        \"label\": \"Application Link Name\"\n    },\n    {\n        \"name\": \"formlinkname\",\n        \"type\": \"text\",\n        \"label\": \"Form Link Name\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "zoho-creator": {
      "api": {
        "qs": {
          "limit": 1,
          "scope": "creatorapi",
          "authtoken": "{{parameters.authToken}}"
        },
        "log": {
          "sanitize": [
            "request.qs.authtoken"
          ]
        },
        "url": "https://creator.zoho.{{parameters.region}}/api/json/applications",
        "response": {
          "type": "json",
          "error": "[{{statusCode}}] Invalid API Token",
          "metadata": {
            "type": "text",
            "value": "{{connection.ownerName}}"
          }
        }
      },
      "rev": 6,
      "name": "zoho-creator",
      "type": "basic",
      "label": "Zoho Creator",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "zoho-creator",
      "install": {},
      "apiJsonc": "{\n    \"qs\": {\n        \"limit\": 1,\n        \"scope\": \"creatorapi\",\n        \"authtoken\": \"{{parameters.authToken}}\"\n    },\n    \"url\": \"https://creator.zoho.{{parameters.region}}/api/json/applications\",\n    \"response\": {\n        \"error\": \"[{{statusCode}}] Invalid API Token\",\n        \"type\": \"json\",\n        \"metadata\": {\n            \"type\": \"text\",\n            \"value\": \"{{connection.ownerName}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.qs.authtoken\"\n        ]\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "Your Zoho Creator API Token. Click [here](https://accounts.zoho.com/apiauthtoken/create?SCOPE=ZohoCreator/creatorapi) to generate it",
          "name": "authToken",
          "type": "text",
          "label": "API Token",
          "required": true
        },
        {
          "help": "This is the admin username which can be obtained using zoho.adminuser or zoho.appuri variables. You can also view your app URL in the URL bar of your browser for example, <https://creator.zoho.eu/<ownername>/<applicationname>/...> to obtain it.",
          "name": "ownerName",
          "type": "text",
          "label": "Owner Name",
          "required": true
        },
        {
          "name": "region",
          "type": "select",
          "label": "Region",
          "options": [
            {
              "label": "Global",
              "value": "com",
              "default": true
            },
            {
              "label": "EU",
              "value": "eu"
            },
            {
              "label": "IN",
              "value": "in"
            }
          ],
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "installSpec": [],
      "scopesJsonc": "{\n}",
      "installJsonc": "{\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"help\": \"Your Zoho Creator API Token. Click [here](https://accounts.zoho.com/apiauthtoken/create?SCOPE=ZohoCreator/creatorapi) to generate it\",\n        \"name\": \"authToken\",\n        \"type\": \"text\",\n        \"label\": \"API Token\",\n        \"required\": true\n    },\n    {\n        \"name\": \"ownerName\",\n        \"label\": \"Owner Name\",\n        \"type\": \"text\",\n        \"help\": \"This is the admin username which can be obtained using zoho.adminuser or zoho.appuri variables. You can also view your app URL in the URL bar of your browser for example, <https://creator.zoho.eu/<ownername>/<applicationname>/...> to obtain it.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"region\",\n        \"type\": \"select\",\n        \"label\": \"Region\",\n        \"options\": [\n            {\n                \"label\": \"Global\",\n                \"value\": \"com\",\n                \"default\": true\n            },\n            {\n                \"label\": \"EU\",\n                \"value\": \"eu\"\n            },\n            {\n                \"label\": \"IN\",\n                \"value\": \"in\"\n            }\n        ],\n        \"required\": true\n    }\n]",
      "installSpecJsonc": "[\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"qs\": {\n        \"scope\": \"creatorapi\",\n        \"authtoken\": \"{{connection.authToken}}\"\n    },\n    \"baseUrl\": \"https://creator.zoho.{{connection.region}}/api/json\",\n    \"response\": {\n        \"valid\": \"{{!body.errorlist}}\",\n        \"error\": {\n            \"200\": {\n                \"message\": \"{{if(body.errorlist, body.errorlist.error.message, body.message)}}\"\n            },\n            \"message\": \"[{{statusCode}}] {{body.message}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.qs.authtoken\"\n        ]\n    }\n}",
  "countries": null,
  "_functions": {
    "omit": {
      "rev": 3,
      "code": "function omit(collection, ...parameters) {\n\tconst result = {};\n\t\n\tfor (let key in collection) {\n\t\tif (!parameters.includes(key)) {\n\t\t\tresult[key] = collection[key];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
      "name": "omit",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(collection, ...parameters)",
      "appVersion": 1
    },
    "merge": {
      "rev": 3,
      "code": "function merge(...src) {\n\treturn Object.assign({}, ...src);\n}",
      "name": "merge",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(...src)",
      "appVersion": 1
    },
    "parseJson": {
      "rev": 3,
      "code": "function parseJson(body) {\n\n    const body1 = JSON.parse(body);\n\n    return body1.message;\n\n}",
      "name": "parseJson",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(body)",
      "appVersion": 1
    },
    "removeNull": {
      "rev": 3,
      "code": "function removeNull(src) {\n\tif (src && typeof src === 'object') {\n\t\tObject.keys(src).forEach(key => {\n\t\t\tif (src[key] == null) {\n\t\t\t\tdelete src[key];\n\t\t\t} else if (typeof src[key] === 'object') {\n\t\t\t\timl.removeNull(src[key]);\n\t\t\t}\n\t\t});\n\t}\n\treturn src;\n}",
      "name": "removeNull",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(src)",
      "appVersion": 1
    },
    "buildFilter": {
      "rev": 3,
      "code": "function buildFilter(filter) {\n\tfilter = filter[0];\n\tvar out = \"\";\n\tfor(var k in filter){\n\t\tvar field = filter[k].a;\n\t\tvar operator = filter[k].o;\n\t\tvar value = filter[k].b;\n\t\tif (iml.containsChar(value, [\" \", \"@\", \"-\", \".\", \"_\"]) || /[a-z]|[A-Z]/gm.test(value)) {\n\t\t\tvalue = '\"' + value + '\"';\n\t\t}\n\t\tout += field + operator + value + \"&&\";\n\t}\n\treturn out.substring(0, out.length - 2);\n}",
      "name": "buildFilter",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(filter)",
      "appVersion": 1
    },
    "containsChar": {
      "rev": 3,
      "code": "function containsChar(str, charList) {\n\tif (!str) return false;\n\t\n\tfor (var i = 0; i < charList.length; i++) {\n\t\tif (str.indexOf(charList[i]) != -1) return true;\n\t}\n\t\n\treturn false;\n}",
      "name": "containsChar",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(str, charList)",
      "appVersion": 1
    },
    "triggerEpoch": {
      "rev": 3,
      "code": "function triggerEpoch(body,select) {\n\n\tlet arr = [];\n\n\tbody.forEach(item => {\n\n\t\tlet obj = {};\n\t\tobj.label = \"Record no. \"+ (body.indexOf(item) + 1);\n\t\tobj.date = iml.switch(select, 'create', iml.parseDate(item.Added_Time, 'DD-MMM-YYYY HH:mm:ss'), 'modify', iml.parseDate(item.Modified_Time, 'DD-MMM-YYYY HH:mm:ss'));\n\t\t\n\t\tarr.push(obj);\n\t});\n\treturn arr;\n\n}",
      "name": "triggerEpoch",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(body,select)",
      "appVersion": 1
    },
    "parseDateTime": {
      "rev": 3,
      "code": "function parseDateTime(time) {\n\n    if(/\\d*-\\d*-\\d* \\d*:\\d*:\\d*/gm.test(time)){\n        time = iml.parseDate(time, 'YYYY-MM-DD HH:mm:ss')\n    }\n    else if (/\\d*-\\w*-\\d* \\d*:\\d*:\\d*/gm.test(time)) {\n        time = iml.parseDate(time, 'DD-MMM-YYYY HH:mm:ss')\n    }\n    else {\n        time = iml.parseDate(time);\n    }\n    return time;\n}",
      "name": "parseDateTime",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(time)",
      "appVersion": 1
    },
    "getNewRecordId": {
      "rev": 3,
      "code": "function getNewRecordId(body) {\n\tvar obj = {};\n\tobj.record_id = body.formname[1].operation[1].values.ID;\n\treturn obj;\n}",
      "name": "getNewRecordId",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(body)",
      "appVersion": 1
    },
    "iterateRecords": {
      "rev": 3,
      "code": "function iterateRecords(body, formlinkname) {\n\n\treturn body[formlinkname];\n\n}",
      "name": "iterateRecords",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(body, formlinkname)",
      "appVersion": 1
    },
    "recordResponse": {
      "rev": 3,
      "code": "function recordResponse(item) {\n\n\tif (item.Added_Time) {\n\t\tif(/\\d*-\\d*-\\d* \\d*:\\d*:\\d*/gm.test(item.Added_Time)){\n\t\t\tif(/\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d/gm.test(item.Added_Time)) {\n\t\t\t\titem.Added_Time = iml.parseDate(item.Added_Time, 'DD-MM-YY HH:mm:ss');\n\t\t\t}\n\t\t\telse item.Added_Time = iml.parseDate(item.Added_Time, 'YYYY-MM-DD HH:mm:ss');\n\t\t}\n\t\telse if (/\\d*-\\w*-\\d* \\d*:\\d*:\\d*/gm.test(item.Added_Time)) {\n\t\t\titem.Added_Time = iml.parseDate(item.Added_Time, 'DD-MMM-YYYY HH:mm:ss');\n\t\t}\n\t\telse {\n\t\t\titem.Added_Time = iml.parseDate(item.Added_Time);\n\t\t}\n\t}\n\tif (item.Modified_Time) {\n\t\tif(/\\d*-\\d*-\\d* \\d*:\\d*:\\d*/gm.test(item.Modified_Time)){\n\t\t\tif(/\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d/gm.test(item.Modified_Time)) {\n\t\t\t\titem.Modified_Time = iml.parseDate(item.Modified_Time, 'DD-MM-YY HH:mm:ss');\n\t\t\t}\n\t\t\telse item.Modified_Time = iml.parseDate(item.Modified_Time, 'YYYY-MM-DD HH:mm:ss');\n\t\t}\n\t\telse if (/\\d*-\\w*-\\d* \\d*:\\d*:\\d*/gm.test(item.Modified_Time)) {\n\t\t\titem.Modified_Time = iml.parseDate(item.Modified_Time, 'DD-MMM-YYYY HH:mm:ss');\n\t\t}\n\t\telse {\n\t\t\titem.Modified_Time = iml.parseDate(item.Modified_Time);\n\t\t}\n\t}\n\t\n\treturn item;\n\n}",
      "name": "recordResponse",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(item)",
      "appVersion": 1
    },
    "addressParameters": {
      "rev": 3,
      "code": "function addressParameters(field) {\n\n\tlet arr = [];\n\n\tif (field.subfields[0].address_line_1) {\n\t\tlet obj1 = {};\n\t\tobj1.name = field.fieldname + '.' + field.subfields[0].labelname;\n\t\tobj1.label = field.subfields[0].displayname;\n\t\tobj1.type = 'text';\n\t\tif (field.required === true) {\n\t\t\tobj1.required = true\n\t\t}\n\t\tarr.push(obj1);\n\t}\n\tif (field.subfields[1].address_line_2) {\n\t\tlet obj2 = {};\n\t\tobj2.name = field.fieldname + '.' + field.subfields[1].labelname;\n\t\tobj2.label = field.subfields[1].displayname;\n\t\tobj2.type = 'text';\n\t\tif (field.required === true) {\n\t\t\tobj2.required = true\n\t\t}\n\t\tarr.push(obj2);\n\t}\n\tif (field.subfields[2].district_city) {\n\t\tlet obj3 = {};\n\t\tobj3.name = field.fieldname + '.' + field.subfields[2].labelname;\n\t\tobj3.label = field.subfields[2].displayname;\n\t\tobj3.type = 'text';\n\t\tif (field.required === true) {\n\t\t\tobj3.required = true\n\t\t}\n\t\tarr.push(obj3);\n\t}\n\tif (field.subfields[3].state_province) {\n\t\tlet obj4 = {};\n\t\tobj4.name = field.fieldname + '.' + field.subfields[3].labelname;\n\t\tobj4.label = field.subfields[3].displayname;\n\t\tobj4.type = 'text';\n\t\tif (field.required === true) {\n\t\t\tobj4.required = true\n\t\t}\n\t\tarr.push(obj4);\n\t}\n\tif (field.subfields[4].postal_code) {\n\t\tlet obj5 = {};\n\t\tobj5.name = field.fieldname + '.' + field.subfields[4].labelname;\n\t\tobj5.label = field.subfields[4].displayname;\n\t\tobj5.type = 'text';\n\t\tif (field.required === true) {\n\t\t\tobj5.required = true\n\t\t}\n\t\tarr.push(obj5);\n\t}\n\tif (field.subfields[5].country) {\n\t\tlet obj6 = {};\n\t\tobj6.name = field.fieldname + '.' + field.subfields[5].labelname;\n\t\tobj6.label = field.subfields[5].displayname;\n\t\tobj6.type = 'text';\n\t\tif (field.required === true) {\n\t\t\tobj6.required = true\n\t\t}\n\t\tarr.push(obj6);\n\t}\n\tif (field.subfields[6].latitude) {\n\t\tlet obj7 = {};\n\t\tobj7.name = field.fieldname + '.' + field.subfields[6].labelname;\n\t\tobj7.label = field.subfields[6].displayname;\n\t\tobj7.type = 'text';\n\t\tif (field.required === true) {\n\t\t\tobj7.required = true\n\t\t}\n\t\tarr.push(obj7);\n\t}\n\tif (field.subfields[7].longitude) {\n\t\tlet obj8 = {};\n\t\tobj8.name = field.fieldname + '.' + field.subfields[7].labelname;\n\t\tobj8.label = field.subfields[7].displayname;\n\t\tobj8.type = 'text';\n\t\tif (field.required === true) {\n\t\t\tobj8.required = true\n\t\t}\n\t\tarr.push(obj8);\n\t}\n\n\treturn arr;\n}",
      "name": "addressParameters",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(field)",
      "appVersion": 1
    },
    "extractFormFields": {
      "rev": 3,
      "code": "function extractFormFields(body, shouldReturnArray, trigger, update) {\n\tif (!body || !body.response) return null;\n\t\n\tlet transformedFormFields = [];\n\t\n\tbody.response.fields.forEach((field) => {\n\t\tconst result = iml.transformFormField(field, shouldReturnArray, update);\n\t\tif (result === null) return;\n\t\tif (Array.isArray(result)) {\n\t\t\tresult.forEach(item => transformedFormFields.push(item));\n\t\t}\n\t\telse {\n\t\t\ttransformedFormFields.push(result);\n\t\t}\n\t});\n\t\n\tif (!shouldReturnArray) {\n\t\treturn [{\n\t\t\tname: 'form_fields',\n\t\t\tlabel: 'Form Fields',\n\t\t\ttype: 'collection',\n\t\t\tspec: transformedFormFields\n\t\t}];\n\t}\n\n\tif(trigger) {\n\t\ttransformedFormFields.push(\n\t\t\t{\n\t\t\t\tname: \"Added_Time\",\n\t\t\t\tlabel: \"Added Time\",\n\t\t\t\ttype: \"date\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Modified_Time\",\n\t\t\t\tlabel: \"Modified Time\",\n\t\t\t\ttype: \"date\"\n\t\t\t}\n\t\t)\n\t}\n\t\n\treturn transformedFormFields;\n}",
      "name": "extractFormFields",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(body, shouldReturnArray, trigger, update)",
      "appVersion": 1
    },
    "removeEmptyArrays": {
      "rev": 3,
      "code": "function removeEmptyArrays(src) {\n\tif (src && typeof src === 'object') {\n\t\tObject.keys(src).forEach(key => {\n\t\t\tif (src[key] instanceof Array && src[key].length === 0) {\n\t\t\t\tdelete src[key];\n\t\t\t} else if (typeof src[key] === 'object') {\n\t\t\t\timl.removeEmptyArrays(src[key]);\n\t\t\t}\n\t\t});\n\t}\n\treturn src;\n}",
      "name": "removeEmptyArrays",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(src)",
      "appVersion": 1
    },
    "formatOutputParams": {
      "rev": 3,
      "code": "function formatOutputParams(params) {\n\tlet form_fields = params.form_fields;\n\t\n\tfor (var key in form_fields) {\n\t\tif (form_fields[key] instanceof Array) {\n\t\t\tform_fields[key] = form_fields[key].join();\n\t\t} else if (form_fields[key] instanceof Date) {\n\t\t\tform_fields[key] = iml.formatDate(form_fields[key], \"DD-MMM-YYYY HH:mm:ss\");\n\t\t}\n\t}\n\treturn form_fields;\n}",
      "name": "formatOutputParams",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(params)",
      "appVersion": 1
    },
    "isAddResponseValid": {
      "rev": 3,
      "code": "function isAddResponseValid(body) {\n\treturn !(body.formname[1].operation[1].status.startsWith(\"Failure\"));\n}",
      "name": "isAddResponseValid",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(body)",
      "appVersion": 1
    },
    "removeEmptyObjects": {
      "rev": 3,
      "code": "function removeEmptyObjects(src) {\n\tif (src && typeof src === 'object') {\n\t\tObject.keys(src).forEach(key => {\n\t\t\tif (src[key] && typeof src[key] === 'object') {\n\t\t\t\timl.removeEmptyObjects(src[key]);\n\t\t\t\tif (Object.keys(src[key]).length === 0) {\n\t\t\t\t  delete src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn src;\n}",
      "name": "removeEmptyObjects",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(src)",
      "appVersion": 1
    },
    "transformFormField": {
      "rev": 3,
      "code": "function transformFormField(field, shouldReturnArray, update) {\n\tif (!field || !field.type) return;\n\n\tvar obj = {};\n\tobj.name = field.fieldname;\n\tobj.label = field.displayname;\n\tobj.help = field.tooltip;\n\tif(!update) {\n\t\tobj.required = field.required;\n\t}\n\tobj.editable = true;\n\t//obj.default = field.Initial;\n\tif (field.maxchar) {\n\t\tobj.validate = {};\n\t\tobj.validate.max = field.maxchar;\n\t}\n\n\tswitch (field.type) {\n\t\tcase 1:\n\t\t\tobj.type = \"text\";\n\t\t\tobj.multiline = false;\n\t\t\tbreak;\n\t\tcase 2: // Multi Line\n\t\tcase 4: // Rich Text\n\t\t\tobj.type = \"text\";\n\t\t\tobj.multiline = true;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tobj.type = \"email\";\n\t\t\tbreak;\n\t\tcase 5: // Integer\n\t\t\tobj.type = \"integer\";\n\t\t\tif (field.maxchar && field.maxchar === parseInt(field.maxchar, 10)) {\n\t\t\t\tobj.validate = {};\n\t\t\t\tobj.validate.max = iml.getMaxNumberForNumDigits(field.maxchar);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tobj.type = \"number\";\n\t\t\tif (field.maxchar && field.maxchar === parseInt(field.maxchar, 10)) {\n\t\t\t\tobj.validate = {};\n\t\t\t\tobj.validate.max = iml.getMaxNumberForNumDigits(field.maxchar);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 7: // Percent\n\t\t\tobj.type = \"integer\";\n\t\t\tif (field.maxchar && field.maxchar === parseInt(field.maxchar, 10)) {\n\t\t\t\tobj.validate = {};\n\t\t\t\tobj.validate.max = iml.getMaxNumberForNumDigits(field.maxchar);\n\t\t\t}\n\t\t\tobj.label += \" (%)\";\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tobj.type = \"number\";\n\t\t\tif (field.maxchar && field.maxchar === parseInt(field.maxchar, 10)) {\n\t\t\t\tobj.validate = {};\n\t\t\t\tobj.validate.max = iml.getMaxNumberForNumDigits(field.maxchar);\n\t\t\t}\n\t\t\tobj.label += \" (\" + field.CurrencyType + \")\";\n\t\t\tbreak;\n\t\tcase 10: // Date\n\t\t\tobj.type = \"date\";\n\t\t\tobj.time = false;\n\t\t\tbreak;\n\t\tcase 11: // Date Time\n\t\t\tobj.type = \"date\";\n\t\t\tobj.time = true;\n\t\t\tbreak;\n\t\tcase 12: // Dropdown + Lookup\n\t\tcase 13: // Radio Buttons\n\t\t\tobj.type = \"select\";\n\t\t\tobj.options = field.choices.map(key => {\n\t\t\t\tvar option = {};\n\t\t\t\toption.value = key.value\n\t\t\t\toption.label = key.key;\n\t\t\t\treturn option;\n\t\t\t});\n\t\t\tbreak;\n\t\tcase 14: // Multi Select\n\t\tcase 15: // Check Boxes\n\t\t\tobj.type = \"select\";\n\t\t\tobj.options = field.choices.map(key => {\n\t\t\t\tvar option = {};\n\t\t\t\toption.value = key.value\n\t\t\t\toption.label = key.key;\n\t\t\t\treturn option;\n\t\t\t});\n\t\t\tobj.multiple = true;\n\t\t\tbreak;\n\t\tcase 16: // Decision Box\n\t\t\tobj.type = \"boolean\";\n\t\t\tobj.default = (field.initial === \"checked\");\n\t\t\tbreak;\n\t\tcase 17:\n\t\t\tobj.type = \"url\";\n\t\t\tbreak;\n\t\tcase 27: // phone number\n\t\t\tobj.type = 'text';\n\t\t\tbreak;\n\t\tcase 29: // Name\n\t\t\tif (!shouldReturnArray) {\n\t\t\t\tlet arr = [];\n\t\t\t\tif (field.subfields[0].prefix === true) {\n\t\t\t\t\tlet obj1 = {};\n\t\t\t\t\tobj1.name = field.fieldname + '.' + field.subfields[0].labelname;\n\t\t\t\t\tobj1.label = field.subfields[0].displayname;\n\t\t\t\t\tobj1.type = 'select';\n\t\t\t\t\tobj1.options = field.subfields[0].choices.map(key => {\n\t\t\t\t\t\tvar option = {};\n\t\t\t\t\t\toption.value = key.value\n\t\t\t\t\t\toption.label = key.key;\n\t\t\t\t\t\treturn option;\n\t\t\t\t\t});\n\t\t\t\t\tif (field.required === true) {\n\t\t\t\t\t\tif(!update) obj1.required = true\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj1);\n\t\t\t\t}\n\t\t\t\tif (field.subfields[1].first_name === true) {\n\t\t\t\t\tlet obj2 = {};\n\t\t\t\t\tobj2.name = field.fieldname + '.' + field.subfields[1].labelname;\n\t\t\t\t\tobj2.label = field.subfields[1].displayname;\n\t\t\t\t\tobj2.type = 'text';\n\t\t\t\t\tif (field.required === true) {\n\t\t\t\t\t\tif(!update) obj2.required = true\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj2);\n\t\t\t\t}\n\t\t\t\tif (field.subfields[2].last_name === true) {\n\t\t\t\t\tlet obj3 = {};\n\t\t\t\t\tobj3.name = field.fieldname + '.' + field.subfields[2].labelname;\n\t\t\t\t\tobj3.label = field.subfields[2].displayname;\n\t\t\t\t\tobj3.type = 'text';\n\t\t\t\t\tif (field.required === true) {\n\t\t\t\t\t\tif(!update) obj3.required = true\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj3);\n\t\t\t\t}\n\t\t\t\tif (field.subfields[3].suffix === true) {\n\t\t\t\t\tlet obj4 = {};\n\t\t\t\t\tobj4.name = field.fieldname + '.' + field.subfields[3].labelname;\n\t\t\t\t\tobj4.label = field.subfields[3].displayname;\n\t\t\t\t\tobj4.type = 'text';\n\t\t\t\t\tif (field.required === true) {\n\t\t\t\t\t\tif(!update) obj4.required = true\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj4);\n\t\t\t\t}\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobj.type = 'text';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\tcase 30: // Address\n\t\t\tif (!shouldReturnArray) {\n\t\t\t\tlet arr1 = [];\n\t\t\t\tarr1 = iml.addressParameters(field);\n\t\t\t\treturn arr1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobj.type = 'text';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\tdefault:\n\t\t\tobj = null;\n\t\t\tbreak;\n\t}\n\n\treturn obj;\n}",
      "name": "transformFormField",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(field, shouldReturnArray, update)",
      "appVersion": 1
    },
    "isEditResponseValid": {
      "rev": 3,
      "code": "function isEditResponseValid(body) {\n\treturn !(body.formname[1].operation[1].status.startsWith(\"Failure\"));\n}",
      "name": "isEditResponseValid",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(body)",
      "appVersion": 1
    },
    "getViewLinkNameValue": {
      "rev": 3,
      "code": "function getViewLinkNameValue(viewLinkName, valueType) {\n\n\tif(valueType === 'componentname'){\n        return iml.get(JSON.parse(viewLinkName), 'componentname');\n    }\n    if(valueType === 'formlinkname'){\n        return iml.get(JSON.parse(viewLinkName), 'formlinkname');\n    }\n\n}",
      "name": "getViewLinkNameValue",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(viewLinkName, valueType)",
      "appVersion": 1
    },
    "convertFieldsToOptions": {
      "rev": 3,
      "code": "function convertFieldsToOptions(fieldArray) {\n\tvar options = fieldArray.map(field => {\n\t\tvar obj = {};\n\t\tobj.value = field.name;\n\t\tobj.label = field.label;\n\t\treturn obj;\n\t});\n\treturn options;\n}",
      "name": "convertFieldsToOptions",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(fieldArray)",
      "appVersion": 1
    },
    "getArrayFieldsForObject": {
      "rev": 3,
      "code": "function getArrayFieldsForObject(src) {\n\tvar names = \"\";\n\tif (src && typeof src === 'object') {\n\t\tObject.keys(src).forEach(key => {\n\t\t\tif (src[key] instanceof Array) {\n\t\t\t\tnames += \"|\" + key + iml.getIterationArrayForFormsList(src[key]);\n\t\t\t} else if (typeof src[key] === 'object') {\n\t\t\t\tnames += iml.getIterationArrayForFormsList(src[key]);\n\t\t\t}\n\t\t});\n\t} else if (src && src instanceof Array) {\n\t\tsrc.forEach(item => {\n\t\t\tnames += iml.getIterationArrayForFormsList(item);\n\t\t});\n\t}\n\treturn names;\n}",
      "name": "getArrayFieldsForObject",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(src)",
      "appVersion": 1
    },
    "getMaxNumberForNumDigits": {
      "rev": 3,
      "code": "function getMaxNumberForNumDigits(digits) {\n\tif (digits == 1) return 9;\n\t\n\treturn 9 * Math.pow(10, digits-1) + getMaxNumberForNumDigits(digits-1);\n}",
      "name": "getMaxNumberForNumDigits",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(digits)",
      "appVersion": 1
    },
    "transformFormFieldChoices": {
      "rev": 3,
      "code": "function transformFormFieldChoices(field) {\n\tif (field && field.Choices) {\n\t\tvar valueArray = [];\n\t\tfor (let key in field.Choices[0]) {\n\t\t\tvalueArray.push(field.Choices[0][key]);\n\t\t}\n\t\tfield.Choices = valueArray;\n\t}\n\treturn field;\n}",
      "name": "transformFormFieldChoices",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(field)",
      "appVersion": 1
    },
    "getIterationArrayForRecords": {
      "rev": 3,
      "code": "function getIterationArrayForRecords(body, reportName) {\n\tvar arrayName = iml.getFormNameFromReportName(reportName);\n\treturn body[arrayName];\n}",
      "name": "getIterationArrayForRecords",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(body, reportName)",
      "appVersion": 1
    },
    "prepareRecordForCreateOrUpdate": {
      "rev": 3,
      "code": "function prepareRecordForCreateOrUpdate(params, authToken, scope, criteria) {\n\tvar obj = iml.formatOutputParams(params);\n\tvar auth = {};\n\tauth.authtoken = authToken;\n\tauth.scope = scope;\n\tobj = iml.merge(obj, auth);\n\t\n\tif (criteria) {\n\t\tvar update = {};\n\t\tupdate.criteria = criteria;\n\t\tobj = iml.merge(obj, update);\n\t\tobj.process_until_limit = true;\n\t\tobj.submit = \"Update Record\";\n\t}\n\treturn iml.removeEmptyObjects(iml.removeEmptyArrays(iml.removeNull(obj)));\n}",
      "name": "prepareRecordForCreateOrUpdate",
      "test": null,
      "appName": "zoho-creator",
      "arguments": "(params, authToken, scope, criteria)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-04-18T07:25:43.433532+00:00",
  "categories": [],
  "opensource": false,
  "description": null,
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "82d660bdb362ba9729687161c7b7fc49",
  "versionFull": "1.3.0",
  "compiledName": "zoho-creator",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 1,
  "compilationError": null,
  "installSpecJsonc": "[\n]"
}
