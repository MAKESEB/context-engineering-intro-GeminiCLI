{
  "rev": 25,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization"
      ]
    },
    "baseUrl": "https://graph.microsoft.com/v1.0",
    "headers": {
      "Authorization": "Bearer {{connection.accessToken}}"
    },
    "response": {
      "error": {
        "type": "DataError",
        "message": "{{body.error.code}}: {{body.error.message}}"
      }
    }
  },
  "beta": false,
  "docs": "# Connecting the OneNote service to Integromat\n\nTo connect your OneNote account to Integromat, follow the general instructions for [Connecting to services](https://support.integromat.com/hc/en-us/articles/360001990194.html#create-a-connection). After you click the **Continue** button, you will be prompted to sign in to your Microsoft account.\n\n![Creating a connection](https://integromat.zendesk.com/hc/article_attachments/360009137094/file.png)\n\n![Microsoft login](https://integromat.zendesk.com/hc/article_attachments/360009137114/file.png)\n\nIf everything went right, the connection is now established and you can finish your integration.\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "name": "onenote",
  "_rpcs": {
    "test": {
      "api": {
        "method": "GET",
        "response": {
          "output": {
            "name": "file",
            "spec": [
              {
                "name": "value",
                "type": "buffer",
                "label": "Data",
                "required": true,
                "semantic": "file:data"
              },
              {
                "name": "fileName",
                "type": "filename",
                "label": "File Name",
                "required": true,
                "semantic": "file:name"
              },
              {
                "help": "Only for `img` tag.",
                "name": "contentType",
                "type": "select",
                "label": "Contant Type",
                "options": [
                  {
                    "label": "image/jpeg",
                    "value": "image/jpeg"
                  },
                  {
                    "label": "image/png",
                    "value": "image/png"
                  },
                  {
                    "label": "image/gif",
                    "value": "image/gif"
                  },
                  {
                    "label": "image/tiff",
                    "value": "image/tiff"
                  },
                  {
                    "label": "image/bmp",
                    "value": "image/bmp"
                  },
                  {
                    "label": "application/pdf",
                    "value": "application/pdf"
                  }
                ]
              }
            ],
            "type": "collection",
            "label": "File"
          }
        }
      },
      "rev": 5,
      "name": "test",
      "label": "Get File Params",
      "appName": "onenote",
      "apiJsonc": "{\r\n    \"method\": \"GET\",\r\n    \"response\": {\r\n        \"output\": {\r\n            \"name\": \"file\",\r\n            \"label\": \"File\",\r\n            \"type\": \"collection\",\r\n            \"spec\": [\r\n                {\r\n                    \"name\": \"value\",\r\n                    \"type\": \"buffer\",\r\n                    \"label\": \"Data\",\r\n                    \"semantic\": \"file:data\",\r\n                    \"required\": true\r\n                },\r\n                {\r\n                    \"name\": \"fileName\",\r\n                    \"type\": \"filename\",\r\n                    \"label\": \"File Name\",\r\n                    \"semantic\": \"file:name\",\r\n                    \"required\": true\r\n                },\r\n                {\r\n                    \"type\": \"select\",\r\n                    \"name\": \"contentType\",\r\n                    \"label\": \"Contant Type\",\r\n                    \"help\": \"Only for `img` tag.\",\r\n                    \"options\": [\r\n                        {\r\n                            \"value\": \"image/jpeg\",\r\n                            \"label\": \"image/jpeg\"\r\n                        },\r\n                        {\r\n                            \"value\": \"image/png\",\r\n                            \"label\": \"image/png\"\r\n                        },\r\n                        {\r\n                            \"value\": \"image/gif\",\r\n                            \"label\": \"image/gif\"\r\n                        },\r\n                        {\r\n                            \"value\": \"image/tiff\",\r\n                            \"label\": \"image/tiff\"\r\n                        },\r\n                        {\r\n                            \"value\": \"image/bmp\",\r\n                            \"label\": \"image/bmp\"\r\n                        },\r\n                        {\r\n                            \"value\": \"application/pdf\",\r\n                            \"label\": \"application/pdf\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "onenote",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "getParams": {
      "api": {
        "temp": {
          "filesArray": "{{length(parameters.files)}}"
        },
        "method": "GET",
        "response": {
          "output": [
            {
              "name": "value",
              "type": "buffer",
              "label": "Data",
              "required": true,
              "semantic": "file:data"
            },
            {
              "name": "fileName",
              "type": "filename",
              "label": "File Name",
              "required": true,
              "semantic": "file:name"
            }
          ]
        }
      },
      "rev": 2,
      "name": "getParams",
      "label": "getParams",
      "appName": "onenote",
      "apiJsonc": "{\n    \"method\": \"GET\",\n    \"temp\": {\n        \"filesArray\": \"{{length(parameters.files)}}\"\n    },\n    \"response\": {\n        \"output\": [\n            {\n                \"name\": \"value\",\n                \"type\": \"buffer\",\n                \"label\": \"Data\",\n                \"semantic\": \"file:data\",\n                \"required\": true\n            },\n            {\n                \"name\": \"fileName\",\n                \"type\": \"filename\",\n                \"label\": \"File Name\",\n                \"semantic\": \"file:name\",\n                \"required\": true\n            }\n        ]\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "onenote",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "listPages": {
      "api": {
        "qs": {
          "$top": 50
        },
        "url": "/me/onenote/{{if(parameters.sectionId, 'sections/' + parameters.sectionId + '/', '')}}pages",
        "method": "GET",
        "response": {
          "temp": {
            "page": "{{ifempty(temp.page, 0) + 1}}"
          },
          "output": {
            "label": "{{item.title}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "qs": {
            "$skip": "{{(temp.page) * 50}}"
          }
        }
      },
      "rev": 3,
      "name": "listPages",
      "label": "List pages",
      "appName": "onenote",
      "apiJsonc": "{\n    \"qs\": {\n        \"$top\": 50\n    },\n    \"url\": \"/me/onenote/{{if(parameters.sectionId, 'sections/' + parameters.sectionId + '/', '')}}pages\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"temp\": {\n            \"page\": \"{{ifempty(temp.page, 0) + 1}}\"\n        },\n        \"output\": {\n            \"label\": \"{{item.title}}\",\n            \"value\": \"{{item.id}}\"\n        },\n        \"iterate\": \"{{body.value}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"$skip\": \"{{(temp.page) * 50}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "onenote",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listSections": {
      "api": {
        "qs": {
          "$top": 50
        },
        "url": "/me/onenote/sections",
        "method": "GET",
        "response": {
          "temp": {
            "page": "{{ifempty(temp.page, 0) + 1}}"
          },
          "output": {
            "label": "{{item.displayName}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "qs": {
            "$skip": "{{(temp.page) * 50}}"
          }
        }
      },
      "rev": 2,
      "name": "listSections",
      "label": "List sections",
      "appName": "onenote",
      "apiJsonc": "{\n    \"qs\": {\n        \"$top\": 50\n    },\n    \"url\": \"/me/onenote/sections\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"temp\": {\n            \"page\": \"{{ifempty(temp.page, 0) + 1}}\"\n        },\n        \"output\": {\n            \"label\": \"{{item.displayName}}\",\n            \"value\": \"{{item.id}}\"\n        },\n        \"iterate\": \"{{body.value}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"$skip\": \"{{(temp.page) * 50}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "onenote",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listNotebooks": {
      "api": {
        "qs": {
          "$top": 10
        },
        "url": "/me/onenote/notebooks",
        "method": "GET",
        "response": {
          "temp": {
            "page": "{{ifempty(temp.page, 0) + 1}}"
          },
          "output": {
            "label": "{{item.displayName}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "qs": {
            "$skip": "{{(temp.page) * 10}}"
          }
        }
      },
      "rev": 2,
      "name": "listNotebooks",
      "label": "List notebooks",
      "appName": "onenote",
      "apiJsonc": "{\n    \"qs\": {\n        \"$top\": 10\n    },\n    \"url\": \"/me/onenote/notebooks\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"temp\": {\n            \"page\": \"{{ifempty(temp.page, 0) + 1}}\"\n        },\n        \"output\": {\n            \"label\": \"{{item.displayName}}\",\n            \"value\": \"{{item.id}}\"\n        },\n        \"iterate\": \"{{body.value}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"$skip\": \"{{(temp.page) * 10}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "onenote",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listNotebookSections": {
      "api": {
        "qs": {
          "$top": 50
        },
        "url": "/me/onenote/notebooks/{{parameters.notebook}}/sections",
        "method": "GET",
        "response": {
          "temp": {
            "page": "{{ifempty(temp.page, 0) + 1}}"
          },
          "output": {
            "label": "{{item.displayName}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "qs": {
            "$skip": "{{(temp.page) * 50}}"
          }
        }
      },
      "rev": 2,
      "name": "listNotebookSections",
      "label": "List notebook's sections",
      "appName": "onenote",
      "apiJsonc": "{\n    \"qs\": {\n        \"$top\": 50\n    },\n    \"url\": \"/me/onenote/notebooks/{{parameters.notebook}}/sections\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"temp\": {\n            \"page\": \"{{ifempty(temp.page, 0) + 1}}\"\n        },\n        \"output\": {\n            \"label\": \"{{item.displayName}}\",\n            \"value\": \"{{item.id}}\"\n        },\n        \"iterate\": \"{{body.value}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"$skip\": \"{{(temp.page) * 50}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "onenote",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    }
  },
  "flags": {
    "sandboxes": [
      {
        "allowed": true,
        "version": 1
      },
      {
        "allowed": false,
        "version": 2
      }
    ]
  },
  "label": "OneNote",
  "theme": "#80397b",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Notebooks",
      "modules": [
        "createNotebook",
        "getnotebook",
        "listnotebooks"
      ]
    },
    {
      "label": "Sections",
      "modules": [
        "createSection",
        "getsection",
        "listsections",
        "copyAPageToTheSection"
      ]
    },
    {
      "label": "Pages",
      "modules": [
        "watchPages",
        "createpage",
        "updateAPage",
        "getpage",
        "listPages",
        "deletePage"
      ]
    },
    {
      "label": "Files",
      "modules": [
        "downloadAFile"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "makeAnApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000003254944415458c3b5d74ba8d55514c7f1cfbe9e5b57af17d4bae5e3caeda1626483a01a950327d520937210154411f6d041440fa246cd22084a222d881c142551412f098342b45911598382ec465041a928bd40cf6eb0f79ffbf7b8ffe7711f0b2ef79cfddfe7bfbefbb7d65e7bed60008b31561f87b1042b703136e037bc8a1842e8fb9dc59935472d8c611cab7109d6610d26b13c832cc41bb87350805676b6203b3a1f13b8b4e6e8a2bcd2251869829ea9b5701db667a72bb034af68268e26311e6b1216143f891f703a84a025c56f6b56613616f110eec5a9863943f81937e148a5c05cda428cf6a1d23d988a311e9a6b804afad30dab0f588ca7f2d8f3730910b00b1fd740eacf1ec6c68ef191f950a0dd00504ccc26805ff10b16e1b22c1ffc83b7f2f3dba578d69d3f80fb324449a1be0176e359a926bc8d2bf2f8493c83a92ce764878337f14d0120e06e5cd5a95813c05ff81bdfe325bc50802dad682affae1482cdf9f3291cc6711cec9503017b719bb313a8d3221ec136e53a309cff1fc3d352a5fdae1bc039d8844fb013d7f401bb1f279443b019974b5b741c4f62a2d5e38577e1283ec03ea96c77b383f8bae15d1b32c019aa74036863151e942ad74eacd77c46443c9ee796423056fa51af1c88b8057bf0b9940fdd0e9ac3f8d0d99530e05aa9771818604c3a2dbfc0cbd20e196a98ffae54094b702fce04a0b21b7103decbdf1737c03e8a3b944370610de6183ec2a7fd022cc20e7c26eddf26fb033f2a1f46a3193c6415bfc24f4d00a3520754ef1136620b5ecbab2d159b57a47c5178b61bb74ac93d216dc3d54d00f7e366a94baa6c184f4867c37fd20ee90cc10e29694b0aac298cb59a0096e7bf4e5b87c7ba84e0dc2c7329078abee6ba1f784ecaf6d2b35d599d790320b5e5d72b87e0eaf95620e24a29777a297514ef63ff7cf584ddac8d6ff18edc0ffc299de31748fb7da88f9734adec757ca9dc1155737e975af276084188318e48556a95e9abd75aa96caec4b20cd6eba232b3ab5908e1dfacc0548cf1501e1f92b6d37952d1a8df092bb0d9dca0a601ced0679abc2d3516277024c678208f2fc860d51db2025b2f5db706b659d1775cd787a57ed02021f81f38cab7df51c7f9340000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000006174944415478dae5db7b885d471d07f0cfecdd6cb649ec2b5bdbb4a6696212b11ab4a208622b6a51a416b4be91a8f840ea03fc43948028f88f0a5a14a518a106458508da4a11ac2f2a82f86ed56aab285aadd1349a466dd26cbbf78e7fcc1c73bc59b377ce3df7b1ee170ef7de7367ce99df777e33f37bcc0413468cb1faba0ee7e0221cc1e110c2c8df3f3b014167b10917e031d881ddd8896db810efc4c171b4ab75026a8276b2a00b354177e5eb325c8cf3308f7a5747491bc682c604d4049dc9826ec6254ef568bfa01bfa049d0aac48409fa01b6a826e77aa47b7674137e732339316ac110159d89085383f0b55177447167e3336ae2641ff270159e8dd78b23411edae09ba9005ed4cbaa1232340eac57d78dda41b5343c47931c6671a5ecb027e835f41ffd23a9b0bcc4f5ae23e74b1075f68a16d33b8032fc69ffaff1c9b1dd00021b7af8d363e0e5b571b016d631eeb638c1d69889d445c2b049c850fe31f9266f5f025ec5f2b04747045dfbd6db86dd5afe343601ef3d3aa0133b80ffb95cd533d3c1e570f5a619a09f85d08e11d2595b251b717cf35a0dfb1968700a657037ad81163bcbeb08d3d5caec0eb1c35011127a43577317f2ee0ec0104d98ab719b1955a42c071dc897f65418e4b6c5f71863a27b2103fae1170035e3a4aa14645c0eff14a1c967a760957e1cb927bbc1c96f00bdc957f073c34c0bb8264b47c1f73056d8c78b4e4bab74e402f37fe91104235e37e0f5fc4f505cf19041d49dbae2dacb724ad02fb0d380f349e0332094bf824aec1a52d932084f06049f9dc2927072cfe4f3cd8c624f8731cc0fb5a943d6221c678b5b2604c17cf707aef2fe1dbb8bf56ee56fc7128026a43e1005e8227b64440174fc0a7b5b30a9cc4fbf12329d4d7c503e8353284628cffb932ee958642b725022a8486d77258924ce46f4adab00feb9b6a40c07324f53f92ef1dc42b70654bc23f2ca9ecfac27af35286a91f31dfaf0ca54d38d894808817498ec727f2bdbfe5ef4f95fcef61d0c14ff17c65b9842529f4f5c101eacd616e9839600e6fc62d92e7065fc56d999c6110b01842b8a7a4521e927f29a9330c015d69d2db8b0fe47bc7f1713c4bca063545c47c8c71a7720dd83a2e022abc5eb2067f9d7f7f570a37bd71886776f114c9c86a32078cd519da8937e0dd52cf3d821bf1022b3b3d67c23ac9c41ea933d4563ce0d5fedb29ba139f957ab2d7f09931d72fbd8aded7963b7cb1e40fbc45d280281931574ae3b2141dc981daabdc127cb6e4818ed6175806d7e1f3b83dfffe2d3e6570dbbc8e80a321849b4b2ae5556053499d3609381f6fc50f9c72796fd57c0888319eab7c15d83829024813dff3f01508211cab0953f29c6a15b851d92a10a58e1884b42338d636011ba5f177bb14d0688a8847e149da5b0566f04b7c4822f8ebf8f3286282574996e067628cc6b1d3ab8080bbf13169583e6044b9c1396945f89a143e6bdad87bf111e551ab3d78e132ff7525dfe2066988dc82f78e2a2afc34bc0a1f6da80533f84308e13d25956a89916b9c3e0f54c3aa32af5f8e9b4a0ca18e34c6e7f2f7334935833749fb8b1a23c6184aaec2c7cf62b64403b64bb6f93129dcbd6785f297e3ed381063ac42e20f1b6c56ef497b95dea56ccf60cfa91e1e988541b1014f2f284f5a115e2be5042a122e1c50902d92893d358991265827adcb538b69cd0d061c95e277a589914b140467a795808e94512a4da12de135b8c9049ca1d61142582c299f97c122ef735a09e8614b8cf13a65ee704fe1443dcd04ec967676ad8a88d06ac4211c9d560d1805aa2db3fb240dfb0e0ead25023ab8a73fd7b05686c0a264be9f8669d58080bfe31bca0ca1e510f12d2916b02c013d295272b7b481e99c165e3a2caaa8f0cb5a785695ab88cbb9e5211b0f733857da5fb34df2a876e5cf4bf3fdb38de7345794acb9cf8de5dc607e49958abe1f77d50298eb333117d588a98ed46cad1133ad4369650296bb59637e510a6b1dc6cf6a87aa2a62b664627665621e2b9d11bc408acf4f3d31450dccc454870dfe9aaf3b6ac4cc4b59e12d5200a51a4a15310b9998a93984d54a0fd58879285f87f0931a316759f918de2613589647aaa235624ee4ebbe18e30ff3dfd541cc8a98fad1daa24d0e43b5715c2f5a097d275403ba539453f8ffc5bf0153a8b1f61748a1a20000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-02-21T23:55:59.036561+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda79300000b204944415478daed9d7b8c5c551dc73f7766976db7af856dbbbbddd63e962e3ef04944221a8815116b685512c5478468547cfda17f906040234605a37f588c6f311a4c831a1f448808282d16a5a1e111492d516a8bda620ab4f4b1db76e7e71fbf733b67a773676766e7de73ee9df3496e766776f6de33f7f7bde7fcceef9cdf3910e86a22d705f00d11897f2d030b8041603930056c032a51549cdbd6e3ba00aea831f43c6031b00c58039c6d8e35c008b014f815f0a0eb72779ac20bc032740935f420c9861e349f29d53955040805a33002a831743f70266ae8d5c018306e7e2ea36ae8b2eb72bb26970230c68ea81a7a0458853ecd6b51a32f47abf5f979fd9e59e0f58db10c3d1718a06ae831d4d063c028b00475d8bcfe3e3ee2c50db30c3d0758040c032f428d7c0eda462fa76ae85ed7652e0a990ac06aa7fb986ee8b88d5e635e2f450ddde7fa06159d54045063e885a8a15770baa187ccdf83a11d312b015886ee450d398456d5711bbd1635f4b0f9fb1cd75f38309da6045063e8056815bd1c7d92e3277a156ae801d4d0c5099715986902b00cdd831a7a095543c75ef76aaa869e4b3074aee98153865f01ac43fbd2e3e8133d82f6b3fb09862e24760db00ef801213ad655d80228513f061ea841442e022ec79fb18108781af80970a095d14a2f024139e43ce033ae0b51c314da6c5f2b2213cd8ac07ee2431b9f6fcac00780f35bf9275b00be546781f65984c65d9a26b4f9c5a3a59a3c08a0cb093e4097137a01c522023e085c2022f56af7a3c09f80bb81c9288a82000a468406f4d635f8cc8781eb814d92a09240b159087c149d1b19ba815dca5274626c7002bb9808420dd0f50427b03d4ea01e7525a3ebcd25a551da2080f6f835f028d9d49a65e0f3c0c5699c3c08a00da228da0bec4dfb3a66a24e19d89fd6354237301fa4e6a0070174394100f920355fc3f601421ca0494464049d449b85135802ce4aebe4b600421ca079de097c99ecba81fd699d38f402da234e79cb3d451080a01322a7d000cda4751c438328ab084d5c5d5c0840a8569db38d6e4d01df04ee478d7d0c386c8ef8f506e07b1db85621494b00fb81bb808368c8f418701c38625e1f46d3cebe80aee2d12e15e05ee077f5a6419b40ca0b297dc74290960076029f048e34304c197809f089595c2762e6aa3d54fd0d48b31b98d8ab88a208119902be0bac47dbe83cf177e036b2e93945c01b6971ba77b3b8ee063e0efc186d0af2c49d6813970565546ca90b20534c2d00702bdaaf7e85abb2b45176218307c65a3b29b56bf93023680ff01de0a4a3eb772315b407e5764690e520de0efcd9f55de9229e04fe0bfe04820e00df025e4b8a61cf4e2122cdf43e3a45a9c56b356a9e2a680fed4be83d772f00cb17b813f83df00ed7656a82f5c07bc9ae177041939f15b439ddc2e981af088dc7ec007683de7be702b038026c022e22c5d1af0e310e5ce9ba1075107449fbcdedac0fe00cabb05b815fb82e4fce89407b1022324f4406ac63be8844d66260fecc07304dc149e0dbc065e8787ba07d4ac075c0a5188f1f6d02ee02be2f22cfd63601becc0778145debe673ae0b9273227459bff36ade7f039a15749d889cccb40930d5d2a0888c9bdfa797589b02017e08fccdd59d2b10f51eea32700526b2e8c2097c1970237035f0cf84cf3c850ee17e033f877127d191ceac6604cd03cee8e0f91698c38900ca687fff2ae00611b19d40bb5bb8197837f07a07659c895f020f91dd9cc01b81b7a47172571342227445abcdc013099f7b06b805780d9e2d321d45d13e605fdad7b186cd9f4beb1aaec6022ae810f0478072822f007007f0870ccbe52b854a0cb1bfcc7bd0e62089c36870e87907e5ec0a5c0c06d9d71902ae01ce68500bdc8feed9d7cd649218e28a0de88487bb131cc2e3e840d1a598654d5c23222bd065f3b3ca0e1e4aebe42e0450db9e2d42e7056e43abfc7aec007e0a5ceba0bcf5d8087c956cd70748051f6a00804b80b701b727d40271706823ba8b986b7ac9c1b07533b87002eb559b73818fd37814f049343894d553d71578311a68b8100d51d2c021fc19b0dd75418b844f02e841d7af1b6df0997da84338695edb59468136f0490000af06de070d6b81df00f799df2b683e60a04d7c71026322e043e8224cbb123e73080d0e5d887691269b3a7367790c9d7a95d594b037a39b79751cdf04003addea6a74bc5a12068aee43e710be1d3702b8c71cb4b23f4fab586301b79192007c6b0262de0fbcaac1df27d11dcef6e020f9338aa2534756974cebc4be0a6039ea10f634f005b6a221621fe70be406d783418db8023317204104c75187d05711e7026f2685d661100d116f472733d663070e04202265b2f39fca697e471f9d409bcb500ff88e7a2162aa4bc364cd46e06364d70b787987cf791ce33cbb9815dcca7516a0b5c016740e9e2fac4485e93b49b5fa5f304bdde6a1fdbc18dda6f5345f20302387d0e964ff33c7bfd144dcebd14c2cef9b00d025d9ae41f3069f715d981c514193406fa15aeb4ea27b0c1f05ff72031b713e3a437853ad2f10a88f59c4628f3912f16142483394d109a4bf05fee5a0ccb9c3349703680d1a53417da9e3f143e46a5a783b9c8bee89f7450f6a81a3689b9ad548e4225a9f1a5f026e4053d9e39ed2141a40bb594476437e6a8098abd0a40cd769633f477b265950066e06dedae2ff45e81ccaf19af7cf05e6a335ea445e7c8098d5e8c6879f15918aab5a208aa203981536d2c41a0c6ab70b9c54dbbe09cd0ddce5cb94b056b892c6b90445a4d34aefc34c34cd431ca096c45c8240eba4258008334a97929136a04bc9744b70287789212f057e84a6741d149178f5ee4368db33dbeb0ea021e20749ce25480d1119075e4976d9c1a9ad96929600166366f8d621ce0e9e2d97009f02b68b48bc9163bc1af90974c0e3289dcdab8f590f7c9decba81851a0dec9443d38f863a4fa0fddb49d4e8f1110b62219dbf81f13a81b99f8c92b76e602d25aa91ae4264ea644d1e7b01810e1204d0e5040174393ecf09f499edc04d64d70dbc1c78711a27f771a148ef89a2682b3aaa962ad658c04a5212406802f241d7258604322208a0cbc97b20c80922d247768b579648d14e4100edf12ee0d36497183296d6c98300da6318789deb4274021fb68d0b38c4e9b67101674c60126e432fa0d824d5eaf7621246820f505c04cd05dcc9f4bc802dc0d7d05a2008a0c054d08d266eaa79ef2070c265665020038c819f9fe973c107e87282008a474bbdb9100728168798211dbc961007280e13c0adb4b898769811d41e0f015fc19f876602781c5dbdf4582b49b3a117d00651143d003ce0ba1c9dc016c0c3e87a326368fad6109a54d1d7c6790339a1074e2dc2fc083ac439075d91620815c218bac8c01af37a292a8c3452ae021973aa06b0da8d0973ec071e33131323b4261840874263619c83ae623d8a0a6301ba9f4e2027cce803583b7a4fa03b76ec031eb184311715c608ba1be818b0d6fc1c0596a0c208fe8687b46d144b1847cdf11fe0614b18fdc0994c1746dc948ca219c4f3675386c0ece9f8cdb78471c41c4f8b48dc372d5115c63274cd9fb8c6588de6c10fa2dba5e73ef3360f64f2f459fe45055dd0e130b05744fe6ade2fa1461f4485b106f52dce36bf8f501546085f7710a7d56f8d305e30c76e11d966de2f5315c628f58571165aab0461b48197edaf258c2934be7d08784a44e2e04b19f51f16335d18e36853328c3633fd84086743bc14401235c238688e7f8848bc68630fdae358820ac3763c63610ca03d97200c722680242c619c4497477f0ed825227f34eff7a2c2588aee47647755575215c61cba4c188510401296304e00cf9a63a788dc63deef45a39a434c17c65a34d8358c4645fba8ae0b54280a2d80246a84112ffbfa84b5e6601f2a8c61b46b3a8e8ac797d1bfcedd0bd705c8030db6ae0b0402814020affc1f3174ba5491a422f90000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "getpage": {
      "id": 3888,
      "api": {
        "qs": {
          "includeIDs": "{{parameters.includeIDs}}"
        },
        "url": "/me/onenote/pages/{{parameters.id}}/content",
        "method": "GET",
        "response": {
          "output": {
            "content": "{{body}}"
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "getpage",
      "epoch": null,
      "flags": {},
      "label": "Get a Page Content",
      "scope": [
        "Notes.ReadWrite",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "id",
          "type": "select",
          "label": "Page ID",
          "options": "rpc://app%23onenote@1/listPages",
          "mappable": true,
          "required": true
        },
        {
          "help": "Use `true` to get generated `IDs` used to `Update a Page`.",
          "name": "includeIDs",
          "type": "boolean",
          "label": "Include IDs"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/pages/{{parameters.id}}/content\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"includeIDs\": \"{{parameters.includeIDs}}\"\n    },\n    \"response\": {\n        \"output\": {\n            \"content\": \"{{body}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "content",
          "type": "text",
          "label": "Content"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.ReadWrite\",\n    \"Notes.ReadWrite.All\"\n]",
      "accountName": "onenote",
      "description": "Retrieves a content of a selected page.",
      "expectJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"select\",\n        \"label\": \"Page ID\",\n        \"options\": \"rpc://listPages\",\n        \"mode\": \"edit\",\n        \"mappable\": true,\n        \"required\": true\n    },\n    {\n        \"name\": \"includeIDs\",\n        \"label\": \"Include IDs\",\n        \"type\": \"boolean\",\n        \"help\": \"Use `true` to get generated `IDs` used to `Update a Page`.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Content\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listPages": {
      "id": 3889,
      "api": {
        "qs": {
          "$top": 50,
          "$orderby": "{{if(parameters.orderby === null, undefined, parameters.orderby + ' ' + parameters.order)}}"
        },
        "url": "{{if(parameters.section, '/me/onenote/sections/'+parameters.section+'/pages', '/me/onenote/pages')}}",
        "method": "GET",
        "response": {
          "temp": {
            "page": "{{ifempty(temp.page, 0) + 1}}"
          },
          "limit": "{{parameters.limit}}",
          "output": {
            "id": "{{item.id}}",
            "url": "{{item.links.oneNoteWebUrl.href}}",
            "title": "{{item.title}}",
            "parent": "{{item.parentSection.id}}",
            "created": "{{item.createdDateTime}}",
            "modified": "{{item.lastModifiedDateTime}}"
          },
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "qs": {
            "$skip": "{{(temp.page) * 50}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "listPages",
      "epoch": null,
      "flags": {},
      "label": "List pages",
      "scope": [
        "Notes.ReadWrite",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "help": "If this field is empty, all pages from all notebooks will be retrieved.",
          "name": "notebook",
          "type": "select",
          "label": "Notebook",
          "options": {
            "store": "rpc://listNotebooks",
            "nested": [
              {
                "name": "section",
                "type": "select",
                "label": "Section",
                "options": "rpc://listNotebookSections",
                "editable": true,
                "required": true
              }
            ]
          },
          "editable": true,
          "required": false
        },
        {
          "name": "orderby",
          "type": "select",
          "label": "Sort by",
          "options": {
            "store": [
              {
                "label": "Date of creation",
                "value": "createdDateTime"
              },
              {
                "label": "Date of last modificaion",
                "value": "lastModifiedDateTime"
              },
              {
                "label": "Title",
                "value": "title"
              }
            ],
            "nested": [
              {
                "name": "order",
                "type": "select",
                "label": "Order by",
                "default": "asc",
                "options": [
                  {
                    "label": "ASC",
                    "value": "asc"
                  },
                  {
                    "label": "DESC",
                    "value": "desc"
                  }
                ],
                "required": true
              }
            ]
          }
        },
        {
          "help": "Maximum records returned by Integromat.",
          "name": "limit",
          "type": "number",
          "label": "Limit",
          "default": 50,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"$top\": 50,\n        \"$orderby\": \"{{if(parameters.orderby === null, undefined, parameters.orderby + ' ' + parameters.order)}}\"\n    },\n    \"url\": \"{{if(parameters.section, '/me/onenote/sections/'+parameters.section+'/pages', '/me/onenote/pages')}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"temp\": {\n            \"page\": \"{{ifempty(temp.page, 0) + 1}}\"\n        },\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": {\n            \"id\": \"{{item.id}}\",\n            \"url\": \"{{item.links.oneNoteWebUrl.href}}\",\n            \"title\": \"{{item.title}}\",\n            \"parent\": \"{{item.parentSection.id}}\",\n            \"created\": \"{{item.createdDateTime}}\",\n            \"modified\": \"{{item.lastModifiedDateTime}}\"\n        },\n        \"iterate\": \"{{body.value}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"$skip\": \"{{(temp.page) * 50}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Id"
        },
        {
          "name": "parent",
          "type": "text",
          "label": "Parent section Id"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "url",
          "type": "url",
          "label": "URL"
        },
        {
          "name": "created",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "modified",
          "type": "date",
          "label": "Last modified at"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.ReadWrite\",\n    \"Notes.ReadWrite.All\"\n]",
      "accountName": "onenote",
      "description": "Retrieves a list of pages in a selected section.",
      "expectJsonc": "[\n    {\n        \"help\": \"If this field is empty, all pages from all notebooks will be retrieved.\",\n        \"name\": \"notebook\",\n        \"type\": \"select\",\n        \"label\": \"Notebook\",\n        \"options\": {\n            \"store\": \"rpc://listNotebooks\",\n            \"nested\": [\n                {\n                    \"name\": \"section\",\n                    \"type\": \"select\",\n                    \"label\": \"Section\",\n                    \"options\": \"rpc://listNotebookSections\",\n                    \"editable\": true,\n                    \"required\": true\n                }\n            ]\n        },\n        \"editable\": true,\n        \"required\": false\n    },\n    {\n        \"name\": \"orderby\",\n        \"type\": \"select\",\n        \"label\": \"Sort by\",\n        \"options\": {\n            \"store\": [\n                {\n                    \"label\": \"Date of creation\",\n                    \"value\": \"createdDateTime\"\n                },\n                {\n                    \"label\": \"Date of last modificaion\",\n                    \"value\": \"lastModifiedDateTime\"\n                },\n                {\n                    \"label\": \"Title\",\n                    \"value\": \"title\"\n                }\n            ],\n            \"nested\": [\n                {\n                    \"name\": \"order\",\n                    \"type\": \"select\",\n                    \"label\": \"Order by\",\n                    \"default\": \"asc\",\n                    \"options\": [\n                        {\n                            \"label\": \"ASC\",\n                            \"value\": \"asc\"\n                        },\n                        {\n                            \"label\": \"DESC\",\n                            \"value\": \"desc\"\n                        }\n                    ],\n                    \"required\": true\n                }\n            ]\n        }\n    },\n    {\n        \"help\": \"Maximum records returned by Integromat.\",\n        \"name\": \"limit\",\n        \"type\": \"number\",\n        \"label\": \"Limit\",\n        \"default\": 50,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Id\"\n    },\n    {\n        \"name\": \"parent\",\n        \"type\": \"text\",\n        \"label\": \"Parent section Id\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"url\",\n        \"type\": \"url\",\n        \"label\": \"URL\"\n    },\n    {\n        \"name\": \"created\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"modified\",\n        \"type\": \"date\",\n        \"label\": \"Last modified at\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createpage": {
      "id": 3890,
      "api": {
        "url": "/me/onenote/sections/{{parameters.sid}}/pages",
        "body": "{{processInputFiles(parameters.title, parameters.content, parameters.files)}}",
        "type": "multipart/form-data",
        "method": "POST",
        "response": {
          "output": {
            "id": "{{body.id}}",
            "url": "{{body.links.oneNoteWebUrl.href}}",
            "title": "{{body.title}}",
            "createdDateTime": "{{parseDate(body.createdDateTime)}}"
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "createpage",
      "epoch": null,
      "flags": {},
      "label": "Create a Page",
      "scope": [
        "Notes.Create",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "name": "sid",
          "type": "select",
          "label": "Section",
          "options": "rpc://app%23onenote@1/listSections",
          "editable": true,
          "required": true
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "help": "Because OneNote pages act like HTML pages, you can insert here text preformated with HTML markup. Everything from this field will be send in `<body>` tag.\n\n◉ The following list shows the basic element types:\n- `<h1>` through `<h6>` for section headings\n- `<p>` for paragraphs\n- `<ul>`, `<ol>`, and `<li>` for lists and list items\n- `<table>`, `<tr>` and `<td>`, including nested tables\n- `<pre>` for preformatted text (preserves white space and line breaks)\n- `<b>` and `<i>` for bold and italic character styles.\n\n◉ You can upload images or attachments with **Files** parameter. In order to show them on a new page, here are two methods below:\n- For uploading an image,\n<img src=\"name:{`n`}\" alt=\"a cool image\" width=\"500\"/>\n- For uploading an attachment, \n<object data-attachment=\"sample.pdf\" data=\"name:{`n`}\" type=\"application/pdf\"/>\n\n`n`: Index of **Files** parameter, starting from 1.",
          "name": "content",
          "type": "text",
          "label": "Body"
        },
        {
          "help": "Please read the help message from **Body** parameter above how to show images or files on a new page.",
          "name": "files",
          "spec": "rpc://app%23onenote@1/getParams",
          "type": "array",
          "label": "Files"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/sections/{{parameters.sid}}/pages\",\n    \"method\": \"POST\",\n    \"body\": \"{{processInputFiles(parameters.title, parameters.content, parameters.files)}}\",\n    \"type\": \"multipart/form-data\",\n    \"response\": {\n        \"output\": {\n            \"id\": \"{{body.id}}\",\n            \"url\": \"{{body.links.oneNoteWebUrl.href}}\",\n            \"title\": \"{{body.title}}\",\n            \"createdDateTime\": \"{{parseDate(body.createdDateTime)}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Page ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "url",
          "type": "url",
          "label": "URL"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.Create\",\n    \"Notes.ReadWrite.All\"\n]",
      "accountName": "onenote",
      "description": "Creates a new page.",
      "expectJsonc": "[\n    {\n        \"name\": \"sid\",\n        \"type\": \"select\",\n        \"label\": \"Section\",\n        \"options\": \"rpc://listSections\",\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"help\": \"Because OneNote pages act like HTML pages, you can insert here text preformated with HTML markup. Everything from this field will be send in `<body>` tag.\\n\\n◉ The following list shows the basic element types:\\n- `<h1>` through `<h6>` for section headings\\n- `<p>` for paragraphs\\n- `<ul>`, `<ol>`, and `<li>` for lists and list items\\n- `<table>`, `<tr>` and `<td>`, including nested tables\\n- `<pre>` for preformatted text (preserves white space and line breaks)\\n- `<b>` and `<i>` for bold and italic character styles.\\n\\n◉ You can upload images or attachments with **Files** parameter. In order to show them on a new page, here are two methods below:\\n- For uploading an image,\\n<img src=\\\"name:{`n`}\\\" alt=\\\"a cool image\\\" width=\\\"500\\\"/>\\n- For uploading an attachment, \\n<object data-attachment=\\\"sample.pdf\\\" data=\\\"name:{`n`}\\\" type=\\\"application/pdf\\\"/>\\n\\n`n`: Index of **Files** parameter, starting from 1.\",\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Body\"\n    },\n    {\n        \"name\": \"files\",\n        \"label\": \"Files\",\n        \"type\": \"array\",\n        \"spec\": \"rpc://getParams\",\n        \"help\": \"Please read the help message from **Body** parameter above how to show images or files on a new page.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Page ID\"\n    },\n    {\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"url\",\n        \"type\": \"url\",\n        \"label\": \"URL\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deletePage": {
      "id": 3891,
      "api": {
        "url": "/me/onenote/pages/{{parameters.id}}",
        "method": "DELETE",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 2,
      "crud": null,
      "name": "deletePage",
      "epoch": null,
      "flags": {},
      "label": "Delete a page",
      "scope": [
        "Notes.ReadWrite",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "name": "id",
          "type": "select",
          "label": "Page ID",
          "options": "rpc://listPages",
          "editable": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/pages/{{parameters.id}}\",\n    \"method\": \"DELETE\",\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.ReadWrite\",\n    \"Notes.ReadWrite.All\"\n]",
      "accountName": "onenote",
      "description": "Deletes a page.",
      "expectJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"select\",\n        \"label\": \"Page ID\",\n        \"options\": \"rpc://listPages\",\n        \"editable\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getsection": {
      "id": 3892,
      "api": {
        "url": "/me/onenote/sections/{{parameters.sid}}",
        "method": "GET",
        "response": {
          "output": {
            "id": "{{body.id}}",
            "parent": "{{body.parentNotebook.id}}",
            "isDefault": "{{body.isDefault}}",
            "createdById": "{{body.createdBy.user.id}}",
            "displayName": "{{body.displayName}}",
            "createdByName": "{{body.createdBy.user.displayName}}",
            "createdDateTime": "{{body.createdDateTime}}",
            "lastModifiedById": "{{body.lastModifiedBy.user.id}}",
            "lastModifiedByName": "{{body.lastModifiedBy.user.displayName}}",
            "lastModifiedDateTime": "{{body.lastModifiedDateTime}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "getsection",
      "epoch": null,
      "flags": {},
      "label": "Get a section",
      "scope": [
        "Notes.Read.All",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "name": "sid",
          "type": "select",
          "label": "Section",
          "options": "rpc://listSections",
          "editable": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/sections/{{parameters.sid}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": {\n            \"id\": \"{{body.id}}\",\n            \"parent\": \"{{body.parentNotebook.id}}\",\n            \"isDefault\": \"{{body.isDefault}}\",\n            \"createdById\": \"{{body.createdBy.user.id}}\",\n            \"displayName\": \"{{body.displayName}}\",\n            \"createdByName\": \"{{body.createdBy.user.displayName}}\",\n            \"createdDateTime\": \"{{body.createdDateTime}}\",\n            \"lastModifiedById\": \"{{body.lastModifiedBy.user.id}}\",\n            \"lastModifiedByName\": \"{{body.lastModifiedBy.user.displayName}}\",\n            \"lastModifiedDateTime\": \"{{body.lastModifiedDateTime}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Id"
        },
        {
          "name": "parent",
          "type": "text",
          "label": "Parent notebook ID"
        },
        {
          "name": "displayName",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "createdById",
          "type": "text",
          "label": "Created by ID"
        },
        {
          "name": "createdByName",
          "type": "text",
          "label": "Created by user"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "lastModifiedById",
          "type": "text",
          "label": "Last modified by ID"
        },
        {
          "name": "lastModifiedByName",
          "type": "text",
          "label": "Last modified by user"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last modified at"
        },
        {
          "name": "isDefault",
          "type": "boolean",
          "label": "Is default"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n\t\"Notes.Read.All\",\n\t\"Notes.ReadWrite.All\"\n]",
      "accountName": "onenote",
      "description": "Retrieves a selected section based on its id.",
      "expectJsonc": "[\n    {\n        \"name\": \"sid\",\n        \"type\": \"select\",\n        \"label\": \"Section\",\n        \"options\": \"rpc://listSections\",\n        \"editable\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Id\"\n    },\n    {\n        \"name\": \"parent\",\n        \"type\": \"text\",\n        \"label\": \"Parent notebook ID\"\n    },\n    {\n        \"name\": \"displayName\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"createdById\",\n        \"type\": \"text\",\n        \"label\": \"Created by ID\"\n    },\n    {\n        \"name\": \"createdByName\",\n        \"type\": \"text\",\n        \"label\": \"Created by user\"\n    },\n    {\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"lastModifiedById\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by ID\"\n    },\n    {\n        \"name\": \"lastModifiedByName\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by user\"\n    },\n    {\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Last modified at\"\n    },\n    {\n        \"name\": \"isDefault\",\n        \"type\": \"boolean\",\n        \"label\": \"Is default\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchPages": {
      "id": 3893,
      "api": {
        "qs": {
          "$top": 50
        },
        "url": "{{if(parameters.section, '/me/onenote/sections/'+parameters.section+'/pages', '/me/onenote/pages')}}",
        "method": "GET",
        "response": {
          "temp": {
            "page": "{{ifempty(temp.page, 0) + 1}}"
          },
          "limit": "{{parameters.limit}}",
          "output": {
            "id": "{{item.id}}",
            "url": "{{item.links.oneNoteWebUrl.href}}",
            "title": "{{item.title}}",
            "parent": "{{item.parentSection.id}}",
            "created": "{{item.createdDateTime}}",
            "modified": "{{item.lastModifiedDateTime}}"
          },
          "iterate": "{{body.value}}",
          "trigger": {
            "id": "{{item.id}}",
            "date": "{{item.lastModifiedDateTime}}",
            "type": "date",
            "order": "desc"
          }
        },
        "pagination": {
          "qs": {
            "$skip": "{{(temp.page) * 50}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "watchPages",
      "epoch": {
        "response": {
          "limit": "{{undefined}}",
          "output": {
            "date": "{{item.lastModifiedDateTime}}",
            "label": "{{item.title}}"
          }
        }
      },
      "flags": {},
      "label": "Watch pages",
      "scope": [
        "Notes.ReadWrite",
        "Notes.ReadWrite.All"
      ],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"$top\": 50\n    },\n    \"url\": \"{{if(parameters.section, '/me/onenote/sections/'+parameters.section+'/pages', '/me/onenote/pages')}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"temp\": {\n            \"page\": \"{{ifempty(temp.page, 0) + 1}}\"\n        },\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": {\n            \"id\": \"{{item.id}}\",\n            \"url\": \"{{item.links.oneNoteWebUrl.href}}\",\n            \"title\": \"{{item.title}}\",\n            \"parent\": \"{{item.parentSection.id}}\",\n            \"created\": \"{{item.createdDateTime}}\",\n            \"modified\": \"{{item.lastModifiedDateTime}}\"\n        },\n        \"iterate\": \"{{body.value}}\",\n        \"trigger\": {\n            \"id\": \"{{item.id}}\",\n            \"date\": \"{{item.lastModifiedDateTime}}\",\n            \"type\": \"date\",\n            \"order\": \"desc\"\n        }\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"$skip\": \"{{(temp.page) * 50}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Id"
        },
        {
          "name": "parent",
          "type": "text",
          "label": "Parent section Id"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "url",
          "type": "url",
          "label": "URL"
        },
        {
          "name": "created",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "modified",
          "type": "date",
          "label": "Last modified at"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": \"{{undefined}}\",\n        \"output\": {\n            \"date\": \"{{item.lastModifiedDateTime}}\",\n            \"label\": \"{{item.title}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        },
        {
          "help": "If this field is empty, all pages from all notebooks will be retrieved.",
          "name": "notebook",
          "type": "select",
          "label": "Notebook",
          "options": {
            "store": "rpc://listNotebooks",
            "nested": [
              {
                "name": "section",
                "type": "select",
                "label": "Section",
                "options": "rpc://listNotebookSections",
                "editable": true,
                "required": true
              }
            ]
          },
          "editable": true,
          "required": false
        }
      ],
      "scopeJsonc": "[\n    \"Notes.ReadWrite\",\n    \"Notes.ReadWrite.All\"\n]",
      "accountName": "onenote",
      "description": "Triggers when a new page is added or updated in a notebook.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Id\"\n    },\n    {\n        \"name\": \"parent\",\n        \"type\": \"text\",\n        \"label\": \"Parent section Id\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"url\",\n        \"type\": \"url\",\n        \"label\": \"URL\"\n    },\n    {\n        \"name\": \"created\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"modified\",\n        \"type\": \"date\",\n        \"label\": \"Last modified at\"\n    }\n]",
      "parametersJsonc": "[\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    },\n    {\n        \"help\": \"If this field is empty, all pages from all notebooks will be retrieved.\",\n        \"name\": \"notebook\",\n        \"type\": \"select\",\n        \"label\": \"Notebook\",\n        \"options\": {\n            \"store\": \"rpc://listNotebooks\",\n            \"nested\": [\n                {\n                    \"name\": \"section\",\n                    \"type\": \"select\",\n                    \"label\": \"Section\",\n                    \"options\": \"rpc://listNotebookSections\",\n                    \"editable\": true,\n                    \"required\": true\n                }\n            ]\n        },\n        \"editable\": true,\n        \"required\": false\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getnotebook": {
      "id": 3894,
      "api": {
        "url": "/me/onenote/notebooks/{{parameters.id}}",
        "method": "GET",
        "response": {
          "output": {
            "id": "{{body.id}}",
            "url": "{{body.links.oneNoteWebUrl.href}}",
            "isShared": "{{body.isShared}}",
            "userRole": "{{body.userRole}}",
            "isDefault": "{{body.isDefault}}",
            "createdById": "{{body.createdBy.user.id}}",
            "displayName": "{{body.displayName}}",
            "createdByName": "{{body.createdBy.user.displayName}}",
            "createdDateTime": "{{body.createdDateTime}}",
            "lastModifiedById": "{{body.lastModifiedBy.user.id}}",
            "lastModifiedByName": "{{body.lastModifiedBy.user.displayName}}",
            "lastModifiedDateTime": "{{body.lastModifiedDateTime}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "getnotebook",
      "epoch": null,
      "flags": {},
      "label": "Get a notebook",
      "scope": [
        "Notes.Read.All"
      ],
      "expect": [
        {
          "name": "id",
          "type": "select",
          "label": "Notebook",
          "options": "rpc://listNotebooks",
          "editable": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/notebooks/{{parameters.id}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": {\n            \"id\": \"{{body.id}}\",\n            \"url\": \"{{body.links.oneNoteWebUrl.href}}\",\n            \"isShared\": \"{{body.isShared}}\",\n            \"userRole\": \"{{body.userRole}}\",\n            \"isDefault\": \"{{body.isDefault}}\",\n            \"createdById\": \"{{body.createdBy.user.id}}\",\n            \"displayName\": \"{{body.displayName}}\",\n            \"createdByName\": \"{{body.createdBy.user.displayName}}\",\n            \"createdDateTime\": \"{{body.createdDateTime}}\",\n            \"lastModifiedById\": \"{{body.lastModifiedBy.user.id}}\",\n            \"lastModifiedByName\": \"{{body.lastModifiedBy.user.displayName}}\",\n            \"lastModifiedDateTime\": \"{{body.lastModifiedDateTime}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Id"
        },
        {
          "name": "displayName",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "createdById",
          "type": "text",
          "label": "Created by ID"
        },
        {
          "name": "createdByName",
          "type": "text",
          "label": "Created by user"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "lastModifiedById",
          "type": "text",
          "label": "Last modified by ID"
        },
        {
          "name": "lastModifiedByName",
          "type": "text",
          "label": "Last modified by user"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last modified at"
        },
        {
          "name": "userRole",
          "type": "text",
          "label": "User role"
        },
        {
          "name": "url",
          "type": "url",
          "label": "URL"
        },
        {
          "name": "isDefault",
          "type": "boolean",
          "label": "Is default"
        },
        {
          "name": "isShared",
          "type": "boolean",
          "label": "Is shared"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.Read.All\"\n]",
      "accountName": "onenote",
      "description": "Retrieves a detail of a selected notebook.",
      "expectJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"select\",\n        \"label\": \"Notebook\",\n        \"options\": \"rpc://listNotebooks\",\n        \"editable\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Id\"\n    },\n    {\n        \"name\": \"displayName\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"createdById\",\n        \"type\": \"text\",\n        \"label\": \"Created by ID\"\n    },\n    {\n        \"name\": \"createdByName\",\n        \"type\": \"text\",\n        \"label\": \"Created by user\"\n    },\n    {\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"lastModifiedById\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by ID\"\n    },\n    {\n        \"name\": \"lastModifiedByName\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by user\"\n    },\n    {\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Last modified at\"\n    },\n    {\n        \"name\": \"userRole\",\n        \"type\": \"text\",\n        \"label\": \"User role\"\n    },\n    {\n        \"name\": \"url\",\n        \"type\": \"url\",\n        \"label\": \"URL\"\n    },\n    {\n        \"name\": \"isDefault\",\n        \"type\": \"boolean\",\n        \"label\": \"Is default\"\n    },\n    {\n        \"name\": \"isShared\",\n        \"type\": \"boolean\",\n        \"label\": \"Is shared\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateAPage": {
      "id": 59978,
      "api": {
        "url": "/me/onenote/pages/{{parameters.page_id}}/content",
        "body": "{{processInputFilesUpdate(createRemoveAction(parameters.data), parameters.files)}}",
        "type": "multipart/form-data",
        "method": "PATCH",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "create",
      "name": "updateAPage",
      "epoch": null,
      "flags": {},
      "label": "Update a Page",
      "scope": [
        "Notes.Create",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "page_id",
          "type": "select",
          "label": "Page ID",
          "options": "rpc://app%23onenote@1/listPages",
          "mappable": true,
          "required": true
        },
        {
          "name": "data",
          "spec": [
            {
              "help": "◉ `#{data-id}` - This `ID` is optionally defined on elements in the input HTML when creating a page or updating a page. Prefix the value with a `#`.\nExample: `'#intro'` targets the element `<div data-id=\"intro\" ...>`\n◉ `id` - this is the generated `ID` from Microsoft Graph, and is required for most `replace` operations. Do not prefix with a `#`.\nExample: `'div:{33f8a2...}{37}'` targets the element `<div id=\"div:{33f8a2...}{37}\" ...>`\n◉ `body` - the keyword that targets the `first div` on the page. Do not prefix with a `#`.\n◉ `title` - the keyword that targets the page `title`. Do not prefix with a `#`.",
              "name": "target",
              "type": "text",
              "label": "Target",
              "required": true
            },
            {
              "help": "◉ `Append` - adds the supplied content to the target as a first or last child, as determined by the `position` attribute.\n◉ `Applies` only to `body`, `div`, `ol`, and `ul` elements.\n◉ `Insert` - adds the supplied content as a sibling before or after the target, as determined by the `position` attribute.\n◉ `Prepend` - adds the supplied content to the target as a first child. Shortcut for `append + before`. Applies only to `body`, `div`, `ol`, and `ul` elements.\n◉ `Replace` - replaces the target with the supplied content. Most `replace` actions require using the `generated ID` for the target (except `img` and `object` elements within a `div`, which also support using `data-id`).\n◉ `Remove` - removes the selected `target`.",
              "name": "action",
              "type": "select",
              "label": "Action",
              "options": [
                {
                  "label": "Insert",
                  "value": "insert",
                  "nested": [
                    {
                      "help": "After (default).\nWith `append`: The last child of the target element.\nWith `insert`: The subsequent sibling of the target element.",
                      "name": "position",
                      "type": "select",
                      "label": "Position",
                      "options": [
                        {
                          "label": "Before",
                          "value": "before"
                        },
                        {
                          "label": "After",
                          "value": "after",
                          "default": true
                        }
                      ],
                      "mappable": false
                    },
                    {
                      "help": "◉ Supported elements:\n- `body` (targets first div on the page) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\n- `div` ([absolute positioned](https://docs.microsoft.com/en-us/graph/onenote-abs-pos)) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\n- `div` (within a `div`) (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\n- `img`, `object` (within a `div`) (`Replace` - yes, `Append child` - no, `Insert sibling` - yes)\n- `ol`, `ul` (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\n- `table` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\n- `p`, `li`, `h1-h6` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\n- `title` - (`Replace` - yes, `Append child` - no, `Insert sibling` - no).\n\n◉ You can upload images or attachments with **Files** parameter. In order to show them on an updated page, here are two methods below:\n- For uploading an image,\n<img src=\"name:{`n`}\" alt=\"a cool image\" width=\"500\"/>\n- For uploading an attachment, \n<object data-attachment=\"sample.pdf\" data=\"name:{`n`}\" type=\"application/pdf\"/>\n\n`n`: Index of **Files** parameter, starting from 1.",
                      "name": "content",
                      "type": "text",
                      "label": "Content",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "Append",
                  "value": "append",
                  "nested": [
                    {
                      "help": "After (default).\nWith `append`: The last child of the target element.\nWith `insert`: The subsequent sibling of the target element.",
                      "name": "position",
                      "type": "select",
                      "label": "Position",
                      "options": [
                        {
                          "label": "Before",
                          "value": "before"
                        },
                        {
                          "label": "After",
                          "value": "after"
                        }
                      ],
                      "mappable": false
                    },
                    {
                      "help": "◉ Supported elements:\n- `body` (targets first div on the page) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\n- `div` ([absolute positioned](https://docs.microsoft.com/en-us/graph/onenote-abs-pos)) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\n- `div` (within a `div`) (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\n- `img`, `object` (within a `div`) (`Replace` - yes, `Append child` - no, `Insert sibling` - yes)\n- `ol`, `ul` (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\n- `table` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\n- `p`, `li`, `h1-h6` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\n- `title` - (`Replace` - yes, `Append child` - no, `Insert sibling` - no).\n\n◉ You can upload images or attachments with **Files** parameter. In order to show them on an updated page, here are two methods below:\n- For uploading an image,\n<img src=\"name:{`n`}\" alt=\"a cool image\" width=\"500\"/>\n- For uploading an attachment, \n<object data-attachment=\"sample.pdf\" data=\"name:{`n`}\" type=\"application/pdf\"/>\n\n`n`: Index of **Files** parameter, starting from 1.",
                      "name": "content",
                      "type": "text",
                      "label": "Content",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "Prepend",
                  "value": "prepend",
                  "nested": [
                    {
                      "help": "◉ Supported elements:\n- `body` (targets first div on the page) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\n- `div` ([absolute positioned](https://docs.microsoft.com/en-us/graph/onenote-abs-pos)) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\n- `div` (within a `div`) (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\n- `img`, `object` (within a `div`) (`Replace` - yes, `Append child` - no, `Insert sibling` - yes)\n- `ol`, `ul` (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\n- `table` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\n- `p`, `li`, `h1-h6` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\n- `title` - (`Replace` - yes, `Append child` - no, `Insert sibling` - no).\n\n◉ You can upload images or attachments with **Files** parameter. In order to show them on an updated page, here are two methods below:\n- For uploading an image,\n<img src=\"name:{`n`}\" alt=\"a cool image\" width=\"500\"/>\n- For uploading an attachment, \n<object data-attachment=\"sample.pdf\" data=\"name:{`n`}\" type=\"application/pdf\"/>\n\n`n`: Index of **Files** parameter, starting from 1.",
                      "name": "content",
                      "type": "text",
                      "label": "Content",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "Replace",
                  "value": "replace",
                  "nested": [
                    {
                      "help": "◉ Supported elements:\n- `body` (targets first div on the page) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\n- `div` ([absolute positioned](https://docs.microsoft.com/en-us/graph/onenote-abs-pos)) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\n- `div` (within a `div`) (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\n- `img`, `object` (within a `div`) (`Replace` - yes, `Append child` - no, `Insert sibling` - yes)\n- `ol`, `ul` (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\n- `table` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\n- `p`, `li`, `h1-h6` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\n- `title` - (`Replace` - yes, `Append child` - no, `Insert sibling` - no).\n\n◉ You can upload images or attachments with **Files** parameter. In order to show them on an updated page, here are two methods below:\n- For uploading an image,\n<img src=\"name:{`n`}\" alt=\"a cool image\" width=\"500\"/>\n- For uploading an attachment, \n<object data-attachment=\"sample.pdf\" data=\"name:{`n`}\" type=\"application/pdf\"/>\n\n`n`: Index of **Files** parameter, starting from 1.",
                      "name": "content",
                      "type": "text",
                      "label": "Content",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "Remove",
                  "value": "remove"
                }
              ],
              "mappable": false,
              "required": true
            }
          ],
          "type": "array",
          "label": "Data",
          "required": true
        },
        {
          "help": "Please read the help message from **Content** parameter above how to show images or files on an updated page.",
          "name": "files",
          "spec": "rpc://app%23onenote@1/getParams",
          "type": "array",
          "label": "Files"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/pages/{{parameters.page_id}}/content\",\n    \"method\": \"PATCH\",\n    \"body\": \"{{processInputFilesUpdate(createRemoveAction(parameters.data), parameters.files)}}\",\n    \"type\": \"multipart/form-data\",\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"Notes.Create\",\r\n    \"Notes.ReadWrite.All\"\r\n]",
      "accountName": "onenote",
      "description": "Updates an existing page.",
      "expectJsonc": "[\n    {\n        \"name\": \"page_id\",\n        \"label\": \"Page ID\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"mappable\": true,\n        \"options\": \"rpc://listPages\"\n    },\n    {\n        \"name\": \"data\",\n        \"label\": \"Data\",\n        \"required\": true,\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"target\",\n                \"label\": \"Target\",\n                \"required\": true,\n                \"type\": \"text\",\n                \"help\": \"◉ `#{data-id}` - This `ID` is optionally defined on elements in the input HTML when creating a page or updating a page. Prefix the value with a `#`.\\nExample: `'#intro'` targets the element `<div data-id=\\\"intro\\\" ...>`\\n◉ `id` - this is the generated `ID` from Microsoft Graph, and is required for most `replace` operations. Do not prefix with a `#`.\\nExample: `'div:{33f8a2...}{37}'` targets the element `<div id=\\\"div:{33f8a2...}{37}\\\" ...>`\\n◉ `body` - the keyword that targets the `first div` on the page. Do not prefix with a `#`.\\n◉ `title` - the keyword that targets the page `title`. Do not prefix with a `#`.\"\n            },\n            {\n                \"name\": \"action\",\n                \"label\": \"Action\",\n                \"required\": true,\n                \"mappable\": false,\n                \"type\": \"select\",\n                \"options\": [\n                    {\n                        \"value\": \"insert\",\n                        \"label\": \"Insert\",\n                        \"nested\": [\n                            {\n                                \"name\": \"position\",\n                                \"label\": \"Position\",\n                                \"type\": \"select\",\n                                \"mappable\": false,\n                                \"help\": \"After (default).\\nWith `append`: The last child of the target element.\\nWith `insert`: The subsequent sibling of the target element.\",\n                                \"options\": [\n                                    {\n                                        \"value\": \"before\",\n                                        \"label\": \"Before\"\n                                    },\n                                    {\n                                        \"value\": \"after\",\n                                        \"label\": \"After\",\n                                        \"default\": true\n                                    }\n                                ]\n                            },\n                            {\n                                \"name\": \"content\",\n                                \"label\": \"Content\",\n                                \"required\": true,\n                                \"type\": \"text\",\n                                \"help\": \"◉ Supported elements:\\n- `body` (targets first div on the page) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\\n- `div` ([absolute positioned](https://docs.microsoft.com/en-us/graph/onenote-abs-pos)) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\\n- `div` (within a `div`) (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\\n- `img`, `object` (within a `div`) (`Replace` - yes, `Append child` - no, `Insert sibling` - yes)\\n- `ol`, `ul` (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\\n- `table` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\\n- `p`, `li`, `h1-h6` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\\n- `title` - (`Replace` - yes, `Append child` - no, `Insert sibling` - no).\\n\\n◉ You can upload images or attachments with **Files** parameter. In order to show them on an updated page, here are two methods below:\\n- For uploading an image,\\n<img src=\\\"name:{`n`}\\\" alt=\\\"a cool image\\\" width=\\\"500\\\"/>\\n- For uploading an attachment, \\n<object data-attachment=\\\"sample.pdf\\\" data=\\\"name:{`n`}\\\" type=\\\"application/pdf\\\"/>\\n\\n`n`: Index of **Files** parameter, starting from 1.\"\n                            }\n                        ]\n                    },\n                    {\n                        \"value\": \"append\",\n                        \"label\": \"Append\",\n                        \"nested\": [\n                            {\n                                \"name\": \"position\",\n                                \"label\": \"Position\",\n                                \"type\": \"select\",\n                                \"help\": \"After (default).\\nWith `append`: The last child of the target element.\\nWith `insert`: The subsequent sibling of the target element.\",\n                                \"mappable\": false,\n                                \"options\": [\n                                    {\n                                        \"value\": \"before\",\n                                        \"label\": \"Before\"\n                                    },\n                                    {\n                                        \"value\": \"after\",\n                                        \"label\": \"After\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"name\": \"content\",\n                                \"label\": \"Content\",\n                                \"required\": true,\n                                \"type\": \"text\",\n                                \"help\": \"◉ Supported elements:\\n- `body` (targets first div on the page) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\\n- `div` ([absolute positioned](https://docs.microsoft.com/en-us/graph/onenote-abs-pos)) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\\n- `div` (within a `div`) (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\\n- `img`, `object` (within a `div`) (`Replace` - yes, `Append child` - no, `Insert sibling` - yes)\\n- `ol`, `ul` (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\\n- `table` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\\n- `p`, `li`, `h1-h6` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\\n- `title` - (`Replace` - yes, `Append child` - no, `Insert sibling` - no).\\n\\n◉ You can upload images or attachments with **Files** parameter. In order to show them on an updated page, here are two methods below:\\n- For uploading an image,\\n<img src=\\\"name:{`n`}\\\" alt=\\\"a cool image\\\" width=\\\"500\\\"/>\\n- For uploading an attachment, \\n<object data-attachment=\\\"sample.pdf\\\" data=\\\"name:{`n`}\\\" type=\\\"application/pdf\\\"/>\\n\\n`n`: Index of **Files** parameter, starting from 1.\"\n                            }\n                        ]\n                    },\n                    {\n                        \"value\": \"prepend\",\n                        \"label\": \"Prepend\",\n                        \"nested\": [\n                            {\n                                \"name\": \"content\",\n                                \"label\": \"Content\",\n                                \"required\": true,\n                                \"type\": \"text\",\n                                \"help\": \"◉ Supported elements:\\n- `body` (targets first div on the page) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\\n- `div` ([absolute positioned](https://docs.microsoft.com/en-us/graph/onenote-abs-pos)) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\\n- `div` (within a `div`) (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\\n- `img`, `object` (within a `div`) (`Replace` - yes, `Append child` - no, `Insert sibling` - yes)\\n- `ol`, `ul` (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\\n- `table` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\\n- `p`, `li`, `h1-h6` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\\n- `title` - (`Replace` - yes, `Append child` - no, `Insert sibling` - no).\\n\\n◉ You can upload images or attachments with **Files** parameter. In order to show them on an updated page, here are two methods below:\\n- For uploading an image,\\n<img src=\\\"name:{`n`}\\\" alt=\\\"a cool image\\\" width=\\\"500\\\"/>\\n- For uploading an attachment, \\n<object data-attachment=\\\"sample.pdf\\\" data=\\\"name:{`n`}\\\" type=\\\"application/pdf\\\"/>\\n\\n`n`: Index of **Files** parameter, starting from 1.\"\n                            }\n                        ]\n                    },\n                    {\n                        \"value\": \"replace\",\n                        \"label\": \"Replace\",\n                        \"nested\": [\n                            {\n                                \"name\": \"content\",\n                                \"label\": \"Content\",\n                                \"required\": true,\n                                \"type\": \"text\",\n                                \"help\": \"◉ Supported elements:\\n- `body` (targets first div on the page) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\\n- `div` ([absolute positioned](https://docs.microsoft.com/en-us/graph/onenote-abs-pos)) (`Replace` - no, `Append child` - yes, `Insert sibling` - no)\\n- `div` (within a `div`) (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\\n- `img`, `object` (within a `div`) (`Replace` - yes, `Append child` - no, `Insert sibling` - yes)\\n- `ol`, `ul` (`Replace` - yes (id only), `Append child` - yes, `Insert sibling` - yes)\\n- `table` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\\n- `p`, `li`, `h1-h6` (`Replace` - yes (id only), `Append child` - no, `Insert sibling` - yes)\\n- `title` - (`Replace` - yes, `Append child` - no, `Insert sibling` - no).\\n\\n◉ You can upload images or attachments with **Files** parameter. In order to show them on an updated page, here are two methods below:\\n- For uploading an image,\\n<img src=\\\"name:{`n`}\\\" alt=\\\"a cool image\\\" width=\\\"500\\\"/>\\n- For uploading an attachment, \\n<object data-attachment=\\\"sample.pdf\\\" data=\\\"name:{`n`}\\\" type=\\\"application/pdf\\\"/>\\n\\n`n`: Index of **Files** parameter, starting from 1.\"\n                            }\n                        ]\n                    },\n                    {\n                        \"value\": \"remove\",\n                        \"label\": \"Remove\"\n                    }\n                ],\n                \"help\": \"◉ `Append` - adds the supplied content to the target as a first or last child, as determined by the `position` attribute.\\n◉ `Applies` only to `body`, `div`, `ol`, and `ul` elements.\\n◉ `Insert` - adds the supplied content as a sibling before or after the target, as determined by the `position` attribute.\\n◉ `Prepend` - adds the supplied content to the target as a first child. Shortcut for `append + before`. Applies only to `body`, `div`, `ol`, and `ul` elements.\\n◉ `Replace` - replaces the target with the supplied content. Most `replace` actions require using the `generated ID` for the target (except `img` and `object` elements within a `div`, which also support using `data-id`).\\n◉ `Remove` - removes the selected `target`.\"\n            }\n        ]\n    },\n    {\n        \"name\": \"files\",\n        \"label\": \"Files\",\n        \"type\": \"array\",\n        \"spec\": \"rpc://getParams\",\n        \"help\": \"Please read the help message from **Content** parameter above how to show images or files on an updated page.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listsections": {
      "id": 3895,
      "api": {
        "qs": {
          "$top": 50,
          "$orderby": "{{if(parameters.orderby === null, undefined, parameters.orderby + ' ' + parameters.order)}}"
        },
        "url": "{{if(parameters.notebook, '/me/onenote/notebooks/'+parameters.notebook+'/sections', '/me/onenote/sections')}}",
        "method": "GET",
        "response": {
          "temp": {
            "page": "{{ifempty(temp.page, 0) + 1}}"
          },
          "limit": "{{parameters.limit}}",
          "output": {
            "id": "{{item.id}}",
            "parent": "{{item.parentNotebook.id}}",
            "isDefault": "{{item.isDefault}}",
            "createdById": "{{item.createdBy.user.id}}",
            "displayName": "{{item.displayName}}",
            "createdByName": "{{item.createdBy.user.displayName}}",
            "createdDateTime": "{{item.createdDateTime}}",
            "lastModifiedById": "{{item.lastModifiedBy.user.id}}",
            "lastModifiedByName": "{{item.lastModifiedBy.user.displayName}}",
            "lastModifiedDateTime": "{{item.lastModifiedDateTime}}"
          },
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "qs": {
            "$skip": "{{(temp.page) * 50}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "listsections",
      "epoch": null,
      "flags": {},
      "label": "List sections",
      "scope": [
        "Notes.Read.All"
      ],
      "expect": [
        {
          "help": "If this field is empty, all sections from all notebooks will be retrieved.",
          "name": "notebook",
          "type": "select",
          "label": "Notebook",
          "options": "rpc://listNotebooks",
          "editable": true,
          "required": false
        },
        {
          "name": "orderby",
          "type": "select",
          "label": "Sort by",
          "options": {
            "store": [
              {
                "label": "Date of creation",
                "value": "createdDateTime"
              },
              {
                "label": "Date of last modificaion",
                "value": "lastModifiedDateTime"
              },
              {
                "label": "Name",
                "value": "displayName"
              }
            ],
            "nested": [
              {
                "name": "order",
                "type": "select",
                "label": "Order by",
                "default": "asc",
                "options": [
                  {
                    "label": "ASC",
                    "value": "asc"
                  },
                  {
                    "label": "DESC",
                    "value": "desc"
                  }
                ],
                "required": true
              }
            ]
          }
        },
        {
          "help": "Maximum records returned by Integromat.",
          "name": "limit",
          "type": "number",
          "label": "Limit",
          "default": 50,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"$top\": 50,\n        \"$orderby\": \"{{if(parameters.orderby === null, undefined, parameters.orderby + ' ' + parameters.order)}}\"\n    },\n    \"url\": \"{{if(parameters.notebook, '/me/onenote/notebooks/'+parameters.notebook+'/sections', '/me/onenote/sections')}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"temp\": {\n            \"page\": \"{{ifempty(temp.page, 0) + 1}}\"\n        },\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": {\n            \"id\": \"{{item.id}}\",\n            \"parent\": \"{{item.parentNotebook.id}}\",\n            \"isDefault\": \"{{item.isDefault}}\",\n            \"createdById\": \"{{item.createdBy.user.id}}\",\n            \"displayName\": \"{{item.displayName}}\",\n            \"createdByName\": \"{{item.createdBy.user.displayName}}\",\n            \"createdDateTime\": \"{{item.createdDateTime}}\",\n            \"lastModifiedById\": \"{{item.lastModifiedBy.user.id}}\",\n            \"lastModifiedByName\": \"{{item.lastModifiedBy.user.displayName}}\",\n            \"lastModifiedDateTime\": \"{{item.lastModifiedDateTime}}\"\n        },\n        \"iterate\": \"{{body.value}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"$skip\": \"{{(temp.page) * 50}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Id"
        },
        {
          "name": "parent",
          "type": "text",
          "label": "Parent notebook ID"
        },
        {
          "name": "displayName",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "createdById",
          "type": "text",
          "label": "Created by ID"
        },
        {
          "name": "createdByName",
          "type": "text",
          "label": "Created by user"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "lastModifiedById",
          "type": "text",
          "label": "Last modified by ID"
        },
        {
          "name": "lastModifiedByName",
          "type": "text",
          "label": "Last modified by user"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last modified at"
        },
        {
          "name": "isDefault",
          "type": "boolean",
          "label": "Is default"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.Read.All\"\n]",
      "accountName": "onenote",
      "description": "Retrieves a list of sections in a specified notebook.",
      "expectJsonc": "[\n    {\n        \"help\": \"If this field is empty, all sections from all notebooks will be retrieved.\",\n        \"name\": \"notebook\",\n        \"type\": \"select\",\n        \"label\": \"Notebook\",\n        \"options\": \"rpc://listNotebooks\",\n        \"editable\": true,\n        \"required\": false\n    },\n    {\n        \"name\": \"orderby\",\n        \"type\": \"select\",\n        \"label\": \"Sort by\",\n        \"options\": {\n            \"store\": [\n                {\n                    \"label\": \"Date of creation\",\n                    \"value\": \"createdDateTime\"\n                },\n                {\n                    \"label\": \"Date of last modificaion\",\n                    \"value\": \"lastModifiedDateTime\"\n                },\n                {\n                    \"label\": \"Name\",\n                    \"value\": \"displayName\"\n                }\n            ],\n            \"nested\": [\n                {\n                    \"name\": \"order\",\n                    \"type\": \"select\",\n                    \"label\": \"Order by\",\n                    \"default\": \"asc\",\n                    \"options\": [\n                        {\n                            \"label\": \"ASC\",\n                            \"value\": \"asc\"\n                        },\n                        {\n                            \"label\": \"DESC\",\n                            \"value\": \"desc\"\n                        }\n                    ],\n                    \"required\": true\n                }\n            ]\n        }\n    },\n    {\n        \"help\": \"Maximum records returned by Integromat.\",\n        \"name\": \"limit\",\n        \"type\": \"number\",\n        \"label\": \"Limit\",\n        \"default\": 50,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Id\"\n    },\n    {\n        \"name\": \"parent\",\n        \"type\": \"text\",\n        \"label\": \"Parent notebook ID\"\n    },\n    {\n        \"name\": \"displayName\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"createdById\",\n        \"type\": \"text\",\n        \"label\": \"Created by ID\"\n    },\n    {\n        \"name\": \"createdByName\",\n        \"type\": \"text\",\n        \"label\": \"Created by user\"\n    },\n    {\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"lastModifiedById\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by ID\"\n    },\n    {\n        \"name\": \"lastModifiedByName\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by user\"\n    },\n    {\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Last modified at\"\n    },\n    {\n        \"name\": \"isDefault\",\n        \"type\": \"boolean\",\n        \"label\": \"Is default\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createSection": {
      "id": 3896,
      "api": {
        "url": "/me/onenote/notebooks/{{parameters.nid}}/sections",
        "body": {
          "displayName": "{{parameters.displayName}}"
        },
        "method": "POST",
        "response": {
          "output": {
            "id": "{{body.id}}",
            "isDefault": "{{body.isDefault}}",
            "createdById": "{{body.createdBy.user.id}}",
            "displayName": "{{body.displayName}}",
            "createdByName": "{{body.createdBy.user.displayName}}",
            "createdDateTime": "{{body.createdDateTime}}",
            "lastModifiedById": "{{body.lastModifiedBy.user.id}}",
            "lastModifiedByName": "{{body.lastModifiedBy.user.displayName}}",
            "lastModifiedDateTime": "{{body.lastModifiedDateTime}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "createSection",
      "epoch": null,
      "flags": {},
      "label": "Create a section",
      "scope": [
        "Notes.Create",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "name": "nid",
          "type": "select",
          "label": "Parent notebook",
          "options": "rpc://listNotebooks",
          "editable": true,
          "required": true
        },
        {
          "name": "displayName",
          "type": "text",
          "label": "Name",
          "required": true,
          "validate": {
            "max": 50
          }
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/notebooks/{{parameters.nid}}/sections\",\n    \"body\": {\n        \"displayName\": \"{{parameters.displayName}}\"\n    },\n    \"method\": \"POST\",\n    \"response\": {\n        \"output\": {\n            \"id\": \"{{body.id}}\",\n            \"isDefault\": \"{{body.isDefault}}\",\n            \"createdById\": \"{{body.createdBy.user.id}}\",\n            \"displayName\": \"{{body.displayName}}\",\n            \"createdByName\": \"{{body.createdBy.user.displayName}}\",\n            \"createdDateTime\": \"{{body.createdDateTime}}\",\n            \"lastModifiedById\": \"{{body.lastModifiedBy.user.id}}\",\n            \"lastModifiedByName\": \"{{body.lastModifiedBy.user.displayName}}\",\n            \"lastModifiedDateTime\": \"{{body.lastModifiedDateTime}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Id"
        },
        {
          "name": "parent",
          "type": "text",
          "label": "Parent notebook ID"
        },
        {
          "name": "displayName",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "createdById",
          "type": "text",
          "label": "Created by ID"
        },
        {
          "name": "createdByName",
          "type": "text",
          "label": "Created by user"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "lastModifiedById",
          "type": "text",
          "label": "Last modified by ID"
        },
        {
          "name": "lastModifiedByName",
          "type": "text",
          "label": "Last modified by user"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last modified at"
        },
        {
          "name": "isDefault",
          "type": "boolean",
          "label": "Is default"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.Create\",\n    \"Notes.ReadWrite.All\"\n]",
      "accountName": "onenote",
      "description": "Creates a new section.",
      "expectJsonc": "[\n    {\n        \"name\": \"nid\",\n        \"type\": \"select\",\n        \"label\": \"Parent notebook\",\n        \"options\": \"rpc://listNotebooks\",\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"name\": \"displayName\",\n        \"type\": \"text\",\n        \"label\": \"Name\",\n        \"required\": true,\n        \"validate\": {\n            \"max\": 50\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Id\"\n    },\n    {\n        \"name\": \"parent\",\n        \"type\": \"text\",\n        \"label\": \"Parent notebook ID\"\n    },\n    {\n        \"name\": \"displayName\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"createdById\",\n        \"type\": \"text\",\n        \"label\": \"Created by ID\"\n    },\n    {\n        \"name\": \"createdByName\",\n        \"type\": \"text\",\n        \"label\": \"Created by user\"\n    },\n    {\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"lastModifiedById\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by ID\"\n    },\n    {\n        \"name\": \"lastModifiedByName\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by user\"\n    },\n    {\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Last modified at\"\n    },\n    {\n        \"name\": \"isDefault\",\n        \"type\": \"boolean\",\n        \"label\": \"Is default\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "downloadAFile": {
      "id": 60551,
      "api": {
        "url": "/me/onenote/resources/{{parameters.resourceId}}/content",
        "temp": {
          "name": "{{parameters.name}}"
        },
        "method": "GET",
        "response": {
          "output": {
            "fileData": "{{toBinary(body)}}",
            "fileName": "{{temp.name}}"
          }
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "downloadAFile",
      "epoch": null,
      "flags": {},
      "label": "Download a File",
      "scope": [
        "Notes.Read.All"
      ],
      "expect": [
        {
          "help": "The following is an example of where to get the `Resource ID`.\n<img src=\"https://graph.microsoft.com/v1.0/me/onenote/resources/`{resouce-id}`/$value\" data-src-type=\"image/png\" data-fullres-src=\"https://graph.microsoft.com/v1.0/me/onenote/resources/`{resouce-id}`/$value\" data-fullres-src-type=\"image/png\" ... />\n\nFor example, in this object <img alt=\"a csssool image\" width=\"500\" height=\"333\" src=\"https://graph.microsoft.com/v1.0/users('111...')/onenote/resources/`1-16c137e8a5ac43cd9683ebe98d514f7a!1-d8579671-90ca-4d9f-abd4-ed58c3fca2fc`/$value\" data-src-type=\"image/jpeg\" data-fullres-src=\"https://graph.microsoft.com/v1.0/users('111...')/onenote/resources/`1-16c137e8a5ac43cd9683ebe98d514f7a!1-d8579671-90ca-4d9f-abd4-ed58c3fca2fc`/$value\" data-fullres-src-type=\"image/jpeg\" /> id is `1-16c137e8a5ac43cd9683ebe98d514f7a!1-d8579671-90ca-4d9f-abd4-ed58c3fca2fc`.",
          "name": "resourceId",
          "type": "text",
          "label": "Resource ID",
          "required": true
        },
        {
          "help": "Enter a name and file format.\nExample: `file name.jpg`\nYou can find the `file format` by attributes:`data`, `data-src-type` or `data-fullres-src-type`\nThe following is an example of where to get the `file format`.\n<img src=\"https://graph.microsoft.com/v1.0/me/onenote/resources/{resouce-id}/$value\" `data-src-type=\"image/png\"` data-fullres-src=\"https://graph.microsoft.com/v1.0/me/onenote/resources/{resouce-id}/$value\" `data-fullres-src-type=\"image/png\"` ... />",
          "name": "name",
          "type": "text",
          "label": "File Name",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/resources/{{parameters.resourceId}}/content\",\n    \"method\": \"GET\",\n    \"temp\": {\n        \"name\": \"{{parameters.name}}\"\n    },\n    \"response\": {\n        \"output\": {\n            \"fileName\": \"{{temp.name}}\",\n            \"fileData\": \"{{toBinary(body)}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "fileName",
          "type": "filename",
          "label": "File Name",
          "semantic": "file:name"
        },
        {
          "name": "fileData",
          "type": "buffer",
          "label": "File Data",
          "semantic": "file:data"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"Notes.Read.All\"\r\n]",
      "accountName": "onenote",
      "description": "Downloads an existing file.",
      "expectJsonc": "[\n    {\n        \"name\": \"resourceId\",\n        \"label\": \"Resource ID\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"help\": \"The following is an example of where to get the `Resource ID`.\\n<img src=\\\"https://graph.microsoft.com/v1.0/me/onenote/resources/`{resouce-id}`/$value\\\" data-src-type=\\\"image/png\\\" data-fullres-src=\\\"https://graph.microsoft.com/v1.0/me/onenote/resources/`{resouce-id}`/$value\\\" data-fullres-src-type=\\\"image/png\\\" ... />\\n\\nFor example, in this object <img alt=\\\"a csssool image\\\" width=\\\"500\\\" height=\\\"333\\\" src=\\\"https://graph.microsoft.com/v1.0/users('111...')/onenote/resources/`1-16c137e8a5ac43cd9683ebe98d514f7a!1-d8579671-90ca-4d9f-abd4-ed58c3fca2fc`/$value\\\" data-src-type=\\\"image/jpeg\\\" data-fullres-src=\\\"https://graph.microsoft.com/v1.0/users('111...')/onenote/resources/`1-16c137e8a5ac43cd9683ebe98d514f7a!1-d8579671-90ca-4d9f-abd4-ed58c3fca2fc`/$value\\\" data-fullres-src-type=\\\"image/jpeg\\\" /> id is `1-16c137e8a5ac43cd9683ebe98d514f7a!1-d8579671-90ca-4d9f-abd4-ed58c3fca2fc`.\"\n    },\n    {\n        \"name\": \"name\",\n        \"label\": \"File Name\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"help\": \"Enter a name and file format.\\nExample: `file name.jpg`\\nYou can find the `file format` by attributes:`data`, `data-src-type` or `data-fullres-src-type`\\nThe following is an example of where to get the `file format`.\\n<img src=\\\"https://graph.microsoft.com/v1.0/me/onenote/resources/{resouce-id}/$value\\\" `data-src-type=\\\"image/png\\\"` data-fullres-src=\\\"https://graph.microsoft.com/v1.0/me/onenote/resources/{resouce-id}/$value\\\" `data-fullres-src-type=\\\"image/png\\\"` ... />\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"fileName\",\n        \"type\": \"filename\",\n        \"label\": \"File Name\",\n        \"semantic\": \"file:name\"\n    },\n    {\n        \"name\": \"fileData\",\n        \"type\": \"buffer\",\n        \"label\": \"File Data\",\n        \"semantic\": \"file:data\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listnotebooks": {
      "id": 3897,
      "api": {
        "qs": {
          "$top": 10,
          "$orderby": "{{if(parameters.orderby === null, undefined, parameters.orderby + ' ' + parameters.order)}}"
        },
        "url": "/me/onenote/notebooks",
        "method": "GET",
        "response": {
          "temp": {
            "page": "{{ifempty(temp.page, 0) + 1}}"
          },
          "limit": "{{parameters.limit}}",
          "output": {
            "id": "{{item.id}}",
            "url": "{{item.links.oneNoteWebUrl.href}}",
            "isShared": "{{item.isShared}}",
            "userRole": "{{item.userRole}}",
            "isDefault": "{{item.isDefault}}",
            "createdById": "{{item.createdBy.user.id}}",
            "displayName": "{{item.displayName}}",
            "createdByName": "{{item.createdBy.user.displayName}}",
            "createdDateTime": "{{item.createdDateTime}}",
            "lastModifiedById": "{{item.lastModifiedBy.user.id}}",
            "lastModifiedByName": "{{item.lastModifiedBy.user.displayName}}",
            "lastModifiedDateTime": "{{item.lastModifiedDateTime}}"
          },
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "qs": {
            "$skip": "{{(temp.page) * 10}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "listnotebooks",
      "epoch": null,
      "flags": {},
      "label": "List notebooks",
      "scope": [
        "Notes.Read.All"
      ],
      "expect": [
        {
          "name": "orderby",
          "type": "select",
          "label": "Sort by",
          "options": {
            "store": [
              {
                "label": "Date of creation",
                "value": "createdDateTime"
              },
              {
                "label": "Date of last modificaion",
                "value": "lastModifiedDateTime"
              },
              {
                "label": "Name",
                "value": "displayName"
              }
            ],
            "nested": [
              {
                "name": "order",
                "type": "select",
                "label": "Order by",
                "default": "asc",
                "options": [
                  {
                    "label": "ASC",
                    "value": "asc"
                  },
                  {
                    "label": "DESC",
                    "value": "desc"
                  }
                ],
                "required": true
              }
            ]
          }
        },
        {
          "help": "Maximum records returned by Integromat.",
          "name": "limit",
          "type": "number",
          "label": "Limit",
          "default": 50,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"$top\": 10,\n        \"$orderby\": \"{{if(parameters.orderby === null, undefined, parameters.orderby + ' ' + parameters.order)}}\"\n    },\n    \"url\": \"/me/onenote/notebooks\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"temp\": {\n            \"page\": \"{{ifempty(temp.page, 0) + 1}}\"\n        },\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": {\n            \"id\": \"{{item.id}}\",\n            \"url\": \"{{item.links.oneNoteWebUrl.href}}\",\n            \"isShared\": \"{{item.isShared}}\",\n            \"userRole\": \"{{item.userRole}}\",\n            \"isDefault\": \"{{item.isDefault}}\",\n            \"createdById\": \"{{item.createdBy.user.id}}\",\n            \"displayName\": \"{{item.displayName}}\",\n            \"createdByName\": \"{{item.createdBy.user.displayName}}\",\n            \"createdDateTime\": \"{{item.createdDateTime}}\",\n            \"lastModifiedById\": \"{{item.lastModifiedBy.user.id}}\",\n            \"lastModifiedByName\": \"{{item.lastModifiedBy.user.displayName}}\",\n            \"lastModifiedDateTime\": \"{{item.lastModifiedDateTime}}\"\n        },\n        \"iterate\": \"{{body.value}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"$skip\": \"{{(temp.page) * 10}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Id"
        },
        {
          "name": "displayName",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "createdById",
          "type": "text",
          "label": "Created by ID"
        },
        {
          "name": "createdByName",
          "type": "text",
          "label": "Created by user"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "lastModifiedById",
          "type": "text",
          "label": "Last modified by ID"
        },
        {
          "name": "lastModifiedByName",
          "type": "text",
          "label": "Last modified by user"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last modified at"
        },
        {
          "name": "isDefault",
          "type": "boolean",
          "label": "Is default"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.Read.All\"\n]",
      "accountName": "onenote",
      "description": "Retrieves a list of users notebooks.",
      "expectJsonc": "[\n    {\n        \"name\": \"orderby\",\n        \"type\": \"select\",\n        \"label\": \"Sort by\",\n        \"options\": {\n            \"store\": [\n                {\n                    \"label\": \"Date of creation\",\n                    \"value\": \"createdDateTime\"\n                },\n                {\n                    \"label\": \"Date of last modificaion\",\n                    \"value\": \"lastModifiedDateTime\"\n                },\n                {\n                    \"label\": \"Name\",\n                    \"value\": \"displayName\"\n                }\n            ],\n            \"nested\": [\n                {\n                    \"name\": \"order\",\n                    \"type\": \"select\",\n                    \"label\": \"Order by\",\n                    \"default\": \"asc\",\n                    \"options\": [\n                        {\n                            \"label\": \"ASC\",\n                            \"value\": \"asc\"\n                        },\n                        {\n                            \"label\": \"DESC\",\n                            \"value\": \"desc\"\n                        }\n                    ],\n                    \"required\": true\n                }\n            ]\n        }\n    },\n    {\n        \"help\": \"Maximum records returned by Integromat.\",\n        \"name\": \"limit\",\n        \"type\": \"number\",\n        \"label\": \"Limit\",\n        \"default\": 50,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Id\"\n    },\n    {\n        \"name\": \"displayName\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"createdById\",\n        \"type\": \"text\",\n        \"label\": \"Created by ID\"\n    },\n    {\n        \"name\": \"createdByName\",\n        \"type\": \"text\",\n        \"label\": \"Created by user\"\n    },\n    {\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"lastModifiedById\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by ID\"\n    },\n    {\n        \"name\": \"lastModifiedByName\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by user\"\n    },\n    {\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Last modified at\"\n    },\n    {\n        \"name\": \"isDefault\",\n        \"type\": \"boolean\",\n        \"label\": \"Is default\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeAnApiCall": {
      "id": 60749,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://graph.microsoft.com/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "makeAnApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://graph.microsoft.com`. For example: `/v1.0/me/onenote/notebooks`",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"url\": \"https://graph.microsoft.com/{{parameters.url}}\",\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"method\": \"{{parameters.method}}\",\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"response\": {\n        \"output\": {\n            \"body\": \"{{body}}\",\n            \"headers\": \"{{headers}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "onenote",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"help\": \"Enter a path relative to `https://graph.microsoft.com`. For example: `/v1.0/me/onenote/notebooks`\",\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ],\n        \"required\": true\n    },\n    {\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"name\": \"headers\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"text\",\n                \"label\": \"Key\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"text\",\n                \"label\": \"Value\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Headers\",\n        \"default\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"text\",\n                \"label\": \"Key\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"text\",\n                \"label\": \"Value\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Query String\"\n    },\n    {\n        \"name\": \"body\",\n        \"type\": \"any\",\n        \"label\": \"Body\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": null,
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createNotebook": {
      "id": 3898,
      "api": {
        "url": "/me/onenote/notebooks",
        "body": {
          "displayName": "{{parameters.displayName}}"
        },
        "method": "POST",
        "response": {
          "output": {
            "id": "{{body.id}}",
            "url": "{{body.links.oneNoteWebUrl.href}}",
            "isShared": "{{body.isShared}}",
            "userRole": "{{body.userRole}}",
            "isDefault": "{{body.isDefault}}",
            "createdById": "{{body.createdBy.user.id}}",
            "displayName": "{{body.displayName}}",
            "createdByName": "{{body.createdBy.user.displayName}}",
            "createdDateTime": "{{body.createdDateTime}}",
            "lastModifiedById": "{{body.lastModifiedBy.user.id}}",
            "lastModifiedByName": "{{body.lastModifiedBy.user.displayName}}",
            "lastModifiedDateTime": "{{body.lastModifiedDateTime}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "createNotebook",
      "epoch": null,
      "flags": {},
      "label": "Create a notebook",
      "scope": [
        "Notes.Create",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "name": "displayName",
          "type": "text",
          "label": "Name",
          "required": true,
          "validate": {
            "max": 50
          }
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/notebooks\",\n    \"body\": {\n        \"displayName\": \"{{parameters.displayName}}\"\n    },\n    \"method\": \"POST\",\n    \"response\": {\n        \"output\": {\n            \"id\": \"{{body.id}}\",\n            \"url\": \"{{body.links.oneNoteWebUrl.href}}\",\n            \"isShared\": \"{{body.isShared}}\",\n            \"userRole\": \"{{body.userRole}}\",\n            \"isDefault\": \"{{body.isDefault}}\",\n            \"createdById\": \"{{body.createdBy.user.id}}\",\n            \"displayName\": \"{{body.displayName}}\",\n            \"createdByName\": \"{{body.createdBy.user.displayName}}\",\n            \"createdDateTime\": \"{{body.createdDateTime}}\",\n            \"lastModifiedById\": \"{{body.lastModifiedBy.user.id}}\",\n            \"lastModifiedByName\": \"{{body.lastModifiedBy.user.displayName}}\",\n            \"lastModifiedDateTime\": \"{{body.lastModifiedDateTime}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Id"
        },
        {
          "name": "displayName",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "createdById",
          "type": "text",
          "label": "Created by ID"
        },
        {
          "name": "createdByName",
          "type": "text",
          "label": "Created by user"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "lastModifiedById",
          "type": "text",
          "label": "Last modified by ID"
        },
        {
          "name": "lastModifiedByName",
          "type": "text",
          "label": "Last modified by user"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last modified at"
        },
        {
          "name": "userRole",
          "type": "text",
          "label": "User role"
        },
        {
          "name": "url",
          "type": "url",
          "label": "URL"
        },
        {
          "name": "isDefault",
          "type": "boolean",
          "label": "Is default"
        },
        {
          "name": "isShared",
          "type": "boolean",
          "label": "Is shared"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Notes.Create\",\n    \"Notes.ReadWrite.All\"\n]",
      "accountName": "onenote",
      "description": "Creates a new notebook.",
      "expectJsonc": "[\n    {\n        \"name\": \"displayName\",\n        \"type\": \"text\",\n        \"label\": \"Name\",\n        \"required\": true,\n        \"validate\": {\n            \"max\": 50\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Id\"\n    },\n    {\n        \"name\": \"displayName\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"createdById\",\n        \"type\": \"text\",\n        \"label\": \"Created by ID\"\n    },\n    {\n        \"name\": \"createdByName\",\n        \"type\": \"text\",\n        \"label\": \"Created by user\"\n    },\n    {\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"lastModifiedById\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by ID\"\n    },\n    {\n        \"name\": \"lastModifiedByName\",\n        \"type\": \"text\",\n        \"label\": \"Last modified by user\"\n    },\n    {\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Last modified at\"\n    },\n    {\n        \"name\": \"userRole\",\n        \"type\": \"text\",\n        \"label\": \"User role\"\n    },\n    {\n        \"name\": \"url\",\n        \"type\": \"url\",\n        \"label\": \"URL\"\n    },\n    {\n        \"name\": \"isDefault\",\n        \"type\": \"boolean\",\n        \"label\": \"Is default\"\n    },\n    {\n        \"name\": \"isShared\",\n        \"type\": \"boolean\",\n        \"label\": \"Is shared\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "copyAPageToTheSection": {
      "id": 60150,
      "api": {
        "url": "/me/onenote/pages/{{parameters.page_id}}/copyToSection",
        "body": {
          "id": "{{parameters.id}}"
        },
        "method": "POST",
        "response": {
          "output": "{{parseDates(body)}}"
        }
      },
      "rev": 6,
      "crud": "create",
      "name": "copyAPageToTheSection",
      "epoch": null,
      "flags": {},
      "label": "Copy a Page to the Section",
      "scope": [
        "Notes.Create",
        "Notes.ReadWrite.All"
      ],
      "expect": [
        {
          "rpc": {
            "url": "rpc://app%23onenote@1/listPages",
            "label": "Search Pages",
            "parameters": [
              {
                "name": "sectionId",
                "type": "select",
                "label": "Source Section ID",
                "options": "rpc://app%23onenote@1/listSections",
                "editable": true
              }
            ]
          },
          "name": "page_id",
          "type": "text",
          "label": "Page ID",
          "required": true
        },
        {
          "name": "id",
          "type": "select",
          "label": "Destination Section ID",
          "options": "rpc://app%23onenote@1/listSections",
          "editable": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "onenote",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/onenote/pages/{{parameters.page_id}}/copyToSection\",\n    \"method\": \"POST\",\n    \"body\": {\n        \"id\": \"{{parameters.id}}\"\n    },\n    \"response\": {\n        \"output\": \"{{parseDates(body)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.context",
          "type": "text",
          "label": "Data Context"
        },
        {
          "name": "@odata.type",
          "type": "text",
          "label": "Data Type"
        },
        {
          "name": "id",
          "type": "uinteger",
          "label": "Copy Page ID"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastActionDateTime",
          "type": "date",
          "label": "Last Action Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"Notes.Create\",\r\n    \"Notes.ReadWrite.All\"\r\n]",
      "accountName": "onenote",
      "description": "Copies an existing page to another section.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"page_id\",\n\t\t\"label\": \"Page ID\",\n\t\t\"type\": \"text\",\n\t\t\"required\": true,\n\t\t\"rpc\": {\n\t\t\t\"url\": \"rpc://listPages\",\n\t\t\t\"label\": \"Search Pages\",\n\t\t\t\"parameters\": [{\n\t\t\t\t\"name\": \"sectionId\",\n\t\t\t\t\"label\": \"Source Section ID\",\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"options\": \"rpc://listSections\",\n\t\t\t\t\"editable\": true\n\t\t\t}]\n\t\t}\n\t},\n\t{\n\t\t\"name\": \"id\",\n\t\t\"label\": \"Destination Section ID\",\n\t\t\"type\": \"select\",\n\t\t\"required\": true,\n\t\t\"options\": \"rpc://listSections\",\n\t\t\"editable\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"@odata.context\",\n        \"type\": \"text\",\n        \"label\": \"Data Context\"\n    },\n    {\n        \"name\": \"@odata.type\",\n        \"type\": \"text\",\n        \"label\": \"Data Type\"\n    },\n    {\n        \"name\": \"id\",\n        \"type\": \"uinteger\",\n        \"label\": \"Copy Page ID\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"text\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Created Date Time\"\n    },\n    {\n        \"name\": \"lastActionDateTime\",\n        \"type\": \"date\",\n        \"label\": \"Last Action Date Time\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "onenote": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://graph.microsoft.com/v1.0/me",
          "headers": {
            "Authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {
            "uid": "{{body.id}}",
            "data": {
              "userId": "{{body.id}}"
            },
            "metadata": {
              "type": "text",
              "value": "{{body.displayName}}"
            }
          }
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.code",
              "request.body.client_secret",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
          "body": {
            "code": "{{temp.code}}",
            "client_id": "{{ifempty(data.clientId, common.clientId)}}",
            "grant_type": "authorization_code",
            "redirect_uri": "{{oauth.redirectUri}}",
            "client_secret": "{{ifempty(data.clientSecret, common.clientSecret)}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            }
          }
        },
        "refresh": {
          "log": {
            "sanitize": [
              "request.body.client_secret",
              "request.body.refresh_token",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
          "body": {
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "refresh_token",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}",
            "refresh_token": "{{data.refreshToken}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            }
          },
          "condition": "{{data.expires < addMinutes(now, 1)}}"
        },
        "authorize": {
          "qs": {
            "scope": "{{join(distinct(merge(oauth.scope, ifempty(parameters.scopes, emptyarray))), ' ')}}",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "redirect_uri": "{{oauth.redirectUri}}",
            "response_type": "code"
          },
          "url": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
          "response": {
            "temp": {
              "code": "{{query.code}}"
            }
          }
        }
      },
      "rev": 11,
      "name": "onenote",
      "type": "oauth",
      "label": "OneNote",
      "scope": [
        "User.Read",
        "offline_access"
      ],
      "scopes": {
        "User.Read": "Allows users to sign-in to the app, and allows the app to read the profile of signed-in users. It also allows the app to read basic company informatin of signed-in users.",
        "Notes.Create": "Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user.",
        "Notes.Read.All": "Allows the app to read OneNote notebooks that the signed-in user has access to in the organization.",
        "offline_access": "Allows the app to work with your data until you unauthorize it.",
        "Notes.ReadWrite.All": "Allows the app to read, share, and modify OneNote notebooks that the signed-in user has access to in the organization."
      },
      "aliasTo": null,
      "appName": "onenote",
      "install": {
        "common": {
          "clientId": "{{parameters.clientId}}",
          "clientSecret": "{{parameters.clientSecret}}"
        }
      },
      "apiJsonc": "{\n    \"info\": {\n        \"url\": \"https://graph.microsoft.com/v1.0/me\",\n        \"headers\": {\n            \"Authorization\": \"Bearer {{connection.accessToken}}\"\n        },\n        \"response\": {\n            \"uid\": \"{{body.id}}\",\n            \"data\": {\n                \"userId\": \"{{body.id}}\"\n            },\n            \"metadata\": {\n                \"type\": \"text\",\n                \"value\": \"{{body.displayName}}\"\n            }\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.headers.authorization\"\n            ]\n        }\n    },\n    \"token\": {\n        \"url\": \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n        \"body\": {\n            \"code\": \"{{temp.code}}\",\n            \"client_id\": \"{{ifempty(data.clientId, common.clientId)}}\",\n            \"grant_type\": \"authorization_code\",\n            \"redirect_uri\": \"{{oauth.redirectUri}}\",\n            \"client_secret\": \"{{ifempty(data.clientSecret, common.clientSecret)}}\"\n        },\n        \"type\": \"urlencoded\",\n        \"method\": \"POST\",\n        \"response\": {\n            \"data\": {\n                \"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n                \"accessToken\": \"{{body.access_token}}\",\n                \"refreshToken\": \"{{body.refresh_token}}\"\n            }\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.body.code\",\n                \"request.body.client_secret\",\n                \"response.body.access_token\",\n                \"response.body.refresh_token\"\n            ]\n        }\n    },\n    \"refresh\": {\n        \"url\": \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n        \"body\": {\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"grant_type\": \"refresh_token\",\n            \"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\",\n            \"refresh_token\": \"{{data.refreshToken}}\"\n        },\n        \"type\": \"urlencoded\",\n        \"method\": \"POST\",\n        \"response\": {\n            \"data\": {\n                \"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n                \"accessToken\": \"{{body.access_token}}\",\n                \"refreshToken\": \"{{body.refresh_token}}\"\n            }\n        },\n        \"condition\": \"{{data.expires < addMinutes(now, 1)}}\",\n        \"log\": {\n            \"sanitize\": [\n                \"request.body.client_secret\",\n                \"request.body.refresh_token\",\n                \"response.body.access_token\",\n                \"response.body.refresh_token\"\n            ]\n        }\n    },\n    \"authorize\": {\n        \"qs\": {\n            // \"scope\": \"{{join(oauth.scope, ' ')}}\",\n            \"scope\": \"{{join(distinct(merge(oauth.scope, ifempty(parameters.scopes, emptyarray))), ' ')}}\",\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"redirect_uri\": \"{{oauth.redirectUri}}\",\n            \"response_type\": \"code\"\n        },\n        \"url\": \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n        \"response\": {\n            \"temp\": {\n                \"code\": \"{{query.code}}\"\n            }\n        }\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "advanced": true,
          "editable": true
        },
        {
          "name": "clientSecret",
          "type": "password",
          "label": "Client Secret",
          "advanced": true,
          "editable": true
        },
        {
          "name": "scopes",
          "type": "select",
          "label": "Additional Scopes",
          "dynamic": true,
          "options": [
            {
              "label": "Notes Create",
              "value": "Notes.Create"
            },
            {
              "label": "Notes Read All",
              "value": "Notes.Read.All"
            },
            {
              "label": "Notes Read Write All",
              "value": "Notes.ReadWrite.All"
            }
          ],
          "advanced": true,
          "editable": true,
          "multiple": true
        }
      ],
      "scopeJsonc": "[\n    \"User.Read\",\n    \"offline_access\"\n]",
      "installSpec": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "text",
          "label": "Client Secret",
          "required": true
        }
      ],
      "scopesJsonc": "{\n    \"User.Read\": \"Allows users to sign-in to the app, and allows the app to read the profile of signed-in users. It also allows the app to read basic company informatin of signed-in users.\",\n    \"Notes.Create\": \"Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user.\",\n    \"Notes.Read.All\": \"Allows the app to read OneNote notebooks that the signed-in user has access to in the organization.\",\n    \"offline_access\": \"Allows the app to work with your data until you unauthorize it.\",\n    \"Notes.ReadWrite.All\": \"Allows the app to read, share, and modify OneNote notebooks that the signed-in user has access to in the organization.\"\n}",
      "installJsonc": "{\n\t\"common\": {\n\t\t\"clientId\": \"{{parameters.clientId}}\",\n\t\t\"clientSecret\": \"{{parameters.clientSecret}}\"\n\t}\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"advanced\": true,\n\t\t\"editable\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"password\",\n        \"label\": \"Client Secret\",\n        \"advanced\": true,\n\t\t\"editable\": true\n    },\n    {\n        \"name\": \"scopes\",\n        \"label\": \"Additional Scopes\",\n        \"type\": \"select\",\n        \"advanced\": true,\n        \"multiple\": true,\n        \"dynamic\": true,\n\t\t\"editable\": true,\n        \"options\": [\n            {\n                \"value\": \"Notes.Create\",\n                \"label\": \"Notes Create\"\n            },\n            {\n                \"value\": \"Notes.Read.All\",\n                \"label\": \"Notes Read All\"\n            },\n            {\n                \"value\": \"Notes.ReadWrite.All\",\n                \"label\": \"Notes Read Write All\"\n            }\n        ]\n    }\n]",
      "installSpecJsonc": "[\n\t{\n\t\t\"name\": \"clientId\",\n\t\t\"label\": \"Client ID\",\n\t\t\"type\": \"text\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"clientSecret\",\n\t\t\"label\": \"Client Secret\",\n\t\t\"type\": \"text\",\n\t\t\"required\": true\n\t}\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"https://graph.microsoft.com/v1.0\",\n    \"headers\": {\n        \"Authorization\": \"Bearer {{connection.accessToken}}\"\n    },\n    \"response\": {\n        \"error\": {\n            \"type\": \"DataError\",\n            \"message\": \"{{body.error.code}}: {{body.error.message}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    }\n}",
  "countries": null,
  "_functions": {
    "test2": {
      "rev": 2,
      "code": "function test2(item) {\n  //   let stack = [];\n  //   let obj = { presentation: item.presentation };\n  //   item.files.map((e) => {\n  //     const newArr = {\n  //       [e.file.options.fileName]: {\n  //         value: e.file.value,\n  //         options: e.file.options,\n  //       },\n  //     };\n  //     stack.push(newArr);\n  //   });\n  //   stack.map((e) => {\n  //     Object.keys(e).map((i) => {\n  //       obj[i] = e[i];\n  //     });\n  //   });\n  return item;\n}\n",
      "name": "test2",
      "test": null,
      "appName": "onenote",
      "arguments": "(item)",
      "appVersion": 1
    },
    "testNew": {
      "rev": 1,
      "code": "function testNew() {\n\n}",
      "name": "testNew",
      "test": null,
      "appName": "onenote",
      "arguments": "()",
      "appVersion": 1
    },
    "parseDates": {
      "rev": 2,
      "code": "function parseDates(obj) {\n  const digitsAtEndValidator = (str) => {\n    let strValid = true;\n    let currentPosition = -1;\n\n    while (currentPosition * -1 <= 7) {\n      const currentSubstr = str.slice(currentPosition);\n\n      if (JSON.stringify(new Date(currentSubstr)) !== \"null\") {\n        strValid = false;\n      } else {\n        if (currentPosition * -1 > 6) {\n          strValid = true;\n        }\n      }\n      currentPosition--;\n    }\n\n    return strValid;\n  };\n\n  function dateWithoutTime(date) {\n    const formatPatterns = [\n      /^[0-9]+-([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])$/,\n      /^([1-9]|[1][0-2])\\/([1-9]|[1-2][0-9]|[3][0-1])\\/[0-9]+$/,\n      /^([0-2][0-9]|[3][0-1])\\/([0][1-9]|[1][0-2])\\/[0-9]+$/,\n    ];\n\n    let matchFound = false;\n\n    formatPatterns.forEach((formatPattern) => {\n      const match = date.match(formatPattern);\n\n      if (match) {\n        matchFound = true;\n      }\n    });\n\n    return matchFound;\n  }\n\n  for (let [key, value] of Object.entries(obj)) {\n    if (value) {\n      if (\n        typeof value === \"string\" &&\n        value.length > 7 &&\n        JSON.stringify(new Date(value)) !== \"null\" &&\n        digitsAtEndValidator(value) &&\n        !dateWithoutTime(value)\n      ) {\n        obj[key] = iml.parseDate(iml.formatDate(value, \"YYYY-MM-DD HH:mm:ss\"));\n      } else if (Array.isArray(value)) {\n        obj[key] = value.map((item) => iml.parseDates(item));\n      } else if (typeof value === \"object\") {\n        obj[key] = iml.parseDates(value);\n      } else if (key === \"dob\") {\n        obj[key] = iml.parseDate(iml.formatDate(value, \"YYYY-MM-DD\"));\n      }\n    }\n  }\n  return obj;\n}\n",
      "name": "parseDates",
      "test": null,
      "appName": "onenote",
      "arguments": "(obj)",
      "appVersion": 1
    },
    "pageSkeleton": {
      "rev": 2,
      "code": "function pageSkeleton(title, content) {\n\treturn \"<!DOCTYPE html><html><head><title>\"+title+\"</title></head><body>\"+content+\"</body></html>\";\n}",
      "name": "pageSkeleton",
      "test": null,
      "appName": "onenote",
      "arguments": "(title, content)",
      "appVersion": 1
    },
    "normUploadFile": {
      "rev": 2,
      "code": "function normUploadFile() {\n//not used\n}",
      "name": "normUploadFile",
      "test": null,
      "appName": "onenote",
      "arguments": "()",
      "appVersion": 1
    },
    "processInputFiles": {
      "rev": 2,
      "code": "function processInputFiles(title, content, files) {\n\n  const stack = [];\n\n  if (files && files.length > 0) {\n    files.forEach((e, i) => {\n      stack.push({\n        key: \"{\" + ++i + \"}\",\n        file: {\n          value: e.value,\n          options: {\n            filename: e.fileName,\n            contentType: iml.mime(e.fileName)\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    Presentation: {\n      value: iml.pageSkeleton(iml.ifempty(title, \"\"), iml.ifempty(content, \"\")),\n      options: {\n        contentType: \"text/html\"\n      }\n    },\n    ...iml.toCollection(stack, \"key\", \"file\")\n  };\n}\n",
      "name": "processInputFiles",
      "test": null,
      "appName": "onenote",
      "arguments": "(title, content, files)",
      "appVersion": 1
    },
    "createRemoveAction": {
      "rev": 2,
      "code": "function createRemoveAction(item) {\n  return item.map((e) => {\n    if (e.action === \"remove\") {\n      e.action = \"replace\";\n      e.content = \"<p></p>\";\n    }\n    return e;\n  });\n}\n",
      "name": "createRemoveAction",
      "test": null,
      "appName": "onenote",
      "arguments": "(item)",
      "appVersion": 1
    },
    "normalizeUploadFile": {
      "rev": 2,
      "code": "function normalizeUploadFile(html, buffer, fileName) {\n  const contentForm = `Content-Disposition:form-data; name=ggg`;\n  const contentType = \"Content-Type:image/jpeg\";\n  return `${html}\\n--MyPartBoundary198374\\n${contentForm}\\n${contentType}\\n${buffer}`;\n}\n",
      "name": "normalizeUploadFile",
      "test": null,
      "appName": "onenote",
      "arguments": "(html, buffer, fileName)",
      "appVersion": 1
    },
    "normalizeUpdloadFile": {
      "rev": 2,
      "code": "function normalizeUpdloadFile(title, content, files) {\n  // if(files.length !== 0){\n\n  // }\n  return {\n    presentation: {\n      value: `{{iml.pageSkeleton(iml.ifempty(${title}, ''),iml.ifempty(${content}, ''))}}`,\n      options: {\n        contentType: \"text/html\",\n      },\n    },\n    files: `{{${files}}}`,\n  };\n  //   let stack = [];\n  //   let obj = { presentation: item.presentation };\n  //   item.files.map((e) => {\n  //     const newArr = {\n  //       [e.file.options.fileName]: {\n  //         value: e.file.value,\n  //         options: e.file.options,\n  //       },\n  //     };\n  //     stack.push(newArr);\n  //   });\n  //   stack.map((e) => {\n  //     Object.keys(e).map((i) => {\n  //       obj[i] = e[i];\n  //     });\n  //   });\n  //   return obj;\n}\n",
      "name": "normalizeUpdloadFile",
      "test": null,
      "appName": "onenote",
      "arguments": "(title, content, files)",
      "appVersion": 1
    },
    "processInputFilesUpdate": {
      "rev": 2,
      "code": "function processInputFilesUpdate(data, files) {\n\n  const stack = [];\n\n  if (files && files.length > 0) {\n    files.forEach((e, i) => {\n      stack.push({\n        key: \"{\" + ++i + \"}\",\n        file: {\n          value: e.value,\n          options: {\n            filename: e.fileName,\n            contentType: iml.mime(e.fileName)\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    commands: {\n      value: JSON.stringify(data),\n      options: {\n        contentType: \"application/json\"\n      }\n    },\n    ...iml.toCollection(stack, \"key\", \"file\")\n  };\n}\n",
      "name": "processInputFilesUpdate",
      "test": null,
      "appName": "onenote",
      "arguments": "(data, files)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-02-21T23:56:02.618982+00:00",
  "categories": [],
  "opensource": false,
  "description": null,
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "80abd91adeb9c066f0301fdbb90bf1a2",
  "versionFull": "1.5.10",
  "compiledName": "onenote",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 1,
  "compilationError": null,
  "installSpecJsonc": "[\n]"
}
