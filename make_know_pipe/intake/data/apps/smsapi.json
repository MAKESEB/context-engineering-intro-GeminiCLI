{
  "rev": 22,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization"
      ]
    },
    "baseUrl": "{{if(connection.apiKey, 'https://api.smsapi.com', 'https://smsapi.io')}}",
    "headers": {
      "authorization": "Bearer {{ifempty(connection.apiKey, connection.accessToken)}}"
    },
    "response": {
      "error": {
        "message": "{{handleError(statusCode, body)}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "smsapi",
  "_rpcs": {
    "getGroupId": {
      "api": {
        "url": "/contacts/groups",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.collection}}"
        }
      },
      "rev": 2,
      "name": "getGroupId",
      "label": "getGroupId",
      "appName": "smsapi",
      "apiJsonc": "{\n    \"url\": \"/contacts/groups\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"iterate\": \"{{body.collection}}\",\n        \"output\": {\n            \"label\": \"{{item.name}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "smsapi",
      "altAccountName": "smsapi3",
      "parametersJsonc": null
    },
    "listContacts": {
      "api": {
        "url": "/contacts",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{parseLabel(item)}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.collection}}"
        }
      },
      "rev": 4,
      "name": "listContacts",
      "label": "List Contacts",
      "appName": "smsapi",
      "apiJsonc": "{\n\t\"url\": \"/contacts\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"iterate\": \"{{body.collection}}\",\n\t\t\"output\": {\n\t\t\t\"label\": \"{{parseLabel(item)}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t}\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "smsapi",
      "altAccountName": "smsapi3",
      "parametersJsonc": null
    },
    "createCallbackInterface": {
      "api": {
        "response": {
          "output": "{{createCallbackInterface(webhook.callbackType)}}"
        }
      },
      "rev": 2,
      "name": "createCallbackInterface",
      "label": "createCallbackInterface",
      "appName": "smsapi",
      "apiJsonc": "{\n    \"response\": {\n        \"output\": \"{{createCallbackInterface(webhook.callbackType)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "smsapi",
      "altAccountName": "smsapi3",
      "parametersJsonc": null
    }
  },
  "flags": {},
  "label": "SMSAPI",
  "theme": "#002958",
  "_hooks": {
    "smsapi": {
      "api": {
        "output": "{{body}}"
      },
      "rev": 7,
      "name": "smsapi",
      "type": "web",
      "flags": {},
      "label": "Receive SMS",
      "scope": [],
      "attach": null,
      "detach": null,
      "update": null,
      "aliasTo": null,
      "appName": "smsapi",
      "apiJsonc": null,
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "smsapi",
      "attachJsonc": null,
      "detachJsonc": null,
      "updateJsonc": null,
      "altAccountName": "smsapi3",
      "parametersJsonc": null
    }
  },
  "global": true,
  "groups": [
    {
      "label": "SMS",
      "modules": [
        "watchNewSMS",
        "TriggerWatchCallbackReport",
        "sendTextMessage"
      ]
    },
    {
      "label": "Contact",
      "modules": [
        "listContacts",
        "createContact",
        "ActionAssignContactToGroup",
        "updateContact",
        "deleteContact"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "universal"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af40000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000001f64944415458c3edd53b6b54611006e0e7ec2e5e6224118258240a56168208b6fe01053bd14eb4103b0b4144c44afc038278571004d142f01788f62268a1886297c6cb62881a931d8b9d8d2767d76483459af3c2703ebe6fe6cc3bef7c176ad4a851638d51f4061101eb3156f199c16cce6f40fc67bedff88a288a42abe2b00bb73359a089bbb8849338858515927432b6512e30e70bbcc2892cac8fc027bc4f229d24b033957989cf39b71c766401eff0239376b00d93f896e406b600462bc402dfd377d30049ab551ec415dcc3e5947c0a77b0156f7114ed252d288ac5ffcc54483552b23d15f90b3cc6f35e7cfa3f4c15cea46a4f70161338874315d2ff4644f4ec7c44cc47c45cc91622e24644344aeaf5fc4772ed4344dc8f88e988381c119311f12022c67b31ade50894aaba891715e605dad56a32661617b11d4770018fb2154bd04720136ec45eddcd17699dd2b8c8ef28f6675ce0b5ee4685e994fe00ae0e257949c2b1887896b2ff1ad2e622e274a96d3d6b94c653c3b6a08d6b7893950f8366a92551dad49d92b27d68551647fc3de74fd386c54fcc67fb5a031276b2654bf64c598111ddf3bb7b1555f7d0d03de7d7710cc707fc233247bbbc562650e8de601356be6e07c9bf0fb7f0119b0d6e6f53f7865c2450945a50601cebacfec12952fe2f99648bc1974ddf6354a3468d1a6b8e3fd6fb26ac84d1fdbf0000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda7930000039a4944415478daed994d881c451480bf9ec9fe246afc231b411196e0ef4188a089a0ecd58b087a55416f41bd2a48f4a692db1ebc7a30a2c764053d2c44414462445141f17f4d1011366e62d4dde06693cf43d7ec5676a7a77b7aa72748ea83a6bbaa5e57bdf7eabdaa9a1e482412894422914824128944229148242e2bb26e956ae7711b300ad8e3fd15e09fa86e0cd8dae39d4b61e332b0049065179bbca5e4e5c7807dc08582f616301764e643ddfdc02b15fa1e166de008f03c707e7d6399923f03bb80ab7ac8dc06dc03bc17cac7811dc0e4a5b63c62aea8a1d5ad320a932f806f4b3adf0a3c18958f031f35648894a756159955ca22e014701058a04bf8045ac039e00a6031c81d02aea53875fa317812b88b3c97ff2577ee2205eb57602fb0739363e78ba1ba451d57c7a2fbd8baba71350bf2a8ad486e33d7887aa77acc9c15755addae8e76911f551f574f07f93fd5b3ea61b51d2deeff0f22874ea92782518beabe8ec3bbc8fd12c9bdacfea0ce143920eb57a96e4a066e0526a8967f197012f81e366e4d05fd3f094c03dbc9779ca7585b78016e01de04f690a7e134f01a300b7c073c029cef35d66667e969f554b816c2d5adbca09e51df55afac1296512abea42e8719fe5add1ddaae570fb9c661f53a75a22c0206e984bbd579abf387baa7aa52618cabd537d40ba18f23eaa47a20ac0faa9fabb707f99dc374c03675b60f07a8bed089a08a63a0de180c573da71e0d8b9d619d988a643b0e78a7c801833cad2d01af92e75c95edaf05fc18eea5f25996751cf51bf01cf036f9216c6f103903bc087c38409b9a239aa54a11d0e5bd87d4dfc3cc2fabfbe3591e780ad455b841e765eab3ea927ad0fc6cb05e66e02930013c0c8cd9ac175ac031e053d8b84d867410789d3cf5de07fe6a509f558fee503feb73a1abcb5be65b5f994eab27d02e6da511d0a23f4e021f34eae935ee036eee25906519599619eeb506a9b30bcc024f90ff0a6c926bc84f75736a6d0307e680681b3a0a3c0a8c34ec800cf8b5e131fa8b80300b4bc0c74d2b362c3638205a28da0ce0c7520de4e26f0f2dfa5fab3afdb4a3e76a0e88067d06b897e20f214dd0027e020e006743ddeea04bbbcfbe04c6811b806ffa7540063c409eebc3661e9801be0ce5d341975d35fa32d85218017542ab692680a9a87c02f8a4665fa5295c1401927f49fd8ae1a600e4a17e53d06d258c3f03dcb189fe0abf0a6ff090d5ff14698a2c18fd77543712f4a9db5fe11f23894422914824128944229148241289c465c67f0333f756b69040c00000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-09-23T10:31:30.170646+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000007874944415478daeddd59ac24551dc7f16f755f6618874566508263808cc67d424202ca44d189bb3ef9e083467c30064d7c0025e08a4b30824b5c1fdc1e7851a389284a1491619120230421222a6193186e4465901999990bdcbe3f1f4e75e674ddeabe5d5debedf97d92c9dcdbb59caa3aff3e5b9daa0b6666666666666666666666666666666666666666666666666666666666666666666666666666d621c92c1b491a6edb9f751f192bc00020490eef2e4d0760a1a274e6dd005889afe15a164a24f60ae0b3c0a69207dd036e052e079ece59be11f814702621502c5f027c17b8aac8466502e0bfc00b80d32b38f8d3801f000fe52c7b8a10246fae209d79776dd10d7a25125b046ea8e8c04f03ce8691623f760df0784569cd3315dda04c0008f80db0bf8203df08bc05d8107f18d5657f05eeade412cdb7c2eda4990220ca98bb81072b3af85702a78c59f63870356e03aca5d11200e0dfc02d151dfc29c059305a0d44c17613a1dd71a4123364f05aca3402217c237f05bc173826e78087929ccfb236006f077e4a7e6fe041e001e004d22e63474cea0e2f038780a34ba631009e61f5352e6de600489264f84dbd83d085db48b908ed037bd363ca0b80bdc0b78017a617a30b041c0b9c0b3c3f67f921e0db842aac3fe5fe9231fb792bf0c6aa4fa06c09002163be4435c553424e3d9f06db0af0a3aa2f40057a84eeebe5c0d6ccb2cdc073802f12826096c12c01e7001f1ab34c1caeca3d58d6344948da20e9224987b4da92a4cb241d33a68b3b69bf48da21698ff2dd2de9fee8f70b8aa461154933ea044957481ae464d493923e2029992683a2ccdf2ee99a3199bf28e95c4937479f9def0068419461a74aba6e4c863d24e96dc375a7d8df711302ea80a40f4b3a59d25d735102441791692e521569d4b4efb325dd37a1c83e6352fae9b2bea48f483a98b38fa7247d45d2e6b4d4f9439912a08a4660d5b603bb80e59aa279813084fdf72a771af58af60097005f034eceacb603b814380f58949477f7b307bc1bb898d537da04fc0cb80c384066e494191a815d0c80e3818f115acf652320c9d9471ff834f0f56c06941505c195c01642cfe0b8cc6a6f023e097c027862f86114ecaf033e0f9c9493c4edc0e7083d2f08c112772fd769f91f5d0449474bfa89eaf50b49cfaaabbe4ccf6393a46f485ace49ffa0a44b246dcc544b2f92f4bb31c77cbfa45d99f59f2de9d6325540d9a1e03a2c01d753ef68df59c0cb6a3e8f4384f191bc5bb49b800b8077469f6d25540faf61f537793f612ce14618191e5f200cc0cdac5301109dd81ee09f35267512a1a8ada5b1199dc722f0d1f47cb2b6009f0176024701e703ef20545b71bdb4047c13f86166df10869a976abc4ecd8baa812b6bae06ae55c1c19919cf05493b353a6013dbadd07d7b2c67d940d2f714ba8423c19afe7ea2a43fce5b150021aa6fa0de6ae074d26aa0ae20c8946897028fe5ac760e616add969c65d7015f209d7391d3602d5d0274ae1710b5a4af27d49fc752ecce62c274ade11e614adbed0d9c8f801f03a7127a0071bd7d14a1e793f5374215f1f0703f39b26d80b9e8060edd07bc8f9051757c457be4df75ac5c1a044f13ee66be0478179333eb11e0e3c06dc3edc71864cea1f075ea6400a427bc02fcabae34eaacfb277882f0adde4a180fc8cbd9ff11aa8baba36b314e8f5082ccacab6d80da254932f2af89f4520f00170177e6acb60c7c9f30437a9af9fda2e434b9233600da1065e89f09237ad9aeee2f812f03079b3a260740c3a220f83561a0e8c9f4f73b09d5c3a399f526ee8e9279584b1b20aa5f371346bde665366f426878ed03346bd591360a0784e2fe7984b9901703f70c974f693857303ebe42ea6e049e4178ac6b9af970eb418fd042bf10f84f991da5417000f82ae1f98a9b869f17d067f48e60377a01515ffe11601bf0f23ad269c93ee00ae046557337f1518a15fbb101e1d1b9a1661e0c29e061aa7b7cac2b8e075e5fc58e2ae8892c303ae5bcf10743d62260370db66a1bb28bd53380db507a28b8b6008822fa2eaa7b7cac2b5e0cbcb4ed83607509505813ddc045d206ce1cd94a7850a3ad11c5a16546db0085353114bc42a806dec3ea396c307a7327ef67a2cfc66d1b2f9f7433285963bd4969c6c7d6075e0b9c48fe1dbea6647b0185d51a00516fe0f78439707dd6fbbcb5f4d432ffb765858e8f030cdb027b81ef3476596ad672b11fcb8e0476631c60de3571f3a8c8e194d9d8f702d6375172d69403607deb53723e40a12aa043755f2bb2457f743da69d8656b56768614ee00ee055843e6815daba78d35a200c66dd3166ecbf4f7871c3369abfebb901786ed9932b6a2761d2c2a4932d92a9eb2100ae02de0f2ce504c180f085b890765e5d133f3fd8483770813053f748f26ac2bb0cef1dd303f82df041f29fe7ebb4591a815dfeb6d6651be191ad716f30bb07f84bdb07398bf5d20ba8e51569052c101ee01837ecba9ffcc7bf9ad6b9dbc1f3e44cf2df0436b49b75f81ec35902a08d61b0ec03936dd80ebc01c656037f229dd3d7a2461a81ff20bcbcf948d323dc7b1fd76bd907fc9c30f9a58d49b009e9636445379a9a0ebfc2645e267916b5d61fb668fbda14fe83116666666666666666666666666666666666666666666666666666666666666666666666666666d629ff07ffb7e00cec30d8db0000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\x89504e470d0a1a0a0000000d4948445200000200000002000806000000f478d4fa0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda79300002dc24944415478daedddfbb324677ddff1f7d9fb45d75da15d495c7401039140e2228c9120583101078863139713c7aeca3d55a9a42af931ff407e498af22f49a5c8dd8e1dabc0368a0d46081c04120601b2c45508214babcb22a45dedae76f7ec9eb3e74c7ef84ee78c4673eb99e9ee99febe5f55a7ce6da6fbe99e9e793efdf4d3cf039224299d15804ea7d374392449528d56acfc2549ca675bd305902449f5330048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909ed68ba00357a2df047c0db9b2ec892f824f06f81876a5eef3f057e0bd8dbf40e90a401be01bcabe942cc43b616801780734d1762495c6868bd2f02479ade78491ae258d30598974c01e03cf1c2ed69ba2015b9c0e04afbc288c78f72103800acd4bc1d4f13414d9254a14c01e00c701ff06cd305a9c80e065fd2d931e2f1a3dc04bc09d85ff3763c0a7ca5e6754a523a9902c059e01ee07ebc0c3089ab81db81d7d7bcdee3c083c08f9bde0192d4669902c026f038f04da292d1786f045e43bdc74907f85ef74b9254914c01a0d8de1f003f69ba204be26ae2ae897d35aff739e06b44bf0d495205b205804de029a279d9cb00e31d066e04aeaa79bdc78816005b6a242d9a4ed30598978c01e02851b99c68ba304be206a23360dd77033ccad618048635498bc200b0a43a44f3f283c0334d1766491c262e03d47d37c0d3c01f139d37db7aeba6a4e5d39a7ab3351b52d2534487c0a606bb59260768e632c069e05ea2c5469234675903c063c4dd00cf355d9025b007b805f839607bcdeb3e067c1b2f0148d2dc650d00a78900e0ad6693b918b819b882fafb029c00369ade0192d436590300442bc077f1ec72129711e3015c45bdc7cc39e047d8615392e62e73007886b81df0a9a60bb204f600b7016fa5de63e614f019e0c9a6778024b54de600b04154fea79a2ec812b98ee81458970ef008f02dec0c28497395390040542e8f375d8825d17b37409d9d0137802fe0eb244973953d009c223a023ae4ec783b80eba97f6e804d6202a747893101244973903d003c0ffc10679e9bc40ea205e0edd47f19e045e04f81bf687a2748525b640f009bc46580879b2ec89258a19941813689969a179bde0192d2db6cba00f3923d0040742e3b8ab7034e623751f91fa0fe63e7184e0e24a979ada9375bb3213338037c036f079cd4f5c4e440754f11fc02f02cb0daf40e90a4363000c4a8808fb035f39c46bb1ab89dfa2f036c007f494c1224499a9101201c05be8433044eea1dc4dc0017d5bcdeef60874db5476ba695add022eea3452cd3540c00e105a215e06bc05ad3855902af252608aaf36e00885b011f6d7ae3a5396a4d6552a1f5eed7a2ecabbae743a98c01206c127303acd1a21e9e1528a64fde01dc0abcbee6f51f270604f26e00b5c10631cfc55916a7725b34abc465dad34d17a48d76345d8005d1212a97fb809f070e13955d51e1ad741fb36dc0f37633bcd560d630b13260f9d32eb3d886717f1bf57cbafb640f7065f7ab4e1de232c063440081c1830375189cd287fdbdf77f1d62a4c315625f6ff6fcdefb980de278d8ecf9bed2b78ece90bf6def3e7f9a338971db366a1b873db6ff39e39631aa0cc3f649efeff3deae49963f89bd333ebfac35622c9293446bda6b8933dd51fb6394de7d052f3f9e37187e7cf62a8efbe239dbfa7e9fe5d81da7b7ecbbbafba51801f4fa8ad6999a0160cb2a7119e01922006c1207dfa5ddfff7beb97a3fe43a03fe3f2a304c7a100f5afeb612cb98a4b22b5bb6d3c025ddfdb38ff8d0dac9d687561d7e02fc007867b7bc47d99a2eb818a27863c0cf83a614ee7d4cf17bb1df2f10ef8ffedffbbff75676bddf7b973968f9c5f7fe320efb4edfdf7acbcd98ff0f5ad62083d6356cb9bdc34117bf0fda17c571b56dc0f37a9fbfd2f79c7e3b7b965b1c6f835ee351e51eb4cf0afbbbebd8497dce139f3147894eb57bba7f3fd3b7cf7a8d3a96871d7bc5ff3a259753bc1ec38efd8d01cb1b750cc1f0d7a3b7f2dfdedd17cf12eff54b88cf9a8335be36a3b4a6b5c600b0a5430c36732f7088e86dfee7c0ab89037e1791d88beffd6f88fefff73e6e1adb06aca7acfee7f5fe3e6899bddbb163c8f20e022f11f7e59f265a28ea0c00cf124303bf9908675f6378c5322fc32abc61dfcb2eaf0dc6ed8b796c73d9fd5cd69b8933cd03d477b6f9536220b21f757fbe8c974f7fddf4b132ebb13e8b67893b7f6e04ded2e03ee8d79a960803c0964de232c097babf175305ef67f0195e6f53fcb0fff73fae299396639272ef2266055c254252ddf328bc445caad94bb4423c56f3fad55ef703bf04fc8d9ad7fb1da265ebeb44eb5a9d817a519d019ee8fe7c23118c3467068097bb003c405c0a388f93040d7309b16f8eb3d54fa22e1bc407c3a7bbbf9f63fa1612a9b7150fe00ae0af12c1bf6a1711efa573c0f789307b79d33b6441bc44f4ef394454fe7b9b2e501bf9a1f9721de0b9ee97866b7aff9c059e6c7a27a895be067c11b88da89cabec13b003b806b8899894ec18cdbfb7164931f7c8b5d43ff2680ade0628495bbe07fc16f071e29a7c9556885b69ff31f01bc4d9aec23ee017817fcd625dff6f155b0024694bd10278946805b89c6acf3e2f276e69bd94e857f389a677c0025821061afb97c0872a5ed734b75bb6862d0092f44acf037701771361a06a3f037c18f859a225206ba5b48bb81be3a3dd7d51b50d166b94c15a190024e9955689fe00ff0eb887b83e5fb55b817f0ebc8f7ac72358246f03fe19f0ab54dff3ff0231d850da5106bd042049afb40a7cbbfbf3754447b47752ede580ab8833df0de26ea4e789bb6d366659e81228c6153808bc1df808311e4395ce12fd3d56898e981793b03eb40540925ea9b749f821e077890aa36a1701ef21c622783f715b62dbed055e077c0cf80031e578d5be4cbca65fa5f9c1961a932ef14852498f111d03af236e4babb21560273127c0bf2202479b6f0d2c86ffbd12f83b44e8b9a586f5ae039f037e1ff86bc0af90b4cf852d009234da1a51117f85a894cfceb6b8b1f6129d02df0ddcc1e28c813f4f2bddeddc05dc4cdc71711b3100d39e19963bce59a245e71b44b03a41d2b37f300048d2a49e209a8dbf4cf521006220a28f1015e3aea6377eceb611fd2a6e236660bdb986759e05be09fc1131e91b44e0385072398b30bcfb5c78094092462b9aaa9f2086a05e25ceca6fa19adefac5bde9fb89fe00ff88e810f800ede9107811b1ff3ed0fdaa7a10a47562ee92cf017fc6d6ad9d5713139a95d19a13670380248d5674082c86a0be8b08000788ebf5f30e01fdd7a36f02de45dcb2f623967fb2a05dc09b800f12d7e0afa9619d4f037f48ccf6fa176ccdd8ba8fc4c30c1b00246932454bc08bc459e46162f09e2a4240ef08758780bfced634dd3f607943c02e62f8e33b88817eeaa8fc8f11b3bcde43f4e128f6ddc5c46b98960140922653b404ac1153f8ded5fdfd63ccbf22db60ebf3793f51595e4a0c8eb3464c1eb48ca3d75d454cb9fccb4470ea758ef977005c273afc7d8a18d8a9b7ef46fafa2ffd0e90a4299c252a943d448ffd2b996f2b40ef67f32671c9e16d44abc0b78926ed332c5708d8455ccaf81083fb4f54d1fbff29a2d3e6b77865c7cdbaa7325f38ade9cc2049355b252a96cf11b79655d52cbfd6fdbe8fe814f84162d8e02b599efbd7b71323297ea4fbbdeaa18e57816789caff4b0c1e4be102110a962944cd952d0092349d0e3165f0a789caf952a23560de7acf8c3bc0af033700ff01f8025b016191bd11f835a2d35f959dee8acb08c789fd73175bb7fc0db32c216aee6c0190a4e97580234445733fd58e0fb0495456078951f33e485c535f06b7104dff550ff3bb8b780dfe2ff019a2c3e4490657f2458b4dd91680d6b418d8022049b329c608f814d1d4fd51e0f20ad6b3c6cb5b037e9168dafe34f0fda677c2002bc4ad927700bf490ca55ce5d9f62a717fffc3c02781c7d9aaac0755da178053c46880655eafd6b4181800246976ab44733cc40877efab601dfd9de4de404c1f5c04903a46272c632771f7c2dfa7be298ebf0c7c82b84be3cc98c7ae13b7081ea79ac0b6f00c009a9715e278da4d4c61aa7af5eef765bd477c99758833f46f1133ccbd83b87daf6ad710b7d4dd0bfc398bd13c5d8c9770317199e267a967b09d23c06789d7607d827dd1014ed3a2a17dcb3200681e8aa6beb712f7299f20aebb2de2f8e5bd03ac94f9ffb8e73555f60ef1617780f8c07d98b8f5c910d08c978801674e113dde6fa5fa33dfeb890e769711fd104e36bc0fae24cef8df0efc1c31e94f953ac418ffff85b81b63d24e91bb805711c312a76400d0bc5c4abcd96f233e845e222a2455ef25e21ef1bdc0ab81df239a3655bf55627c808789b3cbd751fd68770780bf47048027d80a00c59978dd2e07fe2e319be115541f809e252669fa5f94bbb77f073112e0b274a49c3b0380e6e97ae2369f4b89b3d04b9a2e5012a78851d5ae2086a97d1d0680a674886bf1abc077812f12a1f86aaa3b132eee0cb80db8bdfbb727ba65a8d341e2bdff2b44e55f47c5fa0cb18ffb47f99bc45e12cf03000600cddf0a31d0c7a121ffdb207a4a577d6652f6eca7f7f1fdcf1db7ac49fe5f6cf7b8ed2f963568999b439e5bfcfd86eeeff7000f56b04f55cef7813b8933d45f65ebf5a9ca55c0df222ae2bba8ffce809f21defbbf403d95ff3a51f9df49041e956400d03cf45748bb81d7f0f2ebd5bd956bff73c75d73efaf8c47fd6d65c0323b6c75922bfebe8b575e2bdcd5f79871dbbc32e4f761e1a177dad161ebe9df4fc3c2c0b0325e4b4c50f3656c0568523169d09788cae96aaa6d05a0bbec0f1067e127d8ba33a0ea4b012bdd75bf1ff817ddf557ed3c3124f29dc43e9eb6e3f1a2dd39512b0380e6e5a7c47db74788d9becaceb15d87fe32ed9ae0317595655e7611675f5e0668de5af7eb09e06e229cbd93ea9a9d8b3b71ae253a1ffe90e88bf022d50580629def2686293e403563faf73a474ccbfc456276bf692bf1d59ee5555de6856400d0bc9c27c644bf9e38fb5fc40090c51b891ed85e06580cab44c7d8a2b7f97ba9f68e92dd6c8d43709098bab8088355b406dc00fc0671eb631d15e9b3c06f1301e0f91996731ef80971592e250380e6659d187ce361a229b0eaeb9d1aee10712bd63612dfe3bc403ac419ebdd44857c0dd5be3f2eefae07a2c23f425c12d860be95ff76a2e3e9ed44e0a8abd3dfbdc4e8878f31db3c089b4438fb29314a6199e7b5820140f3b40e3c40a46a0340732e225a62ae05fe92c5181c465111df0bbc89b8fdacea81826e206e8bfb1171a6fc34f39b38683b71cbe9db817fc056e5bf4ad42b55dcfaf738d1b7e54f89cb2af3da96b2157ad3e381cc8d930169de1e031ec1d1009bf65ee0660cf98ba4435cb3fe13e24e8d172b5a4fefe7fa6b885ef977104df4f3e87fb04254feef2286f97d73cf727753cd2054c788db2aef274e32e6d1796f27d179b1ec380dad09d40600cddb296216aea79a2e487287880f662d9693c435f94f1261b96afb883e21ff86a8b0e73138d7b6eeb2fe21f0165e3e8efe36aa39fbff3af05f81df2726fc99876220a0b221d91600698875e27ae74f9b2e88784bf7ab8e495834b963c499ec17193f57fd3c5c4d04c23b801b8950b042f98a6c85ad40713bd1ca34e8daf9bc8fb7a3ddfdf52831bae2bc5a188a8180ca06005b00a4119e24e6e156732e256e39bb0d47645c4447813f06fe00f8710debdb4f84c15f026e212abfb2155987e857f29bc4243f754c767486b8bbe84f88005094631ea6bd3cd69a1600af0faa0ae7890e3b27a96750100df61ae232c0a53826c0a2592326aed920c6f0afa3d3ec75c0c7ba3f9fa0fc4881fb880051c7a8868587804f11fd8ae6ddfb7eda7e4ab60048239c21a626fd6ed305496e37d11170116765547464fb3a7176fb0d62409aaa5d438c14f901e2b2c02467b345d3fffb89a987eba8fc57893b583ed3dd47f3eaf1df6b8d780dca4c2054ec8f563000a80ac57dcf76046cde8dc418edf603585c0f009f20ce740b55de6bfe5a62f6c05f62b216babdc4487fff84389eea700ff09f8900f05245eb2806027aaee4f36c0190c6f829313090b703366b2f70137139408be949e07f123ddcebe80fb093182af89781bf32e6b12bc0ab88b0f011aa1bc6b8b7f5e32871d6ff0962bcff2acefe212ebf3c4fb45896d19a7ab3351ba2857396e808f864d305496e17d1e4fbbaa60ba291d689caff93ddef3fa9619db702bf468480e2ce805ebb88d6820f021fa2da3e63c510c247894e7f0f537dbf951562d0ac3a3a332e243b01aa2a9bc49bf82b4413b49a7388e86856f5ac709acd11e0f3ddefbf419c795779e9e612a26207f83de09bbc7c5cfcab805f275a0aca0c953b8d734485ff3bc0ff214e1eaa3e5ef71243265f5ef279ad790f190054a5a7886b78efc7a1819b7403d1e9eb61e2ee0c2da655626adb6f1395d2eb887bf8abea74b69308e7fb89168747883b7720cefe6f242aff5b6bdafe2f1201a0ecdd09b36cff2594bfac61274069021788db8dca76b2d1fcbd152f032cba4ef7eb252208fc0131f35dd52e2706f57907d152b48b98d2fb83ddef553b438c8e783731c67f5d76505d9f86a5600b80aad421c63bff013157b89a7353f7eb4bb4a809b3a5d68939033e4e4cea7475f7ef559d79ee037e9ee810b787688abf83b83c50b679bcac0e7199f07f1013fdd869b846060055ed29a2d9f93c715fba9ab19d1814e8000e0ab4e83a4453fc49e0abc0db884abacaca780fd10af02c319fc787803754bc9debc4dd425f265a00ea3e2e2f109d953b940b57ad09d0060055ed143120d08f8861442f6aba40495d445420afc200b04cbe4e5ca77e0f51415779fdf9caee7ace12fd46aa5cd73a31d0cffdc414c955ddeb3fca2af1f9b44ab94b0106006942eb4400f80ad104ade6dc4ab402fc90167d88b5dcc3c435f25344a55c65a7c0fd443f8073440ff92abd40dcee7737713c5675afff28eb44183e49b900602740a98493443f8093b32e4833b9811813e040d305d1c48e13ad007711bde48f537ee8da32f613c747959de3ce1123fddd4d5ce268ba45ea6cc9c71b00a409ad10672f4fe2dd008be0cdc0fb68d1875812cf1073067c8508d255b7e054b5fcb36cf5f8ff16cd9e1414f5df9e9996b2c40c00aa5a873863f92ef020b60234ed105b9d01b5f88a8af824d159eef78889b64e54b8ce15aa0b884f13831d7d91382168f252d46ea61b08a835ec03a03a14bd9abf4acc517f297157c04adf630ac508602b25ff5edc6570bee7effdcb86c1238cf57fe075063c7fd07a0bbb7ab66958997b97db19b1bcfefff5fe7d37836f951ab6adbd76035700afc629829751d163fe6a62009f65abb83689cf807bbadbd2b45d4c3710506b1800549753c494a7f702878991c71e25061e1954e18dfb99bebf8daa6827590e0c0f24fdff1f54890fabd447957550b906adbb6c7818f6dcc33dffbf6c92174d0ba543749ebb87181f603b3156ff32ccf4f82c71e6ff59e03116a313ea761257fe6000507dd6895b013fd3fddd21699b713dd10c0bce0db08c36880af4ceeeef1f03ae69ba50635c20aefbff3631cc6f133dfe35800140753a4edcd674a2fbbbfd01ea7582180e787bf76703c0725a2326eeb98cb81450e5ad81f3f03831d5f1fdc489c0a2987620a0d63000a84e1d62acefe2fa9fc37ed66b83085d9762f85a766b442ffadf219ab1dfd7748106788678bf7f9698e278d1cefca71d08a8350c00aadb265b157f95f733eb953ac407def9ee9767ffcbeda7c0a789511edfc5e2ddcef62cf0bb440038da7461062806023a4ad2d94a0d006a4251f15b01d5ef42f7cb7dbffc3a4413f67dc017805f607142c031e256bf3f2482ca221e6f1de034d13256f679ad600050135af3065a42eefbf6790ef8dfc4d8fa1f263a7a36e9c74467df3f26c6f85fd4636e173137c6c192cf5bd4ed29cd002049cbed25a2c27d90b81c7098e6ae699fed96e5e344d3fa068bdbd97407b1afca0e8ad59a0e830600495a6e6bddaf53c4403b9701ef26ce6eebfc8c3f4bdc9d701f31f4f7a2db4b04a5b215fa228699a9180024a91db6010f1015f109e06f52be797b16df233afd3dd0f48ea8586b86d0370048523b6c028f1067df2780ab88db03abbe1cb04eb43efc2e316be18b4def880995edfc57d86cbae0f3d29a242349c975884b012789b3f1cf75bf57d964dd018e10b3147e8de890b868f7fb0fb346b496a49d0ed81600496a8fa2c3dd5162ce807d449f803754b4be1344a7bffb88218a97c905624e92f3946b25b10f802469e11495d31a31ee3e6cf5749f777f80b3c0778866ffef51ed14c555582346013c4bb999155bd372de9a0d9124fd7f4533f513c4d9f93728dfd43dca3a5b97191e2406fb99f69a7a535ad3943f2d5b0024a9bdce025f26ce700f0237327ba7c075e02162a4bf3f63f9cefc0b3b895b011765f4c4dad9022049edd37b9dfa39e06ea297fe3cc6e43f4254fe9f262e012cab6220a08b4a3eaf357d000c0092d47e4f129d02ef27c6e99fd6b1ee32ee212aff795e56a85b3110d0eea60bd2142f0148520e4f0077767ffe00314e40191780af037f424c45bccc953f4c5fffb5a6ef8001409272384b9cbd430c135c36003c097c9eb8ee7fb2e98d9983f3b32f62b979094092f238498480bb811f4df89c0bc44c835f219afe67b984b0488a8180d20601038024e5729aa8c8ff3b31795061d810b7478866ffff445c46688b6220a0179a2e4853bc04d09c459d225352bb6d1083041d019e07ae232e07bcc8d66041e788dbe3ce1095e47f24e6196893b5eef69f69ba204db105a019dbba5fade94c2269e99c2106f0f91a5bb70716272545e5ff79e0df038f365dd80aac10b7006e6fba204db105a0192bc42d28e759bed1b3a445d5c156b53256885efdbb811f123307de42dc1a778c18e3ff4ee0bbb473bfee245a3c0e375d90a618009ab197189bfb0091b2d3764291e6a0b88ffb2831b6bba17a321d6290a04f11c3fa1e260200dddfef043edb74212bb417b884eaa74b5e580680e6bc1e782771103edf7461a425568ce4f679a2e232004ca6d3f3fd19e0cf818f127d01be4aeccb36db4154fe652fc5b6a635c400d09cfd4400780f91c26719546307d1a375d8eff3308f654eb28c2ad653c5fe98559d659a755dc5e7c4859edfa759deb8e74dbbdc43ddefa7892969d767d8d6ac4e1193067d1c783331c18f272683b5a6ef9601a0196789a6ffab806bba5fe72a5cdf3cee38280eface98e50dfbdfa46518f4b8debf4db29cfec78c5b66d9fdd099e1fff3dc571915fba6771fed2182c3edc01f104140e514ad007f08dc007c93e51fe96f9c0b09b671240340333681a78883ef02f13aa49d914a9a831dc06b8850fd5cd3855952a781a78933ff979a2e4c0d5689968fb324ed07e06d80cd39455c674b3b08853467d71197d40ecdbaa0a4368910708cb847beedd6bbdbfa62d305698a01a039c789a1359f69ba20524b1c243ad7a69ddd6d46d92e3b65dbde57300034671d7800b8174380340f7b805b89db6ba571d20e0054300034eb3cf00d62a84d49b3bb9ee80b208db39d6835babce98234c500d0ac4d627ced63547b1780944587b88deda25917a4d64b3f109001a0591bc4601b6d1f7043aacb35c4f81aaf6fba205a78c5404065b5a6ef8001a079ebc43db74f355d10a925ded3fdb2154055300068aebe0f3cc4e28d56272da343c4a04057355d102db46907026acd48800680c5505c06704c006976c5a0407606d428eb6c0d045486014073b54e4cc779bce982482d71007875d385d0425b253a601f6dba204d31002c8e478856002f0348b33b00dc8ca3026ab80e31f261dad9230d008be328d111d00020cdee0ae026ec07a0e1b603af22c60248c900b0385e007e8c9701a479d8418400fb016898ddc061128f1c6900581c1bc46580c79b2e88d41257036fc7cf390db6971807a0359dfacaf28db1581e23e6077054406976570037129d01d37ec86bee1c074095384ecc0de0a040d2ec76107303bcbffbb3d46bdace7fad09930680c5729ab80cf050d305915ae21ae26e80cda60ba285b3468c01b05ef279b600a8324789db019d21509add65c4dd00d7e3e79d5eee02f1397baae4f30c00aacc0bc083c04b4d17446a813d4400f80089677dd340ebc46040274a3eaf35f5666b36a44536883e007fd97441a4963840f403d8df7441b490f6345d80a6180016d351e0bb783780340f7b805b8841815ad3814b33dbc9d6ad8065780940953a033cccd6c880c597a4f22e0017036fc556006dd9410c045476dae8d684486f8d594cabc0b789bb015ec3d6eb54b408ec203ed45688e12ce9febe87e8d95ae8f4fcbfb031e06f9328f3bcfeb2cdbaae62799d21cb1d55b669b77756fd65decd56882b7aa4efea7e2f5eb34181bcb855a97f7ff4365bae31d82e5e1e1c37bae518b4be8d6e5977f42cff1cb3bd8e93e85d6fef7e2bb3ce613dfc3bddaf3d4467c09b812f1177db48c5d9ffcea60bd21403c062da200605fa26f05e6240930bbc7298e04115c626b3b7ecccb28cde0fe36d631e33e93a8ac7179569ef73472d6b1efb62d4760d5bfeb832f56ec7b0ed2a539ee2f9fddffb97b7d9f798ed132c7fdead84e3f6e346c97dd17f6c0cda0707d8ea0c78003832e76dd2724a5fffa5df010bec3cf00322085c4654fec530c17b073cbef8b0eb0cf95f87e8f5ba6bc4e3fa1f5f85fe8aafbfeca3febfd62dff1ae553fba8fd33ed364cbbacfe6dec7d5dfab77d12c5f3d7fabe17cbe9af1061f43e9c76fb06bd76e31edf5bbede6514e5ebff7dd872fab7bdf7f1678896b46bbbdf1f2ab95d6aa7f497550d008b6b931814e80bc4601527193f42e0b08a7bd0076dd3069dad7506fc7f92c796d917e3fe57d5e3ab2ccfb0fd33ac829de658a8e2d819559632c7c7b8c75fc5d65d35ab73de062daf55e2b3352d03c0e2da24ee06b80bf821711673a6e942cd601ba347631bf7ffdec74cf2d83acbbe2826d93f4dedc3b265e9ffdba4c7cfa0656e232ea36d039e6c789bb538ce13c1f02849a78d36002cae0e51e17f871819b0e90f6bb5c72254fe556ed7b040b1c2f4e3bfab7d36880ea1a730006801758883d40f2dcd535b8fa78dbeef19b659d32bfa97a4ad071d07409294d14ee075c4845165b4a6f5cc002049ca682f7009e587026e4dbdd99a0d9124a9841d249f20ca00204952420600495246d30e04641f00499296d83af013ca0f06d49ac9800c0092a48c568163c08b259f67009024a905cecdbe88e5640090246554d47f656f036c0d03802429a3ddc041e0f2a60bd21403802429a39dc440407b4b3e6f5166549d9901409294d11e6220a0b29dfaec042849d2129b761c005b0024495a6217283f0600180024495a6aabc029cadf06e82500499296d83a3110d033259f6700902469897580d34cdf1760e919002449595d045c59f2394e062449d2125b210602ba6c8ae7b5c28ea60b3047fb808b89e69c8d01ff2f7a6eae0cf9dfca809fcb2a9edbff7d96650d5bf6b8c7cffbffb36cf7a0bf8f7b4cd9ff97d997f3306bf9863d7f96328f3ac6cbae7fdce3c73daeecf10bb09df84c7a11582bb9edf332ee7364d0fe9864db26790f0c5bfeb0658cfb3ea9491e5fc53227d94f55bc77015e225ee7c3532cdf00b080aeed7e9d63bac91da63dc07bbf6f12ad2ac5f7326fee51ff5f8437d3a80ff4deed1df6fbf631cbeedf77c39639e93e9e659b6635c97236fab66f9670336efff6976bd0768fdb9f1b4cbebfcb564c1bddf2efe97e7d0f789ad11570155680570137747f5f65b2e3a36ca53eed7156bc06e3de1bf37c4ff4ff6f92636d547819b78edef5f4bf3fe6b51f213afe1d2642c05922f895d947add0b600f041e2c53cd5c0fa877de02d8226ca52669d93eebbbaf66dddfbab7f7d4dafbf2997101fc4fb89ce59c76a5e7fa7bbeeb71095c3349f234d1d9b8bf21a56b98df37a3cc4b1b5979807601503c0d2bb19f830709c4877d36edb263146747fb21e64501aeffdbece2bfb598c5ade2c8ae5f6977fd0effd65dace2bcfe8c7ad6792fd3168fb47edef51eb1fb48fe7b51f076dd3b0edecddcfdb4a2c6fd47276f6ecab61c75fff777a7e9ff5982a5eff699631e8f51bf4fa8c2a63d10bfb0051f142b402d41d00e8aef330f05ee28cbb4c08e8df17655b30267d1dfb1fd7df1a30ed7a46bd6f071d7ff3dc86b2db32ecf36ed2f51e2702e73594ef0bd79abe736d0a0097104d777b804b99ac497498411ff2453365bfe2311788fd39e91ba54afd15c6b84aab6c9947557ed328bbfe26f76d95db3fe9eb55655966297fff7ba0ff381ca6a8280f1267653f07dc073c46fd7d015e202afdb701e7bbbf97d9bffdfb60deaa7ebd17e178aada265b67f1fb9b2e4c93da1400aeee7ebf86573613f75f3fea35ec719328d37966d4f5c3deb20cfb5b99e7cdfbbaf6b0f20cba36d76f50b3fd34fd1fa6dd7fa3f6e3b8f2f63f6ed2650c5adeb8758c52667b562678ee38c38ec3ce98c70f2bfba863a0f87d83adcfa31b81db81078027a728ff2c367ad67979f76bd865a7498ee9b2efef41fb67d8f132ee3d31e8d2d2a0e795e9b331681f8cdbce71e598e43d34681bfbf7ff243ff72f6375ccbe6cb536050088a6ab9d6cbd90835ed049ff3689499eb732e6b1d396a7ea6d9b64192b251f37cd7655b5ffe6b15dd36e539932ceba3db3bcfe65f6c3b8650c7b1d8bdf7b3f8bf601b71041e008f5f7a9f909f03870d398b24fb24fca3ea7ccf13fc9f13bc9f356c67c2fbbceb2e598c77135e9cffdcbd847d2ca1fdad7d4537c8874d8fab0e8fd99013ff73faeff4366d0ef83be06e98c584effdffb9735e8efe3d63d6cdb469964fb06edab51dbc498e741f9ed8472e59ae4f561c463462d77d4be2a53fe61cb1b55c632cb66c4f761eb2c7bdc8d3bc626f9ffa07d7123f006b6e66aafb3e3d58f8187469475d4feecdfa649b77b92637bdc6744fff219f2b871ef8d49de53c396cd98ff4df2fe1db5be71fb709232f74b59f943fb5a000aa3d2df342991091e57b61cfd7f2f7be63bedfaa6ddbe41cb9ee44c66dcfe9ea575609a724db2cc49973beffb87cb9c5d957deea4db50761f4ebb4de3fe7f10b89e0800d3ccd8368b23c07f03fe36d1a768505967691598e63165cfa067795f9479ee246598e7e731133c6696968554dad60220a93d7e06787d03ebed10fd007e1f38d3f44e90aad2a60050f7a02192aaf516e0ddc0ae06d67d0cf82cd11f406aa5360500b0c9476a9343c46580cb1b58f729e22e8447b115402dd5a60030cb7dff9216cf0ee01d447f80ba758856808769666451a9726d0a005e0290dae730312640139f559b4487c0d34def04a90a6d0a00b60048ed7398e807706d43eb7fa1e91d2055a54d01c01600a97df603ef23e6faa8db79624e82a34def04a90a6d0a00b60048edd544c0df009e2006057ab1e91d20cd5b9b02802d00523bed2386e5ddd9c0ba5781afe3a5006da97354ca4ab5290014539a4a6a974b813713430337f199f563bc0ca02dada967da14006c0190da691ff09eeed79e19975556077884b81450f790c45a4cada9375bb321925aed10701b707103eb3e05dc0f3cddf44e90e6a94d01603b8e04d8269b4d17400b651b71365e770b00ddf53e0c3cd6f44ed04268cd67539b02809700daa54dc7a666b79b981ce87a9a991be02f80fbf032805a74a2e987aca46571187813cd048035a205c0cb00b213e082bad074012455e62ae056e0ca86d67f04f87ed33b418db30560016d27260f91d44efb885101ef002e6a60fddf216608f432406eb6002ca8f5a60b20a9523710b70336d10a7096e80ce86580dc6c015850b60048edb4d6f3f31b8981819af0047119a03567812acd00204935eabdfdef8dc03534d319f00c3130d06ad33b449a55db02406b9299a4a1f600d7019737b0ee93c4c040e79bde09d2acda14009aea192ca95efb81ab696650a062d6d126c28716c3c1a60b302f2b9d8e97b22449caa64d2d00922469420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ac800204952420600499212320048929490014092a4840c009224256400902429210380244909190024494ae8ff01a61100eb4720b5bb0000000049454e44ae426082",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "universal": {
      "id": 67929,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://api.smsapi.com{{parameters.url}}",
        "body": "{{jsonParse(parameters.body)}}",
        "type": "urlencoded",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "universal",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://api.smsapi.com/`. For example `/contacts`.",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers"
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://api.smsapi.com{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"body\": \"{{jsonParse(parameters.body)}}\",\n\t\"type\": \"urlencoded\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "smsapi",
      "description": "Makes an API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to `https://api.smsapi.com/`. For example `/contacts`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "smsapi3",
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchNewSMS": {
      "id": 67930,
      "api": {},
      "rev": 3,
      "crud": null,
      "name": "watchNewSMS",
      "epoch": null,
      "flags": {},
      "label": "Watch New SMS",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 10,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{}",
      "approved": false,
      "hookName": "smsapi",
      "learning": false,
      "interface": [
        {
          "name": "MsgId",
          "type": "text",
          "label": "Message ID"
        },
        {
          "name": "status",
          "type": "uinteger",
          "label": "Status"
        },
        {
          "name": "status_name",
          "type": "text",
          "label": "Status Name"
        },
        {
          "name": "idx",
          "type": "text",
          "label": "Index"
        },
        {
          "name": "donedate",
          "type": "text",
          "label": "Done Date"
        },
        {
          "name": "username",
          "type": "text",
          "label": "Username"
        },
        {
          "name": "sms_from",
          "type": "text",
          "label": "SMS From"
        },
        {
          "name": "sms_to",
          "type": "text",
          "label": "SMS To"
        },
        {
          "name": "sms_date",
          "type": "text",
          "label": "SMS Date"
        },
        {
          "name": "sms_text",
          "type": "text",
          "label": "SMS Text"
        },
        {
          "name": "points",
          "type": "uinteger",
          "label": "Points"
        },
        {
          "name": "to",
          "type": "text",
          "label": "to"
        },
        {
          "name": "mcc",
          "type": "text",
          "label": "MCC"
        },
        {
          "name": "mnc",
          "type": "text",
          "label": "MNC"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": null,
      "description": "Triggers whenever a new SMS is received on your SMSAPI account.",
      "expectJsonc": null,
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"MsgId\",\n\t\t\"type\": \"text\",\n        \"label\": \"Message ID\"\n    },\n    {\n        \"name\": \"status\",\n\t\t\"type\": \"uinteger\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"status_name\",\n\t\t\"type\": \"text\",\n        \"label\": \"Status Name\"\n    },\n    {\n        \"name\": \"idx\",\n\t\t\"type\": \"text\",\n        \"label\": \"Index\"\n    },\n    {\n        \"name\": \"donedate\",\n\t\t\"type\": \"text\",\n        \"label\": \"Done Date\"\n    },\n    {\n        \"name\": \"username\",\n\t\t\"type\": \"text\",\n        \"label\": \"Username\"\n    },\n\t{\n\t\t\"name\": \"sms_from\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"SMS From\"\n\t},\n\t{\n\t\t\"name\": \"sms_to\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"SMS To\"\n\t},\n\t{\n\t\t\"name\": \"sms_date\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"SMS Date\"\n\t},\n\t{\n\t\t\"name\": \"sms_text\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"SMS Text\"\n\t},\n    {\n        \"name\": \"points\",\n\t\t\"type\": \"uinteger\",\n        \"label\": \"Points\"\n    },\n    {\n        \"name\": \"to\",\n\t\t\"type\": \"text\",\n        \"label\": \"to\"\n    },\n    {\n        \"name\": \"mcc\",\n\t\t\"type\": \"text\",\n        \"label\": \"MCC\"\n    },\n    {\n        \"name\": \"mnc\",\n\t\t\"type\": \"text\",\n        \"label\": \"MNC\"\n    }\n]",
      "parametersJsonc": "[]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listContacts": {
      "id": 67931,
      "api": {
        "qs": {
          "{{...}}": "{{parameters}}"
        },
        "url": "/contacts",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseDates(item)}}",
          "iterate": "{{body.collection}}"
        },
        "pagination": {
          "qs": {
            "offset": "{{(pagination.page - 1) * 100}}"
          }
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "listContacts",
      "epoch": null,
      "flags": {},
      "label": "Search Contacts",
      "scope": [
        "contacts"
      ],
      "expect": [
        {
          "help": "The parameter allows you to search for contacts containing the given string of characters within the basic fields in the bases of the constitutions, i.e. name, surname, telephone number, email, city.",
          "name": "q",
          "type": "text",
          "label": "Search Query"
        },
        {
          "help": "The parameter specifies the field in the contact database after which the data sorting will be performed. The increasing direction is, for example, sort = last_name and the descending direction is, for example, sort = -last_name.",
          "name": "sort",
          "type": "text",
          "label": "Sort"
        },
        {
          "name": "phone_number",
          "type": "text",
          "label": "Phone Number"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First Name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last Name"
        },
        {
          "name": "group_id",
          "type": "text",
          "label": "Group ID"
        },
        {
          "name": "gender",
          "type": "text",
          "label": "Gender"
        },
        {
          "help": "Listing contacts at the given birth date. The date is given in format YYYY-MM-DD",
          "name": "birthday_date",
          "type": "date",
          "label": "Birthday Date"
        },
        {
          "help": "Maximum number of items to be displayed.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contacts\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"{{...}}\": \"{{parameters}}\"\n    },\n    \"response\": {\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{parseDates(item)}}\",\n        \"iterate\": \"{{body.collection}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"offset\": \"{{(pagination.page - 1) * 100}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Contact ID"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First Name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last Name"
        },
        {
          "name": "phone_number",
          "type": "text",
          "label": "Phone Number"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "city",
          "type": "text",
          "label": "City"
        },
        {
          "name": "gender",
          "type": "text",
          "label": "Gender"
        },
        {
          "name": "country",
          "type": "text",
          "label": "Country"
        },
        {
          "name": "date_created",
          "type": "date",
          "label": "Date Created"
        },
        {
          "name": "date_updated",
          "type": "date",
          "label": "Date Updated"
        },
        {
          "name": "groups",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              },
              {
                "name": "date_created",
                "type": "date",
                "label": "Date Created"
              },
              {
                "name": "date_updated",
                "type": "date",
                "label": "Date Updated"
              },
              {
                "name": "description",
                "type": "text",
                "label": "Description"
              },
              {
                "name": "created_by",
                "type": "email",
                "label": "Created by"
              },
              {
                "name": "idx",
                "type": "text",
                "label": "Index"
              },
              {
                "name": "contact_expire_after",
                "type": "text",
                "label": "Contact Expire After"
              },
              {
                "name": "contacts_count",
                "type": "text",
                "label": "Contacts Count"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Groups"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"contacts\"\r\n]",
      "accountName": "smsapi",
      "description": "Searches for contacts or lists them all.",
      "expectJsonc": "[\n    {\n        \"name\": \"q\",\n        \"label\": \"Search Query\",\n        \"type\": \"text\",\n        \"help\": \"The parameter allows you to search for contacts containing the given string of characters within the basic fields in the bases of the constitutions, i.e. name, surname, telephone number, email, city.\"\n    },\n    {\n        \"name\": \"sort\",\n        \"label\": \"Sort\",\n        \"type\": \"text\",\n        \"help\": \"The parameter specifies the field in the contact database after which the data sorting will be performed. The increasing direction is, for example, sort = last_name and the descending direction is, for example, sort = -last_name.\"\n    },\n    {\n        \"name\": \"phone_number\",\n        \"label\": \"Phone Number\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"email\",\n        \"label\": \"Email\",\n        \"type\": \"email\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"label\": \"First Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"label\": \"Last Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"group_id\",\n        \"label\": \"Group ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"gender\",\n        \"label\": \"Gender\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"birthday_date\",\n        \"label\": \"Birthday Date\",\n        \"type\": \"date\",\n        \"help\": \"Listing contacts at the given birth date. The date is given in format YYYY-MM-DD\"\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"help\": \"Maximum number of items to be displayed.\",\n        \"type\": \"uinteger\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "smsapi3",
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"Contact ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"label\": \"First Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"label\": \"Last Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"phone_number\",\n        \"label\": \"Phone Number\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"email\",\n        \"label\": \"Email\",\n        \"type\": \"email\"\n    },\n    {\n        \"name\": \"city\",\n        \"label\": \"City\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"gender\",\n        \"label\": \"Gender\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"country\",\n        \"label\": \"Country\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"date_created\",\n        \"label\": \"Date Created\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"date_updated\",\n        \"label\": \"Date Updated\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"groups\",\n        \"label\": \"Groups\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"label\": \"ID\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"label\": \"Name\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"date_created\",\n                    \"label\": \"Date Created\",\n                    \"type\": \"date\"\n                },\n                {\n                    \"name\": \"date_updated\",\n                    \"label\": \"Date Updated\",\n                    \"type\": \"date\"\n                },\n                {\n                    \"name\": \"description\",\n                    \"label\": \"Description\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"label\": \"Created by\",\n                    \"type\": \"email\"\n                },\n                {\n                    \"name\": \"idx\",\n                    \"label\": \"Index\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"contact_expire_after\",\n                    \"label\": \"Contact Expire After\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"contacts_count\",\n                    \"label\": \"Contacts Count\",\n                    \"type\": \"text\"\n                }\n            ]\n        }\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createContact": {
      "id": 67932,
      "api": {
        "url": "/contacts",
        "body": "{{parameters}}",
        "type": "urlencoded",
        "method": "POST",
        "response": {
          "output": "{{parseDates(body)}}"
        }
      },
      "rev": 5,
      "crud": "create",
      "name": "createContact",
      "epoch": null,
      "flags": {},
      "label": "Create a Contact",
      "scope": [
        "contacts"
      ],
      "expect": [
        {
          "help": "Either this or Email should be provided.",
          "name": "phone_number",
          "type": "text",
          "label": "Phone Number"
        },
        {
          "help": "Either this or Phone Number should be provided.",
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First Name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last Name"
        },
        {
          "name": "gender",
          "type": "select",
          "label": "Gender",
          "options": [
            {
              "label": "Male",
              "value": "male"
            },
            {
              "label": "Female",
              "value": "female"
            }
          ]
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "city",
          "type": "text",
          "label": "City"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contacts\",\n    \"method\": \"POST\",\n    \"body\": \"{{parameters}}\",\n    \"type\": \"urlencoded\",\n    \"response\": {\n        \"output\": \"{{parseDates(body)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Contact ID"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First Name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last Name"
        },
        {
          "name": "phone_number",
          "type": "text",
          "label": "Phone Number",
          "required": true
        },
        {
          "name": "country",
          "type": "text",
          "label": "Country"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "gender",
          "type": "text",
          "label": "Gender"
        },
        {
          "name": "city",
          "type": "text",
          "label": "City"
        },
        {
          "name": "date_created",
          "type": "date",
          "label": "Date Created"
        },
        {
          "name": "date_updated",
          "type": "date",
          "label": "Date Updated"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "groups",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              },
              {
                "name": "date_created",
                "type": "date",
                "label": "Date Created"
              },
              {
                "name": "date_updated",
                "type": "date",
                "label": "Date Updated"
              },
              {
                "name": "description",
                "type": "text",
                "label": "Description"
              },
              {
                "name": "created_by",
                "type": "text",
                "label": "Created by"
              },
              {
                "name": "idx",
                "type": "text",
                "label": "Index"
              },
              {
                "name": "contact_expire_after",
                "type": "text",
                "label": "Contact Expire After"
              },
              {
                "name": "contacts_count",
                "type": "text",
                "label": "Contacts Count"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Groups"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"contacts\"\r\n]",
      "accountName": "smsapi",
      "description": "Creates a new contact.",
      "expectJsonc": "[\n    {\n        \"name\": \"phone_number\",\n        \"label\": \"Phone Number\",\n        \"type\": \"text\",\n        \"help\": \"Either this or Email should be provided.\"\n    },\n    {\n        \"name\": \"email\",\n        \"label\": \"Email\",\n        \"type\": \"email\",\n        \"help\": \"Either this or Phone Number should be provided.\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"label\": \"First Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"label\": \"Last Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"gender\",\n        \"label\": \"Gender\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"value\": \"male\",\n                \"label\": \"Male\"\n            },\n            {\n                \"value\": \"female\",\n                \"label\": \"Female\"\n            }\n        ]\n    },\n    {\n        \"name\": \"description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"city\",\n        \"label\": \"City\",\n        \"type\": \"text\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "smsapi3",
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"Contact ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"label\": \"First Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"label\": \"Last Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"phone_number\",\n        \"label\": \"Phone Number\",\n        \"type\": \"text\",\n        \"required\": true\n    },\n    {\n        \"name\": \"country\",\n        \"label\": \"Country\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"email\",\n        \"label\": \"Email\",\n        \"type\": \"email\"\n    },\n    {\n        \"name\": \"gender\",\n        \"label\": \"Gender\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"city\",\n        \"label\": \"City\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"date_created\",\n        \"label\": \"Date Created\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"date_updated\",\n        \"label\": \"Date Updated\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"groups\",\n        \"label\": \"Groups\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"label\": \"ID\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"label\": \"Name\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"date_created\",\n                    \"label\": \"Date Created\",\n                    \"type\": \"date\"\n                },\n                {\n                    \"name\": \"date_updated\",\n                    \"label\": \"Date Updated\",\n                    \"type\": \"date\"\n                },\n                {\n                    \"name\": \"description\",\n                    \"label\": \"Description\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"label\": \"Created by\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"idx\",\n                    \"label\": \"Index\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"contact_expire_after\",\n                    \"label\": \"Contact Expire After\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"contacts_count\",\n                    \"label\": \"Contacts Count\",\n                    \"type\": \"text\"\n                }\n            ]\n        }\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteContact": {
      "id": 67933,
      "api": {
        "url": "/contacts/{{parameters.contactId}}",
        "method": "DELETE",
        "response": {
          "output": null
        }
      },
      "rev": 5,
      "crud": "delete",
      "name": "deleteContact",
      "epoch": null,
      "flags": {},
      "label": "Delete a Contact",
      "scope": [
        "contacts"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "contactId",
          "type": "select",
          "label": "Contact ID",
          "options": "rpc://app%23smsapi@1/listContacts",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contacts/{{parameters.contactId}}\",\n    \"method\": \"DELETE\",\n    \"response\": {\n        \"output\": null\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"contacts\"\r\n]",
      "accountName": "smsapi",
      "description": "Deletes an contact.",
      "expectJsonc": "[\n    {\n        \"name\": \"contactId\",\n        \"type\": \"select\",\n        \"label\": \"Contact ID\",\n        \"mode\": \"edit\",\n        \"options\": \"rpc://listContacts\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "smsapi3",
      "interfaceJsonc": "[]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateContact": {
      "id": 67934,
      "api": {
        "url": "/contacts/{{parameters.contactId}}",
        "body": "{{removeProps(parameters, 'contactId')}}",
        "type": "urlencoded",
        "method": "PUT",
        "response": {
          "output": "{{parseDates(body)}}"
        }
      },
      "rev": 5,
      "crud": "update",
      "name": "updateContact",
      "epoch": null,
      "flags": {},
      "label": "Update a Contact",
      "scope": [
        "contacts"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "contactId",
          "type": "select",
          "label": "Contact ID",
          "options": "rpc://app%23smsapi@1/listContacts",
          "required": true
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First Name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last Name"
        },
        {
          "name": "phone_number",
          "type": "text",
          "label": "Phone Number"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "gender",
          "type": "select",
          "label": "Gender",
          "options": [
            {
              "label": "Male",
              "value": "male"
            },
            {
              "label": "Female",
              "value": "female"
            }
          ]
        },
        {
          "name": "city",
          "type": "text",
          "label": "City"
        },
        {
          "name": "date_updated",
          "type": "date",
          "label": "Date Updated",
          "default": "{{now}}"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contacts/{{parameters.contactId}}\",\n    \"method\": \"PUT\",\n    \"body\": \"{{removeProps(parameters, 'contactId')}}\",\n    \"type\": \"urlencoded\",\n    \"response\": {\n        \"output\": \"{{parseDates(body)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Contact ID"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First Name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last Name"
        },
        {
          "name": "phone_number",
          "type": "text",
          "label": "Phone Number"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "gender",
          "type": "text",
          "label": "Gender"
        },
        {
          "name": "city",
          "type": "text",
          "label": "City"
        },
        {
          "name": "country",
          "type": "text",
          "label": "Country"
        },
        {
          "name": "source",
          "type": "text",
          "label": "Source"
        },
        {
          "name": "date_created",
          "type": "date",
          "label": "Date Created"
        },
        {
          "name": "date_updated",
          "type": "date",
          "label": "Date Updated"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "groups",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              },
              {
                "name": "date_created",
                "type": "date",
                "label": "Date Created"
              },
              {
                "name": "date_updated",
                "type": "date",
                "label": "Date Updated"
              },
              {
                "name": "description",
                "type": "text",
                "label": "Description"
              },
              {
                "name": "created_by",
                "type": "text",
                "label": "Created by"
              },
              {
                "name": "idx",
                "type": "text",
                "label": "Index"
              },
              {
                "name": "contact_expire_after",
                "type": "text",
                "label": "Contact Expire After"
              },
              {
                "name": "contacts_count",
                "type": "text",
                "label": "Contacts Count"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Groups"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"contacts\"\r\n]",
      "accountName": "smsapi",
      "description": "Updates a contact.",
      "expectJsonc": "[\n    {\n        \"name\": \"contactId\",\n        \"type\": \"select\",\n        \"mode\": \"edit\",\n        \"label\": \"Contact ID\",\n        \"options\": \"rpc://listContacts\",\n        \"required\": true\n    },\n    {\n        \"name\": \"first_name\",\n        \"label\": \"First Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"label\": \"Last Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"phone_number\",\n        \"label\": \"Phone Number\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"email\",\n        \"label\": \"Email\",\n        \"type\": \"email\"\n    },\n    {\n        \"name\": \"description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"gender\",\n        \"label\": \"Gender\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"value\": \"male\",\n                \"label\": \"Male\"\n            },\n            {\n                \"value\": \"female\",\n                \"label\": \"Female\"\n            }\n        ]\n    },\n    {\n        \"name\": \"city\",\n        \"label\": \"City\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"date_updated\",\n        \"label\": \"Date Updated\",\n        \"type\": \"date\",\n        \"default\": \"{{now}}\"\n    },\n    {\n        \"name\": \"description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "smsapi3",
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"Contact ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"label\": \"First Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"label\": \"Last Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"phone_number\",\n        \"label\": \"Phone Number\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"email\",\n        \"label\": \"Email\",\n        \"type\": \"email\"\n    },\n    {\n        \"name\": \"gender\",\n        \"label\": \"Gender\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"city\",\n        \"label\": \"City\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"country\",\n        \"label\": \"Country\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"source\",\n        \"label\": \"Source\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"date_created\",\n        \"label\": \"Date Created\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"date_updated\",\n        \"label\": \"Date Updated\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"groups\",\n        \"label\": \"Groups\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"label\": \"ID\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"label\": \"Name\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"date_created\",\n                    \"label\": \"Date Created\",\n                    \"type\": \"date\"\n                },\n                {\n                    \"name\": \"date_updated\",\n                    \"label\": \"Date Updated\",\n                    \"type\": \"date\"\n                },\n                {\n                    \"name\": \"description\",\n                    \"label\": \"Description\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"label\": \"Created by\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"idx\",\n                    \"label\": \"Index\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"contact_expire_after\",\n                    \"label\": \"Contact Expire After\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"contacts_count\",\n                    \"label\": \"Contacts Count\",\n                    \"type\": \"text\"\n                }\n            ]\n        }\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "sendTextMessage": {
      "id": 67935,
      "api": {
        "qs": {
          "to": "{{createNumbersArray(parameters.to)}}",
          "fast": "{{boolToInt(parameters.fast)}}",
          "test": "{{boolToInt(parameters.test)}}",
          "flash": "{{boolToInt(parameters.flash)}}",
          "format": "json",
          "details": "{{boolToInt(parameters.details)}}",
          "{{...}}": "{{omit(parameters, 'to')}}",
          "check_idx": "{{boolToInt(parameters.check_idx)}}",
          "normalize": "{{boolToInt(parameters.normalize)}}",
          "nounicode": "{{boolToInt(parameters.nounicode)}}",
          "partner_id": "make",
          "date_validate": "{{boolToInt(parameters.date_validate)}}",
          "allow_duplicates": "{{boolToInt(parameters.allow_duplicates)}}"
        },
        "url": "/sms.do",
        "method": "GET",
        "response": {
          "error": "{{body.message}}",
          "valid": "{{if(body.error, false, true)}}",
          "output": null
        }
      },
      "rev": 8,
      "crud": "read",
      "name": "sendTextMessage",
      "epoch": null,
      "flags": {},
      "label": "Send a Text Message",
      "scope": [
        "sms"
      ],
      "expect": [
        {
          "help": "The message text. Content of one message is normally 160 characters per single SMS or 70 in case of using at least one special character (polish characters are considered to be special characters). The maximal message is set to 918 normal characters or 402 if special chars are used and it is being sent as one block of 6 messages joined together and charged as six messages Detailed information about special characters are given in chapter 9.",
          "name": "message",
          "type": "text",
          "label": "Message",
          "required": true
        },
        {
          "help": "Recipient's mobile phone number (i.e. 44123456789 ).\nEither`To`or`Group`should be provided.",
          "name": "to",
          "type": "array",
          "label": "To"
        },
        {
          "help": "Name of the group from the contacts database to which message should be sent.\nEither`To`or`Group`should be provided.",
          "name": "group",
          "type": "text",
          "label": "Group"
        },
        {
          "help": "Name of the sender. As a default the sender name is set to „Test”. Only verified names are being accepted (&from=active_name). Sender name may be set after logging into Customer Portal on Sendernames.",
          "name": "from",
          "type": "text",
          "label": "From"
        },
        {
          "help": "This parameter describes the encoding of the message text. UTF-8 is set as default. If another encoding is needed parameter encoding should have following value: for iso-8859-2 (latin2) – it should be &encoding=iso-8859-2 for Windows-1250 – it should be &encoding=windows-1250",
          "name": "encoding",
          "type": "text",
          "label": "Encoding",
          "default": "utf-8"
        },
        {
          "help": "Sending a message in flash mode can be activated by setting this parameter true. Flash SMS are automatically presented on the mobile screen and have to be manually saved to be stored in inbox.",
          "name": "flash",
          "type": "boolean",
          "label": "Flash"
        },
        {
          "help": "If `true` - message won't be sent but response will be displayed, there is no charge for such test messages.",
          "name": "test",
          "type": "boolean",
          "label": "Test"
        },
        {
          "help": "If `true` - more details in response will be displayed (message length and sms count).",
          "name": "details",
          "type": "boolean",
          "label": "Details"
        },
        {
          "help": "Date in UNIX timestamp (&date=1287734110) or in ISO 8601 (&date=2012-05-10T08:40:27+00:00) when message will be sent (&date=1287734110). Setting a past date will result in sending message instantly.",
          "name": "date",
          "type": "date",
          "label": "Date"
        },
        {
          "help": "When parameter is set to `true` checks if date if given in proper format. Returns ERROR:54 if not.",
          "name": "date_validate",
          "type": "boolean",
          "label": "Date Validate"
        },
        {
          "help": "Sets the behavior when you try to ship in hours / dates that do not match the settings in your account.\n Available values are `Follow` - act according to settings, `Ignore` - ignore settings and `Nearest Available` - schedule shipment in the nearest allowed time.",
          "name": "time_restriction",
          "type": "select",
          "label": "Time Restriction",
          "options": [
            {
              "label": "Follow",
              "value": "follow"
            },
            {
              "label": "Nearest Available",
              "value": "nearest_available"
            },
            {
              "label": "Ignore",
              "value": "ignore"
            }
          ]
        },
        {
          "help": "This parameter allows to send binary messages. (&datacoding=bin) Parameters udh and message should be given as HEX (for example message=616263 if you want to send abc).",
          "name": "datacoding",
          "type": "text",
          "label": "Data Coding"
        },
        {
          "help": "UDH header required when parameter &datacoding=bin is used, for WAP PUSH messages udh should have value &udh=0605040b8423f0",
          "name": "udh",
          "type": "text",
          "label": "Udh"
        },
        {
          "help": "When parameter is set to `true` allows to send message to duplicated numbers in one request (useful i.e. for parametrized message contents)",
          "name": "allow_duplicates",
          "type": "boolean",
          "label": "Allow Duplicates"
        },
        {
          "help": "Optional custom value sent with SMS and sent back in CALLBACK (i.e. &idx=123).",
          "name": "idx",
          "type": "text",
          "label": "Idx"
        },
        {
          "help": "When parameter is set to `true` prevents from sending more than one message with the same idx in last 24h. When this parameter is set and message with the same idx was already sent error 53 is returned.",
          "name": "check_idx",
          "type": "boolean",
          "label": "Check Idx"
        },
        {
          "help": "Defines maximum message parts allowed, maximum value allowed is 6. ERROR:12 will be returned when the message has more parts than defined. Default value can be set in Customer Portal.",
          "name": "max_parts",
          "type": "text",
          "label": "Max Parts"
        },
        {
          "help": "When parameter nounicode is set to `true` prevents from sending messages containing special characters. ERROR: 11 will be returned when the message contains special characters.",
          "name": "nounicode",
          "type": "boolean",
          "label": "No Unicode"
        },
        {
          "help": "When parameter normalize is set to `true` special chars in message will be replaced with their equivalents (ê-e, ñ-n, ý-y ...).",
          "name": "normalize",
          "type": "boolean",
          "label": "Normalize"
        },
        {
          "help": "Setting this parameter to `true` will result in sending message with the highest priority which ensures the quickest possible time of delivery. Fast messages costs 50% more than normal message. Attention! Mass and marketing messages must not be sent with fast parameter.",
          "name": "fast",
          "type": "boolean",
          "label": "Fast"
        },
        {
          "help": "Message expiration date (in UNIX timestamp or in ISO 8601) is a date after which message won't be delivered if it wasn't delivered yet. The difference between date sent and expiration date shouldn't be less than 15 minutes and more than 72 hours (we recommend using minimum 1 hour and maximum 12 hours difference). Time will be set with tolerance +/- 5 minutes.",
          "name": "expiration_date",
          "type": "date",
          "label": "Expiration Date"
        },
        {
          "help": "Parameter allows to set CALLBACK URL for message from request. This parameter may be used when there is no default CALLBACK URL for this user or when it should be different than default one (notify_url has higher priority than default callback).",
          "name": "notify_url",
          "type": "url",
          "label": "Notify URL"
        },
        {
          "help": "Parameter &format=json causes, that response is sending in JSON format.",
          "name": "format",
          "type": "text",
          "label": "Format"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/sms.do\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"{{...}}\": \"{{omit(parameters, 'to')}}\",\n        \"to\": \"{{createNumbersArray(parameters.to)}}\",\n        \"flash\": \"{{boolToInt(parameters.flash)}}\",\n        \"details\": \"{{boolToInt(parameters.details)}}\",\n        \"test\": \"{{boolToInt(parameters.test)}}\",\n        \"date_validate\": \"{{boolToInt(parameters.date_validate)}}\",\n        \"allow_duplicates\": \"{{boolToInt(parameters.allow_duplicates)}}\",\n        \"check_idx\": \"{{boolToInt(parameters.check_idx)}}\",\n        \"nounicode\": \"{{boolToInt(parameters.nounicode)}}\",\n        \"normalize\": \"{{boolToInt(parameters.normalize)}}\",\n        \"fast\": \"{{boolToInt(parameters.fast)}}\",\n        \"format\": \"json\",\n        \"partner_id\": \"make\"\n    },\n    \"response\": {\n        \"valid\": \"{{if(body.error, false, true)}}\",\n        \"error\": \"{{body.message}}\",\n        \"output\": null\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"sms\"\r\n]",
      "accountName": "smsapi",
      "description": "Sends a text message.",
      "expectJsonc": "[\n    {\n        \"name\": \"message\",\n        \"type\": \"text\",\n        \"help\": \"The message text. Content of one message is normally 160 characters per single SMS or 70 in case of using at least one special character (polish characters are considered to be special characters). The maximal message is set to 918 normal characters or 402 if special chars are used and it is being sent as one block of 6 messages joined together and charged as six messages Detailed information about special characters are given in chapter 9.\",\n        \"label\": \"Message\",\n        \"required\": true\n    },\n    {\n        \"name\": \"to\",\n        \"type\": \"array\",\n        \"help\": \"Recipient's mobile phone number (i.e. 44123456789 ).\\nEither`To`or`Group`should be provided.\",\n        \"label\": \"To\"\n    },\n    {\n        \"name\": \"group\",\n        \"type\": \"text\",\n        \"help\": \"Name of the group from the contacts database to which message should be sent.\\nEither`To`or`Group`should be provided.\",\n        \"label\": \"Group\"\n    },\n    {\n        \"name\": \"from\",\n        \"type\": \"text\",\n        \"help\": \"Name of the sender. As a default the sender name is set to „Test”. Only verified names are being accepted (&from=active_name). Sender name may be set after logging into Customer Portal on Sendernames.\",\n        \"label\": \"From\"\n    },\n    {\n        \"name\": \"encoding\",\n        \"type\": \"text\",\n        \"help\": \"This parameter describes the encoding of the message text. UTF-8 is set as default. If another encoding is needed parameter encoding should have following value: for iso-8859-2 (latin2) – it should be &encoding=iso-8859-2 for Windows-1250 – it should be &encoding=windows-1250\",\n        \"label\": \"Encoding\",\n        \"default\": \"utf-8\"\n    },\n    {\n        \"name\": \"flash\",\n        \"type\": \"boolean\",\n        \"help\": \"Sending a message in flash mode can be activated by setting this parameter true. Flash SMS are automatically presented on the mobile screen and have to be manually saved to be stored in inbox.\",\n        \"label\": \"Flash\"\n    },\n    {\n        \"name\": \"test\",\n        \"type\": \"boolean\",\n        \"help\": \"If `true` - message won't be sent but response will be displayed, there is no charge for such test messages.\",\n        \"label\": \"Test\"\n    },\n    {\n        \"name\": \"details\",\n        \"type\": \"boolean\",\n        \"help\": \"If `true` - more details in response will be displayed (message length and sms count).\",\n        \"label\": \"Details\"\n    },\n    {\n        \"name\": \"date\",\n        \"type\": \"date\",\n        \"help\": \"Date in UNIX timestamp (&date=1287734110) or in ISO 8601 (&date=2012-05-10T08:40:27+00:00) when message will be sent (&date=1287734110). Setting a past date will result in sending message instantly.\",\n        \"label\": \"Date\"\n    },\n    {\n        \"name\": \"date_validate\",\n        \"type\": \"boolean\",\n        \"help\": \"When parameter is set to `true` checks if date if given in proper format. Returns ERROR:54 if not.\",\n        \"label\": \"Date Validate\"\n    },\n    {\n        \"name\": \"time_restriction\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Follow\",\n                \"value\": \"follow\"\n            },\n            {\n                \"label\": \"Nearest Available\",\n                \"value\": \"nearest_available\"\n            },\n            {\n                \"label\": \"Ignore\",\n                \"value\": \"ignore\"\n            }\n        ],\n        \"help\": \"Sets the behavior when you try to ship in hours / dates that do not match the settings in your account.\\n Available values are `Follow` - act according to settings, `Ignore` - ignore settings and `Nearest Available` - schedule shipment in the nearest allowed time.\",\n        \"label\": \"Time Restriction\"\n    },\n    {\n        \"name\": \"datacoding\",\n        \"type\": \"text\",\n        \"help\": \"This parameter allows to send binary messages. (&datacoding=bin) Parameters udh and message should be given as HEX (for example message=616263 if you want to send abc).\",\n        \"label\": \"Data Coding\"\n    },\n    {\n        \"name\": \"udh\",\n        \"type\": \"text\",\n        \"help\": \"UDH header required when parameter &datacoding=bin is used, for WAP PUSH messages udh should have value &udh=0605040b8423f0\",\n        \"label\": \"Udh\"\n    },\n    {\n        \"name\": \"allow_duplicates\",\n        \"type\": \"boolean\",\n        \"help\": \"When parameter is set to `true` allows to send message to duplicated numbers in one request (useful i.e. for parametrized message contents)\",\n        \"label\": \"Allow Duplicates\"\n    },\n    {\n        \"name\": \"idx\",\n        \"type\": \"text\",\n        \"help\": \"Optional custom value sent with SMS and sent back in CALLBACK (i.e. &idx=123).\",\n        \"label\": \"Idx\"\n    },\n    {\n        \"name\": \"check_idx\",\n        \"type\": \"boolean\",\n        \"help\": \"When parameter is set to `true` prevents from sending more than one message with the same idx in last 24h. When this parameter is set and message with the same idx was already sent error 53 is returned.\",\n        \"label\": \"Check Idx\"\n    },\n    {\n        \"name\": \"max_parts\",\n        \"type\": \"text\",\n        \"help\": \"Defines maximum message parts allowed, maximum value allowed is 6. ERROR:12 will be returned when the message has more parts than defined. Default value can be set in Customer Portal.\",\n        \"label\": \"Max Parts\"\n    },\n    {\n        \"name\": \"nounicode\",\n        \"type\": \"boolean\",\n        \"help\": \"When parameter nounicode is set to `true` prevents from sending messages containing special characters. ERROR: 11 will be returned when the message contains special characters.\",\n        \"label\": \"No Unicode\"\n    },\n    {\n        \"name\": \"normalize\",\n        \"type\": \"boolean\",\n        \"help\": \"When parameter normalize is set to `true` special chars in message will be replaced with their equivalents (ê-e, ñ-n, ý-y ...).\",\n        \"label\": \"Normalize\"\n    },\n    {\n        \"name\": \"fast\",\n        \"type\": \"boolean\",\n        \"help\": \"Setting this parameter to `true` will result in sending message with the highest priority which ensures the quickest possible time of delivery. Fast messages costs 50% more than normal message. Attention! Mass and marketing messages must not be sent with fast parameter.\",\n        \"label\": \"Fast\"\n    },\n    {\n        \"name\": \"expiration_date\",\n        \"type\": \"date\",\n        \"help\": \"Message expiration date (in UNIX timestamp or in ISO 8601) is a date after which message won't be delivered if it wasn't delivered yet. The difference between date sent and expiration date shouldn't be less than 15 minutes and more than 72 hours (we recommend using minimum 1 hour and maximum 12 hours difference). Time will be set with tolerance +/- 5 minutes.\",\n        \"label\": \"Expiration Date\"\n    },\n    {\n        \"name\": \"notify_url\",\n        \"type\": \"url\",\n        \"help\": \"Parameter allows to set CALLBACK URL for message from request. This parameter may be used when there is no default CALLBACK URL for this user or when it should be different than default one (notify_url has higher priority than default callback).\",\n        \"label\": \"Notify URL\"\n    },\n    {\n        \"name\": \"format\",\n        \"type\": \"text\",\n        \"help\": \"Parameter &format=json causes, that response is sending in JSON format.\",\n        \"label\": \"Format\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "smsapi3",
      "interfaceJsonc": "[]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "ActionAssignContactToGroup": {
      "id": 98263,
      "api": {
        "url": "/contacts/{{parameters.contactId}}/groups/{{parameters.groupId}}",
        "method": "{{if(parameters.action == 'assign', 'PUT', 'DELETE')}}",
        "headers": {
          "Content-Type": "application/x-www-form-urlencoded"
        },
        "response": {
          "output": "{{if(parameters.action == 'assign', parseDates(body.collection[]), null)}}"
        }
      },
      "rev": 5,
      "crud": "update",
      "name": "ActionAssignContactToGroup",
      "epoch": null,
      "flags": {},
      "label": "Manage Contact Group Membership",
      "scope": [
        "contacts"
      ],
      "expect": [
        {
          "name": "action",
          "type": "select",
          "label": "Action",
          "options": [
            {
              "label": "Assign Contact to a Group",
              "value": "assign"
            },
            {
              "label": "Remove Contact from a Group",
              "value": "remove"
            }
          ],
          "required": true
        },
        {
          "name": "contactId",
          "type": "select",
          "label": "Contact ID",
          "options": "rpc://app%23smsapi@1/listContacts",
          "required": true
        },
        {
          "name": "groupId",
          "type": "select",
          "label": "Group ID",
          "options": "rpc://app%23smsapi@1/getGroupId",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contacts/{{parameters.contactId}}/groups/{{parameters.groupId}}\",\n    \"method\": \"{{if(parameters.action == 'assign', 'PUT', 'DELETE')}}\",\n    \"headers\": {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    \"response\": {\n        \"output\": \"{{if(parameters.action == 'assign', parseDates(body.collection[]), null)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Group ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "date_created",
          "type": "date",
          "label": "Date Created"
        },
        {
          "name": "date_updated",
          "type": "date",
          "label": "Date Updated"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "created_by",
          "type": "text",
          "label": "Created by"
        },
        {
          "name": "idx",
          "type": "text",
          "label": "IDX"
        },
        {
          "name": "contact_expire_after",
          "type": "text",
          "label": "Contact Expire After"
        },
        {
          "name": "contacts_count",
          "type": "number",
          "label": "Contacts Count"
        },
        {
          "name": "permissions",
          "spec": {
            "spec": [
              {
                "name": "username",
                "type": "text",
                "label": "Username"
              },
              {
                "name": "group_id",
                "type": "text",
                "label": "Group ID"
              },
              {
                "name": "write",
                "type": "boolean",
                "label": "Write"
              },
              {
                "name": "read",
                "type": "boolean",
                "label": "Read"
              },
              {
                "name": "send",
                "type": "boolean",
                "label": "Send"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Permissions"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"contacts\"\r\n]",
      "accountName": "smsapi",
      "description": "Assigns or removes contact from the selected group.",
      "expectJsonc": "[\n    {\n        \"name\": \"action\",\n        \"label\": \"Action\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"value\": \"assign\",\n                \"label\": \"Assign Contact to a Group\"\n            },\n            {\n                \"value\": \"remove\",\n                \"label\": \"Remove Contact from a Group\"\n            }\n        ],\n        \"required\": true\n    },\n    {\n        \"name\": \"contactId\",\n        \"label\": \"Contact ID\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"options\": \"rpc://listContacts\"\n    },\n    {\n        \"name\": \"groupId\",\n        \"label\": \"Group ID\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"options\": \"rpc://getGroupId\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "smsapi3",
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Group ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"date_created\",\n        \"type\": \"date\",\n        \"label\": \"Date Created\"\n    },\n    {\n        \"name\": \"date_updated\",\n        \"type\": \"date\",\n        \"label\": \"Date Updated\"\n    },\n    {\n        \"name\": \"description\",\n        \"type\": \"text\",\n        \"label\": \"Description\"\n    },\n    {\n        \"name\": \"created_by\",\n        \"type\": \"text\",\n        \"label\": \"Created by\"\n    },\n    {\n        \"name\": \"idx\",\n        \"type\": \"text\",\n        \"label\": \"IDX\"\n    },\n    {\n        \"name\": \"contact_expire_after\",\n        \"type\": \"text\",\n        \"label\": \"Contact Expire After\"\n    },\n    {\n        \"name\": \"contacts_count\",\n        \"type\": \"number\",\n        \"label\": \"Contacts Count\"\n    },\n    {\n        \"name\": \"permissions\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"username\",\n                    \"type\": \"text\",\n                    \"label\": \"Username\"\n                },\n                {\n                    \"name\": \"group_id\",\n                    \"type\": \"text\",\n                    \"label\": \"Group ID\"\n                },\n                {\n                    \"name\": \"write\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Write\"\n                },\n                {\n                    \"name\": \"read\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Read\"\n                },\n                {\n                    \"name\": \"send\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Send\"\n                }\n            ]\n        },\n        \"label\": \"Permissions\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "TriggerWatchCallbackReport": {
      "id": 75113,
      "api": {
        "response": {
          "output": "{{parseDatesInWebhook(payload)}}"
        }
      },
      "rev": 3,
      "crud": null,
      "name": "TriggerWatchCallbackReport",
      "epoch": null,
      "flags": {},
      "label": "Watch New Callback Report",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 10,
      "appName": "smsapi",
      "samples": null,
      "apiJsonc": "{\r\n    \"response\": {\r\n        \"output\": \"{{parseDatesInWebhook(payload)}}\"\r\n    }\r\n}",
      "approved": false,
      "hookName": "smsapi3",
      "learning": false,
      "interface": [
        "rpc://app%23smsapi@1/createCallbackInterface"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": null,
      "description": "Triggers whenever a new callback is received.",
      "expectJsonc": null,
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    \"rpc://createCallbackInterface\"\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "smsapi": {
      "api": {
        "log": {
          "sanitize": [
            "request.headers.authorization"
          ]
        },
        "url": "https://api.smsapi.com/profile/prices",
        "headers": {
          "authorization": "Bearer {{parameters.apiKey}}"
        },
        "response": {
          "error": {
            "message": "{{handleError(statusCode, body)}}"
          }
        }
      },
      "rev": 6,
      "name": "smsapi",
      "type": "basic",
      "label": "SMSAPI Basic (Deprecated)",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "smsapi",
      "install": {},
      "apiJsonc": "{\n    \"url\": \"https://api.smsapi.com/profile/prices\",\n    \"headers\": {\n        \"authorization\": \"Bearer {{parameters.apiKey}}\"\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"{{handleError(statusCode, body)}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "apiKey",
          "type": "text",
          "label": "API Key",
          "required": true
        },
        {
          "type": "html",
          "label": "<div class=\"i-exception\"><div class=\"i-exception-description\"><h5>This connection has been deprecated</h5><p class=\"text-muted\">Please use the <b>OAuth</b> connection instead.</p></div></div>"
        }
      ],
      "scopeJsonc": "[]",
      "installSpec": [],
      "scopesJsonc": "{}",
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"apiKey\",\n        \"type\": \"text\",\n        \"label\": \"API Key\",\n        \"required\": true\n    },\n    {\n        \"type\": \"html\",\n        \"label\": \"<div class=\\\"i-exception\\\"><div class=\\\"i-exception-description\\\"><h5>This connection has been deprecated</h5><p class=\\\"text-muted\\\">Please use the <b>OAuth</b> connection instead.</p></div></div>\"\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    },
    "smsapi2": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://www.example.com/api/whoami",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {
            "uid": "{{body.id}}",
            "metadata": {
              "type": "text",
              "value": "{{body.user}}"
            }
          }
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.code",
              "request.body.client_secret",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://www.example.com/api/token",
          "body": {
            "code": "{{temp.code}}",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "authorization_code",
            "redirect_uri": "{{oauth.redirectUri}}",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            },
            "expires": "{{addSeconds(now, body.refresh_expires_in)}}"
          }
        },
        "refresh": {
          "log": {
            "sanitize": [
              "request.body.client_secret",
              "request.body.refresh_token",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://www.example.com/api/token",
          "body": {
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "refresh_token",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}",
            "refresh_token": "{{data.refreshToken}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            },
            "expires": "{{addSeconds(now, body.refresh_expires_in)}}"
          },
          "condition": "{{data.expires < addMinutes(now, 15)}}"
        },
        "authorize": {
          "qs": {
            "scope": "{{join(oauth.scope, ',')}}",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "redirect_uri": "{{oauth.redirectUri}}",
            "response_type": "code"
          },
          "url": "https://www.example.com/oauth/authorize",
          "response": {
            "temp": {
              "code": "{{query.code}}"
            }
          }
        },
        "invalidate": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://www.example.com/oauth/invalidate",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          }
        }
      },
      "rev": 5,
      "name": "smsapi2",
      "type": "oauth",
      "label": "SMSAPI (Testing)",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "smsapi",
      "install": {
        "common": {
          "clientId": "{{parameters.clientId}}",
          "clientSecret": "{{parameters.clientSecret}}"
        }
      },
      "apiJsonc": "{\n\t\"authorize\": {\n\t\t\"qs\": {\n\t\t\t\"scope\": \"{{join(oauth.scope, ',')}}\",\n\t\t\t\"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n\t\t\t\"redirect_uri\": \"{{oauth.redirectUri}}\",\n\t\t\t\"response_type\": \"code\"\n\t\t},\n\t\t\"url\": \"https://www.example.com/oauth/authorize\",\n\t\t\"response\": {\n\t\t\t\"temp\": {\n\t\t\t\t\"code\": \"{{query.code}}\"\n\t\t\t}\n\t\t}\n\t},\n\t\"token\": {\n\t\t\"url\": \"https://www.example.com/api/token\",\n\t\t\"method\": \"POST\",\n\t\t\"body\": {\n\t\t\t\"code\": \"{{temp.code}}\",\n\t\t\t\"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n\t\t\t\"grant_type\": \"authorization_code\",\n\t\t\t\"redirect_uri\": \"{{oauth.redirectUri}}\",\n\t\t\t\"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"response\": {\n\t\t\t\"data\": {\n\t\t\t\t\"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n\t\t\t\t\"accessToken\": \"{{body.access_token}}\",\n\t\t\t\t\"refreshToken\": \"{{body.refresh_token}}\"\n\t\t\t},\n\t\t\t\"expires\": \"{{addSeconds(now, body.refresh_expires_in)}}\"\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.body.code\", \"request.body.client_secret\", \"response.body.access_token\", \"response.body.refresh_token\"]\n\t\t}\n\t},\n\t\"refresh\": {\n\t\t\"condition\": \"{{data.expires < addMinutes(now, 15)}}\",\n\t\t\"url\": \"https://www.example.com/api/token\",\n\t\t\"method\": \"POST\",\n\t\t\"body\": {\n\t\t\t\"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n\t\t\t\"grant_type\": \"refresh_token\",\n\t\t\t\"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\",\n\t\t\t\"refresh_token\": \"{{data.refreshToken}}\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"response\": {\n\t\t\t\"data\": {\n\t\t\t\t\"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n\t\t\t\t\"accessToken\": \"{{body.access_token}}\",\n\t\t\t\t\"refreshToken\": \"{{body.refresh_token}}\"\n\t\t\t},\n\t\t\t\"expires\": \"{{addSeconds(now, body.refresh_expires_in)}}\"\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.body.client_secret\", \"request.body.refresh_token\", \"response.body.access_token\", \"response.body.refresh_token\"]\n\t\t}\n\t},\n\t\"info\": {\n\t\t\"url\": \"https://www.example.com/api/whoami\",\n\t\t\"headers\": {\n\t\t\t\"authorization\": \"Bearer {{connection.accessToken}}\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"uid\": \"{{body.id}}\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"value\": \"{{body.user}}\"\n\t\t\t}\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.headers.authorization\"]\n\t\t}\n\t},\n\t\"invalidate\": {\n\t\t\"url\": \"https://www.example.com/oauth/invalidate\",\n\t\t\"headers\": {\n\t\t\t\"authorization\": \"Bearer {{connection.accessToken}}\"\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.headers.authorization\"]\n\t\t}\n\t}\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "advanced": true
        },
        {
          "name": "clientSecret",
          "type": "text",
          "label": "Client Secret",
          "advanced": true
        }
      ],
      "scopeJsonc": "[\n    \n]",
      "installSpec": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "text",
          "label": "Client Secret",
          "required": true
        }
      ],
      "scopesJsonc": "{\n    \n}",
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"advanced\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"text\",\n        \"label\": \"Client Secret\",\n        \"advanced\": true\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"{{if(connection.apiKey, 'https://api.smsapi.com', 'https://smsapi.io')}}\",\n    \"headers\": {\n        \"authorization\": \"Bearer {{ifempty(connection.apiKey, connection.accessToken)}}\"\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"{{handleError(statusCode, body)}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    }\n}",
  "countries": null,
  "_functions": {
    "boolToInt": {
      "rev": 3,
      "code": "function boolToInt(boolBoi) {\n\treturn !!boolBoi ? 1 : 0;\n}",
      "name": "boolToInt",
      "test": null,
      "appName": "smsapi",
      "arguments": "(boolBoi)",
      "appVersion": 1
    },
    "jsonParse": {
      "rev": 3,
      "code": "function jsonParse(obj) {\n\tif (!obj) return {};\n\t\n\tif (typeof obj === 'object') return obj;\n\t\n\treturn JSON.parse(obj);\n}",
      "name": "jsonParse",
      "test": null,
      "appName": "smsapi",
      "arguments": "(obj)",
      "appVersion": 1
    },
    "errorCodes": {
      "rev": 3,
      "code": "function errorCodes() {\n    return {\n        8: \"Error in request (Please report)\",\n        11: \"The message is too long or there is no message or parameter: nounicode is set and special characters (including Polish characters) are used\",\n        12: \"The message has more parts than defined in &max_parts parameter.\",\n        13: \"Lack of valid phone numbers (invalid or blacklisted numbers)\",\n        14: \"Wrong sender name\",\n        17: \"FLASH message cannot contain special characters\",\n        18: \"Invalid number of parameters\",\n        19: \"Too many messages in one request (number of messages in on request exceeded, when short link is used, limit is 100)\",\n        20: \"Invalid number of IDX parameters\",\n        25: \"Parameters &normalize and &datacoding musn't appear in the same request.\",\n        27: \"Too long IDX parameter. Maximum 255 chars.\",\n        28: \"Invalid time_restriction parameter value. Available values are: follow, ignore or nearest_available\",\n        30: \"Wrong UDH parameter when &datacoding=bin\",\n        40: \"No group with given name in contacts database\",\n        41: \"Chosen group is empty\",\n        50: \"Messages may be scheduled up to 3 months in the future\",\n        52: \"Too many attempts of sending messages to one number (maximum 10 attempts within 60s)\",\n        53: \"Not unique idx parameter, message with the same idx has been already sent and &check_idx=1.\",\n        54: \"Wrong date - (only unix timestamp and ISO 8601)\",\n        56: \"The difference between date sent and expiration date can't be less than 1 and more than 72 hours.\",\n        57: \"The number is blacklisted for this user.\",\n        59: \"Number is added to OptOut list\",\n        70: \"Invalid URL in notify_url parameter.\",\n        74: \"Sending date doesn't match date sent restrictions set for the account.\",\n        76: \"Invalid characters in request parameters\",\n        93: \"Message parameters and group parameter cannot be used simultaneously.\",\n        94: \"Not allowed to send messages with link.\",\n        101: \"Invalid authorization info\",\n        102: \"Invalid username or password\",\n        103: \"Insufficient credits on Your account\",\n        104: \"No such template\",\n        105: \"Wrong IP address (for IP filter turned on)\",\n        106: \"Invalid cut.li link\",\n        110: \"Action not allowed for your account\",\n        200: \"Unsuccessful message submission\",\n        201: \"System internal error (please report)\",\n        202: \"Too many simultaneous request, the message won't be sent\",\n        203: \"Too many requests. Please try again later.\",\n        301: \"ID of messages doesn't exist\",\n        400: \"Invalid message ID of a status response\",\n        401: \"Token don't have permissions for this action\",\n        409: \"Value already exists\",\n        999: \"System internal error (please report)\",\n        1000: \"Action available only for the main user\",\n        1001: \"Invalid action (expected one of following parameters: add_user, set_user, get_user, credits)\",\n        1010: \"Sub-user-s adding error\",\n        1020: \"Sub-user-s editing error\",\n        1021: \"No data to edit, at least one parameter has to be edited\",\n        1030: \"Checking user's data error\",\n        1032: \"Sub-user doesn't exist for this main user. This error may also occur when trying to get a subuser which does not contain main account username prefix and not using without_prefix parameter.\",\n        1100: \"Sub-user's data error\",\n        1110: \"Invalid new sub-user's name\",\n        1111: \"New sub-user's name is missing\",\n        1112: \"Too short new sub-user's name, it has to contain minimum 3 characters\",\n        1113: \"Too long new sub-user's name, sub-user's name with main user's prefix may contain maximum 32 characters\",\n        1114: \"Not allowed characters occurred in sub-user's name, following are allowed: letters [A – Z], digits [0 – 9] and following others @, -, _ and .\",\n        1115: \"Another user with the same name exists\",\n        1120: \"New sub-user's password error\",\n        1121: \"Password too short\",\n        1122: \"Password too long\",\n        1123: \"Password should be hashed with MD5\",\n    };\n}\n",
      "name": "errorCodes",
      "test": null,
      "appName": "smsapi",
      "arguments": "()",
      "appVersion": 1
    },
    "parseDates": {
      "rev": 3,
      "code": "function parseDates(obj) {\n    const func = iml.parseDate;\n    const validator = (value) => JSON.stringify(new Date(value)) !== \"null\";\n    for (let [key, value] of Object.entries(obj)) {\n        if (value) {\n            if (\n                typeof value === \"string\" &&\n                value.length > 7 &&\n                validator(value)\n            ) {\n                obj[key] = func(value);\n            } else if (Array.isArray(value)) {\n                obj[key] = value.map((item) => iml.parseDates(item));\n            } else if (typeof value === \"object\") {\n                obj[key] = iml.parseDates(value);\n            }\n        }\n    }\n    return obj;\n}",
      "name": "parseDates",
      "test": null,
      "appName": "smsapi",
      "arguments": "(obj)",
      "appVersion": 1
    },
    "parseLabel": {
      "rev": 3,
      "code": "function parseLabel(item) {\n\tlet name;\n\tif (item.first_name) name = item.first_name;\n\tif (item.last_name) name += ' ' + item.last_name;\n\tif (!name || !name.split(' ').join('')) {\n\t\tname = 'ID: ' + item.id;\n\t}\n\treturn name;\n}",
      "name": "parseLabel",
      "test": null,
      "appName": "smsapi",
      "arguments": "(item)",
      "appVersion": 1
    },
    "errorCodes2": {
      "rev": 3,
      "code": "function errorCodes2() {\n    return {\n        1130: \"Credit limit error\",\n        1131: \"Parameter limit ought to be a number\",\n        1140: \"Month limit error\",\n        1141: \"Parameter month_limit ought to be a number\",\n        1150: \"Wrong senders parameter value, binary 0 and 1 values allowed\",\n        1160: \"Wrong phonebook parameter value, binary 0 and 1 values allowed\",\n        1170: \"Wrong active parameter value, binary 0 and 1 values allowed\",\n        1180: \"Parameter info error\",\n        1183: \"Parameter info is too long\",\n        1190: \"API password for sub-user's account error\",\n        1192: \"Wrong API password length (password hashed with MD5 should have 32 chars)\",\n        1193: \"API password should be hashed with MD5\",\n        2001: \"Invalid action (parameter add, status, delete or list expected)\",\n        2010: \"New sender name adding error\",\n        2030: \"Sender name's status checking error\",\n        2031: \"Such sender name doesn't exist\",\n        2060: \"Default sender name error\",\n        2061: \"Sender name has to be active for setting it as default\",\n        2062: \"This sender name is already set as default\",\n        2100: \"Data error\",\n        2110: \"Sender name error\",\n        2111: \"Sender name is missing for adding new sender name action (parameter &add is empty)\",\n        2112: \"Invalid Sender Name's name (i.e. Name containing special chars or name too long), sender name may contain up to 11 chars, chars allowed: a-z A-Z 0-9 - . [space]\",\n        2115: \"Sender name already exists\",\n        4000: \"General contacts database error.\",\n        4001: \"Action not available for this account.\",\n        4002: \"Invalid action.\",\n        4003: \"Invalid parameter usage.\",\n        4004: \"Too large limit parameter value (i.e. for list_contacts action maximum value is 200).\",\n        4100: \"General groups' action error.\",\n        4101: \"Group not found.\",\n        4110: \"General group's name error.\",\n        4111: \"Invalid group's name.\",\n        4112: \"Group's name cannot not be empty.\",\n        4113: \"Group's name too short (min 2 chars).\",\n        4114: \"Group's name too long (max 32 chars).\",\n        4115: \"Forbidden chars appeared in group's name.\",\n        4116: \"Group already exists.\",\n        4121: \"Invalid Info field value for groups.\",\n        4122: \"Too long Info field value for contact (max 200 chars).\",\n        4200: \"General contact error.\",\n        4201: \"Contact not found.\",\n        4210: \"General phone number error.\",\n        4211: \"Invalid phone number.\",\n        4212: \"Contact has to contain a phone number.\",\n        4213: \"Phone number is too short.\",\n        4214: \"Phone number is too long.\",\n        4220: \"First name error.\",\n        4221: \"First name too short (min 2 chars).\",\n        4222: \"First name too long (max 100 chars).\",\n        4230: \"Last name error.\",\n        4231: \"Last name too long (min2 chars).\",\n        4232: \"Last name too long (max 100 chars).\",\n        4240: \"Contact Info field error.\",\n        4241: \"Too long Info field value for contact (max 200 chars).\",\n        4250: \"E-mail address error for this contact.\",\n        4260: \"Birthdate error of this contact.\",\n        4270: \"Group error for this contact.\",\n        4271: \"Group not found.\",\n        4272: \"Group name is necessary for group actions.\",\n        4280: \"Gender error.\",\n    };\n}\n",
      "name": "errorCodes2",
      "test": null,
      "appName": "smsapi",
      "arguments": "()",
      "appVersion": 1
    },
    "handleError": {
      "rev": 3,
      "code": "function handleError(statusCode, body) {\n    if (typeof body === \"string\") {\n\t\tconst errorCodes = {...iml.errorCodes(), ...iml.errorCodes2()}\n\n        if (body.indexOf(\"ERROR:\") !== -1) {\n\t\t\tconst [, errorCode] = body.split(':')\n\t\t\treturn `${body} - ${errorCodes[errorCode]}`\n        }\n    }\n\n    const message =\n        (body && body.errors && body.errors.length && body.errors[0].message) ||\n        body.message;\n    if (message) return `[${statusCode}] ${message}`;\n    const messages = {\n        400: \"The request could not be understood by the server due to incorrect syntax. The client SHOULD NOT repeat the request without modifications.\",\n        401: \"The limit has been exceeded.\",\n        403: \"Unauthorized request. The client does not have access rights to the content. Unlike 401, the client’s identity is known to the server.\",\n        404: \"The server can not find the requested resource.\",\n        405: \"The request HTTP method is known by the server but has been disabled and cannot be used for that resource.\",\n        406: \"The server doesn’t find any content that conforms to the criteria given by the user agent in the `Accept` header sent in the request.\",\n        408: \"Indicates that the server did not receive a complete request from the client within the server’s allotted timeout period.\",\n        409: \"The request could not be completed due to a conflict with the current state of the resource.\",\n        410: \"The requested resource is no longer available at the server.\",\n        411: \"The server refuses to accept the request without a defined Content- Length. The client MAY repeat the request if it adds a valid Content-Length header field.\",\n        413: \"Request entity is larger than limits defined by server.\",\n        415: \"The mediatype in Content-type of the request is not supported by the server.\",\n        422: \"Unprocessible entity\",\n        500: \"Internal server error. Please try again later or contact Siteglide support if error persists.\",\n        502: \"The server got an invalid response while working as a gateway to get a response needed to handle the request.\",\n        503: \"The server is not ready to handle the request.\",\n        504: \"The server is acting as a gateway and cannot get a response in time for a request.\",\n    };\n    return messages[statusCode]\n        ? `[${statusCode}] ${messages[statusCode]}`\n        : `[${statusCode}] Bad request.`;\n}\n",
      "name": "handleError",
      "test": null,
      "appName": "smsapi",
      "arguments": "(statusCode, body)",
      "appVersion": 1
    },
    "removeProps": {
      "rev": 3,
      "code": "function removeProps(object, ...props) {\n\tconst newObj = {};\n\tObject.keys(object).map(item => {\n\t\tif (!props.includes(item))\n\t\t\tnewObj[item] = object[item];\n\t});\n\treturn newObj;\n}",
      "name": "removeProps",
      "test": null,
      "appName": "smsapi",
      "arguments": "(object, ...props)",
      "appVersion": 1
    },
    "changeGroupsOutput": {
      "rev": 2,
      "code": "function changeGroupsOutput(body, groups) {\n  return { ...body, groups };\n}\n",
      "name": "changeGroupsOutput",
      "test": null,
      "appName": "smsapi",
      "arguments": "(body, groups)",
      "appVersion": 1
    },
    "createNumbersArray": {
      "rev": 2,
      "code": "function createNumbersArray(numbers) {\n  if (Array.isArray(numbers)) {\n    return iml.join(numbers, ',');\n  }\n  return numbers;\n}\n",
      "name": "createNumbersArray",
      "test": null,
      "appName": "smsapi",
      "arguments": "(numbers)",
      "appVersion": 1
    },
    "parseDatesInWebhook": {
      "rev": 2,
      "code": "function parseDatesInWebhook(body) {\n\tif(!body) return;\n  let newObj = body;\n  if (body.donedate) {\n    newObj.donedate = iml.parseDate(body.donedate, 'X');\n  }\n  if (body.sent_at) {\n    newObj.sent_at = iml.parseDate(body.sent_at, 'X');\n  }\n  if (body.click_date) {\n    newObj.click_date = iml.parseDate(body.click_date, 'X');\n  }\n  return newObj;\n}\n",
      "name": "parseDatesInWebhook",
      "test": null,
      "appName": "smsapi",
      "arguments": "(body)",
      "appVersion": 1
    },
    "createCallbackInterface": {
      "rev": 2,
      "code": "function createCallbackInterface(callbackType) {\n  switch (callbackType) {\n    case 'sms':\n      return [\n        {\n          name: 'MsgId',\n          type: 'text',\n          label: 'Message ID'\n        },\n        {\n          name: 'to',\n          type: 'text',\n          label: 'To'\n        },\n        {\n          name: 'from',\n          type: 'text',\n          label: 'From'\n        },\n        {\n          name: 'donedate',\n          type: 'text',\n          label: 'Done Date'\n        },\n        {\n          name: 'sent_at',\n          type: 'text',\n          label: 'Sent at'\n        },\n        {\n          name: 'status',\n          type: 'text',\n          label: 'Status'\n        },\n        {\n          name: 'status_name',\n          type: 'text',\n          label: 'Status Name'\n        },\n        {\n          name: 'idx',\n          type: 'text',\n          label: 'IDX'\n        },\n        {\n          name: 'username',\n          type: 'text',\n          label: 'Username'\n        },\n        {\n          name: 'points',\n          type: 'text',\n          label: 'Points'\n        },\n        {\n          name: 'mcc',\n          type: 'text',\n          label: 'MCC'\n        },\n        {\n          name: 'mnc',\n          type: 'text',\n          label: 'MNC'\n        }\n      ];\n\n    case 'bulk':\n      return [\n        {\n          name: 'type',\n          type: 'text',\n          label: 'Type'\n        },\n        {\n          name: 'to',\n          type: 'text',\n          label: 'To'\n        },\n        {\n          name: 'all',\n          type: 'text',\n          label: 'All'\n        },\n        {\n          name: 'points',\n          type: 'text',\n          label: 'Points'\n        },\n        {\n          name: 'text',\n          type: 'text',\n          label: 'Text'\n        }\n      ];\n\n    case 'cut.li':\n      return [\n        {\n          name: 'MsgId',\n          type: 'text',\n          label: 'Message ID'\n        },\n        {\n          name: 'to',\n          type: 'text',\n          label: 'To'\n        },\n        {\n          name: 'click_date',\n          type: 'text',\n          label: 'Click Date'\n        },\n        {\n          name: 'device',\n          type: 'text',\n          label: 'Device'\n        },\n        {\n          name: 'operating_system',\n          type: 'text',\n          label: 'Operating System'\n        },\n        {\n          name: 'browser',\n          type: 'text',\n          label: 'Browser'\n        },\n        {\n          name: 'username',\n          type: 'text',\n          label: 'Username'\n        },\n        {\n          name: 'ip',\n          type: 'text',\n          label: 'IP'\n        }\n      ];\n    default:\n      return null;\n  }\n}\n",
      "name": "createCallbackInterface",
      "test": null,
      "appName": "smsapi",
      "arguments": "(callbackType)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-09-23T10:31:42.865463+00:00",
  "categories": [],
  "opensource": false,
  "description": "Integration for SMSAPI.",
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "36c6e6cf489e204f2a97fd5ac68ea6c2",
  "versionFull": "1.3.5",
  "compiledName": "smsapi",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": null,
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": null
}
