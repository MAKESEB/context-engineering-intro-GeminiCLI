{
  "rev": 14,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization"
      ]
    },
    "baseUrl": "https://{{connection.subdomain}}.service-now.com/api",
    "headers": {
      "authorization": "{{if(connection.accessToken, 'Bearer ' + connection.accessToken, 'Basic ' + base64(connection.username + ':' + connection.password))}}"
    },
    "response": {
      "error": {
        "200": {
          "message": "{{throwErrorForHibernation(body)}}"
        },
        "message": "[{{statusCode}}] {{body.error.message + if(body.error.detail, ': ' + body.error.detail, '')}}"
      },
      "valid": "{{checkValid(body)}}"
    }
  },
  "beta": false,
  "docs": null,
  "name": "servicenow",
  "_rpcs": {
    "listUsers": {
      "api": {
        "qs": {
          "sysparm_limit": 500,
          "sysparm_query": "ORDERBYDESCsys_updated_on",
          "sysparm_offset": 0
        },
        "url": "/now/table/sys_user",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.name + if(item.email, ' <' + item.email + '>', '')}}",
            "value": "{{item.sys_id}}"
          },
          "iterate": "{{body.result}}"
        }
      },
      "rev": 2,
      "name": "listUsers",
      "label": "List Users",
      "appName": "servicenow",
      "apiJsonc": "{\n    \"url\": \"/now/table/sys_user\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"sysparm_limit\": 500,\n        \"sysparm_offset\": 0,\n        \"sysparm_query\": \"ORDERBYDESCsys_updated_on\"\n    },\n    \"response\": {\n        \"iterate\": \"{{body.result}}\",\n        \"output\": {\n            \"label\": \"{{item.name + if(item.email, ' <' + item.email + '>', '')}}\",\n            \"value\": \"{{item.sys_id}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "servicenow",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listTables": {
      "api": {
        "qs": {
          "create_access": "true",
          "sysparm_fields": "label,name"
        },
        "url": "/now/table/sys_db_object",
        "method": "GET",
        "response": {
          "limit": 5000,
          "output": {
            "label": "{{item.label}}",
            "value": "{{item.name}}"
          },
          "iterate": {
            "condition": "{{item.name !== 'draft_document'}}",
            "container": "{{body.result}}"
          }
        }
      },
      "rev": 3,
      "name": "listTables",
      "label": "List Tables",
      "appName": "servicenow",
      "apiJsonc": "{\n    \"url\": \"/now/table/sys_db_object\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"sysparm_fields\": \"label,name\",\n        \"create_access\": \"true\"\n    },\n    \"response\": {\n        \"iterate\": {\n            \"container\": \"{{body.result}}\",\n            \"condition\": \"{{item.name !== 'draft_document'}}\"\n        },\n        \"output\": {\n            \"label\": \"{{item.label}}\",\n            \"value\": \"{{item.name}}\"\n        },\n        \"limit\": 5000\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "servicenow",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listRecords": {
      "api": {
        "qs": {
          "sysparm_limit": 500,
          "sysparm_query": "ORDERBYDESCsys_updated_on",
          "sysparm_offset": 0
        },
        "url": "/now/table/{{parameters.table}}",
        "method": "GET",
        "response": {
          "output": {
            "label": "Record ID: {{item.sys_id}} (Last updated at {{item.sys_updated_on}})",
            "value": "{{item.sys_id}}"
          },
          "iterate": "{{body.result}}"
        }
      },
      "rev": 2,
      "name": "listRecords",
      "label": "List Records",
      "appName": "servicenow",
      "apiJsonc": "{\n    \"url\": \"/now/table/{{parameters.table}}\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"sysparm_limit\": 500,\n        \"sysparm_offset\": 0,\n        \"sysparm_query\": \"ORDERBYDESCsys_updated_on\"\n    },\n    \"response\": {\n        \"iterate\": \"{{body.result}}\",\n        \"output\": {\n            \"label\": \"Record ID: {{item.sys_id}} (Last updated at {{item.sys_updated_on}})\",\n            \"value\": \"{{item.sys_id}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "servicenow",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listTableFields": {
      "api": {
        "url": "/now/doc/table/schema/{{parameters.table}}",
        "method": "GET",
        "response": {
          "output": "{{tableFields(body.result, parameters.interface)}}"
        }
      },
      "rev": 2,
      "name": "listTableFields",
      "label": "List Table Fields",
      "appName": "servicenow",
      "apiJsonc": "{\n    \"url\": \"/now/doc/table/schema/{{parameters.table}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": \"{{tableFields(body.result, parameters.interface)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "interface",
          "type": "boolean",
          "label": "Interface",
          "default": false
        }
      ],
      "accountName": "servicenow",
      "altAccountName": null,
      "parametersJsonc": "[\r\n    {\r\n        \"name\": \"interface\",\r\n        \"label\": \"Interface\",\r\n        \"type\": \"boolean\",\r\n        \"default\": false\r\n    }\r\n]"
    },
    "listIncidentTickets": {
      "api": {
        "qs": {
          "sysparm_limit": 500,
          "sysparm_query": "ORDERBYDESCsys_updated_on",
          "sysparm_offset": 0
        },
        "url": "/now/table/incident",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.number + if(item.short_description, ': ' + item.short_description, '')}}",
            "value": "{{item.sys_id}}"
          },
          "iterate": "{{body.result}}"
        }
      },
      "rev": 2,
      "name": "listIncidentTickets",
      "label": "List Incident Tickets",
      "appName": "servicenow",
      "apiJsonc": "{\n    \"url\": \"/now/table/incident\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"sysparm_limit\": 500,\n        \"sysparm_offset\": 0,\n        \"sysparm_query\": \"ORDERBYDESCsys_updated_on\"\n    },\n    \"response\": {\n        \"iterate\": \"{{body.result}}\",\n        \"output\": {\n            \"label\": \"{{item.number + if(item.short_description, ': ' + item.short_description, '')}}\",\n            \"value\": \"{{item.sys_id}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "servicenow",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listTableFieldsForFilters": {
      "api": {
        "url": "/now/doc/table/schema/{{parameters.table}}",
        "method": "GET",
        "response": {
          "output": "{{filterResponse(body.result, parameters.trigger)}}"
        }
      },
      "rev": 2,
      "name": "listTableFieldsForFilters",
      "label": "List Table Fields For Filters",
      "appName": "servicenow",
      "apiJsonc": "{\n    \"url\": \"/now/doc/table/schema/{{parameters.table}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": \"{{filterResponse(body.result, parameters.trigger)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "trigger",
          "type": "boolean",
          "label": "Trigger",
          "default": false
        }
      ],
      "accountName": "servicenow",
      "altAccountName": null,
      "parametersJsonc": "[\r\n    {\r\n        \"name\": \"trigger\",\r\n        \"label\": \"Trigger\",\r\n        \"type\": \"boolean\",\r\n        \"default\": false\r\n    }\r\n]"
    }
  },
  "flags": {},
  "label": "ServiceNow",
  "theme": "#81b4a1",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Record",
      "modules": [
        "watchRecords",
        "listRecords",
        "getARecords",
        "createARecords",
        "updateARecords",
        "deleteARecord"
      ]
    },
    {
      "label": "Incident (Ticket)",
      "modules": [
        "createAnIncident",
        "assignAnIncidentTicket"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "makeApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af40000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000002334944415458c3ed94cb4b555114c67f470a297b69d6259328c8b2222a4870624410f40fd4b841d4a441d1c851f3a0c888860d6c100dca4713351a1524bd885e28a1a5485dc5bae6a37cf66bd0ba7526d2d0c9f96073d65e7bedbdbff5edb50e64c8902143862546a2d601a5c00050056c010ac04be01b409224a800cb819d400d90001f801e600ea80572c020f031ce5f01ec03e681d7c06cf877009b8061d477ea84fa4a2df807d3ea4375bf4a8ccdea0d35af2ec4c8abd7d49c7a5e9d51efa8a5b1e7a83aaa0ea975e15ba33e5027d5b3a8fd71e99cfa426d5507c2d7a1ae56d7a977c337af7e4911312e6d503fab23ea81b8ecbaff70317c47e2f25e757b9ac04db5524dd463a1c6b85aaf9e0c82d3ea25b556ddad36a9b3314ea9cd7156a35aadf6a40874ab15ead59837a9a4099c49c9bd3e9ee4977a42bd1d315da14831ae5c7d146bcdeaf120f3583d17a48baa4caaa7534f7e58a56491e29c0366c25e096c0cbb0f9848c51580deb02b8127516c07810bc032e016d00294018d51c4ddc0736051027fbb2488e4635e03ac4dad57c481453243407b7455353006dc035a819fc0d638b30598fc1f8124be334067b4d221e032d010f615a03e14eb8cf8766038ec67c01be029f0367c9f808e627b9700e3c0f794e40086d463c04264d116311ba2e777853d1d19b5c5def74057ec6f017e005f83d814703ff59f2051f7846483c068f84b42ee32a03f88e4806d91d154c4ad02f6466d8ca412a88af8be4810a03cf60f156393242143860c19322c397e03657f2458a5fc2de30000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000005204944415478daed985b88565514c77fe7d3a15171c4b24cadf19217f0f250980d9a886237a5a8c8a8a76808e9ad87824a288aa290287ce851a2871ea2b0ac7434cb40c4d21c0bd3cc6cbccc6899a4e225c7cbcc37ff1ef63acefaf69cf9f03250d0fec1e19cb3f7da97f5df7bad7dbe0f128944229148241289442291482412894422f1ff21ab5629c9db0920cb32ae04d71757d34f9f0b20e91ea0de1c2c013b816dc074600e703350039c067e0436006d80aa39610e978031c04c601a30d4aa4f013b808dc001a0cb359d04cccee707fc0dac064ef9f1acff21c0426090d9fe09ac013a0a6c47017703fdadf802b01e49ab55c95a49ef493aae9e7448fa45d26249b5f1aae683d93546d252492d923a0bfaeab4ba5725dde4dacd9474ccd99d91747f5e1f8df180a47667fbbba4697e5ecef6b968fc1d92c67a01baecea905476eff1251bf41549d7f432d83c49cdcebe1a6549df4a9a6d6d0748fadccd4992964b2a450294acdccf5de6682cd610491ba23edf92449100b1b3bd959f91f484733abfe64ada7b098ec7b4489a637d3c690b918fb54fd284c8a9096e1c3faf6f24d545b677493ae5c63a2e69563501cab645de91f48ca467253549ba100db645d20dcef9d15626d7677e3f2de980a436132f9eb8246d923442212476399bb2a4a723a117abe74e95a4134e48246592de8de6d32469606f0274286cadd1d18043ad3c0e85fb9ccd6b052bdb2ee90349f3258d93748ba4059256483a5f20d412ebebeda86e8da441ea0e9355050b97db2e8d1665b7b3ed94f4545e1f0b20495b250d5794e0acc114498722fb177b1948e6e0cb36e13854ea242d537782ccdb6cb7f167a932111f534890489a21e9af2a026c9774a3d936aa329c7e5548d0e4c754cc093ba68a3808b4466523ecde008c73c717c03a60197036cb32fc6563bc096c8efa9b08dc0e3403dfe5fa03d7da9107b0001866e500e7810e673bd18ede1ae04177f401acf53e1409508d73c0d1a8acc6eed3dc334019f8b88a98004780959168b5c05473ea53eb27e75e608add71ed56015ba23e169a900dceeea4f579717b7b652e85ae684200fdacf3510562b542f1575f9665f951b5d36c6b5df560bb7f05b4103e8e64f7e781c9cea9b3c0fbc004e04ed7c75c6020dd3b2533919afd9c2e57806ae80adb950bdae68ab512b6ec247b1f083c6ea2e74efd4c089503c06160a4d58d8e16a50c7c42f8b2bcc8e5864035e7dba2b25a602cf4fc1d10954d050644d527ddf34a7bcf45e917d93601c7813d844f6b2f628d7bde4fd851153bb2af0480f06d7fc1bdf7031e03aeabd26624f068547696101639db80ef23c7f2fb31c2b73f8424f8593407cf972642057d29c056605f54361f7803b83e3e0609a7c7ebc08ca8cd1ee007f77e9ab075cb05636e067e72ef1b0939c3279d8c9088575210a67d9903da808f8097a8dcae8d84a4b5c2042a1112d622e0362a1741d6c761a84894eb08ab37de395106be00da5dfb43663b994a9ab15d1427e42201aee687fa72c24fce0657d6df1c1d664e9408b9a19e9ef1bc8990d1e389ee276ce1f16e8eadc0fa48284c9446a0cec4ea22ac7ee1715c22c44e272176caf41e43391dceae6c6d730e024b80bdf67e06f810780898073c023c6ccf8b08317bce6c77032f007f148c2942181c75f3fd1a17d34eb06d8470ecb4ab857092141fc792a603c3e93e568e1062b0abe04f850cb89510bfb97d2b95490bc29f29f380df6ce5dafd04dc6a0d267cd5d513b6eef6a2899a7d2d7007e1cf0f01bb88be33a293a5de9e8f9a28e5ffcabf5089442291482412894422914824128944229148fc4bfc03a42535f10d7c7d100000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-02-21T23:56:46.885878+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda79300000c174944415478daed9c79ac55d51587bffb00014104916a5554340e5552e7098dc53a63b5b6c574708c6962d2d1b4894d533ba46d529bd6cea693d1b4261a34d6a17504a9631da805ad86d64a9dc0e20008023ee0bdf7eb1f6b1fef7ee79dbdcfb957c4f7c7fa929bf7eebde7adbdf6daebecbdd6dafb3c701cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711ce7bda125a907185573dd4640ad560b49003dc07860cff0733c30115801ac0336014b8055c040abd57ad73a10f40118018c01760326853e4d0a9faf0c7d580bfc37e8d80f90d32d92bd55e8b32a2e6b05599beae46564b71272fbc2ab53b97563fab6ce238199c0978322aab8703df07d60a1a4d1c00781b38043810f00e342832382d08160ecc5c0bdc07c490b82f11b77a403036e0b1c029c0e4cc79c72fba0fb88704d7fe8db9bc033c0d3c02dc0639256d7e8351af80670449053a6077819f836f05287baef1a6c3ba5c2f62380bb819f25dacdc93d05f83c69c7ea077e07dc8aa4f324f52acd5a49a74a9a2ee9b7925e9234a0660c485a21e97a49474b6a454a763df0e1b583a48b24cd0d6d74ca4a497786fe4f28e456b4d592f4bd1a59bd92ceae9251d387f325bd9591fb94a4694d6d16648e0df6ceb15cd21192281ca05062a0f492a4f592ae96f474f4d94007af8225922e9634ae5b27081d1c25e97449f39477dc1465ddd60683cd0cb2abda3c54d2d24cdf25694e307e37039592d91b9ca4d6b122a73a587693a6c673b0ae350e50bcfa3a1cf45487d6cbeea68e9c4083effa6f497aad66509b3a40ecd0cb83836e131b3cfc3e46d2753583b53418bfe9601d52e35485dc1b9a385664a3af4beacff4b557d239c5f53d0dc7a0eaba4e6f63016381af025f03b66e7ab70476057e057c135be3635aa59f395a15d7b5801db0f5f897c02ea5b67b819bb07828d5c6fb81133be8cf09c04e0df43d02d8b7a18da700a7920e58c1e29ffbc0e29e94035419892054d1359d5238c15780f34a06c9196b2af053e013c0c88cce9d50d5c771c0b9a1ad9d4bdf3d8405b6a97ef560c1d7e4066d4f066685f6630354e9b43316a8276d157d7e3870408d7dfe4214acd6cd0055774aabf47bd52b2747c1d05fc2b2883aa6003f01cea43ba7eb941ee0e3c065c076d1e7cb82f194d1e360e048a81eace8b3c3480fd4a03f09fa9c56d2a58a5158263481f4ddff0a7067b9b39d4ee5c520af03fe053c01cc031e049e02565718a8aa8d7d810b809119638d043e0b9c41bdb3764a3c9b95e9c152dd0b4bedde0e2c4fd804ccf8a7d04e3f53b26761e9ab2a64547130705064972aa601c7d5f4f96fc093d04e7beb8c5a55175886e590e7012761ebde6c6c904e02ce07e69377ace22e3a13cbdb077fd9eee4f1b46b143959715b03d85afd1ab0085bf356016f25745242de68e00bd8b45af05430624e87e3b07825d5a7a9c0876aec5e768649c1b6431b6ecbfd30e60429791bb0dac7bab280aa2ca02a82ec93a55e27481aa974de8ca4dd428ad35f13e16e9274415956783f49d21d0da37a85b69e93f4334927cbf2dca992f6903443d2c724fd41d2cb157dacca120ae6481a1ff52dae9b54f56983a40b137d2244e0555997127a14df2d90b453c2e6e325dd96c928246991a45d87cc2092ce6de8003748da5935694ed4d1dd83c3a4942adab95ad2080d4ebb90f429598ede84b592ae9274802a9c3392395ad251926e973974cea90afd56483a25923155d2c21a63dfa452aaab76ee3f2731c075efd7493a4b435354640efe4a8d4e97a9a210975a02ca6bd303c025d8f49f2de746df3d0ffc3a4c39b9f56d37609bd267db026763c162956eb17eab81ef6241e513405fabd51aa463f47e03f0307011f00b6c59a8ec46a4f376c0a7b17d0680a59402a90a8e04f62f0629625f60468dbd53efb7c682c1f272d8c2628a2999bebc06dc46d8cf89691a582dc406b4512d3fbae661acf69e632fcc096263ed178c58743e35e5f4013fc7eae56bcb035fa557f8fe252ce7bfa361ff8f0b7a16fafc197895b463ef40b4666bf03add24f74f7134b04749e62e98639453ca9847b07868084d1da0db02feaa60a81c13187aa71f473a9f8eefceb9c06f808d5d6c32ad042ec59cbb8e1d81a3a2f74f62758194ad8abbf27dd1e7db6103d54de655b03b706ce9b319c03e195b6d046ec536c286d043b3dcba5b853761dbaf853229e2efb60d9d2cd71bcaac01ae00fed7a95291b32c06aea1bddb969a6d4661862ea6dfb5c09fb02525d5affdb12a5ec12184542e638337482f99c2d2e28fd05e32c760d9d758d263f41f2c2baba4e90cd06d01a68ffa2dd21683f7ae27d29e6e73fc13780cbadb628efe665e031d010e647031e601d2cb9bb099ed0c6cd05a58897662c60603c0ef8b3e653882105f6077fe31199960b3e4f3293b6deee24a15bde467901ecc830b26d20eb872dc850537ef9467b1e011d2b30dd8321507602f6281558e63b1697b27da459a942d9601d761d5c6818c1e5368c7172711f62d12acc072ff81d4055bc2019a2c1fb11e7b91be53625e87cd72c0e42d4275ac8651845825b429cc0172c1e0342cf03b96f43a5df028ed43342f27ae29e28b13b18c6216f998e251e01f393b6d0907e894b1a4377c0a0668784aa6214d6692110c3d66b510cb74aa50b8fe5caca49c5aa75bd82c790b16532cc696971cfb019fc34e679190b931c85c9313341c1de0bda0c92cd562a863aec3a6ec8da403b719d82c906be359da83de8bed39f466644ec2f6482666e43e8badffd95972383ac06aec4ec8519c41dc5c8c6b704d3f362865e693af75e4e28a827b191c883e880d608e313572e762714a96e1e800cf60e9501dbb60a79adf697b63b014ad8e8d44b974a9e27977f171876d17a95f11f815bc48b87bbba085d55f6ea5c132391c1d603ded3b2d57059c894d855d1139ce6e588a57c76acc09ca0c60c65e51f15dabf47b95832c0416c020a71ac0b29c37e82e057f3cc8ad0d9287a303bc4e3b2dcb311d3b56d5e8246e86d984f26a0d8b280d7264dc85c0df137f973b24236cf65859217301d555cadc019c16567cbb119b056a198e0eb03e743ece85ab467802b65f3f0d3a7382e8da03b1730d75f1c446ac9ede97f87e0d703366fcf2e92732ef9703f740e59dba12dbab18e850e6f3c05f133287301c1d00ecd0e28a06d71d035c4e3880d1c409a26bf6007e40b3aae372cc01861019f96eea03b732f763874c5232e7d179a9bb233d86ab032ca67df2261745b7808f62a785f78646874c7bb0a0ef0ae0649aadb1771122fdcc5df5023660c9e64b7af762bb8a6f65fee6dfa4379daa64be8105948d6b24c3d501d600d7121e276bd087d38039c017813d151ef028bd466371c3a5e1daa683bf0ab881ea0030a61f0b0657919fb20b96901f5cb0e5f036866e3aa5642e20cc544d2ba47515b72d4ef400ea5c6c29382dea74aa573dd87afe63ec99b847b060f2552ccd9b8cd5d08fc2cee4755243984b8d51239d1fc736734e6e20773e21f7af921bc9bc1fdbd19b9e331be680b7d32c857e9b61e70011ab801f62035b9cd1cf3901d866cd3eb4ebeeefe41906b0adec1f91d84b4fe87c3376987564d47e79aa5e4df3a9fa45cc59ca0e509e055ea05d8f68ccb07480c8fb1fc6d6f7ef60a774eba2bcd5d8d9f765d891f53731836f8b6da1ee889dd619df408df5d85342d9cd940a9de7638eb377e6f245d86cd164aa1ec0b281f3197a943ce61e6ca6e86883acce0136c783185dc90806ed03aec40e52cc26fd88da522c00bb11dbd95b8bc511c51d3632186f02f658fb6cac3e3f39a15f1f7650e42a3affff064bb0a0716faa9ffc51f8be36cb899cea31ac26303321334e433ba3742a38c5e5eaf0d1ee28f8ba58d5c79ee313bdb3547fccfc66b51f7a2c5823e91a49874bda4acd4f2c6f2de9f8703ab8fc84f10649d72a1cc1eeb2cf2728fdc8fa0b920e6a2a3792794945ff0bee93b47d3705b196a4e9d8031aa9ff28216c5abb1fbafa0f1887d13eb458c506ec20c47355f24b871f2fc21e7f1a8be5c757629edfd13f9f88644e013e097c069b0dd662d9c71f095bc49d9e3708b2c703e7604b4ef96e5d025c0f6ce850df69d8d34a632b2e7988908276aaef9678d66eb3a0f6a36293c3cff5847267b7874282cc1676d46b2c96eaad00fadfcd7f6be3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388ee3388e03ff0774ac52fe1ede81cc0000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": "https://ipme.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "getARecords": {
      "id": 4037,
      "api": {
        "qs": {
          "sysparm_display_value": "{{parameters.sysparm_display_value}}"
        },
        "url": "/now/table/{{parameters.table}}/{{parameters.record}}",
        "method": "GET",
        "response": {
          "output": "{{generalResponse(body.result, parameters)}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "getARecords",
      "epoch": null,
      "flags": {},
      "label": "Get a Record",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "table",
          "type": "select",
          "label": "Table",
          "options": {
            "store": "rpc://app%23servicenow@1/listTables",
            "nested": [
              {
                "name": "record",
                "type": "select",
                "label": "Record ID",
                "options": "rpc://app%23servicenow@1/listRecords",
                "required": true
              }
            ]
          },
          "required": true
        },
        {
          "help": "Returns values the way they are displayed in Servicenow UI. If set to `false / No` the raw values from database will be returned. Read more in [Table API FAQs](https://support.servicenow.com/kb?id=kb_article_view&sysparm_article=KB0534905).",
          "name": "sysparm_display_value",
          "type": "boolean",
          "label": "Return 'Display Values'",
          "default": false
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/now/table/{{parameters.table}}/{{parameters.record}}\",\n    \"method\": \"GET\",\n    \"qs\":{\n        \"sysparm_display_value\": \"{{parameters.sysparm_display_value}}\"\n    },\n    \"response\": {\n        \"output\": \"{{generalResponse(body.result, parameters)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://listTableFields?interface=true",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Gets a specified record.",
      "expectJsonc": "[\n    {\n        \"name\": \"table\",\n        \"label\": \"Table\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"options\": {\n            \"store\": \"rpc://listTables\",\n            \"nested\": [\n                {\n                    \"name\": \"record\",\n                    \"label\": \"Record ID\",\n                    \"type\": \"select\",\n                    \"required\": true,\n                    \"options\": \"rpc://listRecords\"\n                }\n            ]\n        }\n    },\n    {\n        \"help\": \"Returns values the way they are displayed in Servicenow UI. If set to `false / No` the raw values from database will be returned. Read more in [Table API FAQs](https://support.servicenow.com/kb?id=kb_article_view&sysparm_article=KB0534905).\",\n        \"name\": \"sysparm_display_value\",\n        \"type\": \"boolean\",\n        \"default\": false,\n        \"label\": \"Return 'Display Values'\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "\"rpc://listTableFields?interface=true\"",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listRecords": {
      "id": 4038,
      "api": {
        "qs": {
          "sysparm_limit": 500,
          "sysparm_query": "{{filter(parameters.filter, parameters.order)}}",
          "sysparm_offset": 0,
          "sysparm_display_value": "{{parameters.sysparm_display_value}}"
        },
        "url": "/now/table/{{parameters.table}}",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{generalResponse(item, parameters)}}",
          "iterate": "{{body.result}}"
        },
        "pagination": {
          "qs": {
            "sysparm_offset": "{{(pagination.page - 1) * 500}}"
          }
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "listRecords",
      "epoch": null,
      "flags": {},
      "label": "Search Records",
      "scope": [],
      "expect": [
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "options": {
            "store": "rpc://app%23servicenow@1/listTables",
            "nested": [
              {
                "name": "filter",
                "type": "filter",
                "label": "Filter",
                "options": {
                  "store": "rpc://app%23servicenow@1/listTableFieldsForFilters",
                  "operators": [
                    {
                      "label": "Available Operators",
                      "options": [
                        {
                          "label": "Equals",
                          "value": "="
                        },
                        {
                          "label": "Not equal",
                          "value": "!="
                        },
                        {
                          "label": "Contains",
                          "value": "LIKE"
                        },
                        {
                          "label": "Starts with",
                          "value": "STARTSWITH"
                        },
                        {
                          "label": "Ends with",
                          "value": "ENDSWITH"
                        },
                        {
                          "label": "Less then",
                          "value": "<"
                        },
                        {
                          "label": "Greater then",
                          "value": ">"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "required": true
        },
        {
          "name": "order",
          "type": "select",
          "label": "Order",
          "options": [
            {
              "label": "Created time - Ascending",
              "value": "ORDERBYsys_created_on"
            },
            {
              "label": "Created time - Descending",
              "value": "ORDERBYDESCsys_created_on"
            },
            {
              "label": "Updated time - Ascending",
              "value": "ORDERBYsys_updated_on"
            },
            {
              "label": "Updated time - Descending",
              "value": "ORDERBYDESCsys_updated_on"
            }
          ]
        },
        {
          "help": "Returns values the way they are displayed in Servicenow UI. If set to `false / No` the raw values from database will be returned. Read more in [Table API FAQs](https://support.servicenow.com/kb?id=kb_article_view&sysparm_article=KB0534905).",
          "name": "sysparm_display_value",
          "type": "boolean",
          "label": "Return 'Display Values'",
          "default": false
        },
        {
          "help": "Maximum number of results",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/now/table/{{parameters.table}}\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"sysparm_query\": \"{{filter(parameters.filter, parameters.order)}}\",\n        \"sysparm_limit\": 500,\n        \"sysparm_offset\": 0,\n        \"sysparm_display_value\": \"{{parameters.sysparm_display_value}}\"\n    },\n    \"response\": {\n        \"output\": \"{{generalResponse(item, parameters)}}\",\n        \"iterate\": \"{{body.result}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"sysparm_offset\": \"{{(pagination.page - 1) * 500}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://listTableFields?interface=true",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Searches for records by a filter parameter.",
      "expectJsonc": "[\n    {\n        \"name\": \"table\",\n        \"label\": \"Table\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://listTables\",\n            \"nested\": [\n                {\n                    \"name\": \"filter\",\n                    \"label\": \"Filter\",\n                    \"type\": \"filter\",\n                    \"options\": {\n                        \"store\": \"rpc://listTableFieldsForFilters\",\n                        \"operators\": [\n                            {\n                                \"label\": \"Available Operators\",\n                                \"options\": [\n                                    {\n                                        \"label\": \"Equals\",\n                                        \"value\": \"=\"\n                                    },\n                                    {\n                                        \"label\": \"Not equal\",\n                                        \"value\": \"!=\"\n                                    },\n                                    {\n                                        \"label\": \"Contains\",\n                                        \"value\": \"LIKE\"\n                                    },\n                                    {\n                                        \"label\": \"Starts with\",\n                                        \"value\": \"STARTSWITH\"\n                                    },\n                                    {\n                                        \"label\": \"Ends with\",\n                                        \"value\": \"ENDSWITH\"\n                                    },\n                                    {\n                                        \"label\": \"Less then\",\n                                        \"value\": \"<\"\n                                    },\n                                    {\n                                        \"label\": \"Greater then\",\n                                        \"value\": \">\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    },\n    {\n        \"name\": \"order\",\n        \"label\": \"Order\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Created time - Ascending\",\n                \"value\": \"ORDERBYsys_created_on\"\n            },\n            {\n                \"label\": \"Created time - Descending\",\n                \"value\": \"ORDERBYDESCsys_created_on\"\n            },\n            {\n                \"label\": \"Updated time - Ascending\",\n                \"value\": \"ORDERBYsys_updated_on\"\n            },\n            {\n                \"label\": \"Updated time - Descending\",\n                \"value\": \"ORDERBYDESCsys_updated_on\"\n            }\n        ]\n    },\n    {\n        \"help\": \"Returns values the way they are displayed in Servicenow UI. If set to `false / No` the raw values from database will be returned. Read more in [Table API FAQs](https://support.servicenow.com/kb?id=kb_article_view&sysparm_article=KB0534905).\",\n        \"name\": \"sysparm_display_value\",\n        \"type\": \"boolean\",\n        \"default\": false,\n        \"label\": \"Return 'Display Values'\"\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"default\": 10,\n        \"help\": \"Maximum number of results\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "\"rpc://listTableFields?interface=true\"",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeApiCall": {
      "id": 4039,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://{{connection.subdomain}}.service-now.com/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 3,
      "crud": null,
      "name": "makeApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to`https://[subdomain].service-now.com`.\ne.g.`/api/now/table/[table_name]`",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://{{connection.subdomain}}.service-now.com/{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to`https://[subdomain].service-now.com`.\\ne.g.`/api/now/table/[table_name]`\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n        \"default\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchRecords": {
      "id": 4040,
      "api": {
        "qs": {
          "sysparm_limit": 500,
          "sysparm_query": "{{filter(parameters.filter, switch(parameters.select, 'create', 'ORDERBYDESCsys_created_on', 'update', 'ORDERBYDESCsys_updated_on'))}}",
          "sysparm_offset": 0,
          "sysparm_display_value": "{{parameters.sysparm_display_value}}"
        },
        "url": "/now/table/{{parameters.table}}",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{generalResponse(item, parameters)}}",
          "iterate": "{{body.result}}",
          "trigger": {
            "id": "{{item.sys_id}}",
            "date": "{{switch(parameters.select, 'create', item.sys_created_on, 'update', item.sys_updated_on)}}",
            "type": "date",
            "order": "desc"
          }
        },
        "pagination": {
          "qs": {
            "sysparm_offset": "{{(pagination.page - 1) * 500}}"
          }
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "watchRecords",
      "epoch": {
        "response": {
          "limit": 500,
          "output": {
            "date": "{{switch(parameters.select, 'create', item.sys_created_on, 'update', item.sys_updated_on)}}",
            "label": "{{item.sys_id}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Records",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/now/table/{{parameters.table}}\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"sysparm_query\": \"{{filter(parameters.filter, switch(parameters.select, 'create', 'ORDERBYDESCsys_created_on', 'update', 'ORDERBYDESCsys_updated_on'))}}\",\n        \"sysparm_limit\": 500,\n        \"sysparm_offset\": 0,\n        \"sysparm_display_value\": \"{{parameters.sysparm_display_value}}\"\n    },\n    \"response\": {\n        \"iterate\": \"{{body.result}}\",\n        \"trigger\": {\n            \"id\": \"{{item.sys_id}}\",\n            \"date\": \"{{switch(parameters.select, 'create', item.sys_created_on, 'update', item.sys_updated_on)}}\",\n            \"type\": \"date\",\n            \"order\": \"desc\"\n        },\n        \"output\": \"{{generalResponse(item, parameters)}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"sysparm_offset\": \"{{(pagination.page - 1) * 500}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://listTableFields?interface=true",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 500,\n        \"output\": {\n            \"date\": \"{{switch(parameters.select, 'create', item.sys_created_on, 'update', item.sys_updated_on)}}\",\n            \"label\": \"{{item.sys_id}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "name": "select",
          "type": "select",
          "label": "Watch Records",
          "options": [
            {
              "label": "By created time",
              "value": "create",
              "default": true
            },
            {
              "label": "By updated time",
              "value": "update"
            }
          ],
          "mappable": false,
          "required": true
        },
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "options": {
            "store": "rpc://app%23servicenow@1/listTables",
            "nested": [
              {
                "name": "filter",
                "type": "filter",
                "label": "Filter",
                "options": {
                  "store": "rpc://app%23servicenow@1/listTableFieldsForFilters?trigger=true",
                  "operators": [
                    {
                      "label": "Available Operators",
                      "options": [
                        {
                          "label": "Equals",
                          "value": "="
                        },
                        {
                          "label": "Not equal",
                          "value": "!="
                        },
                        {
                          "label": "Contains",
                          "value": "LIKE"
                        },
                        {
                          "label": "Starts with",
                          "value": "STARTSWITH"
                        },
                        {
                          "label": "Ends with",
                          "value": "ENDSWITH"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "required": true
        },
        {
          "help": "Returns values the way they are displayed in Servicenow UI. If set to `false / No` the raw values from database will be returned. Read more in [Table API FAQs](https://support.servicenow.com/kb?id=kb_article_view&sysparm_article=KB0534905).",
          "name": "sysparm_display_value",
          "type": "boolean",
          "label": "Return 'Display Values'",
          "default": false,
          "required": true
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Triggers when a record is created or updated.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "\"rpc://listTableFields?interface=true\"",
      "parametersJsonc": "[\n    {\n        \"name\": \"select\",\n        \"label\": \"Watch Records\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"By created time\",\n                \"value\": \"create\",\n                \"default\": true\n            },\n            {\n                \"label\": \"By updated time\",\n                \"value\": \"update\"\n            }\n        ]\n    },\n    {\n        \"name\": \"table\",\n        \"label\": \"Table\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://listTables\",\n            \"nested\": [\n                {\n                    \"name\": \"filter\",\n                    \"label\": \"Filter\",\n                    \"type\": \"filter\",\n                    \"options\": {\n                        \"store\": \"rpc://listTableFieldsForFilters?trigger=true\",\n                        \"operators\": [\n                            {\n                                \"label\": \"Available Operators\",\n                                \"options\": [\n                                    {\n                                        \"label\": \"Equals\",\n                                        \"value\": \"=\"\n                                    },\n                                    {\n                                        \"label\": \"Not equal\",\n                                        \"value\": \"!=\"\n                                    },\n                                    {\n                                        \"label\": \"Contains\",\n                                        \"value\": \"LIKE\"\n                                    },\n                                    {\n                                        \"label\": \"Starts with\",\n                                        \"value\": \"STARTSWITH\"\n                                    },\n                                    {\n                                        \"label\": \"Ends with\",\n                                        \"value\": \"ENDSWITH\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    },\n    {\n        \"help\": \"Returns values the way they are displayed in Servicenow UI. If set to `false / No` the raw values from database will be returned. Read more in [Table API FAQs](https://support.servicenow.com/kb?id=kb_article_view&sysparm_article=KB0534905).\",\n        \"name\": \"sysparm_display_value\",\n        \"type\": \"boolean\",\n        \"default\": false,\n        \"label\": \"Return 'Display Values'\",\n        \"required\": true\n    },\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteARecord": {
      "id": 4041,
      "api": {
        "url": "/now/table/{{parameters.table}}/{{parameters.record}}",
        "method": "DELETE",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "delete",
      "name": "deleteARecord",
      "epoch": null,
      "flags": {},
      "label": "Delete a Record",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "table",
          "type": "select",
          "label": "Table",
          "options": {
            "store": "rpc://listTables",
            "nested": [
              {
                "name": "record",
                "type": "select",
                "label": "Record ID",
                "options": "rpc://listRecords",
                "required": true
              }
            ]
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/now/table/{{parameters.table}}/{{parameters.record}}\",\n    \"method\": \"DELETE\",\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Deletes a record.",
      "expectJsonc": "[\n    {\n        \"name\": \"table\",\n        \"label\": \"Table\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"options\": {\n            \"store\": \"rpc://listTables\",\n            \"nested\": [\n                {\n                    \"name\": \"record\",\n                    \"label\": \"Record ID\",\n                    \"type\": \"select\",\n                    \"required\": true,\n                    \"options\": \"rpc://listRecords\"\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createARecords": {
      "id": 4042,
      "api": {
        "url": "/now/table/{{parameters.table}}",
        "body": "{{fieldsRequest(parameters.fields)}}",
        "method": "POST",
        "response": {
          "output": "{{generalResponse(body.result)}}"
        }
      },
      "rev": 3,
      "crud": "create",
      "name": "createARecords",
      "epoch": null,
      "flags": {},
      "label": "Create a Record",
      "scope": [],
      "expect": [
        {
          "name": "select",
          "type": "select",
          "label": "Create a Records",
          "options": [
            {
              "label": "Enter manually",
              "value": "map",
              "nested": [
                {
                  "name": "table",
                  "type": "text",
                  "label": "Table",
                  "required": true
                },
                {
                  "name": "fields",
                  "spec": [
                    {
                      "name": "key",
                      "type": "text",
                      "label": "Key",
                      "required": true
                    },
                    {
                      "name": "type",
                      "type": "select",
                      "label": "Type",
                      "options": [
                        {
                          "label": "Text",
                          "value": "text",
                          "nested": [
                            {
                              "name": "value",
                              "type": "text",
                              "label": "Value",
                              "required": true
                            }
                          ],
                          "default": true
                        },
                        {
                          "label": "Number",
                          "value": "number",
                          "nested": [
                            {
                              "name": "value",
                              "type": "number",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        },
                        {
                          "label": "Boolean",
                          "value": "boolean",
                          "nested": [
                            {
                              "name": "value",
                              "type": "boolean",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        },
                        {
                          "label": "Date",
                          "value": "date",
                          "nested": [
                            {
                              "name": "value",
                              "type": "date",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        }
                      ],
                      "required": true
                    }
                  ],
                  "type": "array",
                  "label": "Fields",
                  "required": true
                }
              ]
            },
            {
              "label": "Select from the list",
              "value": "list",
              "nested": [
                {
                  "name": "table",
                  "type": "select",
                  "label": "Table",
                  "options": {
                    "store": "rpc://listTables",
                    "nested": [
                      "rpc://listTableFields"
                    ]
                  },
                  "mappable": false,
                  "required": true
                }
              ],
              "default": true
            }
          ],
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/now/table/{{parameters.table}}\",\n    \"method\": \"POST\",\n    \"body\": \"{{fieldsRequest(parameters.fields)}}\",\n    \"response\": {\n        \"output\": \"{{generalResponse(body.result)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://listTableFields?interface=true",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Creates a new record.",
      "expectJsonc": "[\r\n    {\r\n        \"name\": \"select\",\r\n        \"label\": \"Create a Records\",\r\n        \"type\": \"select\",\r\n        \"required\": true,\r\n        \"mappable\": false,\r\n        \"options\": [\r\n            {\r\n                \"label\": \"Enter manually\",\r\n                \"value\": \"map\",\r\n                \"nested\": [\r\n                    {\r\n                        \"name\": \"table\",\r\n                        \"label\": \"Table\",\r\n                        \"type\": \"text\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"name\": \"fields\",\r\n                        \"label\": \"Fields\",\r\n                        \"type\": \"array\",\r\n                        \"required\": true,\r\n                        \"spec\": [\r\n                            {\r\n                                \"name\": \"key\",\r\n                                \"label\": \"Key\",\r\n                                \"type\": \"text\",\r\n                                \"required\": true\r\n                            },\r\n                            {\r\n                                \"name\": \"type\",\r\n                                \"label\": \"Type\",\r\n                                \"type\": \"select\",\r\n                                \"required\": true,\r\n                                \"options\": [\r\n                                    {\r\n                                        \"label\": \"Text\",\r\n                                        \"value\": \"text\",\r\n                                        \"default\": true,\r\n                                        \"nested\": [\r\n                                            {\r\n                                                \"name\": \"value\",\r\n                                                \"label\": \"Value\",\r\n                                                \"type\": \"text\",\r\n                                                \"required\": true\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    {\r\n                                        \"label\": \"Number\",\r\n                                        \"value\": \"number\",\r\n                                        \"nested\": [\r\n                                            {\r\n                                                \"name\": \"value\",\r\n                                                \"label\": \"Value\",\r\n                                                \"type\": \"number\",\r\n                                                \"required\": true\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    {\r\n                                        \"label\": \"Boolean\",\r\n                                        \"value\": \"boolean\",\r\n                                        \"nested\": [\r\n                                            {\r\n                                                \"name\": \"value\",\r\n                                                \"label\": \"Value\",\r\n                                                \"type\": \"boolean\",\r\n                                                \"required\": true\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    {\r\n                                        \"label\": \"Date\",\r\n                                        \"value\": \"date\",\r\n                                        \"nested\": [\r\n                                            {\r\n                                                \"name\": \"value\",\r\n                                                \"label\": \"Value\",\r\n                                                \"type\": \"date\",\r\n                                                \"required\": true\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"label\": \"Select from the list\",\r\n                \"value\": \"list\",\r\n                \"default\": true,\r\n                \"nested\": [\r\n                    {\r\n                        \"name\": \"table\",\r\n                        \"label\": \"Table\",\r\n                        \"type\": \"select\",\r\n                        \"required\": true,\r\n                        \"mappable\": false,\r\n                        \"options\": {\r\n                            \"store\": \"rpc://listTables\",\r\n                            \"nested\": [\r\n                                \"rpc://listTableFields\"\r\n                            ]\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "\"rpc://listTableFields?interface=true\"",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateARecords": {
      "id": 4043,
      "api": {
        "url": "/now/table/{{parameters.table}}/{{parameters.record}}",
        "body": "{{fieldsRequest(parameters.fields)}}",
        "method": "PATCH",
        "response": {
          "output": "{{generalResponse(body.result)}}"
        }
      },
      "rev": 3,
      "crud": "update",
      "name": "updateARecords",
      "epoch": null,
      "flags": {},
      "label": "Update a Record",
      "scope": [],
      "expect": [
        {
          "name": "select",
          "type": "select",
          "label": "Create a Records",
          "options": [
            {
              "label": "Enter manually",
              "value": "map",
              "nested": [
                {
                  "name": "table",
                  "type": "text",
                  "label": "Table",
                  "required": true
                },
                {
                  "name": "record",
                  "type": "text",
                  "label": "Record ID",
                  "required": true
                },
                {
                  "name": "fields",
                  "spec": [
                    {
                      "name": "key",
                      "type": "text",
                      "label": "Key",
                      "required": true
                    },
                    {
                      "name": "type",
                      "type": "select",
                      "label": "Type",
                      "options": [
                        {
                          "label": "Text",
                          "value": "text",
                          "nested": [
                            {
                              "name": "value",
                              "type": "text",
                              "label": "Value",
                              "required": true
                            }
                          ],
                          "default": true
                        },
                        {
                          "label": "Number",
                          "value": "number",
                          "nested": [
                            {
                              "name": "value",
                              "type": "number",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        },
                        {
                          "label": "Boolean",
                          "value": "boolean",
                          "nested": [
                            {
                              "name": "value",
                              "type": "boolean",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        },
                        {
                          "label": "Date",
                          "value": "date",
                          "nested": [
                            {
                              "name": "value",
                              "type": "date",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        }
                      ],
                      "required": true
                    }
                  ],
                  "type": "array",
                  "label": "Fields",
                  "required": true
                }
              ]
            },
            {
              "label": "Select from the list",
              "value": "list",
              "nested": [
                {
                  "name": "table",
                  "type": "select",
                  "label": "Table",
                  "options": {
                    "store": "rpc://listTables",
                    "nested": [
                      {
                        "mode": "edit",
                        "name": "record",
                        "type": "select",
                        "label": "Record ID",
                        "options": "rpc://listRecords",
                        "required": true
                      },
                      "rpc://listTableFields"
                    ]
                  },
                  "mappable": false,
                  "required": true
                }
              ],
              "default": true
            }
          ],
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/now/table/{{parameters.table}}/{{parameters.record}}\",\n    \"method\": \"PATCH\",\n    \"body\": \"{{fieldsRequest(parameters.fields)}}\",\n    \"response\": {\n        \"output\": \"{{generalResponse(body.result)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://listTableFields?interface=true",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Updates an existing record.",
      "expectJsonc": "[\n    {\n        \"name\": \"select\",\n        \"label\": \"Create a Records\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"Enter manually\",\n                \"value\": \"map\",\n                \"nested\": [\n                    {\n                        \"name\": \"table\",\n                        \"label\": \"Table\",\n                        \"type\": \"text\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"record\",\n                        \"label\": \"Record ID\",\n                        \"type\": \"text\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"label\": \"Fields\",\n                        \"type\": \"array\",\n                        \"required\": true,\n                        \"spec\": [\n                            {\n                                \"name\": \"key\",\n                                \"label\": \"Key\",\n                                \"type\": \"text\",\n                                \"required\": true\n                            },\n                            {\n                                \"name\": \"type\",\n                                \"label\": \"Type\",\n                                \"type\": \"select\",\n                                \"required\": true,\n                                \"options\": [\n                                    {\n                                        \"label\": \"Text\",\n                                        \"value\": \"text\",\n                                        \"default\": true,\n                                        \"nested\": [\n                                            {\n                                                \"name\": \"value\",\n                                                \"label\": \"Value\",\n                                                \"type\": \"text\",\n                                                \"required\": true\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        \"label\": \"Number\",\n                                        \"value\": \"number\",\n                                        \"nested\": [\n                                            {\n                                                \"name\": \"value\",\n                                                \"label\": \"Value\",\n                                                \"type\": \"number\",\n                                                \"required\": true\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        \"label\": \"Boolean\",\n                                        \"value\": \"boolean\",\n                                        \"nested\": [\n                                            {\n                                                \"name\": \"value\",\n                                                \"label\": \"Value\",\n                                                \"type\": \"boolean\",\n                                                \"required\": true\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        \"label\": \"Date\",\n                                        \"value\": \"date\",\n                                        \"nested\": [\n                                            {\n                                                \"name\": \"value\",\n                                                \"label\": \"Value\",\n                                                \"type\": \"date\",\n                                                \"required\": true\n                                            }\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"label\": \"Select from the list\",\n                \"value\": \"list\",\n                \"default\": true,\n                \"nested\": [\n                    {\n                        \"name\": \"table\",\n                        \"label\": \"Table\",\n                        \"type\": \"select\",\n                        \"required\": true,\n                        \"mappable\": false,\n                        \"options\": {\n                            \"store\": \"rpc://listTables\",\n                            \"nested\": [\n                                {\n                                    \"name\": \"record\",\n                                    \"label\": \"Record ID\",\n                                    \"type\": \"select\",\n                                    \"required\": true,\n                                    \"mode\": \"edit\",\n                                    \"options\": \"rpc://listRecords\"\n                                },\n                                \"rpc://listTableFields\"\n                            ]\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "\"rpc://listTableFields?interface=true\"",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createAnIncident": {
      "id": 4044,
      "api": {
        "url": "/now/table/incident",
        "body": "{{fieldsRequest(parameters.fields)}}",
        "method": "POST",
        "response": {
          "output": "{{generalResponse(body.result)}}"
        }
      },
      "rev": 3,
      "crud": "create",
      "name": "createAnIncident",
      "epoch": null,
      "flags": {},
      "label": "Create an Incident",
      "scope": [],
      "expect": [
        "rpc://listTableFields?table=incident"
      ],
      "public": true,
      "typeId": 4,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/now/table/incident\",\n    \"method\": \"POST\",\n    \"body\": \"{{fieldsRequest(parameters.fields)}}\",\n    \"response\": {\n        \"output\": \"{{generalResponse(body.result)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://listTableFields?table=incident&interface=true",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Creates a new incident.",
      "expectJsonc": "[\n    \"rpc://listTableFields?table=incident\"\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "\"rpc://listTableFields?table=incident&interface=true\"",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "assignAnIncidentTicket": {
      "id": 4045,
      "api": {
        "url": "/now/table/incident/{{parameters.record}}",
        "body": {
          "assigned_to": "{{parameters.user}}"
        },
        "method": "PATCH",
        "response": {
          "output": {
            "number": "{{body.result.number}}",
            "sys_id": "{{body.result.sys_id}}",
            "urgency": "{{body.result.urgency}}",
            "priority": "{{body.result.priority}}",
            "assigned_to": "{{body.result.assigned_to.value}}",
            "description": "{{body.result.description}}",
            "short_description": "{{body.result.short_description}}",
            "reassignment_count": "{{body.result.reassignment_count}}"
          }
        }
      },
      "rev": 3,
      "crud": "create",
      "name": "assignAnIncidentTicket",
      "epoch": null,
      "flags": {},
      "label": "Assign a Ticket",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "record",
          "type": "select",
          "label": "Incident (Ticket) ID",
          "options": "rpc://listIncidentTickets",
          "required": true
        },
        {
          "mode": "edit",
          "name": "user",
          "type": "select",
          "label": "User ID",
          "options": "rpc://listUsers",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "servicenow",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/now/table/incident/{{parameters.record}}\",\n    \"method\": \"PATCH\",\n    \"body\": {\n        \"assigned_to\": \"{{parameters.user}}\"\n    },\n    \"response\": {\n        \"output\": {\n            \"number\": \"{{body.result.number}}\",\n            \"short_description\": \"{{body.result.short_description}}\",\n            \"description\": \"{{body.result.description}}\",\n            \"sys_id\": \"{{body.result.sys_id}}\",\n            \"urgency\": \"{{body.result.urgency}}\",\n            \"priority\": \"{{body.result.priority}}\",\n            \"reassignment_count\": \"{{body.result.reassignment_count}}\",\n            \"assigned_to\": \"{{body.result.assigned_to.value}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "number",
          "type": "text",
          "label": "Ticket Number"
        },
        {
          "name": "short_description",
          "type": "text",
          "label": "Ticket short description"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Ticket description"
        },
        {
          "name": "sys_id",
          "type": "text",
          "label": "Incident (Ticket) ID"
        },
        {
          "name": "urgency",
          "type": "text",
          "label": "Urgency"
        },
        {
          "name": "priority",
          "type": "text",
          "label": "Ticket Priority"
        },
        {
          "name": "reassignment_count",
          "type": "text",
          "label": "Reassignment count"
        },
        {
          "name": "assigned_to",
          "type": "text",
          "label": "Assigned to user ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "servicenow",
      "description": "Assigns an incident ticket.",
      "expectJsonc": "[\n    {\n        \"name\": \"record\",\n        \"label\": \"Incident (Ticket) ID\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"options\": \"rpc://listIncidentTickets\"\n    },\n    {\n        \"name\": \"user\",\n        \"label\": \"User ID\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"options\": \"rpc://listUsers\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "servicenow2",
      "interfaceJsonc": "[\n    {\n        \"name\": \"number\",\n        \"label\": \"Ticket Number\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"short_description\",\n        \"label\": \"Ticket short description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"description\",\n        \"label\": \"Ticket description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"sys_id\",\n        \"label\": \"Incident (Ticket) ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"urgency\",\n        \"label\": \"Urgency\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"priority\",\n        \"label\": \"Ticket Priority\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"reassignment_count\",\n        \"label\": \"Reassignment count\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"assigned_to\",\n        \"label\": \"Assigned to user ID\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "servicenow": {
      "api": {
        "log": {
          "sanitize": [
            "request.headers.authorization"
          ]
        },
        "url": "https://{{parameters.subdomain}}.service-now.com/api/now/ui/impersonate/recent",
        "headers": {
          "authorization": "Basic {{base64(parameters.username + ':' + parameters.password)}}"
        },
        "response": {
          "error": {
            "message": "[{{statusCode}}] {{body.error.message}}"
          },
          "metadata": {
            "type": "text",
            "value": "{{parameters.subdomain}}.service-now.com: {{parameters.username}}"
          }
        }
      },
      "rev": 8,
      "name": "servicenow",
      "type": "basic",
      "label": "ServiceNow",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "servicenow",
      "install": {},
      "apiJsonc": "{\n    \"url\": \"https://{{parameters.subdomain}}.service-now.com/api/now/ui/impersonate/recent\",\n    \"headers\": {\n        \"authorization\": \"Basic {{base64(parameters.username + ':' + parameters.password)}}\"\n    },\n    \"response\": {\n        \"metadata\": {\n            \"type\": \"text\",\n            \"value\": \"{{parameters.subdomain}}.service-now.com: {{parameters.username}}\"\n        },\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.error.message}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "[Sub-domain].service-now.com",
          "name": "subdomain",
          "type": "text",
          "label": "Sub-domain",
          "editable": true,
          "required": true,
          "validate": {
            "pattern": "^[A-Za-z-0-9--]+$"
          }
        },
        {
          "name": "username",
          "type": "text",
          "label": "Username",
          "editable": true,
          "required": true
        },
        {
          "name": "password",
          "type": "password",
          "label": "Password",
          "editable": true,
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "installSpec": [],
      "scopesJsonc": "{\n}",
      "installJsonc": "{\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"subdomain\",\n        \"label\": \"Sub-domain\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"help\": \"[Sub-domain].service-now.com\",\n        \"validate\": {\n            \"pattern\": \"^[A-Za-z-0-9--]+$\"\n        },\n        \"editable\": true\n    },\n    {\n        \"name\": \"username\",\n        \"type\": \"text\",\n        \"label\": \"Username\",\n        \"required\": true,\n        \"editable\": true\n    },\n    {\n        \"name\": \"password\",\n        \"type\": \"password\",\n        \"label\": \"Password\",\n        \"required\": true,\n        \"editable\": true\n    }\n]",
      "installSpecJsonc": "[\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    },
    "servicenow2": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://{{parameters.subdomain}}.service-now.com/api/now/ui/impersonate/recent",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {
            "error": {
              "message": "[{{statusCode}}] {{body.error.message}}"
            },
            "metadata": {
              "type": "text",
              "value": "{{parameters.subdomain}}.service-now.com"
            }
          }
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.code",
              "request.body.client_secret",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://{{parameters.subdomain}}.service-now.com/oauth_token.do",
          "body": {
            "code": "{{temp.code}}",
            "client_id": "{{ifempty(data.clientId, common.clientId)}}",
            "grant_type": "authorization_code",
            "redirect_uri": "{{oauth.localRedirectUri}}",
            "client_secret": "{{ifempty(data.clientSecret, common.clientSecret)}}",
            "code_verifier": "{{temp.code_verifier}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            },
            "expires": "{{addSeconds(now, parameters.refreshTokenExpireIn}}"
          }
        },
        "refresh": {
          "log": {
            "sanitize": [
              "request.body.client_secret",
              "request.body.refresh_token",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://{{parameters.subdomain}}.service-now.com/oauth_token.do",
          "body": {
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "refresh_token",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}",
            "refresh_token": "{{data.refreshToken}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}"
            }
          },
          "condition": "{{data.expires < addMinutes(now, 1)}}"
        },
        "authorize": {
          "qs": {
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "redirect_uri": "{{oauth.localRedirectUri}}",
            "response_type": "code",
            "code_challenge": "{{codeChallengeEncode(temp.code_verifier)}}"
          },
          "url": "https://{{parameters.subdomain}}.service-now.com/oauth_auth.do",
          "temp": {
            "code_verifier": "{{uuid}}"
          },
          "response": {
            "temp": {
              "code": "{{query.code}}"
            }
          }
        }
      },
      "rev": 6,
      "name": "servicenow2",
      "type": "oauth",
      "label": "ServiceNow (OAuth)",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "servicenow",
      "install": {},
      "apiJsonc": "{\n\t\"authorize\": {\n\t\t\"url\": \"https://{{parameters.subdomain}}.service-now.com/oauth_auth.do\",\n\t\t\"temp\": {\n\t\t\t\"code_verifier\": \"{{uuid}}\"\n\t\t},\n\t\t\"qs\": {\n\t\t\t\"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n\t\t\t\"redirect_uri\": \"{{oauth.localRedirectUri}}\",\n\t\t\t\"response_type\": \"code\",\n\t\t\t\"code_challenge\": \"{{codeChallengeEncode(temp.code_verifier)}}\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"temp\": {\n\t\t\t\t\"code\": \"{{query.code}}\"\n\t\t\t}\n\t\t}\n\t},\n\t\"token\": {\n\t\t\"url\": \"https://{{parameters.subdomain}}.service-now.com/oauth_token.do\",\n\t\t\"method\": \"POST\",\n\t\t\"body\": {\n\t\t\t\"code\": \"{{temp.code}}\",\n\t\t\t\"client_id\": \"{{ifempty(data.clientId, common.clientId)}}\",\n\t\t\t\"grant_type\": \"authorization_code\",\n\t\t\t\"redirect_uri\": \"{{oauth.localRedirectUri}}\",\n\t\t\t\"client_secret\": \"{{ifempty(data.clientSecret, common.clientSecret)}}\",\n\t\t\t\"code_verifier\": \"{{temp.code_verifier}}\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"response\": {\n\t\t\t\"data\": {\n\t\t\t\t\"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n\t\t\t\t\"accessToken\": \"{{body.access_token}}\",\n\t\t\t\t\"refreshToken\": \"{{body.refresh_token}}\"\n\t\t\t},\n\t\t\t\"expires\": \"{{addSeconds(now, parameters.refreshTokenExpireIn}}\"\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\n\t\t\t\t\"request.body.code\",\n\t\t\t\t\"request.body.client_secret\",\n\t\t\t\t\"response.body.access_token\",\n\t\t\t\t\"response.body.refresh_token\"\n\t\t\t]\n\t\t}\n\t},\n\t\"refresh\": {\n\t\t\"condition\": \"{{data.expires < addMinutes(now, 1)}}\",\n\t\t\"url\": \"https://{{parameters.subdomain}}.service-now.com/oauth_token.do\",\n\t\t\"method\": \"POST\",\n\t\t\"body\": {\n\t\t\t\"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n\t\t\t\"grant_type\": \"refresh_token\",\n\t\t\t\"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\",\n\t\t\t\"refresh_token\": \"{{data.refreshToken}}\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"response\": {\n\t\t\t\"data\": {\n\t\t\t\t\"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n\t\t\t\t\"accessToken\": \"{{body.access_token}}\"\n\t\t\t}\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\n\t\t\t\t\"request.body.client_secret\",\n\t\t\t\t\"request.body.refresh_token\",\n\t\t\t\t\"response.body.access_token\",\n\t\t\t\t\"response.body.refresh_token\"\n\t\t\t]\n\t\t}\n\t},\n\t\"info\": {\n\t\t\"url\": \"https://{{parameters.subdomain}}.service-now.com/api/now/ui/impersonate/recent\",\n\t\t\"headers\": {\n\t\t\t\"authorization\": \"Bearer {{connection.accessToken}}\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"metadata\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"value\": \"{{parameters.subdomain}}.service-now.com\"\n\t\t\t},\n\t\t\t\"error\": {\n\t\t\t\t\"message\": \"[{{statusCode}}] {{body.error.message}}\"\n\t\t\t}\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\n\t\t\t\t\"request.headers.authorization\"\n\t\t\t]\n\t\t}\n\t}\n}\n",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "[Sub-domain].service-now.com",
          "name": "subdomain",
          "type": "text",
          "label": "Sub-domain",
          "editable": true,
          "required": true,
          "validate": {
            "pattern": "^[A-Za-z-0-9--]+$"
          }
        },
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "editable": true,
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "password",
          "label": "Client Secret",
          "editable": true,
          "required": true
        },
        {
          "help": "The number of seconds until the refresh token expires. The value should be the same as in the OAuth application settings on ServiceNow.",
          "name": "refreshTokenExpireIn",
          "type": "uinteger",
          "label": "Refresh Token Expire In",
          "default": 8640000,
          "advanced": true,
          "editable": true
        }
      ],
      "scopeJsonc": null,
      "installSpec": [],
      "scopesJsonc": null,
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"subdomain\",\n        \"label\": \"Sub-domain\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"help\": \"[Sub-domain].service-now.com\",\n        \"validate\": {\n            \"pattern\": \"^[A-Za-z-0-9--]+$\"\n        },\n        \"editable\": true\n    },\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"password\",\n        \"label\": \"Client Secret\",\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"name\": \"refreshTokenExpireIn\",\n        \"type\": \"uinteger\",\n        \"label\": \"Refresh Token Expire In\",\n        \"help\": \"The number of seconds until the refresh token expires. The value should be the same as in the OAuth application settings on ServiceNow.\",\n        \"editable\": true,\n        \"default\": 8640000,\n        \"advanced\": true\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"https://{{connection.subdomain}}.service-now.com/api\",\n    \"headers\": {\n        \"authorization\": \"{{if(connection.accessToken, 'Bearer ' + connection.accessToken, 'Basic ' + base64(connection.username + ':' + connection.password))}}\"\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.error.message + if(body.error.detail, ': ' + body.error.detail, '')}}\",\n            \"200\": {\n                \"message\": \"{{throwErrorForHibernation(body)}}\"\n            }\n        },\n        \"valid\": \"{{checkValid(body)}}\"\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    }\n}",
  "countries": null,
  "_functions": {
    "filter": {
      "rev": 2,
      "code": "function filter(filter, order) {\n\n    if(!filter) {\n        if(order) return order;\n        return;\n    }\n\n    let string = filter.map(or => {\n        return or.map(and => {\n            if(!(and.a)||!(and.b)||!(and.o)) return;\n        \n            if(and.b instanceof Date) {\n                and.b = iml.formatDate(and.b, 'YYYY-MM-DD HH:mm:ss');\n            }\n\n            return `${and.a}${and.o}${and.b}`\n        }).join('^');\n    }).join('^OR');\n\n    if(order) {\n        if(!string) return order;\n\n        string = string + '^' + order;\n    }\n\n    return string;\n}",
      "name": "filter",
      "test": null,
      "appName": "servicenow",
      "arguments": "(filter, order)",
      "appVersion": 1
    },
    "checkValid": {
      "rev": 2,
      "code": "function checkValid(body) {\n\n    if (!body) return true;\n\n    else if (typeof body === 'string') {\n        if(body.includes('Instance Hibernating page')) return false;\n    }\n\n    return true;\n\n}",
      "name": "checkValid",
      "test": null,
      "appName": "servicenow",
      "arguments": "(body)",
      "appVersion": 1
    },
    "tableFields": {
      "rev": 2,
      "code": "function tableFields(fields, interface) {\n\n    if (!fields) return;\n\n    let arr = [];\n\n    fields.forEach(item => {\n\n        let obj = {};\n\n        if (!interface) {\n            if (item.name.startsWith('sys_')) return;\n        }\n\n        obj.name = item.name;\n        obj.label = iml.if(item.label === 'Sys ID', 'Record ID', iml.capitalize(item.label));\n\n        switch (item.internalType) {\n            /* case 'reference':\n            case 'glide_list':\n            case 'journal':\n            case 'journal_list':\n            case 'domain_path':\n            case 'html':\n            case 'choice':\n            case 'timer':\n            case 'journal_input':\n            case 'string':\n            case 'domain_id':\n                if (item.exampleValue && item.exampleValue !== '') {\n                    obj.help = 'e.g. ' + `**${item.exampleValue}**`;\n                }\n                obj.type = 'text';\n                break; */\n            case 'glide_date_time':\n            case 'glide_date':\n            case 'glide_duration':\n            case 'glide_time':\n            case 'glide_utc_time':\n            case 'due_date':\n            case 'calendar_date_time':\n            case 'schedule_date_time':\n            case 'Date/Time':\n                obj.type = 'date';\n                if (item.exampleValue && item.exampleValue !== '') {\n                    obj.help = 'e.g. ' + `**${item.exampleValue}**`;\n                }\n                break;\n            case 'boolean':\n                obj.type = 'boolean';\n                break;\n            case 'integer':\n            case 'float':\n            case 'price':\n            case 'currency':\n            case 'decimal':\n            case 'number':\n                obj.type = 'number';\n                if (item.exampleValue && item.exampleValue !== '') {\n                    obj.help = 'e.g. ' + `**${item.exampleValue}**`;\n                }\n                break;\n\n            case 'integer':\n            case 'days_of_week':\n            case 'longint':\n            case 'long':\n            case 'int':\n            case 'month_of_year':\n                obj.type = 'integer';\n                break;\n\n            default:\n                obj.type = 'text';\n                if (item.exampleValue && item.exampleValue !== '') {\n                    obj.help = 'e.g. ' + `**${item.exampleValue}**`;\n                }\n                break;\n\n        }\n\n        arr.push(obj);\n\n    });\n\n    if (!interface) {\n\n        arr = arr.sort((a, b) => (a.label > b.label) ? 1 : ((b.label > a.label) ? -1 : 0));\n        return {\n            name: \"fields\",\n            label: \"Fields\",\n            type: \"collection\",\n            spec: arr\n        };\n    }\n\n    return arr;\n\n}",
      "name": "tableFields",
      "test": null,
      "appName": "servicenow",
      "arguments": "(fields, interface)",
      "appVersion": 1
    },
    "fieldsRequest": {
      "rev": 2,
      "code": "function fieldsRequest(fields) {\n\n    if(!fields) return;\n\n    if(Array.isArray(fields)) {\n        fields.forEach(item => {\n            if(item.value instanceof Date) {\n                item.value = iml.formatDate(item.value, 'YYYY-MM-DD HH:mm:ss')\n            }\n            else item.value = item.value.toString();\n        });\n        fields = iml.toCollection(fields, 'key', 'value');\n    }\n    else {\n        for (let [key, value] of Object.entries(fields)) {\n            if(value instanceof Date) {\n                fields[key] = iml.formatDate(value, 'YYYY-MM-DD HH:mm:ss')\n            }\n            else fields[key] = value.toString();\n        }\n    }\n\n    return fields;\n\n}",
      "name": "fieldsRequest",
      "test": null,
      "appName": "servicenow",
      "arguments": "(fields)",
      "appVersion": 1
    },
    "filterResponse": {
      "rev": 2,
      "code": "function filterResponse(body, trigger) {\n\n    if(!body) return;\n    let arr = [];\n\n    body.forEach(item => {\n        if(trigger) {\n            if(item.name === 'sys_created_on' || item.name === 'sys_updated_on') return;\n        }\n        let obj = {\n            label: iml.if(item.name === 'sys_id', 'Record ID', item.label),\n            value: item.name\n        };\n        arr.push(obj);\n    });\n\n    arr = arr.sort((a,b) => (a.label > b.label) ? 1 : ((b.label > a.label) ? -1 : 0)); \n\n    return arr;\n\n}",
      "name": "filterResponse",
      "test": null,
      "appName": "servicenow",
      "arguments": "(body, trigger)",
      "appVersion": 1
    },
    "generalResponse": {
      "rev": 4,
      "code": "function generalResponse(obj, params) {\n\n    if(!obj) return;\n\n    if(params && params.sysparm_display_value) return obj; // returns values in 'Display' mode, not the database values\n\n    for (let [key, value] of Object.entries(obj)) {\n        if (typeof value === 'object' && !(value instanceof Date) && !(Array.isArray(value))) {\n            if(obj[key]['value']) {\n                obj[key] = obj[key]['value'];\n            }\n        }\n        else if (/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}/gm.test(value)) {\n            obj[key] = iml.parseDate(value);\n        }\n        else if (!isNaN(value)) {\n            obj[key] = parseFloat(value);\n        }\n        else if (value === 'true') obj[key] = true;\n        else if (value === 'false') obj[key] = false;\n    }\n\n    return obj;\n\n}",
      "name": "generalResponse",
      "test": null,
      "appName": "servicenow",
      "arguments": "(obj, params)",
      "appVersion": 1
    },
    "codeChallengeEncode": {
      "rev": 7,
      "code": "function codeChallengeEncode(text) {\n    if (typeof text !== 'string') throw new Error('Invalid text for encoding.');\n\n    text = iml.sha256(text, 'base64');\n    text = iml.replace(text, '+', '-');\n    text = iml.replace(text, '/', '_');\n    text = iml.replace(text, '=', '');\n    text = iml.replace(text, '\\n', '');\n\n    return text;\n}\n",
      "name": "codeChallengeEncode",
      "test": "it('should throw an error if input is not a string', () => {\n    assert.throws(() => codeChallengeEncode(null), new Error('Invalid text for encoding.'));\n    assert.throws(() => codeChallengeEncode(undefined), new Error('Invalid text for encoding.'));\n    assert.throws(() => codeChallengeEncode({}), new Error('Invalid text for encoding.'));\n});\n\nit('should encode text correctly', () => {\n    const input = 'hi make';\n    const output = '3xHGtLaRPEaUchpc7TZSYN6B2P2OkyQxCzM9k2OGvXA';\n    assert.equal(codeChallengeEncode(input), output)\n});",
      "appName": "servicenow",
      "arguments": "(text)",
      "appVersion": 1
    },
    "throwErrorForHibernation": {
      "rev": 2,
      "code": "function throwErrorForHibernation(body) {\n\n    if(!body) return;\n\n    else if (typeof body === 'string') {\n        if(body.includes('Instance Hibernating page')) return 'Your instance web is hibernating. Wake it up.';\n    }\n\n}",
      "name": "throwErrorForHibernation",
      "test": null,
      "appName": "servicenow",
      "arguments": "(body)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-02-21T23:56:49.845051+00:00",
  "categories": [],
  "opensource": false,
  "description": null,
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "741989eea60bb6ce74fa8a5d882ff1fa",
  "versionFull": "1.1.7",
  "compiledName": "servicenow",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": "[\n]"
}
