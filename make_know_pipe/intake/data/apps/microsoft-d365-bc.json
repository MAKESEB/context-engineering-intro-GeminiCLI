{
  "rev": 19,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization"
      ]
    },
    "baseUrl": "https://{{connection.baseUrl}}/{{connection.tenant}}/{{connection.environment}}/{{connection.endPoint}}",
    "headers": {
      "Authorization": "Bearer {{connection.accessToken}}"
    },
    "response": {
      "error": {
        "429": {
          "type": "RateLimitError",
          "message": "[429] The maximum number of requests per minute was exceeded.\n\nThe limits are 300 requests per minute in the Sandbox environment and 600 requests per minute in the Production environment.\n\nIn the future, to increase throughput, the service will change this per-environment limit to a per-user limit.\n\nFor more info please consult the FAQ on Microsoft Dynamics 365 Business Central API documentation page at the following address:\nhttps://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/operational-limits-online#FAQsUser."
        },
        "message": "[{{statusCode}}] {{body.error.message}}"
      }
    }
  },
  "beta": false,
  "docs": "",
  "name": "microsoft-d365-bc",
  "_rpcs": {
    "entities": {
      "api": {
        "qs": {
          "$format": "json"
        },
        "url": "/$metadata",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{nameToLabel(item.key)}}",
            "value": "{{item.key}}"
          },
          "iterate": {
            "condition": "{{item.key !== 'entityDefinitions' && !contains(item.key, '$') && if(parameters.insertable, item.value.`@Org.OData.Capabilities.V1.InsertRestrictions`.Insertable, true) && if(parameters.updatable, item.value.`@Org.OData.Capabilities.V1.UpdateRestrictions`.Updatable, true) && if(parameters.deletable, item.value.`@Org.OData.Capabilities.V1.DeleteRestrictions`.Deletable, true)}}",
            "container": "{{sort(toArray(body.`Microsoft.NAV`.NAV), 'key')}}"
          }
        }
      },
      "rev": 5,
      "name": "entities",
      "label": "Entities",
      "appName": "microsoft-d365-bc",
      "apiJsonc": "{\n\t\"url\": \"/$metadata\",\n\t\"method\": \"GET\",\n\t\"qs\": {\n\t\t\"$format\": \"json\"\n\t},\n\t\"response\": {\n\t\t\"iterate\": {\n\t\t\t\"container\": \"{{sort(toArray(body.`Microsoft.NAV`.NAV), 'key')}}\",\n\t\t\t\"condition\": \"{{item.key !== 'entityDefinitions' && !contains(item.key, '$') && if(parameters.insertable, item.value.`@Org.OData.Capabilities.V1.InsertRestrictions`.Insertable, true) && if(parameters.updatable, item.value.`@Org.OData.Capabilities.V1.UpdateRestrictions`.Updatable, true) && if(parameters.deletable, item.value.`@Org.OData.Capabilities.V1.DeleteRestrictions`.Deletable, true)}}\"\n\t\t},\n\t\t\"output\": {\n\t\t\t\"label\": \"{{nameToLabel(item.key)}}\",\n\t\t\t\"value\": \"{{item.key}}\"\n\t\t}\n\t}\n}\n",
      "appVersion": 1,
      "parameters": [
        {
          "name": "insertable",
          "type": "boolean",
          "label": "Insertable"
        },
        {
          "name": "updatable",
          "type": "boolean",
          "label": "Updatable"
        },
        {
          "name": "deletable",
          "type": "boolean",
          "label": "Deletable"
        }
      ],
      "accountName": "microsoft-d365-bc",
      "altAccountName": null,
      "parametersJsonc": "[\r\n    {\r\n        \"name\": \"insertable\",\r\n        \"type\": \"boolean\",\r\n        \"label\": \"Insertable\"\r\n    },\r\n    {\r\n        \"name\": \"updatable\",\r\n        \"type\": \"boolean\",\r\n        \"label\": \"Updatable\"\r\n    },\r\n    {\r\n        \"name\": \"deletable\",\r\n        \"type\": \"boolean\",\r\n        \"label\": \"Deletable\"\r\n    }\r\n]"
    },
    "idFinder": {
      "api": [
        {
          "qs": {
            "$format": "json"
          },
          "url": "/$metadata",
          "method": "GET",
          "response": {
            "temp": {
              "entity": "{{last(split(body.`Microsoft.NAV`.NAV[parameters.entity].`$Type`, '.'))}}"
            },
            "output": null
          }
        },
        {
          "response": {
            "output": {
              "help": "UUID of the record.",
              "name": "id",
              "type": "uuid",
              "label": "ID",
              "required": true
            }
          },
          "condition": "{{!contains(keys(body['Microsoft.NAV'][temp.entity]), 'displayName')}}"
        },
        {
          "response": {
            "output": {
              "rpc": {
                "url": "rpc://app%23microsoft-d365-bc@1/searchRecords?company={{parameters.company}}&entity={{parameters.entity}}",
                "label": "ID Finder",
                "parameters": [
                  {
                    "help": "To see all results, leave this field empty.",
                    "name": "filter",
                    "type": "filter",
                    "label": "Filter",
                    "options": {
                      "store": "rpc://app%23microsoft-d365-bc@1/entityFields?filter=true&entity={{parameters.entity}}",
                      "operators": [
                        {
                          "label": "String",
                          "options": [
                            {
                              "label": "Equal",
                              "value": "text::eq"
                            },
                            {
                              "label": "Not Equal",
                              "value": "text::ne"
                            },
                            {
                              "label": "Contains",
                              "value": "text::contains"
                            },
                            {
                              "label": "Starts With",
                              "value": "text::startswith"
                            },
                            {
                              "label": "Ends With",
                              "value": "text::endswith"
                            }
                          ]
                        },
                        {
                          "label": "Number",
                          "options": [
                            {
                              "label": "Equal",
                              "value": "number::eq"
                            },
                            {
                              "label": "Not Equal",
                              "value": "number::ne"
                            },
                            {
                              "label": "Greater than",
                              "value": "number::gt"
                            },
                            {
                              "label": "Greater than or Equal to",
                              "value": "number::ge"
                            },
                            {
                              "label": "Less than",
                              "value": "number::lt"
                            },
                            {
                              "label": "Less than or Equal to",
                              "value": "number::le"
                            }
                          ]
                        },
                        {
                          "label": "Date",
                          "options": [
                            {
                              "label": "Earlier than",
                              "value": "date::lt"
                            },
                            {
                              "label": "Earlier than or Equal to",
                              "value": "date::le"
                            },
                            {
                              "label": "Later than",
                              "value": "date::gt"
                            },
                            {
                              "label": "Later than or Equal to",
                              "value": "date::ge"
                            }
                          ]
                        },
                        {
                          "label": "Boolean",
                          "options": [
                            {
                              "label": "Equal",
                              "value": "bool::eq"
                            }
                          ]
                        },
                        {
                          "label": "Guid",
                          "options": [
                            {
                              "label": "Equal",
                              "value": "guid::eq"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "help": "UUID of the record.",
              "name": "id",
              "type": "uuid",
              "label": "ID",
              "required": true
            }
          },
          "condition": "{{contains(keys(body['Microsoft.NAV'][temp.entity]), 'displayName')}}"
        }
      ],
      "rev": 5,
      "name": "idFinder",
      "label": "ID Finder",
      "appName": "microsoft-d365-bc",
      "apiJsonc": "[\n\t{\n\t\t\"url\": \"/$metadata\",\n\t\t\"method\": \"GET\",\n\t\t\"qs\": {\n\t\t\t\"$format\": \"json\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"temp\": {\n\t\t\t\t\"entity\": \"{{last(split(body.`Microsoft.NAV`.NAV[parameters.entity].`$Type`, '.'))}}\"\n\t\t\t},\n\t\t\t\"output\": null\n\t\t}\n\t},\n\t{\n\t\t\"condition\": \"{{!contains(keys(body['Microsoft.NAV'][temp.entity]), 'displayName')}}\",\n\t\t\"response\": {\n\t\t\t\"output\": {\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uuid\",\n\t\t\t\t\"label\": \"ID\",\n\t\t\t\t\"required\": true,\n\t\t\t\t\"help\": \"UUID of the record.\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t\"condition\": \"{{contains(keys(body['Microsoft.NAV'][temp.entity]), 'displayName')}}\",\n\t\t\"response\": {\n\t\t\t\"output\": {\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uuid\",\n\t\t\t\t\"label\": \"ID\",\n\t\t\t\t\"required\": true,\n\t\t\t\t\"help\": \"UUID of the record.\",\n\t\t\t\t\"rpc\": {\n\t\t\t\t\t\"label\": \"ID Finder\",\n\t\t\t\t\t\"url\": \"rpc://searchRecords?company={{parameters.company}}&entity={{parameters.entity}}\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"filter\",\n\t\t\t\t\t\t\t\"type\": \"filter\",\n\t\t\t\t\t\t\t\"label\": \"Filter\",\n\t\t\t\t\t\t\t\"help\": \"To see all results, leave this field empty.\",\n\t\t\t\t\t\t\t\"options\": {\n\t\t\t\t\t\t\t\t\"store\": \"rpc://entityFields?filter=true&entity={{parameters.entity}}\",\n\t\t\t\t\t\t\t\t\"operators\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"label\": \"String\",\n\t\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Equal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"text::eq\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Not Equal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"text::ne\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Contains\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"text::contains\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Starts With\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"text::startswith\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Ends With\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"text::endswith\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Number\",\n\t\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Equal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"number::eq\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Not Equal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"number::ne\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Greater than\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"number::gt\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Greater than or Equal to\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"number::ge\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Less than\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"number::lt\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Less than or Equal to\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"number::le\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Date\",\n\t\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Earlier than\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"date::lt\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Earlier than or Equal to\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"date::le\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Later than\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"date::gt\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Later than or Equal to\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"date::ge\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Boolean\",\n\t\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Equal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"bool::eq\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Guid\",\n\t\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Equal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"guid::eq\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n]",
      "appVersion": 1,
      "parameters": [
        {
          "name": "company",
          "type": "text",
          "label": "Company",
          "required": true
        },
        {
          "name": "entity",
          "type": "text",
          "label": "Record Type",
          "required": true
        }
      ],
      "accountName": "microsoft-d365-bc",
      "altAccountName": null,
      "parametersJsonc": "[\r\n    {\r\n        \"name\": \"company\",\r\n        \"type\": \"text\",\r\n        \"label\": \"Company\",\r\n        \"required\": true\r\n    },\r\n    {\r\n        \"name\": \"entity\",\r\n        \"type\": \"text\",\r\n        \"label\": \"Record Type\",\r\n        \"required\": true\r\n    }\r\n]"
    },
    "companies": {
      "api": {
        "qs": {
          "select": "id,name"
        },
        "url": "/companies",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.value}}"
        }
      },
      "rev": 4,
      "name": "companies",
      "label": "Companies",
      "appName": "microsoft-d365-bc",
      "apiJsonc": "{\n    \"url\": \"/companies\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"select\": \"id,name\"\n    },\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"iterate\": \"{{body.value}}\",\n        \"output\": {\n            \"label\": \"{{item.name}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "microsoft-d365-bc",
      "altAccountName": null,
      "parametersJsonc": "[]"
    },
    "entityFields": {
      "api": {
        "qs": {
          "$format": "json"
        },
        "url": "/$metadata",
        "temp": {
          "typeMap": {
            "Edm.Date": "Date",
            "Edm.Guid": "GUID",
            "Edm.Int32": "Number",
            "Edm.Int64": "Number",
            "Edm.String": "String",
            "Edm.Boolean": "Boolean",
            "Edm.Decimal": "Number",
            "Edm.DateTimeOffset": "Date"
          }
        },
        "method": "GET",
        "response": {
          "temp": {
            "entity": "{{last(split(body.`Microsoft.NAV`.NAV[parameters.entity].`$Type`, '.'))}}"
          },
          "output": {
            "label": "{{nameToLabel(item.key)}}{{if(parameters.filter, if(!item.value.$Type, ' [String]', ' [' + temp.typeMap[item.value.$Type] + ']'))}}",
            "value": "{{item.key}}"
          },
          "iterate": {
            "condition": "{{!contains(item.key, '$') && !contains(item.key, '@') && if(parameters.expandable, item.value.`$Kind` === 'NavigationProperty', !item.value.`$Kind`) && if(parameters.filter, !item.value.$Type || temp.typeMap[item.value.`$Type`], true) && if(parameters.dates, item.value.`$Type` === 'Edm.Date' || item.value.`$Type` === 'Edm.DateTimeOffset' , true) }}",
            "container": "{{sort(toArray(body['Microsoft.NAV'][temp.entity]), 'key')}}"
          }
        }
      },
      "rev": 5,
      "name": "entityFields",
      "label": "Entity Fields",
      "appName": "microsoft-d365-bc",
      "apiJsonc": "{\n\t\"temp\": {\n\t\t\"typeMap\": {\n\t\t\t\"Edm.Int64\": \"Number\",\n\t\t\t\"Edm.Date\": \"Date\",\n\t\t\t\"Edm.Guid\": \"GUID\",\n\t\t\t\"Edm.String\": \"String\",\n\t\t\t\"Edm.Boolean\": \"Boolean\",\n\t\t\t\"Edm.Decimal\": \"Number\",\n\t\t\t\"Edm.Int32\": \"Number\",\n\t\t\t\"Edm.DateTimeOffset\": \"Date\"\n\t\t}\n\t},\n\t\"url\": \"/$metadata\",\n\t\"method\": \"GET\",\n\t\"qs\": {\n\t\t\"$format\": \"json\"\n\t},\n\t\"response\": {\n\t\t\"temp\": {\n\t\t\t\"entity\": \"{{last(split(body.`Microsoft.NAV`.NAV[parameters.entity].`$Type`, '.'))}}\"\n\t\t},\n\t\t\"iterate\": {\n\t\t\t\"container\": \"{{sort(toArray(body['Microsoft.NAV'][temp.entity]), 'key')}}\",\n\t\t\t\"condition\": \"{{!contains(item.key, '$') && !contains(item.key, '@') && if(parameters.expandable, item.value.`$Kind` === 'NavigationProperty', !item.value.`$Kind`) && if(parameters.filter, !item.value.$Type || temp.typeMap[item.value.`$Type`], true) && if(parameters.dates, item.value.`$Type` === 'Edm.Date' || item.value.`$Type` === 'Edm.DateTimeOffset' , true) }}\"\n\t\t},\n\t\t\"output\": {\n\t\t\t\"label\": \"{{nameToLabel(item.key)}}{{if(parameters.filter, if(!item.value.$Type, ' [String]', ' [' + temp.typeMap[item.value.$Type] + ']'))}}\",\n\t\t\t\"value\": \"{{item.key}}\"\n\t\t}\n\t}\n}\n",
      "appVersion": 1,
      "parameters": [
        {
          "help": "For example, `contacts`.",
          "name": "entity",
          "type": "text",
          "label": "Entity Name",
          "required": true
        },
        {
          "name": "expandable",
          "type": "boolean",
          "label": "Expandable"
        },
        {
          "name": "dates",
          "type": "boolean",
          "label": "Dates"
        }
      ],
      "accountName": "microsoft-d365-bc",
      "altAccountName": null,
      "parametersJsonc": "[\r\n    {\r\n        \"name\": \"entity\",\r\n        \"type\": \"text\",\r\n        \"label\": \"Entity Name\",\r\n        \"help\": \"For example, `contacts`.\",\r\n        \"required\": true\r\n    },\r\n    {\r\n        \"name\": \"expandable\",\r\n        \"type\": \"boolean\",\r\n        \"label\": \"Expandable\"\r\n    },\r\n    {\r\n        \"name\": \"dates\",\r\n        \"type\": \"boolean\",\r\n        \"label\": \"Dates\"\r\n    }\r\n]"
    },
    "searchRecords": {
      "api": {
        "qs": {
          "$filter": "{{prepareFilter(parameters.filter)}}",
          "$select": "displayName,id",
          "$orderby": "displayName asc"
        },
        "url": "/companies({{parameters.company}})/{{parameters.entity}}",
        "method": "GET",
        "headers": {
          "Prefer": "odata.maxpagesize=100"
        },
        "response": {
          "limit": 300,
          "output": {
            "label": "{{item.displayName}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 4,
      "name": "searchRecords",
      "label": "Search Records",
      "appName": "microsoft-d365-bc",
      "apiJsonc": "{\n    \"url\": \"/companies({{parameters.company}})/{{parameters.entity}}\",\n    \"method\": \"GET\",\n    \"headers\": {\n        \"Prefer\": \"odata.maxpagesize=100\"\n    },\n    \"qs\": {\n        \"$filter\": \"{{prepareFilter(parameters.filter)}}\",\n        \"$select\": \"displayName,id\",\n        \"$orderby\": \"displayName asc\"\n    },\n    \"response\": {\n        \"limit\": 300,\n        \"iterate\": \"{{body.value}}\",\n        \"output\": {\n\t\t\t\"label\": \"{{item.displayName}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t}\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "company",
          "type": "text",
          "label": "Company",
          "required": true
        },
        {
          "name": "entity",
          "type": "text",
          "label": "Record Type",
          "required": true
        }
      ],
      "accountName": "microsoft-d365-bc",
      "altAccountName": null,
      "parametersJsonc": "[\r\n    {\r\n        \"name\": \"company\",\r\n        \"type\": \"text\",\r\n        \"label\": \"Company\",\r\n        \"required\": true\r\n    },\r\n    {\r\n        \"name\": \"entity\",\r\n        \"type\": \"text\",\r\n        \"label\": \"Record Type\",\r\n        \"required\": true\r\n    }\r\n]"
    },
    "interfaceEntities": {
      "api": [
        {
          "url": "/entityDefinitions",
          "method": "GET",
          "response": {
            "temp": {
              "entity": "{{get(map(body.value, 'entityName', 'entitySetName', parameters.entity), 1)}}"
            }
          }
        },
        {
          "url": "/$metadata",
          "method": "GET",
          "response": {
            "output": "{{parseMetadata(body, parameters.type, temp.entity)}}"
          }
        }
      ],
      "rev": 5,
      "name": "interfaceEntities",
      "label": "Interface",
      "appName": "microsoft-d365-bc",
      "apiJsonc": "[\n    {\n        \"url\": \"/entityDefinitions\",\n        \"method\": \"GET\",\n        \"response\": {\n            \"temp\": {\n                \"entity\": \"{{get(map(body.value, 'entityName', 'entitySetName', parameters.entity), 1)}}\"\n            }\n        }\n    },\n    {\n        \"url\": \"/$metadata\",\n        \"method\": \"GET\",\n        \"response\": {\n            \"output\": \"{{parseMetadata(body, parameters.type, temp.entity)}}\"\n        }\n    }\n]",
      "appVersion": 1,
      "parameters": [
        {
          "name": "entity",
          "type": "text"
        },
        {
          "name": "type",
          "type": "text"
        }
      ],
      "accountName": "microsoft-d365-bc",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"type\": \"text\",\n        \"name\": \"entity\"\n    },\n    {\n        \"type\": \"text\",\n        \"name\": \"type\"\n    }\n]"
    }
  },
  "flags": {},
  "label": "Microsoft Dynamics 365 Business Central",
  "theme": "#002050",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Triggers",
      "modules": [
        "watchRecords"
      ]
    },
    {
      "label": "Actions",
      "modules": [
        "getEntity",
        "createEntity",
        "updateEntity",
        "deleteEntity"
      ]
    },
    {
      "label": "Searches",
      "modules": [
        "searchEntities",
        "searchEntitiesAdvanced"
      ]
    },
    {
      "label": "Others",
      "modules": [
        "universal"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda7930000034f4944415458c3bdd75b8895551407f075c6499b89bc924441696394a5e974a3082b8220e82d22e8b5cbb314bd14412f410f412f4105bd589095424591d0430fdd2832ca0a0a0b336fa376774ac7d439bf1ebeffd1c364e49139b361c3fef6febeb5ff7badfffaaffd55f5d8509887273086dfb11e1765ad57933d6f5e78044771107f68da2b386b26002cc6d798c07d58836f318eeb7a0530701a3886aa6a6e558d57d54755f54955eda8aae1aa9adfbfe39ff0c03036c5ed6fe139fc856d1899290edc1cb777dacf09477f493805c4b5d88d63b8e77437ef9903ad56ab33dc595507ab6ab21a0e74aff50f40d729e755d51955d5cab8fa1a82186f61359ec2161c411b3f448ceee868c1b40289c141dc8f5d21dea16cfc1d7e0d908900396fda007491eede88cd21bc805bb2d162acc05a6cc587b8f09401c4f81c5c822ba2f3c75d98f10afc18e97d20ef0f6259d63a6ebf184ba686a0eb1043b83c7d0855b800cf637f74fd5d5cdff551e1f1b8fd69ccc2c28cf7a518bd1d20ff8a7d978d257819bfa4bf88a59598b5b1135f62129fe2268ce2067c968dae8eb147f3cdaed48576d47179aae2c894be0ceb7288efc39b3636545745bb35f17c2f2ffe99f90379de92930fe3fd70e1769c8fcd31b8177b4ed2c792317b70255626a41383d5e471552328d2abaa8e666e2073c7f25c75423f26abaa9df5563585ea64ec6b75d969a71f8fd1ab41bf1d9f27049bc383e5b826f3fb706942f058bcb2239e69e39dbcbb2a5ad1dd47f152bed99a3ad2c6c60e39d68518e371ef9a29247c321f3f9ce745784653840e64f355ff43c2a5d880dfd2d763a4b378665263140b4e928657258e63b82d73b371594e38377323c9aaff4ac3e1c47f65c63d09d15a8dd2edc683d96856d616e02e7c956c58784ac67b54c3397828a19ad4c8f026bc862f7038009f15319bd61610b3706338b34d73171082be893b7514ae1fad2b1c0321dd76cdedf86e8d34f75c05077b79b973e140bbaaf657d5916a72faa7aa3a36d31792f955352736e64d59eb4feb0ac16a7c1032c2375de9d977004378231b7f9c4c381ab53c7726008ca4a8ec8d789d1d6f1cd654d09e6cf644c2b4bfab6aa2aacea9aa655535bbaa165543c8c3fd3bfe090f0ca436b43577c1b18463a37eff9c768158acf9251b8feb5fd75cc77a26e13f38c5b31e10d31e740000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000007a74944415478daed9a7b8c9c5519879fe99d5e68b117aae156244b5bc50a09fd43815004914a8da2281682176210f18251e325c64430511323921015316a226a8c3116c54844100141042b5509545b425bd8de49db6d77b7db761fff78cfb77be6db9de9ecb23bdb1dfd252799f9e6ccf79ef73de7bd9f0a4d840a301d782b7035b00c9806bc08dc0bfc08d80050a9549ab9b4d1673c8df9ea77d40e07e288fa947a5931bf6590189aaedea9f65a1f9bd50b5a4608d9ee5fa57696983da0ee520f959edfabce6a25014c55d794987c525da59ea57e5edd93fdd6a1bea9950470b2baa1c4609faeab13d5ef9604f4e966a8c18426c961461a0576014f439fb53f02ac2bfd675e3316d62c011c48a3c009c022e8738d156049e93f7b9ab4b6d1456603ee291df13faa6f544f51af577766bf75aa6f69251b80fa41b52763b257ddad3eaf760d229c135a4200991066abbff0e8d8aa5eda3271402680c21bfc54edaec1fc7fd42bd54acb303f8810662675d85162fe6e75494bed7c1d41cc55d79504f0a9b160be596eb0118c49fa772c09604c702c09604c14bf6902c8f4bb02cc01a694a6cc022617739b8551d7bb8c99938015c045c0eb81a525216c27f2812781078027807d304eab4399db5ba87e4e7dda81797f2d74a468f01a535d605cb9c68cf915ea2346b96b38e836ea08678f1b21a4854e50af565facc15897ba45fd87ba567d46ddae1eac317f83ba7234843069a4994fb80ab80d989bff0c3c0ffc1af83df06f22e53d024c4d73cf042e21aac627d16fa3e6d1a4fac0cb623e8df38cc2668efd46357871bd383f3b3daf55bf6fa4c5bbd5ebd2f3b166f3a80298abfea1c4fc4e23df9fd22803e95dd3d40fa9ab4793f93eff92084c024e01ce008e037610477537d47647d9e23e421cfd42b5f6009f007e0c58a9548ab9138193139d19840b7c36cd279bd7bfd021b8c2ecbfd3128d53d3f74d44e3a5bbef9dd9d15daade617f81a247ddabfe55bdc13a65ea6cf7ff92edfc61f54bc5ee65e354f59bea73253a0fabef5627bf9cdd4e342aeaf9ea2f33e37a307dfeb97a6e9f414d1f2e30fc742df4184d8d41ab34e91d2badaefb3faa2e28317f6662b4163a8c12f9b08490d17987fa421d3a1bd537170238437dc2a3e3b0fae5b211cb887e2d9bdbabde58627ea68d5584f6a9ef74182e2ffd6789babe013a4fa98b27011f06cec9de73107824e9ca72226cad107a7b5dd2a36d6a914748c4f02bb2776c071e2cadef426065f6bd27d1790e78035115ae1039c1c7808d40973a9438b817b81168cb9ebd04dc47b8db8b8105e9f9eb801b30ca50f9cedd9a760b7591fa50e9f743f6eb54317aaceef93da61e5f3a01b79676e0ce6cced2b423050e1915a3ad431cdbac2eb076daef422b868dc93b501bb1ba52bb535d565af8f50d1ca732d6a893b2774cb2ba35d661d6004de39661d0391ad61ac6b9a031437d3017f404aa33421998970fc7241f2afdafc2c0cc7324e834a212bdf5264c00b664dfe701d7103100444cf0ded2223b818ed2d84fe85881d9a4dc3e13484e67667a6fd12e6b032e2fd1e906bad2e81ec2c8d7b118589509ff52c2a615d85c51bf057c3c9bd405dc4f18a1f380b3e92f9cb40337256672233815f83a613401d613797f7b46ec0ae027447002616c1f208cedf9c46d91620d8f01b7a439151a2fdc9836f07dd9b39dc0ef80c3c065c02bb3b9b717bef9ef0de8d311f52bd67683b7958ccf4aab75fc7807b6c8074387fa2e87ef06cfb2ba135d0bff525f53fce962abbd4119878d86c6bcf2a23206afb4daa0fed06a4358f8e83fd7a1d3a9deec10f2863a6b69af4367b37ab95924887a8e7a97e14e7a12d3fbd57faa9f555f516b57d2f357a5b90576ab979404807abafa6da35650d0d9a73eae7ec0488286cc7c692d15f542f537691d87d2d8a5feca68caa286ce6504a710c9c3ab095ddd41e8f3765232538b68c217819be9d7e54781d544f094273993139db644b31d7886085a4632199a4e18c2d3e8af473c4bd8b991ad35dadffbfb5be9b8ad49cf1bd6e93477b211c4bc6738f6a0e9c88ef8dbd5973201f4aa7f320a2575f3faec1d0bd4af26156c37dd15182f429860f4f90e944ec236230d3ed7b832d7c750a6b7f38ddb640f27db5060bd61dd477ccd235e704f8b9c0a7c12f80291dcf4fd4ce8f9ba34b610fa388bb009cb89a4686ae9b50f1189d88671d123c874f85a1bf3c9f5dce20f8c6b34c7be0a0c22048c02e7f78cecee68b7440b1c340a2aabd5e34693f166b5c62613f9f72aa22ed046e4e513b3a9fb0977b916b88708c7ebd622c715b213315d5deec0c8f31b46a439b199c77d441b23f550eca2da49245a9da5295b890b944dddf163e97ec0ff6f88fcaf0ba0b56f88405592721ad50112c0898cc10d91a6329f3cc04d4657a81c13ec4d41cfa27117f434c8fc14a3a254eb0e4081fb8bc8af25607596b8afc4ec11a350513e0db717f1c0b887fdd7e5ef2e31b95efda8d1c7bbcbea725abba394fd8d95004e5737650cee53df969d8ed9ea6f4b27e3fdcdb005cdf20273a8b6fa2f008f67dff7127dc27c5d0b9bb1b06609a09b6886e6023931fb5e219a30390ed00a48c7788ed130cdf133b52d2540d71a97170a74a817b5920dc028adf796f47c93d1a0d85f12ce7dc92e8cf5f24754080b1d78816a30b41b8d9ad60986b253b03859fb9e4118ef4daef18a96627e1021cc573f63f4ee0f24616c322e682d6b36f3ff05e8ee3b0444d6e6410000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2023-10-13T13:35:17.907818+00:00",
  "icon128": "\\",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": null,
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "getEntity": {
      "id": 115758,
      "api": {
        "url": "/companies({{parameters.company}})/{{parameters.entity}}({{parameters.id}})",
        "method": "GET",
        "response": {
          "output": "{{parseResponse(body))}}"
        }
      },
      "rev": 8,
      "crud": null,
      "name": "getEntity",
      "epoch": null,
      "flags": {},
      "label": "Get a Record",
      "scope": [],
      "expect": [
        {
          "name": "company",
          "type": "select",
          "label": "Company",
          "options": {
            "store": "rpc://app%23microsoft-d365-bc@1/companies",
            "nested": [
              {
                "name": "entity",
                "type": "select",
                "label": "Record Type",
                "options": {
                  "store": "rpc://app%23microsoft-d365-bc@1/entities",
                  "nested": "rpc://app%23microsoft-d365-bc@1/idFinder"
                },
                "mappable": false,
                "required": true
              }
            ]
          },
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-d365-bc",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/companies({{parameters.company}})/{{parameters.entity}}({{parameters.id}})\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": \"{{parseResponse(body))}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23microsoft-d365-bc@1/interfaceEntities",
        {
          "name": "@odata.context",
          "type": "text",
          "label": "OData Context"
        },
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "OData eTag"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "microsoft-d365-bc",
      "description": "Retrieves the details of a record by its ID.",
      "expectJsonc": "[\n    {\n        \"name\": \"company\",\n        \"type\": \"select\",\n        \"label\": \"Company\",\n        \"mappable\": false,\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://companies\",\n            \"nested\": [\n                {\n                    \"name\": \"entity\",\n                    \"type\": \"select\",\n                    \"label\": \"Record Type\",\n                    \"required\": true,\n                    \"mappable\": false,\n                    \"options\": {\n                        \"store\": \"rpc://entities\",\n                        \"nested\": \"rpc://idFinder\"\n                    }\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": "{}",
      "altAccountName": "microsoft-d365-bc2",
      "interfaceJsonc": "[\n    \"rpc://interfaceEntities\",\n    {\n        \"name\": \"@odata.context\",\n        \"type\": \"text\",\n        \"label\": \"OData Context\"\n    },\n    {\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\",\n        \"label\": \"OData eTag\"\n    }\n]",
      "parametersJsonc": "[]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "universal": {
      "id": 115761,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://{{connection.baseUrl}}/{{connection.tenant}}/{{connection.environment}}/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 5,
      "crud": null,
      "name": "universal",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://{baseUrl}/{tenant}/{environment}/` as set up in your connection.\nFor example, `/api/v2.0/companies`.",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "microsoft-d365-bc",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"url\": \"https://{{connection.baseUrl}}/{{connection.tenant}}/{{connection.environment}}/{{parameters.url}}\",\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"method\": \"{{parameters.method}}\",\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"response\": {\n        \"output\": {\n            \"body\": \"{{body}}\",\n            \"headers\": \"{{headers}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "microsoft-d365-bc",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    // TODO: provide two advanced parameters for user to specify the MS BC API version and env api version\n    {\n        \"help\": \"Enter a path relative to `https://{baseUrl}/{tenant}/{environment}/` as set up in your connection.\\nFor example, `/api/v2.0/companies`.\",\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ],\n        \"required\": true\n    },\n    {\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"name\": \"headers\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"text\",\n                \"label\": \"Key\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"text\",\n                \"label\": \"Value\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Headers\",\n        \"default\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"text\",\n                \"label\": \"Key\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"text\",\n                \"label\": \"Value\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Query String\"\n    },\n    {\n        \"name\": \"body\",\n        \"type\": \"any\",\n        \"label\": \"Body\"\n    }\n]",
      "samplesJsonc": "{}",
      "altAccountName": "microsoft-d365-bc2",
      "interfaceJsonc": "[\n    {\n        \"name\": \"body\",\n        \"type\": \"any\",\n        \"label\": \"Body\"\n    },\n    {\n        \"name\": \"headers\",\n        \"type\": \"collection\",\n        \"label\": \"Headers\"\n    },\n    {\n        \"name\": \"statusCode\",\n        \"type\": \"number\",\n        \"label\": \"Status code\"\n    }\n]",
      "parametersJsonc": "[]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createEntity": {
      "id": 123276,
      "api": {
        "url": "/companies({{parameters.company}})/{{parameters.entity}}",
        "body": "{{omit(parameters, 'company', 'entity', 'id')}}",
        "method": "POST",
        "response": {
          "output": "{{parseResponse(body))}}"
        }
      },
      "rev": 7,
      "crud": "create",
      "name": "createEntity",
      "epoch": null,
      "flags": {},
      "label": "Create a Record",
      "scope": [],
      "expect": [
        {
          "name": "company",
          "type": "select",
          "label": "Company",
          "options": {
            "store": "rpc://app%23microsoft-d365-bc@1/companies",
            "nested": [
              {
                "help": "Only record types that support `insert` are shown.",
                "name": "entity",
                "type": "select",
                "label": "Record Type",
                "options": {
                  "store": "rpc://app%23microsoft-d365-bc@1/entities?insertable=true",
                  "nested": "rpc://app%23microsoft-d365-bc@1/interfaceEntities?type=create"
                },
                "mappable": false,
                "required": true
              }
            ]
          },
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-d365-bc",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/companies({{parameters.company}})/{{parameters.entity}}\",\n    \"method\": \"POST\",\n    \"body\": \"{{omit(parameters, 'company', 'entity', 'id')}}\",\n    \"response\": {\n        \"output\": \"{{parseResponse(body))}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23microsoft-d365-bc@1/interfaceEntities",
        {
          "name": "@odata.context",
          "type": "text",
          "label": "OData Context"
        },
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "OData eTag"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "microsoft-d365-bc",
      "description": " Creates a new record.",
      "expectJsonc": "[\n    {\n        \"name\": \"company\",\n        \"type\": \"select\",\n        \"label\": \"Company\",\n        \"mappable\": false,\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://companies\",\n            \"nested\": [\n                {\n                    \"name\": \"entity\",\n                    \"type\": \"select\",\n                    \"label\": \"Record Type\",\n                    \"required\": true,\n                    \"mappable\": false,\n                    \"help\": \"Only record types that support `insert` are shown.\",\n                    \"options\": {\n                        \"store\": \"rpc://entities?insertable=true\",\n                        \"nested\": \"rpc://interfaceEntities?type=create\"\n                    }\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "microsoft-d365-bc2",
      "interfaceJsonc": "[\n    \"rpc://interfaceEntities\",\n    {\n        \"name\": \"@odata.context\",\n        \"type\": \"text\",\n        \"label\": \"OData Context\"\n    },\n    {\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\",\n        \"label\": \"OData eTag\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteEntity": {
      "id": 115757,
      "api": {
        "url": "/companies({{parameters.company}})/{{parameters.entity}}({{parameters.id}})",
        "method": "DELETE",
        "headers": {
          "If-Match": "{{ifempty(parameters.etag, '*')}}"
        },
        "response": {
          "output": null
        }
      },
      "rev": 6,
      "crud": null,
      "name": "deleteEntity",
      "epoch": null,
      "flags": {},
      "label": "Delete a Record",
      "scope": [],
      "expect": [
        {
          "name": "company",
          "type": "select",
          "label": "Company",
          "options": {
            "store": "rpc://app%23microsoft-d365-bc@1/companies",
            "nested": [
              {
                "help": "Only record types that support `delete` are shown.",
                "name": "entity",
                "type": "select",
                "label": "Record Type",
                "options": {
                  "store": "rpc://app%23microsoft-d365-bc@1/entities?deletable=true",
                  "nested": [
                    "rpc://app%23microsoft-d365-bc@1/idFinder",
                    {
                      "help": "Token to resolve delete concurrency. If the eTag provided does not match the current eTag on the record, the record will not be deleted.",
                      "name": "etag",
                      "type": "text",
                      "label": "OData eTag",
                      "advanced": true
                    }
                  ]
                },
                "mappable": false,
                "required": true
              }
            ]
          },
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-d365-bc",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/companies({{parameters.company}})/{{parameters.entity}}({{parameters.id}})\",\n    \"method\": \"DELETE\",\n    \"headers\": {\n        \"If-Match\": \"{{ifempty(parameters.etag, '*')}}\"\n    },\n    \"response\": {\n        \"output\": null\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "microsoft-d365-bc",
      "description": "Deletes a record by its ID.",
      "expectJsonc": "[\n    {\n        \"name\": \"company\",\n        \"type\": \"select\",\n        \"label\": \"Company\",\n        \"mappable\": false,\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://companies\",\n            \"nested\": [\n                {\n                    \"name\": \"entity\",\n                    \"type\": \"select\",\n                    \"label\": \"Record Type\",\n                    \"required\": true,\n                    \"mappable\": false,\n                    \"help\": \"Only record types that support `delete` are shown.\",\n                    \"options\": {\n                        \"store\": \"rpc://entities?deletable=true\",\n                        \"nested\": [\n                            \"rpc://idFinder\",\n                            {\n                                \"name\": \"etag\",\n                                \"type\": \"text\",\n                                \"label\": \"OData eTag\",\n                                \"help\": \"Token to resolve delete concurrency. If the eTag provided does not match the current eTag on the record, the record will not be deleted.\",\n                                \"advanced\": true\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": "{}",
      "altAccountName": "microsoft-d365-bc2",
      "interfaceJsonc": "[]",
      "parametersJsonc": "[]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateEntity": {
      "id": 123660,
      "api": {
        "url": "/companies({{parameters.company}})/{{parameters.entity}}({{parameters.id}})",
        "body": "{{omit(parameters, 'company', 'entity', 'id', 'etag')}}",
        "method": "PATCH",
        "headers": {
          "If-Match": "{{ifempty(parameters.etag, '*')}}"
        },
        "response": {
          "output": "{{parseResponse(body))}}"
        }
      },
      "rev": 7,
      "crud": "update",
      "name": "updateEntity",
      "epoch": null,
      "flags": {},
      "label": "Update a Record",
      "scope": [],
      "expect": [
        {
          "name": "company",
          "type": "select",
          "label": "Company",
          "options": {
            "store": "rpc://app%23microsoft-d365-bc@1/companies",
            "nested": [
              {
                "help": "Only record types that support `update` are shown.",
                "name": "entity",
                "type": "select",
                "label": "Record Type",
                "options": {
                  "store": "rpc://app%23microsoft-d365-bc@1/entities?updatable=true",
                  "nested": "rpc://app%23microsoft-d365-bc@1/interfaceEntities?type=update"
                },
                "mappable": false,
                "required": true
              }
            ]
          },
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-d365-bc",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/companies({{parameters.company}})/{{parameters.entity}}({{parameters.id}})\",\n    \"method\": \"PATCH\",\n    \"headers\": {\n        \"If-Match\": \"{{ifempty(parameters.etag, '*')}}\"\n    },\n    \"body\": \"{{omit(parameters, 'company', 'entity', 'id', 'etag')}}\",\n    \"response\": {\n        \"output\": \"{{parseResponse(body))}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23microsoft-d365-bc@1/interfaceEntities",
        {
          "name": "@odata.context",
          "type": "text",
          "label": "OData Context"
        },
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "OData eTag"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n]",
      "accountName": "microsoft-d365-bc",
      "description": "Updates a record by its ID.",
      "expectJsonc": "[\n    {\n        \"name\": \"company\",\n        \"type\": \"select\",\n        \"label\": \"Company\",\n        \"mappable\": false,\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://companies\",\n            \"nested\": [\n                {\n                    \"name\": \"entity\",\n                    \"type\": \"select\",\n                    \"label\": \"Record Type\",\n                    \"required\": true,\n                    \"mappable\": false,\n                    \"help\": \"Only record types that support `update` are shown.\",\n                    \"options\": {\n                        \"store\": \"rpc://entities?updatable=true\",\n                        \"nested\": \"rpc://interfaceEntities?type=update\"\n                    }\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": "microsoft-d365-bc2",
      "interfaceJsonc": "[\n    \"rpc://interfaceEntities\",\n    {\n        \"name\": \"@odata.context\",\n        \"type\": \"text\",\n        \"label\": \"OData Context\"\n    },\n    {\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\",\n        \"label\": \"OData eTag\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchRecords": {
      "id": 123890,
      "api": {
        "qs": {
          "$expand": "{{ifempty(if(parameters.expand, join(parameters.expand, ',')), undefined)}}",
          "$select": "{{ifempty(if(parameters.select, join(parameters.select, ',')), undefined)}}",
          "$orderby": "{{parameters.targetField}} desc"
        },
        "url": "/companies({{parameters.company}})/{{parameters.entity}}",
        "method": "GET",
        "headers": {
          "Prefer": "odata.maxpagesize=100"
        },
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseResponse(item)}}",
          "iterate": "{{body.value}}",
          "trigger": {
            "id": "{{item.id}}",
            "date": "{{get(item, parameters.targetField)}}",
            "type": "date",
            "order": "desc"
          }
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 7,
      "crud": "read",
      "name": "watchRecords",
      "epoch": {
        "response": {
          "limit": "300",
          "output": {
            "date": "{{get(item, parameters.targetField)}}",
            "label": "{{get(item, ifempty(parameters.labelField, 'id'))}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Records",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "microsoft-d365-bc",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/companies({{parameters.company}})/{{parameters.entity}}\",\n    \"method\": \"GET\",\n    \"headers\": {\n        \"Prefer\": \"odata.maxpagesize=100\"\n    },\n    \"qs\": {\n        \"$select\": \"{{ifempty(if(parameters.select, join(parameters.select, ',')), undefined)}}\",\n        \"$expand\": \"{{ifempty(if(parameters.expand, join(parameters.expand, ',')), undefined)}}\",\n        \"$orderby\": \"{{parameters.targetField}} desc\"\n    },\n    \"response\": {\n        \"limit\": \"{{parameters.limit}}\",\n        \"iterate\": \"{{body.value}}\",\n        \"output\": \"{{parseResponse(item)}}\",\n\t\t\"trigger\": {\n\t\t\t\"type\": \"date\",\n\t\t\t\"id\": \"{{item.id}}\",\n\t\t\t\"date\": \"{{get(item, parameters.targetField)}}\",\n\t\t\t\"order\": \"desc\"\n\t\t}\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23microsoft-d365-bc@1/interfaceEntities",
        {
          "name": "@odata.context",
          "type": "text",
          "label": "OData Context"
        },
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "OData eTag"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": \"300\",\n        \"output\": {\n            \"date\": \"{{get(item, parameters.targetField)}}\",\n            \"label\": \"{{get(item, ifempty(parameters.labelField, 'id'))}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "name": "company",
          "type": "select",
          "label": "Company",
          "options": {
            "store": "rpc://app%23microsoft-d365-bc@1/companies",
            "nested": [
              {
                "name": "entity",
                "type": "select",
                "label": "Record Type",
                "options": {
                  "store": "rpc://app%23microsoft-d365-bc@1/entities",
                  "nested": [
                    {
                      "help": "The date field in the specified record type to be triggered by.",
                      "name": "targetField",
                      "type": "select",
                      "label": "Trigger Field",
                      "options": "rpc://app%23microsoft-d365-bc@1/entityFields?dates=true",
                      "required": true
                    },
                    {
                      "help": "The field used as label in the `Choose where to start` dialogue screen. If left empty, `ID` will be used.",
                      "name": "labelField",
                      "type": "select",
                      "label": "Label Field",
                      "default": "displayName",
                      "options": "rpc://app%23microsoft-d365-bc@1/entityFields"
                    },
                    {
                      "help": "Choose `Select all` to return all current fields.\nDo not choose anything to return all fields, including any fields created in the future.",
                      "name": "select",
                      "type": "select",
                      "label": "Select",
                      "options": "rpc://app%23microsoft-d365-bc@1/entityFields",
                      "advanced": true,
                      "multiple": true
                    },
                    {
                      "help": "Fields to be expanded. Use this parameter to retrieve linked entity.",
                      "name": "expand",
                      "type": "select",
                      "label": "Expand",
                      "options": "rpc://app%23microsoft-d365-bc@1/entityFields?expandable=true",
                      "advanced": true,
                      "multiple": true
                    }
                  ]
                },
                "mappable": false,
                "required": true
              },
              {
                "help": "The maximum number of results to be worked with during one execution cycle.",
                "name": "limit",
                "type": "uinteger",
                "label": "Limit",
                "default": 2,
                "required": true
              }
            ]
          },
          "mappable": false,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "accountName": "microsoft-d365-bc",
      "description": "Triggers when a new record has been created.",
      "expectJsonc": null,
      "samplesJsonc": null,
      "altAccountName": "microsoft-d365-bc2",
      "interfaceJsonc": "[\n    \"rpc://interfaceEntities\",\n    {\n        \"name\": \"@odata.context\",\n        \"type\": \"text\",\n        \"label\": \"OData Context\"\n    },\n    {\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\",\n        \"label\": \"OData eTag\"\n    }\n]",
      "parametersJsonc": "[\n    {\n        \"name\": \"company\",\n        \"type\": \"select\",\n        \"label\": \"Company\",\n        \"mappable\": false,\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://companies\",\n            \"nested\": [\n                {\n                    \"name\": \"entity\",\n                    \"type\": \"select\",\n                    \"label\": \"Record Type\",\n                    \"required\": true,\n                    \"mappable\": false,\n                    \"options\": {\n                        \"store\": \"rpc://entities\",\n                        \"nested\": [\n                            {\n                                \"name\": \"targetField\",\n                                \"type\": \"select\",\n                                \"required\": true,\n                                \"label\": \"Trigger Field\",\n                                \"help\": \"The date field in the specified record type to be triggered by.\",\n                                \"options\": \"rpc://entityFields?dates=true\"\n                            },\n                            {\n                                \"name\": \"labelField\",\n                                \"type\": \"select\",\n                                \"label\": \"Label Field\",\n                                \"help\": \"The field used as label in the `Choose where to start` dialogue screen. If left empty, `ID` will be used.\",\n                                \"options\": \"rpc://entityFields\",\n                                \"default\": \"displayName\"\n                            },\n                            {\n                                \"name\": \"select\",\n                                \"type\": \"select\",\n                                \"label\": \"Select\",\n                                \"multiple\": true,\n                                \"advanced\": true,\n                                \"options\": \"rpc://entityFields\",\n                                \"help\": \"Choose `Select all` to return all current fields.\\nDo not choose anything to return all fields, including any fields created in the future.\"\n                            },\n                            {\n                                \"name\": \"expand\",\n                                \"type\": \"select\",\n                                \"label\": \"Expand\",\n                                \"multiple\": true,\n                                \"advanced\": true,\n                                \"options\": \"rpc://entityFields?expandable=true\",\n                                \"help\": \"Fields to be expanded. Use this parameter to retrieve linked entity.\"\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"name\": \"limit\",\n                    \"type\": \"uinteger\",\n                    \"label\": \"Limit\",\n                    \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n                    \"default\": 2,\n                    \"required\": true\n                }\n            ]\n        }\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "searchEntities": {
      "id": 115760,
      "api": {
        "qs": {
          "$expand": "{{if(parameters.expand, join(parameters.expand, ','))}}",
          "$filter": "{{prepareFilter(parameters.filter)}}",
          "$select": "{{if(parameters.select, join(parameters.select, ','))}}",
          "$orderby": "{{prepareOrderBy(parameters.orderby)}}"
        },
        "url": "/companies({{parameters.company}})/{{parameters.entity}}",
        "method": "GET",
        "headers": {
          "Prefer": "odata.maxpagesize=100"
        },
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseResponse(item)}}",
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 7,
      "crud": "read",
      "name": "searchEntities",
      "epoch": null,
      "flags": {},
      "label": "Search Records",
      "scope": [],
      "expect": [
        {
          "name": "company",
          "type": "select",
          "label": "Company",
          "options": {
            "store": "rpc://app%23microsoft-d365-bc@1/companies",
            "nested": [
              {
                "name": "entity",
                "type": "select",
                "label": "Record Type",
                "options": {
                  "store": "rpc://app%23microsoft-d365-bc@1/entities",
                  "nested": [
                    {
                      "name": "filter",
                      "type": "filter",
                      "label": "Filter",
                      "options": {
                        "store": "rpc://app%23microsoft-d365-bc@1/entityFields?filter=true",
                        "operators": [
                          {
                            "label": "String",
                            "options": [
                              {
                                "label": "Equal",
                                "value": "text::eq"
                              },
                              {
                                "label": "Not Equal",
                                "value": "text::ne"
                              },
                              {
                                "label": "Contains",
                                "value": "text::contains"
                              },
                              {
                                "label": "Starts With",
                                "value": "text::startswith"
                              },
                              {
                                "label": "Ends With",
                                "value": "text::endswith"
                              }
                            ]
                          },
                          {
                            "label": "Number",
                            "options": [
                              {
                                "label": "Equal",
                                "value": "number::eq"
                              },
                              {
                                "label": "Not Equal",
                                "value": "number::ne"
                              },
                              {
                                "label": "Greater than",
                                "value": "number::gt"
                              },
                              {
                                "label": "Greater than or Equal to",
                                "value": "number::ge"
                              },
                              {
                                "label": "Less than",
                                "value": "number::lt"
                              },
                              {
                                "label": "Less than or Equal to",
                                "value": "number::le"
                              }
                            ]
                          },
                          {
                            "label": "Date",
                            "options": [
                              {
                                "label": "Earlier than",
                                "value": "date::lt"
                              },
                              {
                                "label": "Earlier than or Equal to",
                                "value": "date::le"
                              },
                              {
                                "label": "Later than",
                                "value": "date::gt"
                              },
                              {
                                "label": "Later than or Equal to",
                                "value": "date::ge"
                              }
                            ]
                          },
                          {
                            "label": "Boolean",
                            "options": [
                              {
                                "label": "Equal",
                                "value": "bool::eq"
                              }
                            ]
                          },
                          {
                            "label": "Guid",
                            "options": [
                              {
                                "label": "Equal",
                                "value": "guid::eq"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "help": "Set this field to order response.",
                      "name": "orderby",
                      "spec": {
                        "spec": [
                          {
                            "name": "field",
                            "type": "select",
                            "label": "Field",
                            "options": "rpc://app%23microsoft-d365-bc@1/entityFields",
                            "required": true
                          },
                          {
                            "name": "order",
                            "type": "select",
                            "label": "Order",
                            "options": [
                              {
                                "label": "Ascending",
                                "value": "asc"
                              },
                              {
                                "label": "Descending",
                                "value": "desc"
                              }
                            ],
                            "required": true
                          }
                        ],
                        "type": "collection",
                        "label": "Order"
                      },
                      "type": "array",
                      "label": "Order by",
                      "labels": {
                        "add": "Add Order"
                      },
                      "advanced": true
                    },
                    {
                      "help": "Choose `Select all` to return all current fields.\nDo not choose anything to return all fields, including any fields created in the future.",
                      "name": "select",
                      "type": "select",
                      "label": "Select",
                      "options": "rpc://app%23microsoft-d365-bc@1/entityFields",
                      "advanced": true,
                      "multiple": true
                    },
                    {
                      "help": "Fields to be expanded. Use this parameter to retrieve linked entity.",
                      "name": "expand",
                      "type": "select",
                      "label": "Expand",
                      "options": "rpc://app%23microsoft-d365-bc@1/entityFields?expandable=true",
                      "advanced": true,
                      "multiple": true
                    }
                  ]
                },
                "mappable": false,
                "required": true
              },
              {
                "help": "Maximum number of returned results (bundles). The response might be limited by Microsoft Dynamics Business Central API.",
                "name": "limit",
                "type": "uinteger",
                "label": "Limit",
                "default": 10
              }
            ]
          },
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "microsoft-d365-bc",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/companies({{parameters.company}})/{{parameters.entity}}\",\n    \"method\": \"GET\",\n    \"headers\": {\n        \"Prefer\": \"odata.maxpagesize=100\"\n    },\n    \"qs\": {\n        \"$filter\": \"{{prepareFilter(parameters.filter)}}\",\n        \"$select\": \"{{if(parameters.select, join(parameters.select, ','))}}\",\n        \"$expand\": \"{{if(parameters.expand, join(parameters.expand, ','))}}\",\n        \"$orderby\": \"{{prepareOrderBy(parameters.orderby)}}\"\n    },\n    \"response\": {\n        \"limit\": \"{{parameters.limit}}\",\n        \"iterate\": \"{{body.value}}\",\n        \"output\": \"{{parseResponse(item)}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23microsoft-d365-bc@1/interfaceEntities",
        {
          "name": "@odata.context",
          "type": "text",
          "label": "OData Context"
        },
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "OData eTag"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[]",
      "accountName": "microsoft-d365-bc",
      "description": "Retrieves a list of records with simple filter builder.",
      "expectJsonc": "[\n    {\n        \"name\": \"company\",\n        \"type\": \"select\",\n        \"label\": \"Company\",\n        \"mappable\": false,\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://companies\",\n            \"nested\": [\n                {\n                    \"name\": \"entity\",\n                    \"type\": \"select\",\n                    \"label\": \"Record Type\",\n                    \"required\": true,\n                    \"mappable\": false,\n                    \"options\": {\n                        \"store\": \"rpc://entities\",\n                        \"nested\": [\n                            {\n                                \"name\": \"filter\",\n                                \"type\": \"filter\",\n                                \"label\": \"Filter\",\n                                \"options\": {\n                                    \"store\": \"rpc://entityFields?filter=true\",\n                                    \"operators\": [\n                                        {\n                                            \"label\": \"String\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"Equal\",\n                                                    \"value\": \"text::eq\"\n                                                },\n                                                {\n                                                    \"label\": \"Not Equal\",\n                                                    \"value\": \"text::ne\"\n                                                },\n                                                {\n                                                    \"label\": \"Contains\",\n                                                    \"value\": \"text::contains\"\n                                                },\n                                                {\n                                                    \"label\": \"Starts With\",\n                                                    \"value\": \"text::startswith\"\n                                                },\n                                                {\n                                                    \"label\": \"Ends With\",\n                                                    \"value\": \"text::endswith\"\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"label\": \"Number\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"Equal\",\n                                                    \"value\": \"number::eq\"\n                                                },\n                                                {\n                                                    \"label\": \"Not Equal\",\n                                                    \"value\": \"number::ne\"\n                                                },\n                                                {\n                                                    \"label\": \"Greater than\",\n                                                    \"value\": \"number::gt\"\n                                                },\n                                                {\n                                                    \"label\": \"Greater than or Equal to\",\n                                                    \"value\": \"number::ge\"\n                                                },\n                                                {\n                                                    \"label\": \"Less than\",\n                                                    \"value\": \"number::lt\"\n                                                },\n                                                {\n                                                    \"label\": \"Less than or Equal to\",\n                                                    \"value\": \"number::le\"\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"label\": \"Date\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"Earlier than\",\n                                                    \"value\": \"date::lt\"\n                                                },\n                                                {\n                                                    \"label\": \"Earlier than or Equal to\",\n                                                    \"value\": \"date::le\"\n                                                },\n                                                {\n                                                    \"label\": \"Later than\",\n                                                    \"value\": \"date::gt\"\n                                                },\n                                                {\n                                                    \"label\": \"Later than or Equal to\",\n                                                    \"value\": \"date::ge\"\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"label\": \"Boolean\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"Equal\",\n                                                    \"value\": \"bool::eq\"\n                                                }\n                                            ]\n                                        },\n                                        {\n                                            \"label\": \"Guid\",\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"Equal\",\n                                                    \"value\": \"guid::eq\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            },\n                            {\n                                \"name\": \"orderby\",\n                                \"type\": \"array\",\n                                \"label\": \"Order by\",\n                                \"advanced\": true,\n                                \"help\": \"Set this field to order response.\",\n                                \"spec\": {\n                                    \"type\": \"collection\",\n                                    \"label\": \"Order\",\n                                    \"spec\": [\n                                        {\n                                            \"name\": \"field\",\n                                            \"type\": \"select\",\n                                            \"label\": \"Field\",\n                                            \"required\": true,\n                                            \"options\": \"rpc://entityFields\"\n                                        },\n                                        {\n                                            \"name\": \"order\",\n                                            \"type\": \"select\",\n                                            \"label\": \"Order\",\n                                            \"required\": true,\n                                            \"options\": [\n                                                {\n                                                    \"label\": \"Ascending\",\n                                                    \"value\": \"asc\"\n                                                },\n                                                {\n                                                    \"label\": \"Descending\",\n                                                    \"value\": \"desc\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                },\n                                \"labels\": {\n                                    \"add\": \"Add Order\"\n                                }\n                            },\n                            {\n                                \"name\": \"select\",\n                                \"type\": \"select\",\n                                \"label\": \"Select\",\n                                \"multiple\": true,\n                                \"options\": \"rpc://entityFields\",\n                                \"help\": \"Choose `Select all` to return all current fields.\\nDo not choose anything to return all fields, including any fields created in the future.\",\n                                \"advanced\": true\n                            },\n                            {\n                                \"name\": \"expand\",\n                                \"type\": \"select\",\n                                \"label\": \"Expand\",\n                                \"multiple\": true,\n                                \"options\": \"rpc://entityFields?expandable=true\",\n                                \"help\": \"Fields to be expanded. Use this parameter to retrieve linked entity.\",\n                                \"advanced\": true\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"name\": \"limit\",\n                    \"label\": \"Limit\",\n                    \"type\": \"uinteger\",\n\t\t\t\t\t\"help\": \"Maximum number of returned results (bundles). The response might be limited by Microsoft Dynamics Business Central API.\",\n                    \"default\": 10\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": "{}",
      "altAccountName": "microsoft-d365-bc2",
      "interfaceJsonc": "[\n    \"rpc://interfaceEntities\",\n    {\n        \"name\": \"@odata.context\",\n        \"type\": \"text\",\n        \"label\": \"OData Context\"\n    },\n    {\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\",\n        \"label\": \"OData eTag\"\n    }\n]",
      "parametersJsonc": "[]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "searchEntitiesAdvanced": {
      "id": 123578,
      "api": {
        "qs": {
          "$apply": "{{parameters.apply}}",
          "$expand": "{{parameters.expand}}",
          "$filter": "{{parameters.filter}}",
          "$select": "{{parameters.select}}",
          "$orderby": "{{parameters.orderby}}"
        },
        "url": "/companies({{parameters.company}})/{{parameters.entity}}",
        "method": "GET",
        "headers": {
          "Prefer": "odata.maxpagesize=100"
        },
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseResponse(item)}}",
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 7,
      "crud": "read",
      "name": "searchEntitiesAdvanced",
      "epoch": null,
      "flags": {},
      "label": "Search Records (Advanced)",
      "scope": [],
      "expect": [
        {
          "name": "company",
          "type": "select",
          "label": "Company",
          "options": {
            "store": "rpc://app%23microsoft-d365-bc@1/companies",
            "nested": [
              {
                "name": "entity",
                "type": "select",
                "label": "Record Type",
                "options": "rpc://app%23microsoft-d365-bc@1/entities",
                "mappable": false,
                "required": true
              },
              {
                "help": "The filter parameter value. Use [this](https://learn.microsoft.com/en-us/power-apps/developer/data-platform/webapi/query-data-web-api) article to get available values.",
                "name": "filter",
                "type": "text",
                "label": "Filter"
              },
              {
                "help": "A comma-separated fields to be returned. Use this parameter to optimize the search.",
                "name": "select",
                "type": "text",
                "label": "Select"
              },
              {
                "help": "A comma-separated fields to be expanded. Use this parameter to retrieve linked entity.",
                "name": "expand",
                "type": "text",
                "label": "Expand"
              },
              {
                "help": "Set this field to order response.",
                "name": "orderby",
                "type": "text",
                "label": "Order by"
              },
              {
                "help": "By using `$apply` you can aggregate and group your data dynamically. Check [this](https://learn.microsoft.com/en-us/power-apps/developer/data-platform/webapi/query-data-web-api) article to get available values.",
                "name": "apply",
                "type": "text",
                "label": "Apply"
              },
              {
                "help": "Maximum number of returned results (bundles). The response might be limited by Microsoft Dynamics Business Central API.",
                "name": "limit",
                "type": "uinteger",
                "label": "Limit",
                "default": 10
              }
            ]
          },
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "microsoft-d365-bc",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/companies({{parameters.company}})/{{parameters.entity}}\",\n    \"method\": \"GET\",\n    \"headers\": {\n        \"Prefer\": \"odata.maxpagesize=100\"\n    },\n    \"qs\": {\n        \"$filter\": \"{{parameters.filter}}\",\n        \"$select\": \"{{parameters.select}}\",\n        \"$expand\": \"{{parameters.expand}}\",\n        \"$orderby\": \"{{parameters.orderby}}\",\n        \"$apply\": \"{{parameters.apply}}\"\n    },\n    \"response\": {\n        \"iterate\": \"{{body.value}}\",\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{parseResponse(item)}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23microsoft-d365-bc@1/interfaceEntities",
        {
          "name": "@odata.context",
          "type": "text",
          "label": "OData Context"
        },
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "OData eTag"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "microsoft-d365-bc",
      "description": "Retrieves a list of records with custom filter syntax.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"company\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Company\",\n\t\t\"mappable\": false,\n\t\t\"required\": true,\n\t\t\"options\": {\n\t\t\t\"store\": \"rpc://companies\",\n\t\t\t\"nested\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"entity\",\n\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\"label\": \"Record Type\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"mappable\": false,\n\t\t\t\t\t\"options\": \"rpc://entities\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"filter\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Filter\",\n\t\t\t\t\t\"help\": \"The filter parameter value. Use [this](https://learn.microsoft.com/en-us/power-apps/developer/data-platform/webapi/query-data-web-api) article to get available values.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"select\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Select\",\n\t\t\t\t\t\"help\": \"A comma-separated fields to be returned. Use this parameter to optimize the search.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"expand\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Expand\",\n\t\t\t\t\t\"help\": \"A comma-separated fields to be expanded. Use this parameter to retrieve linked entity.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"orderby\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Order by\",\n\t\t\t\t\t\"help\": \"Set this field to order response.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"apply\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Apply\",\n\t\t\t\t\t\"help\": \"By using `$apply` you can aggregate and group your data dynamically. Check [this](https://learn.microsoft.com/en-us/power-apps/developer/data-platform/webapi/query-data-web-api) article to get available values.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"limit\",\n\t\t\t\t\t\"label\": \"Limit\",\n\t\t\t\t\t\"type\": \"uinteger\",\n\t\t\t\t\t\"help\": \"Maximum number of returned results (bundles). The response might be limited by Microsoft Dynamics Business Central API.\",\n\t\t\t\t\t\"default\": 10\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": "microsoft-d365-bc2",
      "interfaceJsonc": "[\n    \"rpc://interfaceEntities\",\n    {\n        \"name\": \"@odata.context\",\n        \"type\": \"text\",\n        \"label\": \"OData Context\"\n    },\n    {\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\",\n        \"label\": \"OData eTag\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "microsoft-d365-bc": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://{{parameters.baseUrl}}/{{parameters.tenant}}/{{parameters.environment}}/{{parameters.endPoint}}/companies?$select=id",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {}
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.code",
              "request.body.client_secret",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://login.windows.net/{{parameters.tenant}}/oauth2/token",
          "body": {
            "code": "{{temp.code}}",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "authorization_code",
            "redirect_uri": "{{oauth.localRedirectUri}}",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            },
            "expires": "{{addSeconds(now, body.expires_on)}}"
          }
        },
        "refresh": {
          "log": {
            "sanitize": [
              "request.body.client_secret",
              "request.body.refresh_token",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://login.windows.net/{{parameters.tenant}}/oauth2/token",
          "body": {
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "refresh_token",
            "redirect_uri": "{{oauth.localRedirectUri}}",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}",
            "refresh_token": "{{data.refreshToken}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            },
            "expires": "{{addSeconds(now, body.expires_on)}}"
          },
          "condition": "{{data.expires < addMinutes(now, 1)}}"
        },
        "authorize": {
          "qs": {
            "scope": "{{join(distinct(merge(oauth.scope, ifempty(parameters.scopes, emptyarray))), ' ')}}",
            "resource": "https://api.businesscentral.dynamics.com",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "redirect_uri": "{{oauth.localRedirectUri}}",
            "response_type": "code"
          },
          "log": {
            "sanitize": [
              "response.query.code",
              "request.body.client_secret",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://login.windows.net/{{parameters.tenant}}/oauth2/authorize",
          "response": {
            "temp": {
              "code": "{{query.code}}"
            }
          }
        }
      },
      "rev": 6,
      "name": "microsoft-d365-bc",
      "type": "oauth",
      "label": "Microsoft Dynamics 365 Business Central (Authorization Code Flow)",
      "scope": [
        "https://api.businesscentral.dynamics.com/.default"
      ],
      "scopes": {},
      "aliasTo": null,
      "appName": "microsoft-d365-bc",
      "install": {},
      "apiJsonc": "{\n    \"authorize\": {\n        \"qs\": {\n            \"resource\": \"https://api.businesscentral.dynamics.com\",\n            \"scope\": \"{{join(distinct(merge(oauth.scope, ifempty(parameters.scopes, emptyarray))), ' ')}}\",\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"redirect_uri\": \"{{oauth.localRedirectUri}}\",\n            \"response_type\": \"code\"\n        },\n        \"url\": \"https://login.windows.net/{{parameters.tenant}}/oauth2/authorize\",\n        \"response\": {\n            \"temp\": {\n                \"code\": \"{{query.code}}\"\n            }\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"response.query.code\",\n                \"request.body.client_secret\",\n                \"response.body.access_token\",\n                \"response.body.refresh_token\"\n            ]\n        }\n    },\n    \"token\": {\n        \"url\": \"https://login.windows.net/{{parameters.tenant}}/oauth2/token\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"code\": \"{{temp.code}}\",\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\",\n            \"redirect_uri\": \"{{oauth.localRedirectUri}}\",\n            \"grant_type\": \"authorization_code\"\n        },\n        \"type\": \"urlencoded\",\n        \"response\": {\n            \"data\": {\n                \"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n                \"accessToken\": \"{{body.access_token}}\",\n                \"refreshToken\": \"{{body.refresh_token}}\"\n            },\n            \"expires\": \"{{addSeconds(now, body.expires_on)}}\"\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.body.code\",\n                \"request.body.client_secret\",\n                \"response.body.access_token\",\n                \"response.body.refresh_token\"\n            ]\n        }\n    },\n    \"refresh\": {\n        \"condition\": \"{{data.expires < addMinutes(now, 1)}}\",\n        \"url\": \"https://login.windows.net/{{parameters.tenant}}/oauth2/token\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"grant_type\": \"refresh_token\",\n            \"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\",\n            \"redirect_uri\": \"{{oauth.localRedirectUri}}\",\n            \"refresh_token\": \"{{data.refreshToken}}\"\n        },\n        \"type\": \"urlencoded\",\n        \"response\": {\n            \"data\": {\n                \"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n                \"accessToken\": \"{{body.access_token}}\",\n                \"refreshToken\": \"{{body.refresh_token}}\"\n            },\n            \"expires\": \"{{addSeconds(now, body.expires_on)}}\"\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.body.client_secret\",\n                \"request.body.refresh_token\",\n                \"response.body.access_token\",\n                \"response.body.refresh_token\"\n            ]\n        }\n    },\n\t\"info\": {\n\t\t\"url\": \"https://{{parameters.baseUrl}}/{{parameters.tenant}}/{{parameters.environment}}/{{parameters.endPoint}}/companies?$select=id\",\n\t\t\"headers\": {\n\t\t\t\"authorization\": \"Bearer {{connection.accessToken}}\"\n\t\t},\n\t\t\"response\": {},\n\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\n\t\t\t\t\"request.headers.authorization\"\n\t\t\t]\n\t\t}\n\t}\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory` > `App registrations`.",
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "required": true
        },
        {
          "help": "This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory` > `App registrations` > Your app > `Certificates & secrets`.",
          "name": "clientSecret",
          "type": "password",
          "label": "Client Secret",
          "required": true
        },
        {
          "help": "Host URL. For example: `api.businesscentral.dynamics.com/v2.0/`.",
          "name": "baseUrl",
          "type": "text",
          "label": "Base URL",
          "default": "api.businesscentral.dynamics.com/v2.0/",
          "required": true
        },
        {
          "help": "This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory`.",
          "name": "tenant",
          "type": "text",
          "label": "Tenant ID",
          "required": true
        },
        {
          "help": "This can be found in Microsoft Dynamics 365 Business Central Admin Panel under the `Environments` tab.",
          "name": "environment",
          "type": "text",
          "label": "Environment",
          "required": true
        },
        {
          "name": "endPoint",
          "type": "text",
          "label": "Endpoint",
          "default": "/api/v2.0/",
          "required": true
        },
        {
          "help": "Use this to get an access to extra scopes.",
          "name": "scopes",
          "type": "array",
          "label": "Additional Scopes",
          "labels": {
            "add": "Add scope"
          },
          "advanced": true
        }
      ],
      "scopeJsonc": "[\n    \"https://api.businesscentral.dynamics.com/.default\"\n]",
      "installSpec": [],
      "scopesJsonc": "{}",
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"help\": \"This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory` > `App registrations`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"password\",\n        \"label\": \"Client Secret\",\n        \"help\": \"This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory` > `App registrations` > Your app > `Certificates & secrets`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"baseUrl\",\n        \"type\": \"text\",\n        \"label\": \"Base URL\",\n        \"required\": true,\n        \"default\": \"api.businesscentral.dynamics.com/v2.0/\",\n        \"help\": \"Host URL. For example: `api.businesscentral.dynamics.com/v2.0/`.\"\n    },\n    {\n        \"name\": \"tenant\",\n        \"type\": \"text\",\n        \"label\": \"Tenant ID\",\n        \"help\": \"This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"environment\",\n        \"type\": \"text\",\n        \"label\": \"Environment\",\n        \"help\": \"This can be found in Microsoft Dynamics 365 Business Central Admin Panel under the `Environments` tab.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"endPoint\",\n        \"type\": \"text\",\n        \"label\": \"Endpoint\",\n        \"required\": true,\n        \"default\": \"/api/v2.0/\"\n    },\n    {\n        \"name\": \"scopes\",\n        \"label\": \"Additional Scopes\",\n        \"type\": \"array\",\n        \"help\": \"Use this to get an access to extra scopes.\",\n        \"advanced\": true,\n        \"labels\": {\n            \"add\": \"Add scope\"\n        }\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    },
    "microsoft-d365-bc2": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://{{parameters.baseUrl}}/{{parameters.tenant}}/{{parameters.environment}}/{{parameters.endPoint}}/companies?$select=id",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {}
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.client_secret",
              "response.body.access_token"
            ]
          },
          "url": "https://login.microsoftonline.com/{{parameters.tenant}}/oauth2/v2.0/token",
          "body": {
            "scope": "https://api.businesscentral.dynamics.com/.default",
            "client_id": "{{parameters.clientId}}",
            "grant_type": "client_credentials",
            "client_secret": "{{parameters.clientSecret}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}"
            }
          },
          "condition": "{{if(data.accessToken, data.expires < addMinutes(now, 1), true)}}"
        }
      },
      "rev": 5,
      "name": "microsoft-d365-bc2",
      "type": "oauth",
      "label": "Microsoft Dynamics 365 Business Central (Client Credentials Flow)",
      "scope": [
        "https://api.businesscentral.dynamics.com/.default"
      ],
      "scopes": {},
      "aliasTo": null,
      "appName": "microsoft-d365-bc",
      "install": {},
      "apiJsonc": "{\n\t\"token\": {\n\t\t\"condition\": \"{{if(data.accessToken, data.expires < addMinutes(now, 1), true)}}\",\n\t\t\"url\": \"https://login.microsoftonline.com/{{parameters.tenant}}/oauth2/v2.0/token\",\n\t\t\"method\": \"POST\",\n\t\t\"body\": {\n\t\t\t\"client_id\": \"{{parameters.clientId}}\",\n\t\t\t\"client_secret\": \"{{parameters.clientSecret}}\",\n\t\t\t\"scope\": \"https://api.businesscentral.dynamics.com/.default\",\n\t\t\t\"grant_type\": \"client_credentials\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"response\": {\n\t\t\t\"data\": {\n\t\t\t\t\"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n\t\t\t\t\"accessToken\": \"{{body.access_token}}\"\n\t\t\t}\n\t\t},\n\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\n\t\t\t\t\"request.body.client_secret\",\n\t\t\t\t\"response.body.access_token\"\n\t\t\t]\n\t\t}\n\t},\n\t\"info\": {\n\t\t\"url\": \"https://{{parameters.baseUrl}}/{{parameters.tenant}}/{{parameters.environment}}/{{parameters.endPoint}}/companies?$select=id\",\n\t\t\"headers\": {\n\t\t\t\"authorization\": \"Bearer {{connection.accessToken}}\"\n\t\t},\n\t\t\"response\": {},\n\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\n\t\t\t\t\"request.headers.authorization\"\n\t\t\t]\n\t\t}\n\t}\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory` > `App registrations`.",
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "required": true
        },
        {
          "help": "This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory` > `App registrations` > Your app > `Certificates & secrets`.",
          "name": "clientSecret",
          "type": "password",
          "label": "Client Secret",
          "required": true
        },
        {
          "help": "Host URL. For example: `api.businesscentral.dynamics.com/v2.0/`.",
          "name": "baseUrl",
          "type": "text",
          "label": "Base URL",
          "default": "api.businesscentral.dynamics.com/v2.0/",
          "required": true
        },
        {
          "help": "This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory`.",
          "name": "tenant",
          "type": "text",
          "label": "Tenant ID",
          "required": true
        },
        {
          "help": "This can be found in Microsoft Dynamics 365 Business Central Admin Panel under the `Environments` tab.",
          "name": "environment",
          "type": "text",
          "label": "Environment",
          "required": true
        },
        {
          "name": "endPoint",
          "type": "text",
          "label": "Endpoint",
          "default": "/api/v2.0/",
          "required": true
        },
        {
          "help": "Use this to get an access to extra scopes.",
          "name": "scopes",
          "type": "array",
          "label": "Additional Scopes",
          "labels": {
            "add": "Add scope"
          },
          "advanced": true
        }
      ],
      "scopeJsonc": "[\n    \"https://api.businesscentral.dynamics.com/.default\"\n]",
      "installSpec": [],
      "scopesJsonc": null,
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"help\": \"This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory` > `App registrations`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"password\",\n        \"label\": \"Client Secret\",\n        \"help\": \"This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory` > `App registrations` > Your app > `Certificates & secrets`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"baseUrl\",\n        \"type\": \"text\",\n        \"label\": \"Base URL\",\n        \"required\": true,\n        \"default\": \"api.businesscentral.dynamics.com/v2.0/\",\n        \"help\": \"Host URL. For example: `api.businesscentral.dynamics.com/v2.0/`.\"\n    },\n    {\n        \"name\": \"tenant\",\n        \"type\": \"text\",\n        \"label\": \"Tenant ID\",\n        \"help\": \"This can be found in the [Microsoft Azure Portal](https://portal.azure.com) under the `Entra Active Directory`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"environment\",\n        \"type\": \"text\",\n        \"label\": \"Environment\",\n        \"help\": \"This can be found in Microsoft Dynamics 365 Business Central Admin Panel under the `Environments` tab.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"endPoint\",\n        \"type\": \"text\",\n        \"label\": \"Endpoint\",\n        \"required\": true,\n        \"default\": \"/api/v2.0/\"\n    },\n    {\n        \"name\": \"scopes\",\n        \"label\": \"Additional Scopes\",\n        \"type\": \"array\",\n        \"help\": \"Use this to get an access to extra scopes.\",\n        \"advanced\": true,\n        \"labels\": {\n            \"add\": \"Add scope\"\n        }\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"https://{{connection.baseUrl}}/{{connection.tenant}}/{{connection.environment}}/{{connection.endPoint}}\",\n    \"headers\": {\n        \"Authorization\": \"Bearer {{connection.accessToken}}\"\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.error.message}}\",\n            \"429\": {\n                \"type\": \"RateLimitError\",\n                \"message\": \"[429] The maximum number of requests per minute was exceeded.\\n\\nThe limits are 300 requests per minute in the Sandbox environment and 600 requests per minute in the Production environment.\\n\\nIn the future, to increase throughput, the service will change this per-environment limit to a per-user limit.\\n\\nFor more info please consult the FAQ on Microsoft Dynamics 365 Business Central API documentation page at the following address:\\nhttps://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/operational-limits-online#FAQsUser.\"\n            }\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    }\n}",
  "countries": null,
  "_functions": {
    "nameToLabel": {
      "rev": 3,
      "code": "function nameToLabel(str) {\n    if (typeof str !== \"string\") return str;\n    //author: KB\n    // used in parseInterface, parseExpect and custom Record types for label\n\n    // attribute names\n    const abrv = ['Id', 'Url', 'Dff', 'Gdf', 'Dm', 'Uri'];\n    const name = str\n        // custom records type labels\n        .replace(/_c$/, '').replace('_', ' ')\n        // Capitalize the first character\n        .replace(str.charAt(0), str.charAt(0).toUpperCase());\n    const nameArr = name.split(/(?<=[a-z\\d])(?=[A-Z])|(?<=[A-Z])(?=[A-Z][a-z])|(?<=[a-z])(?=[\\d])/);\n\n    return nameArr.map(word => {\n        if (abrv.includes(word)) return word.toUpperCase();\n        return word;\n    }).join(' ');\n}",
      "name": "nameToLabel",
      "test": "it('should return str when argument is missing or has an invalid type', () => {\r\n    const inputOutput = [, null, undefined, 1, true, false];\r\n    inputOutput.forEach((pair) => {\r\n        assert.strictEqual(nameToLabel(pair), pair)\r\n    });\r\n    const inputOutputArrObj = [['a', 'b', 'c'], { \"age\": 1 }];\r\n    inputOutputArrObj.forEach((pair) => {\r\n        assert.deepStrictEqual(nameToLabel(pair), pair)\r\n    });\r\n});\r\n\r\nit('should handle selected attribute names (abrv)', () => {\r\n    const input = 'IdUrlDmDffGdfUri';\r\n    const output = 'ID URL DM DFF GDF URI';\r\n    assert.strictEqual(nameToLabel(input), output);\r\n});\r\n\r\nit('should handle possible word variations in combination with selected attribute names (abrv)', () => {\r\n    const inputOutputPairs = [[\"userId\", \"User ID\"], [\"imageUrl\", \"Image URL\"], [\"redirectUri\", \"Redirect URI\"], [\"customDm\", \"Custom DM\"], [\"customDff\", \"Custom DFF\"], [\"customGdf\", \"Custom GDF\"]]\r\n    inputOutputPairs.forEach((pair) => {\r\n        assert.strictEqual(nameToLabel(pair.at(0)), pair.at(1))\r\n    })\r\n});\r\n\r\nit('should handle possible word variations without selected attribute names (abrv)', () => {\r\n    const inputOutputPairs = [[\"text\", \"Text\"], [\"text123\", \"Text 123\"], , [\"text-123\", \"Text-123\"]]\r\n    inputOutputPairs.forEach((pair) => {\r\n        assert.strictEqual(nameToLabel(pair.at(0)), pair.at(1))\r\n    })\r\n});",
      "appName": "microsoft-d365-bc",
      "arguments": "(str)",
      "appVersion": 1
    },
    "findEnumType": {
      "rev": 16,
      "code": "function findEnumType(enumTypes, name) {\n    if (!Array.isArray(enumTypes) || typeof name !== 'string') {\n        throw new Error('Impossible to gather Resources information', 500);\n    };\n\n    if (!name.startsWith('Microsoft.NAV.')) return undefined;\n\n    const typeName = name.replace('Microsoft.NAV.', '');\n    const target = enumTypes.find((enumType) => enumType._attributes.Name === typeName);\n    if (!target) return undefined;\n\n    return target.Member\n        .map(({ _attributes: { Name, Value } }) => ({\n            label: Name,\n            value: Value,\n        }));\n}",
      "name": "findEnumType",
      "test": "it('should throw error on invalid input', () => {\r\n    assert.throws(() => { findEnumType() }, Error, 'Impossible to gather Resources information');\r\n    assert.throws(() => { findEnumType(null) }, Error, 'Impossible to gather Resources information');\r\n    assert.throws(() => { findEnumType(undefined) }, Error, 'Impossible to gather Resources information');\r\n    assert.throws(() => { findEnumType([], null) }, Error, 'Impossible to gather Resources information');\r\n    assert.throws(() => { findEnumType([], undefined) }, Error, 'Impossible to gather Resources information');\r\n});\r\n\r\nit('should return undefined if name not starts with Microsoft.NAV.', () => {\r\n    const enumTypes = [];\r\n    const name = 'contact';\r\n\r\n    assert.strictEqual(findEnumType(enumTypes, name), undefined);\r\n});\r\n\r\nit('should return undefined if target not found', () => {\r\n    const enumTypes = [\r\n        {\r\n            _attributes: { Name: 'blockType' },\r\n        }\r\n    ];\r\n    const name = 'Microsoft.NAV.contactType';\r\n\r\n    assert.strictEqual(findEnumType(enumTypes, name), undefined);\r\n});\r\n\r\nit('should return undefined if target not found', () => {\r\n    const enumTypes = [\r\n        {\r\n            _attributes: { Name: 'contactType' },\r\n            Member: [\r\n                {\r\n                    _attributes: {\r\n                        Name: 'Company',\r\n                        Value: 1,\r\n                    },\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n    const name = 'Microsoft.NAV.contactType';\r\n\r\n    const output = [\r\n        {\r\n            label: 'Company',\r\n            value: 1,\r\n        }\r\n    ];\r\n\r\n    assert.deepStrictEqual(findEnumType(enumTypes, name), output);\r\n});\r\n",
      "appName": "microsoft-d365-bc",
      "arguments": "(enumTypes, name)",
      "appVersion": 1
    },
    "parseMetadata": {
      "rev": 53,
      "code": "function parseMetadata(metadata, type, entity) {\n    if (!metadata || typeof metadata !== 'object') {\n        throw new Error('Impossible to gather Resources information', 500);\n    }\n\n    const {\n        EntityType: entityTypes,\n        EnumType: enumTypes,\n        ComplexType: complexTypes,\n    } = metadata[\"edmx:Edmx\"]?.[\"edmx:DataServices\"]?.at(0)?.Schema?.at(0) || {};\n\n    if (\n        !Array.isArray(entityTypes) ||\n        !Array.isArray(enumTypes) ||\n        !Array.isArray(complexTypes)\n    ) {\n        throw new Error('Impossible to gather Resources information', 500);\n    }\n\n    const entityType = entityTypes.find((entityType) => entityType._attributes.Name === entity);\n    if (!entityType) {\n        throw new Error('Impossible to gather Resources information', 500);\n    }\n\n    const entityKey = entityType.Key?.at(0)?.PropertyRef?.at(0)?._attributes.Name || 'id';\n    const typeMap = {\n        \"Edm.int64\": \"number\",\n        \"Edm.Date\": \"date\",\n        \"Edm.Guid\": \"uuid\",\n        \"Edm.String\": \"text\",\n        \"Edm.Boolean\": \"boolean\",\n        \"Edm.Decimal\": \"number\",\n        \"Edm.Int32\": \"number\",\n        \"Edm.Stream\": \"buffer\",\n        \"Edm.DateTimeOffset\": \"date\"\n    };\n\n    const readonlyFields = [\n        'lastModifiedDateTime'\n    ];\n\n    const fields = entityType.Property.reduce((array, entity) => {\n        if (type === 'create' && entity._attributes.Name === entityKey) {\n            return array;\n        }\n\n        if (type === 'update' && entity._attributes.Name === entityKey) {\n            array.push('rpc://idFinder');\n            return array;\n        }\n\n        const param = {\n            name: entity._attributes.Name,\n            type: typeMap[entity._attributes.Type],\n            label: iml.nameToLabel(entity._attributes.Name)\n        };\n\n        const isUpsert = ['create', 'update'].includes(type);\n        if (isUpsert) {\n            if (readonlyFields.includes(entity._attributes.Name)) return array;\n            param.required = (type === 'update' && entity._attributes.Name === entityKey);\n\n            if (entity._attributes.MaxLength) {\n                param.validate = { max: entity._attributes.MaxLength };\n            }\n        }\n\n        const isEnumType = entity._attributes.Type.startsWith('Microsoft.NAV.');\n        if (isEnumType) {\n            param.type = isUpsert ? 'select' : 'text';\n            if (isUpsert) {\n                param.options = iml.findEnumType(enumTypes, entity._attributes.Type);\n                param.dynamic = true;\n            }\n\n            array.push(param);\n            return array;\n        }\n\n        const isComplexType = entity._attributes.Type.startsWith('Collection(Microsoft.NAV.');\n        if (isComplexType) {\n            const spec = iml.findComplexType(complexTypes, entity._attributes.Type, type);\n            param.type = 'collection';\n            param.spec = spec;\n\n            array.push(param);\n            return array;\n        }\n\n        array.push(param);\n        return array;\n    }, []);\n\n    if (type === 'update') {\n        fields.push({\n            \"name\": \"etag\",\n            \"type\": \"text\",\n            \"label\": \"OData eTag\",\n            \"help\": \"Token to resolve update concurrency. If the eTag provided does not match the current eTag on the record, the record will not be updated.\",\n            \"advanced\": true\n        });\n    }\n\n    return fields;\n}",
      "name": "parseMetadata",
      "test": "const XMLEnvelope = (payload) => {\n    return { \"edmx:Edmx\": { \"edmx:DataServices\": [{ \"Schema\": [payload] }] } };\n}\n\nit('should throw error on invalid input', () => {\n    assert.throws(() => { parseMetadata('') }, Error, 'Impossible to gather Resources information');\n    assert.throws(() => { parseMetadata(null) }, Error, 'Impossible to gather Resources information');\n    assert.throws(() => { parseMetadata(undefined) }, Error, 'Impossible to gather Resources information');\n\n    const noEntity = XMLEnvelope({ \"EnumType\": [], \"ComplexType\": [] });\n    assert.throws(() => { parseMetadata(noEntity) }, Error, 'Impossible to gather Resources information');\n\n    const noEnum = XMLEnvelope({ \"EntityType\": [], \"ComplexType\": [] });\n    assert.throws(() => { parseMetadata(noEnum) }, Error, 'Impossible to gather Resources information');\n\n    const noComplex = XMLEnvelope({ \"EntityType\": [], \"EnumType\": [] });\n    assert.throws(() => { parseMetadata(noComplex) }, Error, 'Impossible to gather Resources information');\n});\n\nit('should throw error if entity type not found', () => {\n    const metadata = XMLEnvelope({ \"EntityType\": [], \"EnumType\": [], \"ComplexType\": [] });\n    const type = 'create';\n    const entity = 'contact';\n\n    assert.throws(() => { parseMetadata(metadata, type, entity) }, Error, 'Impossible to gather Resources information');\n});\n\nit('should skip entity key on create', () => {\n    const EntityType = [\n        {\n            _attributes: { Name: 'contact' },\n            Key: [{ PropertyRef: [{ _attributes: { Name: 'contactId' } }] }],\n            Property: [\n                {\n                    _attributes: {\n                        Name: 'contactId',\n                        Type: 'Edm.Guid',\n                    }\n                },\n                {\n                    _attributes: {\n                        Name: 'name',\n                        Type: 'Edm.String',\n                    }\n                },\n            ],\n        }\n    ];\n    const metadata = XMLEnvelope({ \"EntityType\": EntityType, \"EnumType\": [], \"ComplexType\": [] });\n    const type = 'create';\n    const entity = 'contact';\n\n    const output = [\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            required: false,\n        },\n    ];\n\n    assert.deepStrictEqual(parseMetadata(metadata, type, entity), output);\n});\n\nit('should add ID Finder for entity key on update', () => {\n    const EntityType = [\n        {\n            _attributes: { Name: 'contact' },\n            Property: [\n                {\n                    _attributes: {\n                        Name: 'id',\n                        Type: 'Edm.Guid',\n                    }\n                },\n            ],\n        }\n    ];\n    const metadata = XMLEnvelope({ \"EntityType\": EntityType, \"EnumType\": [], \"ComplexType\": [] });\n    const type = 'update';\n    const entity = 'contact';\n\n    const output = [\n        'rpc://idFinder',\n        {\n            \"name\": \"etag\",\n            \"type\": \"text\",\n            \"label\": \"OData eTag\",\n            \"help\": \"Token to resolve update concurrency. If the eTag provided does not match the current eTag on the record, the record will not be updated.\",\n            \"advanced\": true\n        }\n    ];\n\n    assert.deepStrictEqual(parseMetadata(metadata, type, entity), output);\n});\n\nit('should remove fields in blacklist when upsert', () => {\n    const EntityType = [\n        {\n            _attributes: { Name: 'contact' },\n            Property: [\n                {\n                    _attributes: {\n                        Name: 'lastModifiedDateTime',\n                        Type: 'Edm.Date',\n                    }\n                },\n            ],\n        }\n    ];\n    const metadata = XMLEnvelope({ \"EntityType\": EntityType, \"EnumType\": [], \"ComplexType\": [] });\n    const type = 'create';\n    const entity = 'contact';\n\n    const output = [];\n\n    assert.deepStrictEqual(parseMetadata(metadata, type, entity), output);\n});\n\nit('should output text for enum fields on interface', () => {\n    const EntityType = [\n        {\n            _attributes: { Name: 'contact' },\n            Property: [\n                {\n                    _attributes: {\n                        Name: 'type',\n                        Type: 'Microsoft.NAV.contactType',\n                    }\n                },\n            ],\n        }\n    ];\n    const metadata = XMLEnvelope({ \"EntityType\": EntityType, \"EnumType\": [], \"ComplexType\": [] });\n    const type = undefined;\n    const entity = 'contact';\n\n    const output = [\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Type',\n        },\n    ];\n\n    assert.deepStrictEqual(parseMetadata(metadata, type, entity), output);\n});\n\nit('should output enum fields on parameters', () => {\n    const EntityType = [\n        {\n            _attributes: { Name: 'contact' },\n            Property: [\n                {\n                    _attributes: {\n                        Name: 'type',\n                        Type: 'Microsoft.NAV.contactType',\n                    }\n                },\n            ],\n        }\n    ];\n    const EnumType = [\n        {\n            _attributes: { Name: 'contactType' },\n            Member: [\n                {\n                    _attributes: {\n                        Name: 'Company',\n                        Value: 1,\n                    },\n                }\n            ]\n        }\n    ];\n    const metadata = XMLEnvelope({ \"EntityType\": EntityType, \"EnumType\": EnumType, \"ComplexType\": [] });\n    const type = 'create';\n    const entity = 'contact';\n\n    const output = [\n        {\n            name: 'type',\n            type: 'select',\n            label: 'Type',\n            dynamic: true,\n            required: false,\n            options: [\n                {\n                    label: 'Company',\n                    value: 1,\n                }\n            ],\n        },\n    ];\n\n    assert.deepStrictEqual(parseMetadata(metadata, type, entity), output);\n});",
      "appName": "microsoft-d365-bc",
      "arguments": "(metadata, type, entity)",
      "appVersion": 1
    },
    "parseResponse": {
      "rev": 3,
      "code": "function parseResponse(parameters) {\n\tif (typeof parameters !== 'object' || parameters === null) {\n\t\treturn parameters;\n\t}\n\n\tif (Array.isArray(parameters)) {\n\t\treturn parameters.map(item => iml.parseResponse(item));\n\t}\n\n\tlet params = Object.assign({}, parameters);\n\n\tObject.entries(parameters).forEach(([key, value]) => {\n\t\tif (Array.isArray(value)) {\n\t\t\tparams[key] = value.map(item => iml.parseResponse(item));\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tparams[key] = iml.parseResponse(value);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst ISO_8601 = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:?\\d\\d)|Z)?)?)?)?$/i;\n\t\tconst isNumeric = /^-?\\d+$/;\n\t\t\n\t\tif (typeof value === 'string' && ISO_8601.test(value) && !isNumeric.test(value)) {\n\t\t\tparams[key] = new Date(value);\n\t\t\treturn;\n\t\t}\n\n\t\tconst empty_uuid = /^00000000-0000-0000-0000-000000000000$/\n\t\t\n\t\tif (typeof value === 'string' && empty_uuid.test(value)) {\n\t\t\tdelete params[key];\n\t\t\treturn;\n\t\t}\n\n\t});\n\n\treturn params;\n}",
      "name": "parseResponse",
      "test": "it('should return parameters when argument is missing or has an invalid type', () => {\r\n    const parameters = [, null, undefined, 1, 0, true, false, 'str'];\r\n    parameters.forEach((parameter) => {\r\n        assert.strictEqual(parseResponse(parameter), parameter)\r\n    });\r\n});\r\nit('should works when parameter is an array', () => {\r\n    const parameter = [];\r\n    assert.doesNotThrow(() => { parseResponse(parameter) }, Error)\r\n});\r\n\r\nit('should parse arrays in parameters', () => {\r\n    const parameters = {\r\n        array: [\r\n            { date: '2022-01-01T12:34:56.789Z', name: 'John' },\r\n            { date: '2022-01-01T12:34:56.789Z', name: 'Kate' }\r\n        ],\r\n    };\r\n\r\n    const output = {\r\n        array: [\r\n            { date: new Date('2022-01-01T12:34:56.789Z'), name: 'John' },\r\n            { date: new Date('2022-01-01T12:34:56.789Z'), name: 'Kate' },\r\n        ],\r\n    };\r\n\r\n    assert.deepStrictEqual(parseResponse(parameters), output);\r\n});\r\n\r\nit('should parse nested objects in parameters and remove empty_uuid', () => {\r\n    const parameters = {\r\n        obj: {\r\n            date: '2022-01-01T12:34:56.789Z',\r\n            uuid: '00000000-0000-0000-0000-000000000000',\r\n            name: 'John'\r\n        },\r\n    };\r\n\r\n    const output = {\r\n        obj: {\r\n            date: new Date('2022-01-01T12:34:56.789Z'),\r\n            name: 'John'\r\n        },\r\n    };\r\n\r\n    assert.deepStrictEqual(parseResponse(parameters), output);\r\n});\r\n\r\nit('should parse simple parameters object and remove uuid', () => {\r\n    const parameters = {\r\n        date: '2022-01-01T12:34:56.789Z',\r\n        uuid: '00000000-0000-0000-0000-000000000000',\r\n        startAt: '2022-01-10T12:34:56.789Z',\r\n        name: 'John'\r\n    };\r\n\r\n    const output = {\r\n        date: new Date('2022-01-01T12:34:56.789Z'),\r\n        startAt: new Date('2022-01-10T12:34:56.789Z'),\r\n        name: 'John'\r\n    };\r\n\r\n    assert.deepStrictEqual(parseResponse(parameters), output);\r\n});\r\nit('should parse complex parameters object and remove uuid', () => {\r\n    const parameters = {\r\n        date: '2022-01-01T12:34:56.789Z',\r\n        uuid: '00000000-0000-0000-0000-000000000000',\r\n        startAt: '2022-01-10T12:34:56.789Z',\r\n        name: 'John',\r\n        array: [\r\n            { date: '2022-01-01T12:34:56.789Z', name: 'John', uuid: '00000000-0000-0000-0000-000000000000' },\r\n            { date: '2022-01-01T12:34:56.789Z', name: 'Kate' }\r\n        ]\r\n    };\r\n\r\n    const output = {\r\n        date: new Date('2022-01-01T12:34:56.789Z'),\r\n        startAt: new Date('2022-01-10T12:34:56.789Z'),\r\n        name: 'John',\r\n        array: [\r\n            { date: new Date('2022-01-01T12:34:56.789Z'), name: 'John' },\r\n            { date: new Date('2022-01-01T12:34:56.789Z'), name: 'Kate' },\r\n        ],\r\n    };\r\n\r\n    assert.deepStrictEqual(parseResponse(parameters), output);\r\n});\r\n",
      "appName": "microsoft-d365-bc",
      "arguments": "(parameters)",
      "appVersion": 1
    },
    "prepareFilter": {
      "rev": 3,
      "code": "function prepareFilter(filter) {\n    if (!Array.isArray(filter) || filter.length === 0) return undefined;\n    return filter.map(criteria => (!criteria || !Array.isArray(criteria)) ? undefined : criteria.map(criterion => {\n        const [dataType, operand] = criterion.o.split(\"::\");\n        switch (dataType) {\n            case \"text\":\n                if (operand === \"contains\") {\n                    return `${criterion.a} eq '*${criterion.b}*'`;\n                }\n\n                if (operand === \"startswith\") {\n                    return `${criterion.a} eq '${criterion.b}*'`;\n                }\n\n                if (operand === \"endswith\") {\n                    return `${criterion.a} eq '*${criterion.b}'`;\n                }\n\n                return `${criterion.a} ${operand} '${criterion.b}'`;\n\n            case \"number\":\n                return `${criterion.a} ${operand} ${parseFloat(criterion.b)}`;\n\n            case \"date\":\n                return `${criterion.a} ${operand} ${new Date(criterion.b).toISOString()}`;\n\n            case \"bool\":\n                return `${criterion.a} ${operand} ${Boolean(criterion.b)}`;\n\n            case \"guid\":\n                return `${criterion.a} ${operand} ${criterion.b}`;\n        }\n    }).join(\" and \")).join(\" or \");\n}",
      "name": "prepareFilter",
      "test": "it('should return undefined on invalid input', () => {\r\n    const filters = [, [], 1, 0, true, false, {}, new Date()]\r\n    filters.forEach(e => {\r\n        assert.strictEqual(prepareFilter(e), undefined);\r\n\r\n    })\r\n});\r\n\r\nit('should handle simple text criteria with the operand \"contains\"', () => {\r\n    const filter = [\r\n        [\r\n            { a: 'field1', b: 'value1', o: 'text::contains' }\r\n        ]\r\n    ];\r\n    const output = \"field1 eq '*value1*'\";\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\n\r\nit('should handle simple text criteria with the operand \"endswith\"', () => {\r\n    const filter = [\r\n        [\r\n            { a: 'field1', b: 'value1', o: 'text::endswith' }\r\n        ]\r\n    ];\r\n    const output = \"field1 eq '*value1'\";\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\n\r\nit('should handle simple text criteria with the operand \"startswith\"', () => {\r\n    const filter = [\r\n        [\r\n            { a: 'field1', b: 'value1', o: 'text::startswith' }\r\n        ]\r\n    ];\r\n    const output = \"field1 eq 'value1*'\";\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\n\r\nit('should handle complex filter text criteria with the \"and\" operator', () => {\r\n    const filter = [\r\n        [\r\n            { a: 'field1', b: 'value1', o: 'text::eq' },\r\n            { a: 'field2', b: 'value2', o: 'text::contains' },\r\n            { a: 'field3', b: 'value3', o: 'text::startswith' },\r\n            { a: 'field4', b: 'value4', o: 'text::endswith' },\r\n\r\n        ]\r\n    ];\r\n    const output = \"field1 eq 'value1' and field2 eq '*value2*' and field3 eq 'value3*' and field4 eq '*value4'\";\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\n\r\nit('should handle complex filter text criteria with \"and\" and \"or\" operators', () => {\r\n    const filter = [\r\n        [\r\n            { a: 'field1', b: 'value1', o: 'text::eq' },\r\n            { a: 'field2', b: 'value2', o: 'text::contains' },\r\n        ],\r\n        [\r\n            { a: 'field3', b: 'value3', o: 'text::eq' },\r\n            { a: 'field4', b: 'value4', o: 'text::contains' },\r\n        ]\r\n    ];\r\n    const output = \"field1 eq 'value1' and field2 eq '*value2*' or field3 eq 'value3' and field4 eq '*value4*'\";\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\n\r\nit('should handle simple text criteria with the operand \"contains\"', () => {\r\n    const filter = [\r\n        [\r\n            { a: 'field1', b: 'value1', o: 'text::contains' }\r\n        ]\r\n    ];\r\n    const output = \"field1 eq '*value1*'\";\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\n\r\nit('should handle number criteria', () => {\r\n    const filter = [\r\n        [\r\n            { a: 'field1', b: '42', o: 'number::eq' },\r\n            { a: 'field2', b: '3.14', o: 'number::gt' },\r\n        ],\r\n    ];\r\n\r\n    const output = \"field1 eq 42 and field2 gt 3.14\";\r\n\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\n\r\nit('should handle date criteria', () => {\r\n    const filter = [\r\n        [\r\n            { \"a\": \"field1\", \"b\": \"2024-01-01\", \"o\": \"date::lt\" }\r\n        ],\r\n    ];\r\n\r\n    const output = `field1 lt ${new Date('2024-01-01').toISOString()}`;\r\n\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\nit('should handle bool criteria', () => {\r\n    const filter = [\r\n        [\r\n            { \"a\": \"field1\", \"b\": false, \"o\": \"bool::eq\" }\r\n        ],\r\n    ];\r\n\r\n    const output = `field1 eq false`;\r\n\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\nit('should handle guid criteria', () => {\r\n    const filter = [\r\n        [\r\n            { \"a\": \"field1\", \"b\": \"f98afb05-9c8e-ee11-be56-6045bdac9531\", \"o\": \"guid::eq\" }\r\n        ],\r\n    ];\r\n\r\n    const output = `field1 eq f98afb05-9c8e-ee11-be56-6045bdac9531`;\r\n\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});\r\nit('should handle complex filter', () => {\r\n    const filter = [\r\n        [\r\n            { \"a\": \"field1\", \"b\": \"f98afb05-9c8e-ee11-be56-6045bdac9531\", \"o\": \"guid::eq\" },\r\n            { \"a\": \"field1\", \"b\": false, \"o\": \"bool::eq\" }\r\n        ],\r\n        [\r\n            { \"a\": \"field1\", \"b\": \"2024-01-01\", \"o\": \"date::lt\" }\r\n        ],\r\n        [\r\n            { a: 'field1', b: '42', o: 'number::eq' }\r\n        ],\r\n        [\r\n            { a: 'field1', b: 'value1', o: 'text::eq' },\r\n            { a: 'field2', b: 'value2', o: 'text::contains' },\r\n            { a: 'field3', b: 'value3', o: 'text::startswith' },\r\n            { a: 'field4', b: 'value4', o: 'text::endswith' },\r\n        ]\r\n    ];\r\n\r\n    const output = `field1 eq f98afb05-9c8e-ee11-be56-6045bdac9531 and field1 eq false or field1 lt ${new Date('2024-01-01').toISOString()} or field1 eq 42 or field1 eq 'value1' and field2 eq '*value2*' and field3 eq 'value3*' and field4 eq '*value4'`;\r\n\r\n    assert.deepStrictEqual(prepareFilter(filter), output);\r\n});",
      "appName": "microsoft-d365-bc",
      "arguments": "(filter)",
      "appVersion": 1
    },
    "prepareOrderBy": {
      "rev": 3,
      "code": "function prepareOrderBy(fieldOrders) {\n    if (typeof fieldOrders === 'string') return fieldOrders;\n    if (!Array.isArray(fieldOrders) || fieldOrders.length === 0) return undefined;\n    return fieldOrders\n        .map((fieldOrder) => `${fieldOrder.field} ${fieldOrder.order}`)\n        .join(',');\n}",
      "name": "prepareOrderBy",
      "test": "it('should return undefined on invalid input', () => {\r\n    assert.strictEqual(prepareOrderBy(), undefined);\r\n    assert.strictEqual(prepareOrderBy([]), undefined);\r\n});\r\n\r\nit('should return the input if it is a string', () => {\r\n    const fieldOrders = 'abcd';\r\n    const output = fieldOrders;\r\n\r\n    assert.strictEqual(prepareOrderBy(fieldOrders), output);\r\n});\r\n\r\nit('should return the encoded string', () => {\r\n    const fieldOrders = [\r\n        {\r\n            field: 'name',\r\n            order: 'desc'\r\n        },\r\n        {\r\n            field: 'date',\r\n            order: 'asc'\r\n        }\r\n    ];\r\n    const output = 'name desc,date asc';\r\n\r\n    assert.strictEqual(prepareOrderBy(fieldOrders), output);\r\n});",
      "appName": "microsoft-d365-bc",
      "arguments": "(fieldOrders)",
      "appVersion": 1
    },
    "findComplexType": {
      "rev": 18,
      "code": "function findComplexType(complexTypes, name, type) {\n    if (!Array.isArray(complexTypes) || typeof name !== 'string') {\n        throw new Error('Impossible to gather Resources information', 500);\n    };\n\n    if (!name.includes('Microsoft.NAV.')) return undefined;\n\n    const typeName = name.replace('Collection(Microsoft.NAV.', '').replace(')', '');\n    const target = complexTypes.find((complexType) => complexType._attributes.Name === typeName);\n    if (!target) return undefined;\n\n    const typeMap = {\n        \"Edm.int64\": \"number\",\n        \"Edm.Date\": \"date\",\n        \"Edm.Guid\": \"uuid\",\n        \"Edm.String\": \"text\",\n        \"Edm.Boolean\": \"boolean\",\n        \"Edm.Decimal\": \"number\",\n        \"Edm.Int32\": \"number\",\n        \"Edm.Stream\": \"buffer\",\n        \"Edm.DateTimeOffset\": \"date\"\n    }\n\n    return target.Property.reduce((array, entity) => {\n        const param = {\n            name: entity._attributes.Name,\n            type: typeMap[entity._attributes.Type],\n            label: iml.nameToLabel(entity._attributes.Name)\n        };\n\n        const isUpsert = ['create', 'update'].includes(type);\n        if (isUpsert) {\n            if (entity._attributes.MaxLength) {\n                param.validate = { max: entity._attributes.MaxLength };\n            }\n        }\n\n        const isComplexType = entity._attributes.Type.startsWith('Collection(Microsoft.NAV.');\n        if (isComplexType) {\n            const spec = findComplexType(complexTypes, entity._attributes.Type, type);\n            param.type = 'collection';\n            param.spec = spec;\n\n            array.push(param);\n            return array;\n        }\n\n        array.push(param);\n        return array;\n    }, []);\n}",
      "name": "findComplexType",
      "test": "it('should throw error on invalid input', () => {\r\n    assert.throws(() => { findComplexType() }, Error, 'Impossible to gather Resources information');\r\n    assert.throws(() => { findComplexType(null) }, Error, 'Impossible to gather Resources information');\r\n    assert.throws(() => { findComplexType(undefined) }, Error, 'Impossible to gather Resources information');\r\n    assert.throws(() => { findComplexType([], null) }, Error, 'Impossible to gather Resources information');\r\n    assert.throws(() => { findComplexType([], undefined) }, Error, 'Impossible to gather Resources information');\r\n});\r\n\r\nit('should return undefined if name not starts with Collection(Microsoft.NAV.', () => {\r\n    const complexTypes = [];\r\n    const name = 'contact';\r\n\r\n    assert.strictEqual(findComplexType(complexTypes, name), undefined);\r\n});\r\n\r\nit('should return undefined if target not found', () => {\r\n    const complexTypes = [\r\n        {\r\n            _attributes: { Name: 'entityMetadataLabel' },\r\n        }\r\n    ];\r\n    const name = 'Collection(Microsoft.NAV.entityMetadata)';\r\n\r\n    assert.strictEqual(findComplexType(complexTypes, name), undefined);\r\n});\r\n\r\nit('should return undefined if target not found', () => {\r\n    const complexTypes = [\r\n        {\r\n            _attributes: { Name: 'entityMetadataLabel' },\r\n            Property: [\r\n                {\r\n                    _attributes: {\r\n                        Name: 'label',\r\n                        Type: 'Edm.String',\r\n                    },\r\n                },\r\n                {\r\n                    _attributes: {\r\n                        Name: 'language',\r\n                        Type: 'Edm.String',\r\n                    },\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            _attributes: { Name: 'entityMetadata' },\r\n            Property: [\r\n                {\r\n                    _attributes: {\r\n                        Name: 'name',\r\n                        Type: 'Edm.String',\r\n                    },\r\n                },\r\n                {\r\n                    _attributes: {\r\n                        Name: 'metadata',\r\n                        Type: 'Collection(Microsoft.NAV.entityMetadataLabel)',\r\n                    },\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n    const name = 'Collection(Microsoft.NAV.entityMetadata)';\r\n\r\n    const output = [\r\n        {\r\n            name: 'name',\r\n            type: 'text',\r\n            label: 'Name',\r\n        },\r\n        {\r\n            name: 'metadata',\r\n            type: 'collection',\r\n            label: 'Metadata',\r\n            spec: [\r\n                {\r\n                    name: 'label',\r\n                    type: 'text',\r\n                    label: 'Label',\r\n                },\r\n                {\r\n                    name: 'language',\r\n                    type: 'text',\r\n                    label: 'Language',\r\n                },\r\n            ]\r\n        }\r\n    ];\r\n\r\n    assert.deepStrictEqual(findComplexType(complexTypes, name), output);\r\n});\r\n",
      "appName": "microsoft-d365-bc",
      "arguments": "(complexTypes, name, type)",
      "appVersion": 1
    }
  },
  "approvedAt": "2024-01-25T14:23:07.131742+00:00",
  "categories": [],
  "opensource": false,
  "description": " ",
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "b517aed7fe2f0433909a6b9137962c07",
  "versionFull": "1.0.4",
  "compiledName": "microsoft-d365-bc",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": null,
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": null
}
