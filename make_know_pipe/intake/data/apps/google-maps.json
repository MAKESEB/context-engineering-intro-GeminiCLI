{
  "rev": 9,
  "base": {
    "qs": {
      "key": "{{connection.apiKey}}"
    },
    "log": {
      "sanitize": [
        "request.qs.key"
      ]
    },
    "baseUrl": "https://maps.googleapis.com/maps/api",
    "response": {
      "error": {
        "200": {
          "message": "{{body.error_message}}"
        },
        "message": "[{{statusCode}}] {{if(body.error_message, body.error_message, if(body.errorMessage, body.errorMessage, body.error.message))}}"
      },
      "valid": {
        "condition": "{{!body.error_message}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "google-maps",
  "_rpcs": {
    "getRoadsResponses": {
      "api": [
        {
          "response": {
            "output": [
              {
                "name": "location",
                "spec": [
                  {
                    "name": "latitude",
                    "type": "number",
                    "label": "Latitude"
                  },
                  {
                    "name": "longitude",
                    "type": "number",
                    "label": "Longitude"
                  }
                ],
                "type": "collection",
                "label": "Location"
              },
              {
                "name": "originalIndex",
                "type": "number",
                "label": "Original Index"
              },
              {
                "name": "placeId",
                "type": "text",
                "label": "Place ID"
              },
              {
                "name": "urlMap",
                "type": "url",
                "label": "URL Map"
              }
            ]
          },
          "condition": "{{parameters.select === 'snap' || parameters.select === 'near'}}"
        },
        {
          "response": {
            "output": [
              {
                "name": "snappedPoints",
                "spec": [
                  {
                    "name": "location",
                    "spec": [
                      {
                        "name": "latitude",
                        "type": "number",
                        "label": "Latitude"
                      },
                      {
                        "name": "longitude",
                        "type": "number",
                        "label": "Longitude"
                      }
                    ],
                    "type": "collection",
                    "label": "Location"
                  },
                  {
                    "name": "originalIndex",
                    "type": "number",
                    "label": "Original Index"
                  },
                  {
                    "name": "placeId",
                    "type": "text",
                    "label": "Place ID"
                  },
                  {
                    "name": "urlMap",
                    "type": "url",
                    "label": "URL Map"
                  }
                ],
                "type": "array",
                "label": "Snapped Points"
              },
              {
                "name": "speedLimits",
                "spec": [
                  {
                    "name": "placeId",
                    "type": "text",
                    "label": "Place ID"
                  },
                  {
                    "name": "speedLimit",
                    "type": "number",
                    "label": "Speed Limit"
                  },
                  {
                    "name": "units",
                    "type": "text",
                    "label": "Units"
                  }
                ],
                "type": "array",
                "label": "Speed Limits"
              }
            ]
          },
          "condition": "{{parameters.select === 'speed'}}"
        }
      ],
      "rev": 2,
      "name": "getRoadsResponses",
      "label": "Get Roads Responses",
      "appName": "google-maps",
      "apiJsonc": "[\n    {\n        \"condition\": \"{{parameters.select === 'snap' || parameters.select === 'near'}}\",\n        \"response\": {\n            \"output\": [\n                {\n                    \"label\": \"Location\",\n                    \"name\": \"location\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Latitude\",\n                            \"name\": \"latitude\",\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"label\": \"Longitude\",\n                            \"name\": \"longitude\",\n                            \"type\": \"number\"\n                        }\n                    ],\n                    \"type\": \"collection\"\n                },\n                {\n                    \"label\": \"Original Index\",\n                    \"name\": \"originalIndex\",\n                    \"type\": \"number\"\n                },\n                {\n                    \"label\": \"Place ID\",\n                    \"name\": \"placeId\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"urlMap\",\n                    \"label\": \"URL Map\",\n                    \"type\": \"url\"\n                }\n            ]\n        }\n    },\n    {\n        \"condition\": \"{{parameters.select === 'speed'}}\",\n        \"response\": {\n            \"output\": [\n                {\n                    \"name\": \"snappedPoints\",\n                    \"label\": \"Snapped Points\",\n                    \"type\": \"array\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Location\",\n                            \"name\": \"location\",\n                            \"spec\": [\n                                {\n                                    \"label\": \"Latitude\",\n                                    \"name\": \"latitude\",\n                                    \"type\": \"number\"\n                                },\n                                {\n                                    \"label\": \"Longitude\",\n                                    \"name\": \"longitude\",\n                                    \"type\": \"number\"\n                                }\n                            ],\n                            \"type\": \"collection\"\n                        },\n                        {\n                            \"label\": \"Original Index\",\n                            \"name\": \"originalIndex\",\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"label\": \"Place ID\",\n                            \"name\": \"placeId\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"name\": \"urlMap\",\n                            \"label\": \"URL Map\",\n                            \"type\": \"url\"\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"speedLimits\",\n                    \"label\": \"Speed Limits\",\n                    \"type\": \"array\",\n                    \"spec\": [\n                        {\n                            \"name\": \"placeId\",\n                            \"label\": \"Place ID\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"name\": \"speedLimit\",\n                            \"label\": \"Speed Limit\",\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"name\": \"units\",\n                            \"label\": \"Units\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n]",
      "appVersion": 2,
      "parameters": [],
      "accountName": "google-maps",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    }
  },
  "flags": {},
  "label": "Google Maps",
  "theme": "#ed5748",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Search Map",
      "modules": [
        "searchForPlaces"
      ]
    },
    {
      "label": "Get a Map",
      "modules": [
        "getDirections",
        "convertAnAddressIntoGeocode",
        "getATimezone",
        "getAnElevation",
        "getADistanceMatrix",
        "getRoads",
        "getAMapImage"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "makeApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000002174944415458c3ed97bd6b144118879f3b8d06bde027767e20626cd44a24360a422c228820888dadbd5889a585ff8158aa019ba45062270a76da483c100511e1c41305b548c8719e792c7682ebb2b7b71f671afdc1b2c7dc3bf37be69d997719f8d7552bda4105a8030d600320b0002c02d46ac586cc151d4c01c68093c069e020b029007c069e03f7c3bb5b1424d33c3c47d43975c9fefaaade5477adf41b96f9a4fad6fc7aa2eeaf0411333fa4be2e60bea287eab6aa00ebd5e90c93e5f0a4a9a75e1994855a1600700c9803b624fe5e041e004f8151600a380e8c24e29ac029a05d6853c6d27f2d65664b6166eb62719bd55b29b11d75aaf0328441ebeabd94411fa98df8a0217e5c7d9f129fb90cf50c8e3544e73ca957448527a90f402ba57d6bd664b300047a29eddb035c521bfb0077cb02f480764afb0960027eef95a0b3c0784afc472858a2639beb529f63f652bda0ee550fa897d54f2971dfd58952b560c0c65ad9e12db5adfee813f3581dab02807ac372eaa8170715a23c107bd41725006693c7b54a16ce187de9f2ea8d7ab8d2ec131075f5aadacd61fe4d3d3714f3044443bd3dc0bc1b40eb43334f2cc56ef55906c074e575cf0131a97e49319f57f70d35f57d206aea75ff2c500beaf9bf6a9e80d8a936630033ea6819f37ae11e915ac04cf8dd01ee86f7ea2864e1a851ad9f5777944dfdda0a1c4de00ef08ee85e504aa56e0fb1d98e00cbc0cfa15d44fe6bb5f50b5dc952545a38fddc0000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000004934944415478daed9b5b8855551c87bf71bca5a6229668a19511620986516044bd09dd88a4cb5364452fd14b51418ff5d4cd871e7a284808f4a55224c28882220d4b23a234d08852d14a469dd41c7366be1ed61e5c1e663c6bef7dce3efbd0f9c16198b3d7de6bfdbebdf6bafcfffb404f3df5d4d3ff587d5556a68ed5393dfbf40302e78033d95ffafaaa6b565b6bca0c03cc009603b700ab80ab80b9c0940cc0107004f819d809ec020e035609a3a5c6b3cf3cf511759b3aa08eda5c67d5bdea1bea2ab53f02597f65c6a7a8f7aa5f6686c634da0442e3f123eaebea9231a8b55574d7e7abafa98389a69b6954ddadae51fb6a092132bf58dda28e448d6f95fe50d7a9936a0521327fa5fa710b0d37f6020de3c863b5ea0999f9d9eac636996f84f0977a8f751813a2bbffbc7aaecd0062083fa8d776144064fe26f55005e61bf5963ab92c844925394c069e02aee8c03d7808b86dec6694315046370277e53c476000f805380a4c0596105687d3b3e3cd967f02f38075c057c070491f391d9ceffe2fe77c764fa86f1a5678b30d0ba669ea42f56175bbe7a7d0141d5297573e1664e6e7a83b7234f6a8faa8e32c6d23a00bd5f7724018559fb4ea1921ab7065662a4567d4a76d327f67d75da07e9e03ec8666d7bd98ca0c824b093bba147d06bc4bdaeeee4f603d702af1dacb8059454de40610915e4cda202af01170ba59c108ce0ee0a7c4265d06cca90c40a4b989e54e017b1b0c36d309605f62d919d9a77200a9e70e13a23d79359458ae9f12d3791900a389e5a691de5b6253a9dd7a982c94563580c1c4723308a1b03c53d502604562d9218af5b06200a2e7f830309278da5a1296cb11a0fb80eb12af7d0c3859198048bf9130b2675a093c0b4c9fa81744dfdf9c954d7dae7f257dca6c8db205cbe5ea8f39162cffa8af184266173c0ed9ff93d45b0de1af3c7aa1cc4ab0cc66e828217c7d4362f94b806780d5c04660a77a8c30e02d256caa1e0416e568c3dfc0d7503c9750e8ac88f6daccccb49c9718018e139edd7ec2ce6e6681f66c07ee06068b0228340644957d017c57e012fdc07ce06ac28a725601f3021f903e1bb50e40a401600325e6e112da036c8672a9b4c200a24a37138212556a18781b385871bd172adac7dfa91ecb397a97d1a786b45b47fdc710261b7279ad4c844ca423eaed65a6be76415864c805b653ffaacfd5ca7c0400c342e6401b016c522fad95f971203cae9e6c83f96fd56b6a77f7c78130557d551d6ea1f983d6edb96f02619e214bdc0a9d322444eb6f3e0280ba4cfdbea4f911c3066a4a57981f07c21a4336b7a8b65a97f9be20843ef5458b658ef7a8d7774dd7bf088439ea8739cd0faa0f74b5f90800ea0a757f0e00eb6d41eabb168a203ca10e2598ffc6f0ba4da79bde720833d5f79b983fa9dedff55d7f0200a8abbdf8acb0c9902eef7493db06a15f7d6702f3c7ed96d55e0900a877185e9468d4964edcfdb221b1644511a45dc0ee86c3c384c8d2d94add570920d269605bc377bf9385d5aa7e3bbc52000dd1e481e8d00ee040a5ce3b0120d25e424c1f4262732be9d9e696aaec6b724575067889f03acc3ee013a8befb43c53f9919d378237d57fe32a4a79e7aeaa9a79eba5bff01c62d52be2c3c7c660000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-02-21T23:51:56.603383+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda79300000a4b4944415478daed9d6b8c9d4519c77f67bbedd26a0b945ad0ca55dba256216aad51438a8810b1de12abd1042f04634810f9a0a02490881f10c52fc6e00531f542aba4b545412aac360d585a445aa0c0969696806b6d6b0bf646f7f6f7c3f31eceec61b7bbdb9d7967ce39f34bde705afabeefcc3cff7966de9967662093c96432994c2693c96432994c2693c964324d4e257602ca4052f5671b3001682ffedb0608e803fa9d8b4aa5258aa6f904e018bb1d9801cc29ae3381d381e9400730111381801ee008f03f603bb0b5b89e017601bdd09ca2688a1c3946ef00de027c00380f98079c0a4cc16afb6819005e069e0736036b81354057f1f74d238686ce8563f837001f023e05bc0f38899ac135f6270fa282350bbb81f5c00aa013f81734be101a32f58ee14f033e0b7c1e782be6f64763f0e1f23dd2bd15acb9781a58062c057640e30ba1219054bda64bba52d21392fa650c0c71f9606098ab4fd26649574b9a514d5b261045014f907481a4fb25f50c63a090b8efa90aaf47d2df245d2ca93d8bc0334ead3f41d20d92764730fcd1c45015c21e49372a7b037f38c69f2b6985a4de218c1f1b372dbd92fe28e96d5904e3c431fe7992fe5957d8a9512fc84d92cecf2238461ce35f2c69db30859c226e93b04dd225590463c431fe459276d419bf1170d3fa9ca48fa62c82a43e5e9d425a08fc02388bdab77952691d292b4e9a77005f01ee83f4c60b92498d63fc7700bf01de4e631aff952c39697f1ab8147818d212c158c6c7cbe014e00734bef1dd740b381bf81e302b76a2ea49420045ed6f07be818de9831560a31abf4a35fd0358b3760d3029a5fe4074013885b108b88cc6377a3dae90bf087cb22edf51892e808259c0b5c0f1b1131288aa00a6625ee08cd809aa1255004e2db81c981fbb304a600038b7c86f25052f90820798077c89725dbf86b8425371ae2f00ef2a31bfc3124d0085fa2bc097b179fde0afe4e8c62e4b0cc29abcaf02d1670f637b80b958144f48ea0d5b39ca557f8f6fdc772c02de1938ef23d21ee3a58eea3f8e056a06798df3bb82b5bfdd585c5f57f1bb1f0b0c9d09ccc6a28a66518b2c0a39163113f834b04152b4c1a1286f2d04301db8075810e2154efe7a818dd8e8e2fdd8d0ec6140954ac515e3719818cfc742cce603930297d566e0c340774aa383c12926472e947420f0644cb7a46b249d3c9a0919d526a24e927485a4678be7f42bcc64d411498b539e2c0a657c24dd14d8f85b64d3c963fedc72d2b840d25ad5a6794388e0e7c792c686a528d869921e0c240049ea92b450e3a8598e08de2c8bf9ab17982f1e9334339600627d059c85add6f14d05f80f7025b690e3983b57ce7d5b81af034f12a61f7046a0b21815b104300f3831c0738f0037e169eeddb97f13f05de040f1679fd5752a363a18a51f50aa009c0ccec53ebf7c7337701b450fdf07ce735601ab09e305e60578e6a888e1012660dfdcbe3908fc9a5a2df5cd21e076607ff1679fd5f54c6c5d63e9c4104007707280e73e033c04fe236e9ce7ad031ec7bf17783d302d40998c480c014cc3af00aa357103d6010cc93e4c04be391e784de0b40f492c0fe03bb30358cd0cd68b72bcc063d88612787c5f07b684bd746208a0cde37bab06e8a358ae5d02bba809c01793683101f86e4345b18b47090c0478661b9126e6624f07e7bc442646a10de0bfad9e4079bde8c9f8f760fd94e7c106114b00bedd683b8187539d41ac39f8ff66efc1c6314a2786008e60832a3e706be202c27f4a4d6470f0aa2f4fd043b1f954d9c410c07eac27ed9b73b0889e90cc06de5bfcf6d90c1cc082544a279607d8e7f999c20697161320dcda79de626cdb39dfeca236c45c2a3104d0073cebf1796e4dfc0cf06ef037b3e63ce75c2c9c3b04ddb4501300b61ba76f84d5ce6bf13fd57c02703de156f47411667c61444a1580339cfa14fe3a82307825ee224c0453c6eb058afb3b806f021f0b542cbdd8f07294c8e0581e600bf06fcfcfac965e3b1611f46d60ea7842c230e35f0d5c4598f805803d9807680d8a38bb89929607880974e3f65e96f44b49b3c7121be8c4029e2ae9870a13b9ecb246d26b5b2d26b0177820d0b3ab9e6012b62bc70ae06bc06992da862be8c2e8156c61c8e5c0f2e2bed0630b0f102e8865d485552a8511de03fc195b2012e435ceef3e2c60a41378045b28f222d6f1aa60469e877de35f80ede8514684ce01e01340672bae0c9a82d5ce8b306385484b7d75afae14da8b754207302f3809db61fc38c22e07ab671d7009b02f9600a24c41161c0256021762851d4204d5e7565191e799bc7a312894b34cdce51efc0f8a8d89287d0047edabb12f8290f21f6af52f0cbf1cbcacbd89ba81bbeacaa37462cfa16f0796501b04095d032ba3b8cae24fd8e2d0a8441380a3fae55807ad8596c7f25f2c84bd3ff6aae0d81e00ccf84b29cf0ba4c02a8a10f6d8441580a3fe25d870682b78819dc04f81bed8b51fd2f000609b36fc98da8c58337b8125c03f6227a24a740138b5e04ee02f0c9ed869363602b7020329d47e4840000e2f01dfc73e8fd2281dbf1c046e069e8b9d10972404e0d486bf033fc1ffca9b14f81d36f299770b1f8aa250063017791fcde5053661fb161c49c9f89090001cf600dfc13a86f543b98dc84bc08dd8e76e72242500a7763c84d5986ad450a38aa0ead156d6e52f199212000c2aa45f619f4cb1266a7c702f700b098cf80d479aa9e29529e3376243a60b0937651c8a2eec5ce38d9066ed87043d401d2f00d76193468dd41fd80b7c8bc48d0f090ba0eed3f0062c8207d217412f76eed1aaba7c2449b202804185b70cf8118d313eb0b4486b32a37d0d4f11b079a2a4654afb04d1b5924e8f15e1dbb4a816aafd2649eb8ac24e4d00db647b0bb7cec6cf65e28860a1ec48d69444f0a2a4cf65e307c611c16592f62b8da6a057d2f5922664e3974021800e493717851f5b0477c8763f8f5d34ad836a873afca130422c013c2ceb97c42e92d642b5a6609ea4a72219ff05491f546ef7e3e088e052597fa04c0ecb8e94c9c68f896a2b8d6f51b9cdc0cf244dcec64f804204a748ea2cc9f8eb95077bd241b5a6e0fd929e0f6cfcddb283a8b2eb4f09470457c98e620b419fec7b7fd83d06321129043055d29d810470afa419d9f889e2788173246df56cfc6e5913935d7fca3822b842fe9a823e49d7a9950e776c64543b9872a52701ac91f4ba6cfc064183bf0a768ed3f8fb247d24bbfe06a330589b6cc2683cdc261b688a9da5cc5829443047c7de21ec9634bfd98d9f744ca007b600bf3dc67b97635bca651a95c20b9c2d69fb186bffce56a8fdd0fc1e006c81c65d63bc6735f068ec849741530ba008cb16f07b6cb1c668388c2de5f67d36609234b5001c1ec58e961d0d9b80f590fea20e1fb48a000e6147cb8fa651bf1bdbc6ad25687a0138b5b813db7ee668ecc536a76889da0f2d2000876d14aefd283c013c193ba165d24a02e801fe3ac2bfe924d2e95db168090138ee7c2db651e350eca3c5dc3fb488001cba800787f97f8f008fc74e60d9b49a007a803b78f589653dd812f46847b7644aa0181a9e2c0b23df2fa95fd24149b7cac2c96227b1745aa7b12b288c3c193b047a16d627d8001c6ca5b63f93c96432994c2693c96432994c2693c96432994c2693c96432994cf3f27f242a0d68ea06f13c0000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 2,
  "website": null,
  "_modules": {
    "getRoads": {
      "id": 3203,
      "api": {
        "qs": {
          "path": "{{if(parameters.path, join(geoParameter(parameters.path), '|'), undefined)}}",
          "units": "{{parameters.units}}",
          "points": "{{if(parameters.points, join(geoParameter(parameters.points), '|'), undefined)}}",
          "interpolate": "{{parameters.interpolate}}"
        },
        "url": "https://roads.googleapis.com/v1/{{switch(parameters.select, 'snap', 'snapToRoads', 'near', 'nearestRoads', 'speed', 'speedLimits')}}",
        "method": "GET",
        "response": {
          "output": "{{item}}",
          "iterate": "{{roadResponse(switch(parameters.select, 'snap', body.snappedPoints, 'near', body.snappedPoints, 'speed', body), parameters.select)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getRoads",
      "epoch": null,
      "flags": {},
      "label": "Get Roads",
      "scope": [],
      "expect": [
        {
          "help": "⊙`Snap To Road`: Takes up to 100 GPS points collected along a route, and returns a similar set of data, with the points snapped to the most likely roads the vehicle was traveling along.\n⊙`Nearest Roads`: Takes up to 100 independent coordinates, and returns the closest road segment for each point.\n⊙`Speed Limits`: Returns the posted speed limit for a given road segment. The Speed Limit service is available to all customers with an Asset Tracking license. For \"Google Maps Platform Premium Plan\" customers who transitioned to pay-as-you-go pricing, the feature remains active.",
          "name": "select",
          "type": "select",
          "label": "Input Format of Roads",
          "options": [
            {
              "label": "Snap To Roads",
              "value": "snap",
              "nested": [
                {
                  "name": "path",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Latitude",
                      "required": true,
                      "validate": {
                        "max": 90,
                        "min": -90
                      }
                    },
                    {
                      "name": "long",
                      "type": "number",
                      "label": "Longitude",
                      "required": true,
                      "validate": {
                        "max": 180,
                        "min": -180
                      }
                    }
                  ],
                  "type": "array",
                  "label": "Path",
                  "required": true
                },
                {
                  "help": "When true, additional interpolated points will also be returned, resulting in a path that smoothly follows the geometry of the road, even around corners and through tunnels.",
                  "name": "interpolate",
                  "type": "boolean",
                  "label": "Interpolate a Path",
                  "mappable": false,
                  "required": true
                }
              ],
              "default": true
            },
            {
              "label": "Nearest Roads",
              "value": "near",
              "nested": [
                {
                  "name": "points",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Latitude",
                      "required": true,
                      "validate": {
                        "max": 90,
                        "min": -90
                      }
                    },
                    {
                      "name": "long",
                      "type": "number",
                      "label": "Longitude",
                      "required": true,
                      "validate": {
                        "max": 180,
                        "min": -180
                      }
                    }
                  ],
                  "type": "array",
                  "label": "Points",
                  "required": true
                }
              ]
            },
            {
              "label": "Speed Limits",
              "value": "speed",
              "nested": [
                {
                  "name": "path",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Latitude",
                      "required": true,
                      "validate": {
                        "max": 90,
                        "min": -90
                      }
                    },
                    {
                      "name": "long",
                      "type": "number",
                      "label": "Longitude",
                      "required": true,
                      "validate": {
                        "max": 180,
                        "min": -180
                      }
                    }
                  ],
                  "type": "array",
                  "label": "Path",
                  "required": true
                },
                {
                  "name": "units",
                  "type": "select",
                  "label": "Unit",
                  "options": [
                    {
                      "label": "Kilometers per hour (km/h)",
                      "value": "KPH",
                      "default": true
                    },
                    {
                      "label": "Miles per hour (mi/h)",
                      "value": "MPH"
                    }
                  ],
                  "required": true
                }
              ]
            }
          ],
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://roads.googleapis.com/v1/{{switch(parameters.select, 'snap', 'snapToRoads', 'near', 'nearestRoads', 'speed', 'speedLimits')}}\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"path\": \"{{if(parameters.path, join(geoParameter(parameters.path), '|'), undefined)}}\",\n        \"points\": \"{{if(parameters.points, join(geoParameter(parameters.points), '|'), undefined)}}\",\n        \"interpolate\": \"{{parameters.interpolate}}\",\n        \"units\": \"{{parameters.units}}\"\n    },\n    \"response\": {\n        \"output\": \"{{item}}\",\n        \"iterate\": \"{{roadResponse(switch(parameters.select, 'snap', body.snappedPoints, 'near', body.snappedPoints, 'speed', body), parameters.select)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://getRoadsResponses",
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Identifies the roads a vehicle was traveling along and provides additional metadata about those roads, such as speed limits.",
      "expectJsonc": "[\n    {\n        \"name\": \"select\",\n        \"label\": \"Input Format of Roads\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"help\": \"⊙`Snap To Road`: Takes up to 100 GPS points collected along a route, and returns a similar set of data, with the points snapped to the most likely roads the vehicle was traveling along.\\n⊙`Nearest Roads`: Takes up to 100 independent coordinates, and returns the closest road segment for each point.\\n⊙`Speed Limits`: Returns the posted speed limit for a given road segment. The Speed Limit service is available to all customers with an Asset Tracking license. For \\\"Google Maps Platform Premium Plan\\\" customers who transitioned to pay-as-you-go pricing, the feature remains active.\",\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"Snap To Roads\",\n                \"value\": \"snap\",\n                \"default\": true,\n                \"nested\": [\n                    {\n                        \"name\": \"path\",\n                        \"label\": \"Path\",\n                        \"type\": \"array\",\n                        \"spec\": [\n                            {\n                                \"name\": \"lat\",\n                                \"label\": \"Latitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -90,\n                                    \"max\": 90\n                                }\n                            },\n                            {\n                                \"name\": \"long\",\n                                \"label\": \"Longitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -180,\n                                    \"max\": 180\n                                }\n                            }\n                        ],\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"interpolate\",\n                        \"label\": \"Interpolate a Path\",\n                        \"type\": \"boolean\",\n                        \"required\": true,\n                        \"mappable\": false,\n                        \"help\": \"When true, additional interpolated points will also be returned, resulting in a path that smoothly follows the geometry of the road, even around corners and through tunnels.\"\n                    }\n                ]\n            },\n            {\n                \"label\": \"Nearest Roads\",\n                \"value\": \"near\",\n                \"nested\": [\n                    {\n                        \"name\": \"points\",\n                        \"label\": \"Points\",\n                        \"type\": \"array\",\n                        \"required\": true,\n                        \"spec\": [\n                            {\n                                \"name\": \"lat\",\n                                \"label\": \"Latitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -90,\n                                    \"max\": 90\n                                }\n                            },\n                            {\n                                \"name\": \"long\",\n                                \"label\": \"Longitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -180,\n                                    \"max\": 180\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"label\": \"Speed Limits\",\n                \"value\": \"speed\",\n                \"nested\": [\n                    {\n                        \"name\": \"path\",\n                        \"label\": \"Path\",\n                        \"type\": \"array\",\n                        \"spec\": [\n                            {\n                                \"name\": \"lat\",\n                                \"label\": \"Latitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -90,\n                                    \"max\": 90\n                                }\n                            },\n                            {\n                                \"name\": \"long\",\n                                \"label\": \"Longitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -180,\n                                    \"max\": 180\n                                }\n                            }\n                        ],\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"units\",\n                        \"label\": \"Unit\",\n                        \"type\": \"select\",\n                        \"required\": true,\n                        \"options\": [\n                            {\n                                \"label\": \"Kilometers per hour (km/h)\",\n                                \"value\": \"KPH\",\n                                \"default\": true\n                            },\n                            {\n                                \"label\": \"Miles per hour (mi/h)\",\n                                \"value\": \"MPH\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "\"rpc://getRoadsResponses\"",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeApiCall": {
      "id": 3204,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://maps.googleapis.com/maps/api/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "makeApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://maps.googleapis.com/maps/api`.\ne.g.`/geocode/json`",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://maps.googleapis.com/maps/api/{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to `https://maps.googleapis.com/maps/api`.\\ne.g.`/geocode/json`\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n        \"default\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAMapImage": {
      "id": 3205,
      "api": {
        "qs": "{{staticMapRequest(parameters, connection)}}",
        "url": "/staticmap?{{markers(parameters.markers)}}",
        "method": "GET",
        "response": {
          "type": {
            "*": "binary",
            "403": "text",
            "400-500": "json"
          },
          "error": {
            "200": {
              "message": "{{body.error_message}}"
            },
            "message": "[{{statusCode}}] {{if(body.error_message, body.error_message, if(body.errorMessage, body.errorMessage, if(body.error.message, body.error.message, body)))}}"
          },
          "output": {
            "data": "{{body}}",
            "filename": "Google Map.{{if(parameters.format === 'png32', 'png', 'jpeg')}}"
          }
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getAMapImage",
      "epoch": null,
      "flags": {},
      "label": "Get a Static Map Image",
      "scope": [],
      "expect": [
        {
          "name": "select",
          "type": "select",
          "label": "Input Format of Center Location",
          "options": [
            {
              "label": "Address",
              "value": "address",
              "nested": [
                {
                  "name": "address",
                  "type": "text",
                  "label": "Address",
                  "required": true
                }
              ],
              "default": true
            },
            {
              "label": "Geographic Coordinates",
              "value": "geo",
              "nested": [
                {
                  "name": "lat",
                  "type": "number",
                  "label": "Latitude",
                  "required": true,
                  "validate": {
                    "max": 90,
                    "min": -90
                  }
                },
                {
                  "name": "long",
                  "type": "number",
                  "label": "Longitude",
                  "required": true,
                  "validate": {
                    "max": 180,
                    "min": -180
                  }
                }
              ]
            }
          ],
          "mappable": false,
          "required": true
        },
        {
          "help": "⊙`1`: World\n⊙`5`: Landmass/continent\n⊙`10`: City\n⊙`15`: Streets\n⊙`20`: Buildings\nWhen using this parameter, make sure that the locations are close enough to the each other so their markers do not disappear from the map.",
          "name": "zoom",
          "type": "uinteger",
          "label": "Zoom",
          "default": 10,
          "required": true,
          "validate": {
            "max": 21,
            "min": 1
          }
        },
        {
          "name": "imageSize",
          "spec": [
            {
              "name": "width",
              "type": "uinteger",
              "label": "Width",
              "default": 640,
              "required": true,
              "validate": {
                "max": 2048,
                "min": 0
              }
            },
            {
              "name": "height",
              "type": "uinteger",
              "label": "Height",
              "default": 640,
              "required": true,
              "validate": {
                "max": 2048,
                "min": 0
              }
            }
          ],
          "type": "collection",
          "label": "Image Size"
        },
        {
          "name": "markers",
          "spec": [
            {
              "name": "select",
              "type": "select",
              "label": "Add Markers",
              "options": [
                {
                  "label": "By Address",
                  "value": "address",
                  "nested": [
                    {
                      "name": "address",
                      "type": "text",
                      "label": "Address",
                      "required": true
                    }
                  ],
                  "default": true
                },
                {
                  "label": "By Geographic Coordinates",
                  "value": "geo",
                  "nested": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Latitude",
                      "required": true,
                      "validate": {
                        "max": 90,
                        "min": -90
                      }
                    },
                    {
                      "name": "long",
                      "type": "number",
                      "label": "Longitude",
                      "required": true,
                      "validate": {
                        "max": 180,
                        "min": -180
                      }
                    }
                  ]
                }
              ],
              "mappable": false,
              "required": true
            },
            {
              "name": "size",
              "type": "select",
              "label": "Size",
              "options": [
                {
                  "label": "Tiny",
                  "value": "tiny"
                },
                {
                  "label": "Mid",
                  "value": "mid",
                  "nested": [
                    {
                      "help": "Only single uppercase alphabet letter or single number is allowed. \n`[A-Z][0-9]`",
                      "name": "label",
                      "type": "text",
                      "label": "Label",
                      "validate": {
                        "max": 1,
                        "min": 0
                      }
                    }
                  ]
                },
                {
                  "label": "Small",
                  "value": "small"
                }
              ]
            },
            {
              "name": "color",
              "type": "select",
              "label": "Color",
              "options": [
                {
                  "label": "Black",
                  "value": "black"
                },
                {
                  "label": "Brown",
                  "value": "brown"
                },
                {
                  "label": "Green",
                  "value": "green"
                },
                {
                  "label": "Purple",
                  "value": "purple"
                },
                {
                  "label": "Yellow",
                  "value": "yellow"
                },
                {
                  "label": "Blue",
                  "value": "blue"
                },
                {
                  "label": "Gray",
                  "value": "gray"
                },
                {
                  "label": "Orange",
                  "value": "orange"
                },
                {
                  "label": "Red",
                  "value": "red"
                },
                {
                  "label": "White",
                  "value": "white"
                }
              ]
            }
          ],
          "type": "array",
          "label": "Markers"
        },
        {
          "name": "format",
          "type": "select",
          "label": "Image Format",
          "options": [
            {
              "label": ".png",
              "value": "png32",
              "default": true
            },
            {
              "label": ".jpg",
              "value": "jpg"
            }
          ],
          "advanced": true,
          "mappable": false,
          "required": true
        },
        {
          "help": "⊙`Roadmap`: Specifies a standard roadmap image, as is normally shown on the Google Maps website.\n⊙`Satellite`: Specifies a satellite image.\n⊙`Terrain`: Specifies a physical relief map image, showing terrain and vegetation.\n⊙`Hybrid`: Specifies a hybrid of the satellite and roadmap image, showing a transparent layer of major streets and place names on the satellite image.",
          "name": "maptype",
          "type": "select",
          "label": "Map Type",
          "options": [
            {
              "label": "Roadmap",
              "value": "roadmap",
              "default": true
            },
            {
              "label": "Satellite",
              "value": "satellite"
            },
            {
              "label": "Terrain",
              "value": "terrain"
            },
            {
              "label": "Hybrid",
              "value": "hybrid"
            }
          ],
          "advanced": true,
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/staticmap?{{markers(parameters.markers)}}\",\n    \"method\": \"GET\",\n    \"qs\": \"{{staticMapRequest(parameters, connection)}}\",\n    \"response\": {\n        \"output\": {\n            \"data\": \"{{body}}\",\n            \"filename\": \"Google Map.{{if(parameters.format === 'png32', 'png', 'jpeg')}}\"\n        },\n        \"type\": {\n            \"*\": \"binary\",\n            \"403\": \"text\",\n            \"400-500\": \"json\"\n        },\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{if(body.error_message, body.error_message, if(body.errorMessage, body.errorMessage, if(body.error.message, body.error.message, body)))}}\",\n            \"200\": {\n                \"message\": \"{{body.error_message}}\"\n            }\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "filename",
          "type": "filename",
          "label": "Filename",
          "semantic": "file:name"
        },
        {
          "name": "data",
          "type": "buffer",
          "label": "Map Image Data",
          "semantic": "file:data"
        }
      ],
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Returns an static image (PNG or JPG) of Google Map.",
      "expectJsonc": "[\n    {\n        \"name\": \"select\",\n        \"label\": \"Input Format of Center Location\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"Address\",\n                \"value\": \"address\",\n                \"default\": true,\n                \"nested\": [\n                    {\n                        \"name\": \"address\",\n                        \"label\": \"Address\",\n                        \"type\": \"text\",\n                        \"required\": true\n                    }\n                ]\n            },\n            {\n                \"label\": \"Geographic Coordinates\",\n                \"value\": \"geo\",\n                \"nested\": [\n                    {\n                        \"name\": \"lat\",\n                        \"label\": \"Latitude\",\n                        \"type\": \"number\",\n                        \"required\": true,\n                        \"validate\": {\n                            \"min\": -90,\n                            \"max\": 90\n                        }\n                    },\n                    {\n                        \"name\": \"long\",\n                        \"label\": \"Longitude\",\n                        \"type\": \"number\",\n                        \"required\": true,\n                        \"validate\": {\n                            \"min\": -180,\n                            \"max\": 180\n                        }\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"zoom\",\n        \"label\": \"Zoom\",\n        \"type\": \"uinteger\",\n        \"default\": 10,\n        \"required\": true,\n        \"help\": \"⊙`1`: World\\n⊙`5`: Landmass/continent\\n⊙`10`: City\\n⊙`15`: Streets\\n⊙`20`: Buildings\\nWhen using this parameter, make sure that the locations are close enough to the each other so their markers do not disappear from the map.\",\n        \"validate\": {\n            \"min\": 1,\n            \"max\": 21\n        }\n    },\n    {\n        \"name\": \"imageSize\",\n        \"label\": \"Image Size\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"width\",\n                \"label\": \"Width\",\n                \"type\": \"uinteger\",\n                \"required\": true,\n                \"default\": 640,\n                \"validate\": {\n                    \"min\": 0,\n                    \"max\": 2048\n                }\n            },\n            {\n                \"name\": \"height\",\n                \"label\": \"Height\",\n                \"type\": \"uinteger\",\n                \"required\": true,\n                \"default\": 640,\n                \"validate\": {\n                    \"min\": 0,\n                    \"max\": 2048\n                }\n            }\n        ]\n    },\n    {\n        \"name\": \"markers\",\n        \"label\": \"Markers\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"select\",\n                \"label\": \"Add Markers\",\n                \"type\": \"select\",\n                \"required\": true,\n                \"mappable\": false,\n                \"options\": [\n                    {\n                        \"label\": \"By Address\",\n                        \"value\": \"address\",\n                        \"default\": true,\n                        \"nested\": [\n                            {\n                                \"name\": \"address\",\n                                \"label\": \"Address\",\n                                \"type\": \"text\",\n                                \"required\": true\n                            }\n                        ]\n                    },\n                    {\n                        \"label\": \"By Geographic Coordinates\",\n                        \"value\": \"geo\",\n                        \"nested\": [\n                            {\n                                \"name\": \"lat\",\n                                \"label\": \"Latitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -90,\n                                    \"max\": 90\n                                }\n                            },\n                            {\n                                \"name\": \"long\",\n                                \"label\": \"Longitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -180,\n                                    \"max\": 180\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"size\",\n                \"label\": \"Size\",\n                \"type\": \"select\",\n                \"options\": [\n                    {\n                        \"label\": \"Tiny\",\n                        \"value\": \"tiny\"\n                    },\n                    {\n                        \"label\": \"Mid\",\n                        \"value\": \"mid\",\n                        \"nested\": [\n                            {\n                                \"name\": \"label\",\n                                \"label\": \"Label\",\n                                \"type\": \"text\",\n                                \"validate\": {\n                                    \"min\": 0,\n                                    \"max\": 1\n                                },\n                                \"help\": \"Only single uppercase alphabet letter or single number is allowed. \\n`[A-Z][0-9]`\"\n                            }\n                        ]\n                    },\n                    {\n                        \"label\": \"Small\",\n                        \"value\": \"small\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"color\",\n                \"label\": \"Color\",\n                \"type\": \"select\",\n                \"options\": [\n                    {\n                        \"label\": \"Black\",\n                        \"value\": \"black\"\n                    },\n                    {\n                        \"label\": \"Brown\",\n                        \"value\": \"brown\"\n                    },\n                    {\n                        \"label\": \"Green\",\n                        \"value\": \"green\"\n                    },\n                    {\n                        \"label\": \"Purple\",\n                        \"value\": \"purple\"\n                    },\n                    {\n                        \"label\": \"Yellow\",\n                        \"value\": \"yellow\"\n                    },\n                    {\n                        \"label\": \"Blue\",\n                        \"value\": \"blue\"\n                    },\n                    {\n                        \"label\": \"Gray\",\n                        \"value\": \"gray\"\n                    },\n                    {\n                        \"label\": \"Orange\",\n                        \"value\": \"orange\"\n                    },\n                    {\n                        \"label\": \"Red\",\n                        \"value\": \"red\"\n                    },\n                    {\n                        \"label\": \"White\",\n                        \"value\": \"white\"\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"format\",\n        \"label\": \"Image Format\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"advanced\": true,\n        \"options\": [\n            {\n                \"label\": \".png\",\n                \"value\": \"png32\",\n                \"default\": true\n            },\n            {\n                \"label\": \".jpg\",\n                \"value\": \"jpg\"\n            }\n        ]\n    },\n    {\n        \"name\": \"maptype\",\n        \"label\": \"Map Type\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"advanced\": true,\n        \"help\": \"⊙`Roadmap`: Specifies a standard roadmap image, as is normally shown on the Google Maps website.\\n⊙`Satellite`: Specifies a satellite image.\\n⊙`Terrain`: Specifies a physical relief map image, showing terrain and vegetation.\\n⊙`Hybrid`: Specifies a hybrid of the satellite and roadmap image, showing a transparent layer of major streets and place names on the satellite image.\",\n        \"options\": [\n            {\n                \"label\": \"Roadmap\",\n                \"value\": \"roadmap\",\n                \"default\": true\n            },\n            {\n                \"label\": \"Satellite\",\n                \"value\": \"satellite\"\n            },\n            {\n                \"label\": \"Terrain\",\n                \"value\": \"terrain\"\n            },\n            {\n                \"label\": \"Hybrid\",\n                \"value\": \"hybrid\"\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"filename\",\n        \"type\": \"filename\",\n        \"label\": \"Filename\",\n        \"semantic\": \"file:name\"\n    },\n    {\n        \"name\": \"data\",\n        \"type\": \"buffer\",\n        \"label\": \"Map Image Data\",\n        \"semantic\": \"file:data\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getATimezone": {
      "id": 3206,
      "api": {
        "qs": {
          "location": "{{if(parameters.lat && parameters.long, parameters.lat + ',' + parameters.long, undefined)}}",
          "timestamp": "{{if(parameters.date, formatDate(parameters.date, 'X'), formatDate(now, 'X')}}"
        },
        "url": "/timezone/json",
        "method": "GET",
        "response": {
          "output": "{{locationResponse(body, parameters)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getATimezone",
      "epoch": null,
      "flags": {},
      "label": "Get a Timezone",
      "scope": [],
      "expect": [
        {
          "name": "lat",
          "type": "number",
          "label": "Latitude",
          "required": true,
          "validate": {
            "max": 90,
            "min": -90
          }
        },
        {
          "name": "long",
          "type": "number",
          "label": "Longitude",
          "required": true,
          "validate": {
            "max": 180,
            "min": -180
          }
        },
        {
          "help": "If not specified, current time is used.",
          "name": "date",
          "type": "text",
          "label": "Date and Time",
          "advanced": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/timezone/json\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"location\": \"{{if(parameters.lat && parameters.long, parameters.lat + ',' + parameters.long, undefined)}}\",\n        \"timestamp\": \"{{if(parameters.date, formatDate(parameters.date, 'X'), formatDate(now, 'X')}}\"\n    },\n    \"response\": {\n        \"output\": \"{{locationResponse(body, parameters)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "dstOffset",
          "type": "number",
          "label": "Dst Offset"
        },
        {
          "name": "rawOffset",
          "type": "number",
          "label": "Raw Offset"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "timeZoneId",
          "type": "text",
          "label": "Time Zone ID"
        },
        {
          "name": "timeZoneName",
          "type": "text",
          "label": "Time Zone Name"
        },
        {
          "name": "urlMap",
          "type": "url",
          "label": "URL Map"
        }
      ],
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Gets the details of a timezone by geographical coordinates.",
      "expectJsonc": "[\n    {\n        \"name\": \"lat\",\n        \"label\": \"Latitude\",\n        \"type\": \"number\",\n        \"required\": true,\n        \"validate\": {\n            \"min\": -90,\n            \"max\": 90\n        }\n    },\n    {\n        \"name\": \"long\",\n        \"label\": \"Longitude\",\n        \"type\": \"number\",\n        \"required\": true,\n        \"validate\": {\n            \"min\": -180,\n            \"max\": 180\n        }\n    },\n    {\n        \"name\": \"date\",\n        \"label\": \"Date and Time\",\n        \"type\": \"text\",\n        \"advanced\": true,\n        \"help\": \"If not specified, current time is used.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Dst Offset\",\n        \"name\": \"dstOffset\",\n        \"type\": \"number\"\n    },\n    {\n        \"label\": \"Raw Offset\",\n        \"name\": \"rawOffset\",\n        \"type\": \"number\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Time Zone ID\",\n        \"name\": \"timeZoneId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Time Zone Name\",\n        \"name\": \"timeZoneName\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"urlMap\",\n        \"label\": \"URL Map\",\n        \"type\": \"url\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getDirections": {
      "id": 3207,
      "api": {
        "qs": {
          "mode": "{{parameters.travelMode}}",
          "avoid": "{{if(parameters.avoid, join(parameters.avoid, '|'), undefined)}}",
          "units": "{{parameters.units}}",
          "origin": "{{parameters.origin}}",
          "waypoints": "{{if(parameters.waypoints, join(parameters.waypoints, '|'), undefined)}}",
          "destination": "{{parameters.destination}}",
          "arrival_time": "{{formatDate(parameters.arrival_time, 'X')}}",
          "transit_mode": "{{if(parameters.transit_mode, join(parameters.transit_mode, '|'), undefined)}}",
          "departure_time": "{{formatDate(parameters.departure_time, 'X')}}"
        },
        "url": "/directions/json",
        "method": "GET",
        "response": {
          "output": "{{item}}",
          "iterate": "{{directionResponse(body.routes[].legs, parameters)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getDirections",
      "epoch": null,
      "flags": {},
      "label": "Get Directions",
      "scope": [],
      "expect": [
        {
          "help": "Specify origin either as a text string (e.g.`Toronto`) or as GPS coordinates (latitude, longitude pair).\ne.g.`50.0598058,14.3255436`",
          "name": "origin",
          "type": "text",
          "label": "Origin",
          "required": true
        },
        {
          "help": "Specify destination either as a text string (e.g.`Toronto`) or as GPS coordinates (latitude, longitude pair).\ne.g.`50.0598058,14.3255436`",
          "name": "destination",
          "type": "text",
          "label": "Destination",
          "required": true
        },
        {
          "name": "travelMode",
          "type": "select",
          "label": "Travel Mode",
          "options": [
            {
              "label": "Driving",
              "value": "driving",
              "default": true
            },
            {
              "label": "Walking",
              "value": "walking"
            },
            {
              "label": "Bicycling",
              "value": "bicycling"
            },
            {
              "label": "Transit",
              "value": "transit",
              "nested": [
                {
                  "name": "transit_mode",
                  "type": "select",
                  "label": "Preference",
                  "options": [
                    {
                      "label": "bus",
                      "value": "bus"
                    },
                    {
                      "label": "subway",
                      "value": "subway"
                    },
                    {
                      "label": "train",
                      "value": "train"
                    },
                    {
                      "label": "tram",
                      "value": "tram"
                    }
                  ],
                  "multiple": true
                }
              ]
            }
          ],
          "mappable": false,
          "required": true
        },
        {
          "help": "Do not use this parameter, if you already chose`transit`as Travel Mode parameter.",
          "name": "waypoints",
          "spec": {
            "type": "text",
            "label": "waypoint"
          },
          "type": "array",
          "label": "Waypoints"
        },
        {
          "name": "avoid",
          "type": "select",
          "label": "Avoid",
          "options": [
            {
              "label": "Tolls",
              "value": "tolls"
            },
            {
              "label": "Highways",
              "value": "highways"
            },
            {
              "label": "Ferries",
              "value": "ferries"
            },
            {
              "label": "Indoor",
              "value": "indoor"
            }
          ],
          "advanced": true,
          "multiple": true
        },
        {
          "name": "units",
          "type": "select",
          "label": "Units",
          "options": [
            {
              "label": "Metric (km or m)",
              "value": "metric",
              "default": true
            },
            {
              "label": "Imperial (miles or feets)",
              "value": "imperial"
            }
          ],
          "advanced": true,
          "mappable": false,
          "required": true
        },
        {
          "name": "define",
          "type": "select",
          "label": "Define Time",
          "options": [
            {
              "label": "Departure Time and Date",
              "value": "departure",
              "nested": [
                {
                  "name": "departure_time",
                  "time": true,
                  "type": "date",
                  "label": "Departure Time"
                }
              ]
            },
            {
              "label": "Arrival Time and Date",
              "value": "arrival",
              "nested": [
                {
                  "name": "arrival_time",
                  "time": true,
                  "type": "date",
                  "label": "Arrival Time"
                }
              ]
            }
          ],
          "advanced": true,
          "mappable": false
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/directions/json\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"origin\": \"{{parameters.origin}}\",\n        \"destination\": \"{{parameters.destination}}\",\n        \"mode\": \"{{parameters.travelMode}}\",\n        \"transit_mode\": \"{{if(parameters.transit_mode, join(parameters.transit_mode, '|'), undefined)}}\",\n        \"waypoints\": \"{{if(parameters.waypoints, join(parameters.waypoints, '|'), undefined)}}\",\n        \"avoid\": \"{{if(parameters.avoid, join(parameters.avoid, '|'), undefined)}}\",\n        \"units\": \"{{parameters.units}}\",\n        \"arrival_time\": \"{{formatDate(parameters.arrival_time, 'X')}}\",\n        \"departure_time\": \"{{formatDate(parameters.departure_time, 'X')}}\"\n    },\n    \"response\": {\n        \"iterate\": \"{{directionResponse(body.routes[].legs, parameters)}}\",\n        \"output\": \"{{item}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "arrival_time",
          "spec": [
            {
              "name": "text",
              "type": "text",
              "label": "Text"
            },
            {
              "name": "time_zone",
              "type": "text",
              "label": "Time zone"
            },
            {
              "name": "value",
              "time": true,
              "type": "date",
              "label": "Value"
            }
          ],
          "type": "collection",
          "label": "Arrival Time"
        },
        {
          "name": "departure_time",
          "spec": [
            {
              "name": "text",
              "type": "text",
              "label": "Text"
            },
            {
              "name": "time_zone",
              "type": "text",
              "label": "Time zone"
            },
            {
              "name": "value",
              "time": true,
              "type": "date",
              "label": "Value"
            }
          ],
          "type": "collection",
          "label": "Departure Time"
        },
        {
          "name": "distance",
          "spec": [
            {
              "name": "text",
              "type": "text",
              "label": "Text"
            },
            {
              "name": "value",
              "type": "number",
              "label": "Value"
            }
          ],
          "type": "collection",
          "label": "Distance"
        },
        {
          "name": "duration",
          "spec": [
            {
              "name": "text",
              "type": "text",
              "label": "Text"
            },
            {
              "name": "value",
              "type": "number",
              "label": "Value"
            }
          ],
          "type": "collection",
          "label": "Duration"
        },
        {
          "name": "end_address",
          "type": "text",
          "label": "End Address"
        },
        {
          "name": "end_location",
          "spec": [
            {
              "name": "lat",
              "type": "number",
              "label": "Geographical Latitude"
            },
            {
              "name": "lng",
              "type": "number",
              "label": "Geographical Longitude"
            }
          ],
          "type": "collection",
          "label": "End Location"
        },
        {
          "name": "start_address",
          "type": "text",
          "label": "Start Address"
        },
        {
          "name": "start_location",
          "spec": [
            {
              "name": "lat",
              "type": "number",
              "label": "Geographical Latitude"
            },
            {
              "name": "lng",
              "type": "number",
              "label": "Geographical Longitude"
            }
          ],
          "type": "collection",
          "label": "Start Location"
        },
        {
          "name": "steps",
          "spec": {
            "spec": [
              {
                "name": "distance",
                "spec": [
                  {
                    "name": "text",
                    "type": "text",
                    "label": "Text"
                  },
                  {
                    "name": "value",
                    "type": "number",
                    "label": "Value"
                  }
                ],
                "type": "collection",
                "label": "Distance"
              },
              {
                "name": "duration",
                "spec": [
                  {
                    "name": "text",
                    "type": "text",
                    "label": "Text"
                  },
                  {
                    "name": "value",
                    "type": "number",
                    "label": "Value"
                  }
                ],
                "type": "collection",
                "label": "Duration"
              },
              {
                "name": "end_location",
                "spec": [
                  {
                    "name": "lat",
                    "type": "number",
                    "label": "Geographical Latitude"
                  },
                  {
                    "name": "lng",
                    "type": "number",
                    "label": "Geographical Longitude"
                  }
                ],
                "type": "collection",
                "label": "End Location"
              },
              {
                "name": "html_instructions",
                "type": "text",
                "label": "Html Instructions"
              },
              {
                "name": "polyline",
                "spec": [
                  {
                    "name": "points",
                    "type": "text",
                    "label": "Points"
                  }
                ],
                "type": "collection",
                "label": "Polyline"
              },
              {
                "name": "maneuver",
                "type": "text",
                "label": "Maneuver"
              },
              {
                "name": "start_location",
                "spec": [
                  {
                    "name": "lat",
                    "type": "number",
                    "label": "Geographical Latitude"
                  },
                  {
                    "name": "lng",
                    "type": "number",
                    "label": "Geographical Longitude"
                  }
                ],
                "type": "collection",
                "label": "Start Location"
              },
              {
                "name": "travel_mode",
                "type": "text",
                "label": "Travel Mode"
              },
              {
                "name": "transit_details",
                "spec": [
                  {
                    "name": "arrival_stop",
                    "spec": [
                      {
                        "name": "location",
                        "spec": [
                          {
                            "name": "lat",
                            "type": "number",
                            "label": "Geographical Latitude"
                          },
                          {
                            "name": "lng",
                            "type": "number",
                            "label": "Geographical Longitude"
                          }
                        ],
                        "type": "collection",
                        "label": "Location"
                      },
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name"
                      }
                    ],
                    "type": "collection",
                    "label": "Arrival Stop"
                  },
                  {
                    "name": "arrival_time",
                    "spec": [
                      {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                      },
                      {
                        "name": "time_zone",
                        "type": "text",
                        "label": "Time zone"
                      },
                      {
                        "name": "value",
                        "time": true,
                        "type": "date",
                        "label": "Value"
                      }
                    ],
                    "type": "collection",
                    "label": "Arrival Time"
                  },
                  {
                    "name": "departure_stop",
                    "spec": [
                      {
                        "name": "location",
                        "spec": [
                          {
                            "name": "lat",
                            "type": "number",
                            "label": "Geographical Latitude"
                          },
                          {
                            "name": "lng",
                            "type": "number",
                            "label": "Geographical Longitude"
                          }
                        ],
                        "type": "collection",
                        "label": "Location"
                      },
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name"
                      }
                    ],
                    "type": "collection",
                    "label": "Departure stop"
                  },
                  {
                    "name": "departure_time",
                    "spec": [
                      {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                      },
                      {
                        "name": "time_zone",
                        "type": "text",
                        "label": "Time zone"
                      },
                      {
                        "name": "value",
                        "time": true,
                        "type": "date",
                        "label": "Value"
                      }
                    ],
                    "type": "collection",
                    "label": "Departure time"
                  },
                  {
                    "name": "headsign",
                    "type": "text",
                    "label": "Headsign"
                  },
                  {
                    "name": "line",
                    "spec": [
                      {
                        "name": "agencies",
                        "spec": [
                          {
                            "name": "name",
                            "type": "text",
                            "label": "Name"
                          },
                          {
                            "name": "phone",
                            "type": "text",
                            "label": "Phone"
                          },
                          {
                            "name": "url",
                            "type": "url",
                            "label": "URL"
                          }
                        ],
                        "type": "array",
                        "label": "Agencies"
                      },
                      {
                        "name": "color",
                        "type": "text",
                        "label": "Color"
                      },
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name"
                      },
                      {
                        "name": "short_name",
                        "type": "text",
                        "label": "Short name"
                      },
                      {
                        "name": "text_color",
                        "type": "text",
                        "label": "Text color"
                      },
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL"
                      },
                      {
                        "name": "vehicle",
                        "spec": [
                          {
                            "name": "icon",
                            "type": "text",
                            "label": "Icon"
                          },
                          {
                            "name": "name",
                            "type": "text",
                            "label": "Name"
                          },
                          {
                            "name": "type",
                            "type": "text",
                            "label": "Type"
                          }
                        ],
                        "type": "collection",
                        "label": "Vehicle"
                      },
                      {
                        "name": "num_stops",
                        "type": "number",
                        "label": "Number stops"
                      }
                    ],
                    "type": "collection",
                    "label": "Line"
                  }
                ],
                "type": "collection",
                "label": "Transit Details"
              },
              {
                "name": "steps",
                "spec": [
                  {
                    "name": "distance",
                    "spec": [
                      {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                      },
                      {
                        "name": "value",
                        "type": "uinteger",
                        "label": "Value"
                      }
                    ],
                    "type": "collection",
                    "label": "Distance"
                  },
                  {
                    "name": "duration",
                    "spec": [
                      {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                      },
                      {
                        "name": "value",
                        "type": "uinteger",
                        "label": "Value"
                      }
                    ],
                    "type": "collection",
                    "label": "Duration"
                  },
                  {
                    "name": "end_location",
                    "spec": [
                      {
                        "name": "lat",
                        "type": "number",
                        "label": "Geographical Latitude"
                      },
                      {
                        "name": "lng",
                        "type": "number",
                        "label": "Geographical Longitude"
                      }
                    ],
                    "type": "collection",
                    "label": "End location"
                  },
                  {
                    "name": "html_instructions",
                    "type": "text",
                    "label": "HTML instructions"
                  },
                  {
                    "name": "polyline",
                    "spec": [
                      {
                        "name": "points",
                        "type": "text",
                        "label": "Points"
                      }
                    ],
                    "type": "collection",
                    "label": "Polyline"
                  },
                  {
                    "name": "start_location",
                    "spec": [
                      {
                        "name": "lat",
                        "type": "number",
                        "label": "Geographical Latitude"
                      },
                      {
                        "name": "lng",
                        "type": "number",
                        "label": "Geographical Longitude"
                      }
                    ],
                    "type": "collection",
                    "label": "Start location"
                  },
                  {
                    "name": "travel_mode",
                    "type": "text",
                    "label": "Travel mode"
                  }
                ],
                "type": "array",
                "label": "Steps"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Steps"
        },
        {
          "name": "traffic_speed_entry",
          "type": "array",
          "label": "Traffic Speed Entry"
        },
        {
          "name": "via_waypoint",
          "type": "array",
          "label": "Via Waypoint"
        },
        {
          "name": "urlMap",
          "type": "url",
          "label": "URL Map"
        }
      ],
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Returns the most efficient routes when calculating directions.",
      "expectJsonc": "[\n    {\n        \"name\": \"origin\",\n        \"label\": \"Origin\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"help\": \"Specify origin either as a text string (e.g.`Toronto`) or as GPS coordinates (latitude, longitude pair).\\ne.g.`50.0598058,14.3255436`\"\n    },\n    {\n        \"name\": \"destination\",\n        \"label\": \"Destination\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"help\": \"Specify destination either as a text string (e.g.`Toronto`) or as GPS coordinates (latitude, longitude pair).\\ne.g.`50.0598058,14.3255436`\"\n    },\n    {\n        \"name\": \"travelMode\",\n        \"label\": \"Travel Mode\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"Driving\",\n                \"value\": \"driving\",\n                \"default\": true\n            },\n            {\n                \"label\": \"Walking\",\n                \"value\": \"walking\"\n            },\n            {\n                \"label\": \"Bicycling\",\n                \"value\": \"bicycling\"\n            },\n            {\n                \"label\": \"Transit\",\n                \"value\": \"transit\",\n                \"nested\": [\n                    {\n                        \"name\": \"transit_mode\",\n                        \"label\": \"Preference\",\n                        \"type\": \"select\",\n                        \"multiple\": true,\n                        \"options\": [\n                            {\n                                \"label\": \"bus\",\n                                \"value\": \"bus\"\n                            },\n                            {\n                                \"label\": \"subway\",\n                                \"value\": \"subway\"\n                            },\n                            {\n                                \"label\": \"train\",\n                                \"value\": \"train\"\n                            },\n                            {\n                                \"label\": \"tram\",\n                                \"value\": \"tram\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"waypoints\",\n        \"label\": \"Waypoints\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"label\": \"waypoint\",\n            \"type\": \"text\"\n        },\n        \"help\": \"Do not use this parameter, if you already chose`transit`as Travel Mode parameter.\"\n    },\n    {\n        \"name\": \"avoid\",\n        \"label\": \"Avoid\",\n        \"type\": \"select\",\n        \"multiple\": true,\n        \"advanced\": true,\n        \"options\": [\n            {\n                \"label\": \"Tolls\",\n                \"value\": \"tolls\"\n            },\n            {\n                \"label\": \"Highways\",\n                \"value\": \"highways\"\n            },\n            {\n                \"label\": \"Ferries\",\n                \"value\": \"ferries\"\n            },\n            {\n                \"label\": \"Indoor\",\n                \"value\": \"indoor\"\n            }\n        ]\n    },\n    {\n        \"name\": \"units\",\n        \"label\": \"Units\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"advanced\": true,\n        \"options\": [\n            {\n                \"label\": \"Metric (km or m)\",\n                \"value\": \"metric\",\n                \"default\": true\n            },\n            {\n                \"label\": \"Imperial (miles or feets)\",\n                \"value\": \"imperial\"\n            }\n        ]\n    },\n    {\n        \"name\": \"define\",\n        \"label\": \"Define Time\",\n        \"type\": \"select\",\n        \"mappable\": false,\n        \"advanced\": true,\n        \"options\": [\n            {\n                \"label\": \"Departure Time and Date\",\n                \"value\": \"departure\",\n                \"nested\": [\n                    {\n                        \"name\": \"departure_time\",\n                        \"label\": \"Departure Time\",\n                        \"type\": \"date\",\n                        \"time\": true\n                    }\n                ]\n            },\n            {\n                \"label\": \"Arrival Time and Date\",\n                \"value\": \"arrival\",\n                \"nested\": [\n                    {\n                        \"name\": \"arrival_time\",\n                        \"label\": \"Arrival Time\",\n                        \"type\": \"date\",\n                        \"time\": true\n                    }\n                ]\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"arrival_time\",\n        \"label\": \"Arrival Time\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"text\",\n                \"label\": \"Text\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"time_zone\",\n                \"label\": \"Time zone\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"date\",\n                \"time\": true\n            }\n        ]\n    },\n    {\n        \"name\": \"departure_time\",\n        \"label\": \"Departure Time\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"text\",\n                \"label\": \"Text\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"time_zone\",\n                \"label\": \"Time zone\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"date\",\n                \"time\": true\n            }\n        ]\n    },\n    {\n        \"label\": \"Distance\",\n        \"name\": \"distance\",\n        \"spec\": [\n            {\n                \"label\": \"Text\",\n                \"name\": \"text\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Value\",\n                \"name\": \"value\",\n                \"type\": \"number\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Duration\",\n        \"name\": \"duration\",\n        \"spec\": [\n            {\n                \"label\": \"Text\",\n                \"name\": \"text\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Value\",\n                \"name\": \"value\",\n                \"type\": \"number\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"End Address\",\n        \"name\": \"end_address\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"End Location\",\n        \"name\": \"end_location\",\n        \"spec\": [\n            {\n                \"label\": \"Geographical Latitude\",\n                \"name\": \"lat\",\n                \"type\": \"number\"\n            },\n            {\n                \"label\": \"Geographical Longitude\",\n                \"name\": \"lng\",\n                \"type\": \"number\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Start Address\",\n        \"name\": \"start_address\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Start Location\",\n        \"name\": \"start_location\",\n        \"spec\": [\n            {\n                \"label\": \"Geographical Latitude\",\n                \"name\": \"lat\",\n                \"type\": \"number\"\n            },\n            {\n                \"label\": \"Geographical Longitude\",\n                \"name\": \"lng\",\n                \"type\": \"number\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Steps\",\n        \"name\": \"steps\",\n        \"spec\": {\n            \"spec\": [\n                {\n                    \"label\": \"Distance\",\n                    \"name\": \"distance\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Text\",\n                            \"name\": \"text\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"label\": \"Value\",\n                            \"name\": \"value\",\n                            \"type\": \"number\"\n                        }\n                    ],\n                    \"type\": \"collection\"\n                },\n                {\n                    \"label\": \"Duration\",\n                    \"name\": \"duration\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Text\",\n                            \"name\": \"text\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"label\": \"Value\",\n                            \"name\": \"value\",\n                            \"type\": \"number\"\n                        }\n                    ],\n                    \"type\": \"collection\"\n                },\n                {\n                    \"label\": \"End Location\",\n                    \"name\": \"end_location\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Geographical Latitude\",\n                            \"name\": \"lat\",\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"label\": \"Geographical Longitude\",\n                            \"name\": \"lng\",\n                            \"type\": \"number\"\n                        }\n                    ],\n                    \"type\": \"collection\"\n                },\n                {\n                    \"label\": \"Html Instructions\",\n                    \"name\": \"html_instructions\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"label\": \"Polyline\",\n                    \"name\": \"polyline\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Points\",\n                            \"name\": \"points\",\n                            \"type\": \"text\"\n                        }\n                    ],\n                    \"type\": \"collection\"\n                },\n                {\n                    \"name\": \"maneuver\",\n                    \"label\": \"Maneuver\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"label\": \"Start Location\",\n                    \"name\": \"start_location\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Geographical Latitude\",\n                            \"name\": \"lat\",\n                            \"type\": \"number\"\n                        },\n                        {\n                            \"label\": \"Geographical Longitude\",\n                            \"name\": \"lng\",\n                            \"type\": \"number\"\n                        }\n                    ],\n                    \"type\": \"collection\"\n                },\n                {\n                    \"label\": \"Travel Mode\",\n                    \"name\": \"travel_mode\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"transit_details\",\n                    \"label\": \"Transit Details\",\n                    \"type\": \"collection\",\n                    \"spec\": [\n                        {\n                            \"name\": \"arrival_stop\",\n                            \"label\": \"Arrival Stop\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"location\",\n                                    \"label\": \"Location\",\n                                    \"type\": \"collection\",\n                                    \"spec\": [\n                                        {\n                                            \"name\": \"lat\",\n                                            \"label\": \"Geographical Latitude\",\n                                            \"type\": \"number\"\n                                        },\n                                        {\n                                            \"name\": \"lng\",\n                                            \"label\": \"Geographical Longitude\",\n                                            \"type\": \"number\"\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"name\": \"name\",\n                                    \"label\": \"Name\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"arrival_time\",\n                            \"label\": \"Arrival Time\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"text\",\n                                    \"label\": \"Text\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"time_zone\",\n                                    \"label\": \"Time zone\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"value\",\n                                    \"label\": \"Value\",\n                                    \"type\": \"date\",\n                                    \"time\": true\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"departure_stop\",\n                            \"label\": \"Departure stop\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"location\",\n                                    \"label\": \"Location\",\n                                    \"type\": \"collection\",\n                                    \"spec\": [\n                                        {\n                                            \"name\": \"lat\",\n                                            \"label\": \"Geographical Latitude\",\n                                            \"type\": \"number\"\n                                        },\n                                        {\n                                            \"name\": \"lng\",\n                                            \"label\": \"Geographical Longitude\",\n                                            \"type\": \"number\"\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"name\": \"name\",\n                                    \"label\": \"Name\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"departure_time\",\n                            \"label\": \"Departure time\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"text\",\n                                    \"label\": \"Text\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"time_zone\",\n                                    \"label\": \"Time zone\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"value\",\n                                    \"label\": \"Value\",\n                                    \"type\": \"date\",\n                                    \"time\": true\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"headsign\",\n                            \"label\": \"Headsign\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"name\": \"line\",\n                            \"label\": \"Line\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"agencies\",\n                                    \"label\": \"Agencies\",\n                                    \"type\": \"array\",\n                                    \"spec\": [\n                                        {\n                                            \"name\": \"name\",\n                                            \"label\": \"Name\",\n                                            \"type\": \"text\"\n                                        },\n                                        {\n                                            \"name\": \"phone\",\n                                            \"label\": \"Phone\",\n                                            \"type\": \"text\"\n                                        },\n                                        {\n                                            \"name\": \"url\",\n                                            \"label\": \"URL\",\n                                            \"type\": \"url\"\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"name\": \"color\",\n                                    \"label\": \"Color\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"name\",\n                                    \"label\": \"Name\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"short_name\",\n                                    \"label\": \"Short name\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"text_color\",\n                                    \"label\": \"Text color\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"url\",\n                                    \"label\": \"URL\",\n                                    \"type\": \"url\"\n                                },\n                                {\n                                    \"name\": \"vehicle\",\n                                    \"label\": \"Vehicle\",\n                                    \"type\": \"collection\",\n                                    \"spec\": [\n                                        {\n                                            \"name\": \"icon\",\n                                            \"label\": \"Icon\",\n                                            \"type\": \"text\"\n                                        },\n                                        {\n                                            \"name\": \"name\",\n                                            \"label\": \"Name\",\n                                            \"type\": \"text\"\n                                        },\n                                        {\n                                            \"name\": \"type\",\n                                            \"label\": \"Type\",\n                                            \"type\": \"text\"\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"name\": \"num_stops\",\n                                    \"label\": \"Number stops\",\n                                    \"type\": \"number\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"steps\",\n                    \"label\": \"Steps\",\n                    \"type\": \"array\",\n                    \"spec\": [\n                        {\n                            \"name\": \"distance\",\n                            \"label\": \"Distance\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"text\",\n                                    \"label\": \"Text\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"value\",\n                                    \"label\": \"Value\",\n                                    \"type\": \"uinteger\"\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"duration\",\n                            \"label\": \"Duration\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"text\",\n                                    \"label\": \"Text\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"name\": \"value\",\n                                    \"label\": \"Value\",\n                                    \"type\": \"uinteger\"\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"end_location\",\n                            \"label\": \"End location\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"lat\",\n                                    \"label\": \"Geographical Latitude\",\n                                    \"type\": \"number\"\n                                },\n                                {\n                                    \"name\": \"lng\",\n                                    \"label\": \"Geographical Longitude\",\n                                    \"type\": \"number\"\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"html_instructions\",\n                            \"label\": \"HTML instructions\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"name\": \"polyline\",\n                            \"label\": \"Polyline\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"points\",\n                                    \"label\": \"Points\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"start_location\",\n                            \"label\": \"Start location\",\n                            \"type\": \"collection\",\n                            \"spec\": [\n                                {\n                                    \"name\": \"lat\",\n                                    \"label\": \"Geographical Latitude\",\n                                    \"type\": \"number\"\n                                },\n                                {\n                                    \"name\": \"lng\",\n                                    \"label\": \"Geographical Longitude\",\n                                    \"type\": \"number\"\n                                }\n                            ]\n                        },\n                        {\n                            \"name\": \"travel_mode\",\n                            \"label\": \"Travel mode\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ],\n            \"type\": \"collection\"\n        },\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Traffic Speed Entry\",\n        \"name\": \"traffic_speed_entry\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Via Waypoint\",\n        \"name\": \"via_waypoint\",\n        \"type\": \"array\"\n    },\n    {\n        \"name\": \"urlMap\",\n        \"label\": \"URL Map\",\n        \"type\": \"url\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAnElevation": {
      "id": 3208,
      "api": {
        "qs": {
          "locations": "{{if(parameters.lat && parameters.long, parameters.lat + ',' + parameters.long, undefined)}}"
        },
        "url": "/elevation/json",
        "method": "GET",
        "response": {
          "output": "{{locationResponse(body.results[])}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getAnElevation",
      "epoch": null,
      "flags": {},
      "label": "Get an Elevation",
      "scope": [],
      "expect": [
        {
          "name": "lat",
          "type": "number",
          "label": "Latitude",
          "required": true,
          "validate": {
            "max": 90,
            "min": -90
          }
        },
        {
          "name": "long",
          "type": "number",
          "label": "Longitude",
          "required": true,
          "validate": {
            "max": 180,
            "min": -180
          }
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/elevation/json\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"locations\": \"{{if(parameters.lat && parameters.long, parameters.lat + ',' + parameters.long, undefined)}}\"\n    },\n    \"response\": {\n        \"output\": \"{{locationResponse(body.results[])}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "elevation",
          "type": "number",
          "label": "Elevation"
        },
        {
          "name": "location",
          "spec": [
            {
              "name": "lat",
              "type": "number",
              "label": "Geographical Latitude"
            },
            {
              "name": "lng",
              "type": "number",
              "label": "Geographical Longitude"
            }
          ],
          "type": "collection",
          "label": "Location"
        },
        {
          "name": "resolution",
          "type": "number",
          "label": "Resolution"
        },
        {
          "name": "urlMap",
          "type": "url",
          "label": "URL Map"
        }
      ],
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Provides elevation data for all locations on the surface of the earth, including depth locations on the ocean floor by input geographic coordinates",
      "expectJsonc": "[\n    {\n        \"name\": \"lat\",\n        \"label\": \"Latitude\",\n        \"type\": \"number\",\n        \"required\": true,\n        \"validate\": {\n            \"min\": -90,\n            \"max\": 90\n        }\n    },\n    {\n        \"name\": \"long\",\n        \"label\": \"Longitude\",\n        \"type\": \"number\",\n        \"required\": true,\n        \"validate\": {\n            \"min\": -180,\n            \"max\": 180\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Elevation\",\n        \"name\": \"elevation\",\n        \"type\": \"number\"\n    },\n    {\n        \"label\": \"Location\",\n        \"name\": \"location\",\n        \"spec\": [\n            {\n                \"label\": \"Geographical Latitude\",\n                \"name\": \"lat\",\n                \"type\": \"number\"\n            },\n            {\n                \"label\": \"Geographical Longitude\",\n                \"name\": \"lng\",\n                \"type\": \"number\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Resolution\",\n        \"name\": \"resolution\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"urlMap\",\n        \"label\": \"URL Map\",\n        \"type\": \"url\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "searchForPlaces": {
      "id": 3209,
      "api": {
        "qs": {
          "type": "{{parameters.type}}",
          "query": "{{parameters.input}}",
          "radius": "{{parameters.radius}}",
          "location": "{{if(parameters.lat && parameters.long, parameters.lat + ',' + parameters.long, undefined)}}",
          "maxprice": "{{parameters.maxprice}}",
          "minprice": "{{parameters.minprice}}"
        },
        "url": "/place/{{if(parameters.select === 'text', 'textsearch', 'nearbysearch')}}/json",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{placeResponse(body.results, parameters.opennow)}}"
        },
        "pagination": {
          "qs": {
            "pagetoken": "{{if(body.next_page_token, sleep(body.next_page_token), undefined)}}"
          },
          "condition": "{{body.next_page_token}}"
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "searchForPlaces",
      "epoch": null,
      "flags": {},
      "label": "Search For Places",
      "scope": [],
      "expect": [
        {
          "name": "select",
          "type": "select",
          "label": "Find Places",
          "options": [
            {
              "label": "By Nearby Search",
              "value": "nearby",
              "nested": [
                {
                  "name": "lat",
                  "type": "number",
                  "label": "Latitude",
                  "required": true,
                  "validate": {
                    "max": 90,
                    "min": -90
                  }
                },
                {
                  "name": "long",
                  "type": "number",
                  "label": "Longitude",
                  "required": true,
                  "validate": {
                    "max": 180,
                    "min": -180
                  }
                },
                {
                  "help": "Defines the distance (in meters) within which to return place results. The maximum allowed radius is 50,000 meters.",
                  "name": "radius",
                  "type": "number",
                  "label": "radius",
                  "required": true,
                  "validate": {
                    "max": 50000,
                    "min": 0
                  }
                }
              ]
            },
            {
              "label": "By Text Search",
              "value": "text",
              "nested": [
                {
                  "help": "Name of the place or its address\ne.g.`restaurant`,`123 Main Street`etc",
                  "name": "input",
                  "type": "text",
                  "label": "Query Search For Places",
                  "required": true
                }
              ],
              "default": true
            }
          ],
          "mappable": false,
          "required": true
        },
        {
          "help": "Valid values are in the range from 0 (most affordable) to 4 (most expensive), inclusive.",
          "name": "minprice",
          "type": "uinteger",
          "label": "Minimum Price",
          "validate": {
            "max": 4,
            "min": 0
          }
        },
        {
          "help": "Valid values are in the range from 0 (most affordable) to 4 (most expensive), inclusive.",
          "name": "maxprice",
          "type": "uinteger",
          "label": "Maximum price",
          "validate": {
            "max": 4,
            "min": 0
          }
        },
        {
          "name": "type",
          "type": "select",
          "label": "Type",
          "options": [
            {
              "label": "Accounting",
              "value": "accounting"
            },
            {
              "label": "Airport",
              "value": "airport"
            },
            {
              "label": "Amusement park",
              "value": "amusement_park"
            },
            {
              "label": "Aquarium",
              "value": "aquarium"
            },
            {
              "label": "Art gallery",
              "value": "art_gallery"
            },
            {
              "label": "Atm",
              "value": "atm"
            },
            {
              "label": "Bakery",
              "value": "bakery"
            },
            {
              "label": "Bank",
              "value": "bank"
            },
            {
              "label": "Bar",
              "value": "bar"
            },
            {
              "label": "Beauty salon",
              "value": "beauty_salon"
            },
            {
              "label": "Bicycle store",
              "value": "bicycle_store"
            },
            {
              "label": "Book store",
              "value": "book_store"
            },
            {
              "label": "Bowling alley",
              "value": "bowling_alley"
            },
            {
              "label": "Bus station",
              "value": "bus_station"
            },
            {
              "label": "Cafe",
              "value": "cafe"
            },
            {
              "label": "Campground",
              "value": "campground"
            },
            {
              "label": "Car dealer",
              "value": "car_dealer"
            },
            {
              "label": "Car rental",
              "value": "car_rental"
            },
            {
              "label": "Car repair",
              "value": "car_repair"
            },
            {
              "label": "Car wash",
              "value": "car_wash"
            },
            {
              "label": "Casino",
              "value": "casino"
            },
            {
              "label": "Cemetery",
              "value": "cemetery"
            },
            {
              "label": "Church",
              "value": "church"
            },
            {
              "label": "City hall",
              "value": "city_hall"
            },
            {
              "label": "Clothing store",
              "value": "clothing_store"
            },
            {
              "label": "Convenience store",
              "value": "convenience_store"
            },
            {
              "label": "Courthouse",
              "value": "courthouse"
            },
            {
              "label": "Dentist",
              "value": "dentist"
            },
            {
              "label": "Department store",
              "value": "department_store"
            },
            {
              "label": "Doctor",
              "value": "doctor"
            },
            {
              "label": "Drugstore",
              "value": "drugstore"
            },
            {
              "label": "Electrician",
              "value": "electrician"
            },
            {
              "label": "Electronics store",
              "value": "electronics_store"
            },
            {
              "label": "Embassy",
              "value": "embassy"
            },
            {
              "label": "Fire station",
              "value": "fire_station"
            },
            {
              "label": "Florist",
              "value": "florist"
            },
            {
              "label": "Funeral home",
              "value": "funeral_home"
            },
            {
              "label": "Furniture store",
              "value": "furniture_store"
            },
            {
              "label": "Gas station",
              "value": "gas_station"
            },
            {
              "label": "Grocery_or_supermarket",
              "value": "grocery_or_supermarket"
            },
            {
              "label": "Gym",
              "value": "gym"
            },
            {
              "label": "Hair care",
              "value": "hair_care"
            },
            {
              "label": "Hardware store",
              "value": "hardware_store"
            },
            {
              "label": "Hindu temple",
              "value": "hindu_temple"
            },
            {
              "label": "Home goods store",
              "value": "home_goods_store"
            },
            {
              "label": "Hospital",
              "value": "hospital"
            },
            {
              "label": "Insurance agency",
              "value": "insurance_agency"
            },
            {
              "label": "Jewelry store",
              "value": "jewelry_store"
            },
            {
              "label": "Laundry",
              "value": "laundry"
            },
            {
              "label": "Lawyer",
              "value": "lawyer"
            },
            {
              "label": "Library",
              "value": "library"
            },
            {
              "label": "Light rail station",
              "value": "light_rail_station"
            },
            {
              "label": "Liquor store",
              "value": "liquor_store"
            },
            {
              "label": "Local government office",
              "value": "local_government_office"
            },
            {
              "label": "Locksmith",
              "value": "locksmith"
            },
            {
              "label": "Lodging",
              "value": "lodging"
            },
            {
              "label": "Meal delivery",
              "value": "meal_delivery"
            },
            {
              "label": "Meal takeaway",
              "value": "meal_takeaway"
            },
            {
              "label": "Mosque",
              "value": "mosque"
            },
            {
              "label": "Movie rental",
              "value": "movie_rental"
            },
            {
              "label": "Movie theater",
              "value": "movie_theater"
            },
            {
              "label": "Moving company",
              "value": "moving_company"
            },
            {
              "label": "Museum",
              "value": "museum"
            },
            {
              "label": "Night club",
              "value": "night_club"
            },
            {
              "label": "Painter",
              "value": "painter"
            },
            {
              "label": "Park",
              "value": "park"
            },
            {
              "label": "Parking",
              "value": "parking"
            },
            {
              "label": "Pet store",
              "value": "pet_store"
            },
            {
              "label": "Pharmacy",
              "value": "pharmacy"
            },
            {
              "label": "Physiotherapist",
              "value": "physiotherapist"
            },
            {
              "label": "Plumber",
              "value": "plumber"
            },
            {
              "label": "Police",
              "value": "police"
            },
            {
              "label": "Post office",
              "value": "post_office"
            },
            {
              "label": "Primary school",
              "value": "primary_school"
            },
            {
              "label": "Real estate agency",
              "value": "real_estate_agency"
            },
            {
              "label": "Restaurant",
              "value": "restaurant"
            },
            {
              "label": "Roofing contractor",
              "value": "roofing_contractor"
            },
            {
              "label": "Rv park",
              "value": "rv_park"
            },
            {
              "label": "School",
              "value": "school"
            },
            {
              "label": "Secondary school",
              "value": "secondary_school"
            },
            {
              "label": "Shoe store",
              "value": "shoe_store"
            },
            {
              "label": "Shopping mall",
              "value": "shopping_mall"
            },
            {
              "label": "Spa",
              "value": "spa"
            },
            {
              "label": "Stadium",
              "value": "stadium"
            },
            {
              "label": "Storage",
              "value": "storage"
            },
            {
              "label": "Store",
              "value": "store"
            },
            {
              "label": "Subway station",
              "value": "subway_station"
            },
            {
              "label": "Supermarket",
              "value": "supermarket"
            },
            {
              "label": "Synagogue",
              "value": "synagogue"
            },
            {
              "label": "Taxi stand",
              "value": "taxi_stand"
            },
            {
              "label": "Tourist attraction",
              "value": "tourist_attraction"
            },
            {
              "label": "Train station",
              "value": "train_station"
            },
            {
              "label": "Transit station",
              "value": "transit_station"
            },
            {
              "label": "Travel agency",
              "value": "travel_agency"
            },
            {
              "label": "University",
              "value": "university"
            },
            {
              "label": "Veterinary care",
              "value": "veterinary_care"
            },
            {
              "label": "Zoo",
              "value": "zoo"
            }
          ]
        },
        {
          "help": "Maximum number of results",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/place/{{if(parameters.select === 'text', 'textsearch', 'nearbysearch')}}/json\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"query\": \"{{parameters.input}}\",\n        \"minprice\": \"{{parameters.minprice}}\",\n        \"maxprice\": \"{{parameters.maxprice}}\",\n        \"location\": \"{{if(parameters.lat && parameters.long, parameters.lat + ',' + parameters.long, undefined)}}\",\n        \"radius\": \"{{parameters.radius}}\",\n        \"type\": \"{{parameters.type}}\"\n    },\n    \"response\": {\n        \"iterate\": \"{{placeResponse(body.results, parameters.opennow)}}\",\n        \"output\": \"{{item}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"pagetoken\": \"{{if(body.next_page_token, sleep(body.next_page_token), undefined)}}\"\n        },\n        \"condition\": \"{{body.next_page_token}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "business_status",
          "type": "text",
          "label": "Business Status"
        },
        {
          "name": "formatted_address",
          "type": "text",
          "label": "Formatted Address"
        },
        {
          "name": "geometry",
          "spec": [
            {
              "name": "location",
              "spec": [
                {
                  "name": "lat",
                  "type": "number",
                  "label": "Geographical Latitude"
                },
                {
                  "name": "lng",
                  "type": "number",
                  "label": "Geographical Longitude"
                }
              ],
              "type": "collection",
              "label": "Location"
            },
            {
              "name": "viewport",
              "spec": [
                {
                  "name": "northeast",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Geographical Latitude"
                    },
                    {
                      "name": "lng",
                      "type": "number",
                      "label": "Geographical Longitude"
                    }
                  ],
                  "type": "collection",
                  "label": "Northeast"
                },
                {
                  "name": "southwest",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Geographical Latitude"
                    },
                    {
                      "name": "lng",
                      "type": "number",
                      "label": "Geographical Longitude"
                    }
                  ],
                  "type": "collection",
                  "label": "Southwest"
                }
              ],
              "type": "collection",
              "label": "Viewport"
            }
          ],
          "type": "collection",
          "label": "Geometry"
        },
        {
          "name": "urlMap",
          "type": "url",
          "label": "URL Map"
        },
        {
          "name": "icon",
          "type": "text",
          "label": "Icon"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Request ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "opening_hours",
          "spec": [
            {
              "name": "open_now",
              "type": "boolean",
              "label": "Open Now"
            }
          ],
          "type": "collection",
          "label": "Opening Hours"
        },
        {
          "name": "photos",
          "spec": [
            {
              "name": "height",
              "type": "uinteger",
              "label": "Height"
            },
            {
              "name": "html_attributions",
              "type": "array",
              "label": "HTML Attributions"
            },
            {
              "name": "photo_reference",
              "type": "text",
              "label": "Photo Reference"
            },
            {
              "name": "width",
              "type": "uinteger",
              "label": "Width"
            }
          ],
          "type": "array",
          "label": "Photos"
        },
        {
          "name": "place_id",
          "type": "text",
          "label": "Place ID"
        },
        {
          "name": "plus_code",
          "spec": [
            {
              "name": "compound_code",
              "type": "text",
              "label": "Compound Code"
            },
            {
              "name": "global_code",
              "type": "text",
              "label": "Global Code"
            }
          ],
          "type": "collection",
          "label": "Plus Code"
        },
        {
          "name": "price_level",
          "type": "uinteger",
          "label": "Price Level"
        },
        {
          "name": "rating",
          "type": "number",
          "label": "Rating"
        },
        {
          "name": "reference",
          "type": "text",
          "label": "Reference"
        },
        {
          "name": "types",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Types"
        },
        {
          "name": "vicinity",
          "type": "text",
          "label": "Vicinity"
        },
        {
          "name": "user_ratings_total",
          "type": "uinteger",
          "label": "User Ratings Total"
        }
      ],
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Searches for place information using a variety of categories, including establishments, prominent points of interest, and geographic locations.",
      "expectJsonc": "[\n    {\n        \"name\": \"select\",\n        \"label\": \"Find Places\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"By Nearby Search\",\n                \"value\": \"nearby\",\n                \"nested\": [\n                    {\n                        \"name\": \"lat\",\n                        \"label\": \"Latitude\",\n                        \"type\": \"number\",\n                        \"required\": true,\n                        \"validate\": {\n                            \"min\": -90,\n                            \"max\": 90\n                        }\n                    },\n                    {\n                        \"name\": \"long\",\n                        \"label\": \"Longitude\",\n                        \"type\": \"number\",\n                        \"required\": true,\n                        \"validate\": {\n                            \"min\": -180,\n                            \"max\": 180\n                        }\n                    },\n                    {\n                        \"name\": \"radius\",\n                        \"label\": \"radius\",\n                        \"type\": \"number\",\n                        \"required\": true,\n                        \"help\": \"Defines the distance (in meters) within which to return place results. The maximum allowed radius is 50,000 meters.\",\n                        \"validate\": {\n                            \"min\": 0,\n                            \"max\": 50000\n                        }\n                    }\n                ]\n            },\n            {\n                \"label\": \"By Text Search\",\n                \"value\": \"text\",\n                \"default\": true,\n                \"nested\": [\n                    {\n                        \"name\": \"input\",\n                        \"type\": \"text\",\n                        \"label\": \"Query Search For Places\",\n                        \"required\": true,\n                        \"help\": \"Name of the place or its address\\ne.g.`restaurant`,`123 Main Street`etc\"\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"minprice\",\n        \"label\": \"Minimum Price\",\n        \"type\": \"uinteger\",\n        \"help\": \"Valid values are in the range from 0 (most affordable) to 4 (most expensive), inclusive.\",\n        \"validate\": {\n            \"min\": 0,\n            \"max\": 4\n        }\n    },\n    {\n        \"name\": \"maxprice\",\n        \"label\": \"Maximum price\",\n        \"type\": \"uinteger\",\n        \"help\": \"Valid values are in the range from 0 (most affordable) to 4 (most expensive), inclusive.\",\n        \"validate\": {\n            \"min\": 0,\n            \"max\": 4\n        }\n    },/* \n    {\n        \"name\": \"opennow\",\n        \"label\": \"Show only places where they are open now\",\n        \"type\": \"boolean\",\n        \"required\": true,\n        \"default\": false,\n        \"mappable\": false\n    }, */\n    {\n        \"name\": \"type\",\n        \"label\": \"Type\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Accounting\",\n                \"value\": \"accounting\"\n            },\n            {\n                \"label\": \"Airport\",\n                \"value\": \"airport\"\n            },\n            {\n                \"label\": \"Amusement park\",\n                \"value\": \"amusement_park\"\n            },\n            {\n                \"label\": \"Aquarium\",\n                \"value\": \"aquarium\"\n            },\n            {\n                \"label\": \"Art gallery\",\n                \"value\": \"art_gallery\"\n            },\n            {\n                \"label\": \"Atm\",\n                \"value\": \"atm\"\n            },\n            {\n                \"label\": \"Bakery\",\n                \"value\": \"bakery\"\n            },\n            {\n                \"label\": \"Bank\",\n                \"value\": \"bank\"\n            },\n            {\n                \"label\": \"Bar\",\n                \"value\": \"bar\"\n            },\n            {\n                \"label\": \"Beauty salon\",\n                \"value\": \"beauty_salon\"\n            },\n            {\n                \"label\": \"Bicycle store\",\n                \"value\": \"bicycle_store\"\n            },\n            {\n                \"label\": \"Book store\",\n                \"value\": \"book_store\"\n            },\n            {\n                \"label\": \"Bowling alley\",\n                \"value\": \"bowling_alley\"\n            },\n            {\n                \"label\": \"Bus station\",\n                \"value\": \"bus_station\"\n            },\n            {\n                \"label\": \"Cafe\",\n                \"value\": \"cafe\"\n            },\n            {\n                \"label\": \"Campground\",\n                \"value\": \"campground\"\n            },\n            {\n                \"label\": \"Car dealer\",\n                \"value\": \"car_dealer\"\n            },\n            {\n                \"label\": \"Car rental\",\n                \"value\": \"car_rental\"\n            },\n            {\n                \"label\": \"Car repair\",\n                \"value\": \"car_repair\"\n            },\n            {\n                \"label\": \"Car wash\",\n                \"value\": \"car_wash\"\n            },\n            {\n                \"label\": \"Casino\",\n                \"value\": \"casino\"\n            },\n            {\n                \"label\": \"Cemetery\",\n                \"value\": \"cemetery\"\n            },\n            {\n                \"label\": \"Church\",\n                \"value\": \"church\"\n            },\n            {\n                \"label\": \"City hall\",\n                \"value\": \"city_hall\"\n            },\n            {\n                \"label\": \"Clothing store\",\n                \"value\": \"clothing_store\"\n            },\n            {\n                \"label\": \"Convenience store\",\n                \"value\": \"convenience_store\"\n            },\n            {\n                \"label\": \"Courthouse\",\n                \"value\": \"courthouse\"\n            },\n            {\n                \"label\": \"Dentist\",\n                \"value\": \"dentist\"\n            },\n            {\n                \"label\": \"Department store\",\n                \"value\": \"department_store\"\n            },\n            {\n                \"label\": \"Doctor\",\n                \"value\": \"doctor\"\n            },\n            {\n                \"label\": \"Drugstore\",\n                \"value\": \"drugstore\"\n            },\n            {\n                \"label\": \"Electrician\",\n                \"value\": \"electrician\"\n            },\n            {\n                \"label\": \"Electronics store\",\n                \"value\": \"electronics_store\"\n            },\n            {\n                \"label\": \"Embassy\",\n                \"value\": \"embassy\"\n            },\n            {\n                \"label\": \"Fire station\",\n                \"value\": \"fire_station\"\n            },\n            {\n                \"label\": \"Florist\",\n                \"value\": \"florist\"\n            },\n            {\n                \"label\": \"Funeral home\",\n                \"value\": \"funeral_home\"\n            },\n            {\n                \"label\": \"Furniture store\",\n                \"value\": \"furniture_store\"\n            },\n            {\n                \"label\": \"Gas station\",\n                \"value\": \"gas_station\"\n            },\n            {\n                \"label\": \"Grocery_or_supermarket\",\n                \"value\": \"grocery_or_supermarket\"\n            },\n            {\n                \"label\": \"Gym\",\n                \"value\": \"gym\"\n            },\n            {\n                \"label\": \"Hair care\",\n                \"value\": \"hair_care\"\n            },\n            {\n                \"label\": \"Hardware store\",\n                \"value\": \"hardware_store\"\n            },\n            {\n                \"label\": \"Hindu temple\",\n                \"value\": \"hindu_temple\"\n            },\n            {\n                \"label\": \"Home goods store\",\n                \"value\": \"home_goods_store\"\n            },\n            {\n                \"label\": \"Hospital\",\n                \"value\": \"hospital\"\n            },\n            {\n                \"label\": \"Insurance agency\",\n                \"value\": \"insurance_agency\"\n            },\n            {\n                \"label\": \"Jewelry store\",\n                \"value\": \"jewelry_store\"\n            },\n            {\n                \"label\": \"Laundry\",\n                \"value\": \"laundry\"\n            },\n            {\n                \"label\": \"Lawyer\",\n                \"value\": \"lawyer\"\n            },\n            {\n                \"label\": \"Library\",\n                \"value\": \"library\"\n            },\n            {\n                \"label\": \"Light rail station\",\n                \"value\": \"light_rail_station\"\n            },\n            {\n                \"label\": \"Liquor store\",\n                \"value\": \"liquor_store\"\n            },\n            {\n                \"label\": \"Local government office\",\n                \"value\": \"local_government_office\"\n            },\n            {\n                \"label\": \"Locksmith\",\n                \"value\": \"locksmith\"\n            },\n            {\n                \"label\": \"Lodging\",\n                \"value\": \"lodging\"\n            },\n            {\n                \"label\": \"Meal delivery\",\n                \"value\": \"meal_delivery\"\n            },\n            {\n                \"label\": \"Meal takeaway\",\n                \"value\": \"meal_takeaway\"\n            },\n            {\n                \"label\": \"Mosque\",\n                \"value\": \"mosque\"\n            },\n            {\n                \"label\": \"Movie rental\",\n                \"value\": \"movie_rental\"\n            },\n            {\n                \"label\": \"Movie theater\",\n                \"value\": \"movie_theater\"\n            },\n            {\n                \"label\": \"Moving company\",\n                \"value\": \"moving_company\"\n            },\n            {\n                \"label\": \"Museum\",\n                \"value\": \"museum\"\n            },\n            {\n                \"label\": \"Night club\",\n                \"value\": \"night_club\"\n            },\n            {\n                \"label\": \"Painter\",\n                \"value\": \"painter\"\n            },\n            {\n                \"label\": \"Park\",\n                \"value\": \"park\"\n            },\n            {\n                \"label\": \"Parking\",\n                \"value\": \"parking\"\n            },\n            {\n                \"label\": \"Pet store\",\n                \"value\": \"pet_store\"\n            },\n            {\n                \"label\": \"Pharmacy\",\n                \"value\": \"pharmacy\"\n            },\n            {\n                \"label\": \"Physiotherapist\",\n                \"value\": \"physiotherapist\"\n            },\n            {\n                \"label\": \"Plumber\",\n                \"value\": \"plumber\"\n            },\n            {\n                \"label\": \"Police\",\n                \"value\": \"police\"\n            },\n            {\n                \"label\": \"Post office\",\n                \"value\": \"post_office\"\n            },\n            {\n                \"label\": \"Primary school\",\n                \"value\": \"primary_school\"\n            },\n            {\n                \"label\": \"Real estate agency\",\n                \"value\": \"real_estate_agency\"\n            },\n            {\n                \"label\": \"Restaurant\",\n                \"value\": \"restaurant\"\n            },\n            {\n                \"label\": \"Roofing contractor\",\n                \"value\": \"roofing_contractor\"\n            },\n            {\n                \"label\": \"Rv park\",\n                \"value\": \"rv_park\"\n            },\n            {\n                \"label\": \"School\",\n                \"value\": \"school\"\n            },\n            {\n                \"label\": \"Secondary school\",\n                \"value\": \"secondary_school\"\n            },\n            {\n                \"label\": \"Shoe store\",\n                \"value\": \"shoe_store\"\n            },\n            {\n                \"label\": \"Shopping mall\",\n                \"value\": \"shopping_mall\"\n            },\n            {\n                \"label\": \"Spa\",\n                \"value\": \"spa\"\n            },\n            {\n                \"label\": \"Stadium\",\n                \"value\": \"stadium\"\n            },\n            {\n                \"label\": \"Storage\",\n                \"value\": \"storage\"\n            },\n            {\n                \"label\": \"Store\",\n                \"value\": \"store\"\n            },\n            {\n                \"label\": \"Subway station\",\n                \"value\": \"subway_station\"\n            },\n            {\n                \"label\": \"Supermarket\",\n                \"value\": \"supermarket\"\n            },\n            {\n                \"label\": \"Synagogue\",\n                \"value\": \"synagogue\"\n            },\n            {\n                \"label\": \"Taxi stand\",\n                \"value\": \"taxi_stand\"\n            },\n            {\n                \"label\": \"Tourist attraction\",\n                \"value\": \"tourist_attraction\"\n            },\n            {\n                \"label\": \"Train station\",\n                \"value\": \"train_station\"\n            },\n            {\n                \"label\": \"Transit station\",\n                \"value\": \"transit_station\"\n            },\n            {\n                \"label\": \"Travel agency\",\n                \"value\": \"travel_agency\"\n            },\n            {\n                \"label\": \"University\",\n                \"value\": \"university\"\n            },\n            {\n                \"label\": \"Veterinary care\",\n                \"value\": \"veterinary_care\"\n            },\n            {\n                \"label\": \"Zoo\",\n                \"value\": \"zoo\"\n            }\n        ]\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"default\": 10,\n        \"help\": \"Maximum number of results\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"business_status\",\n        \"label\": \"Business Status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Formatted Address\",\n        \"name\": \"formatted_address\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Geometry\",\n        \"name\": \"geometry\",\n        \"spec\": [\n            {\n                \"label\": \"Location\",\n                \"name\": \"location\",\n                \"spec\": [\n                    {\n                        \"label\": \"Geographical Latitude\",\n                        \"name\": \"lat\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Geographical Longitude\",\n                        \"name\": \"lng\",\n                        \"type\": \"number\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Viewport\",\n                \"name\": \"viewport\",\n                \"spec\": [\n                    {\n                        \"label\": \"Northeast\",\n                        \"name\": \"northeast\",\n                        \"spec\": [\n                            {\n                                \"label\": \"Geographical Latitude\",\n                                \"name\": \"lat\",\n                                \"type\": \"number\"\n                            },\n                            {\n                                \"label\": \"Geographical Longitude\",\n                                \"name\": \"lng\",\n                                \"type\": \"number\"\n                            }\n                        ],\n                        \"type\": \"collection\"\n                    },\n                    {\n                        \"label\": \"Southwest\",\n                        \"name\": \"southwest\",\n                        \"spec\": [\n                            {\n                                \"label\": \"Geographical Latitude\",\n                                \"name\": \"lat\",\n                                \"type\": \"number\"\n                            },\n                            {\n                                \"label\": \"Geographical Longitude\",\n                                \"name\": \"lng\",\n                                \"type\": \"number\"\n                            }\n                        ],\n                        \"type\": \"collection\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"name\": \"urlMap\",\n        \"label\": \"URL Map\",\n        \"type\": \"url\"\n    },\n    {\n        \"label\": \"Icon\",\n        \"name\": \"icon\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Request ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Name\",\n        \"name\": \"name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"opening_hours\",\n        \"label\": \"Opening Hours\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"open_now\",\n                \"label\": \"Open Now\",\n                \"type\": \"boolean\"\n            }\n        ]\n    },\n    {\n        \"name\": \"photos\",\n        \"label\": \"Photos\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"height\",\n                \"label\": \"Height\",\n                \"type\": \"uinteger\"\n            },\n            {\n                \"name\": \"html_attributions\",\n                \"label\": \"HTML Attributions\",\n                \"type\": \"array\"\n            },\n            {\n                \"name\": \"photo_reference\",\n                \"label\": \"Photo Reference\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"width\",\n                \"label\": \"Width\",\n                \"type\": \"uinteger\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Place ID\",\n        \"name\": \"place_id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Plus Code\",\n        \"name\": \"plus_code\",\n        \"spec\": [\n            {\n                \"label\": \"Compound Code\",\n                \"name\": \"compound_code\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Global Code\",\n                \"name\": \"global_code\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"name\": \"price_level\",\n        \"label\": \"Price Level\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"rating\",\n        \"label\": \"Rating\",\n        \"type\": \"number\"\n    },\n    {\n        \"label\": \"Reference\",\n        \"name\": \"reference\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Types\",\n        \"name\": \"types\",\n        \"spec\": {\n            \"type\": \"text\"\n        },\n        \"type\": \"array\"\n    },\n    {\n        \"name\": \"vicinity\",\n        \"label\": \"Vicinity\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"user_ratings_total\",\n        \"label\": \"User Ratings Total\",\n        \"type\": \"uinteger\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getADistanceMatrix": {
      "id": 3210,
      "api": {
        "qs": {
          "mode": "{{parameters.mode}}",
          "avoid": "{{if(parameters.avoid, join(parameters.avoid, '|'), undefined)}}",
          "units": "{{parameters.units}}",
          "origins": "{{join(originsParameter(parameters.origins), '|')}}",
          "arrival_time": "{{formatDate(parameters.arrival_time, 'X')}}",
          "destinations": "{{join(destinationsParameters(parameters.destinations), '|')}}",
          "transit_mode": "{{if(parameters.transit_mode, join(parameters.transit_mode, '|'), undefined)}}",
          "departure_time": "{{formatDate(parameters.departure_time, 'X')}}"
        },
        "url": "/distancematrix/json",
        "method": "GET",
        "response": {
          "output": "{{item}}",
          "iterate": "{{body.rows}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getADistanceMatrix",
      "epoch": null,
      "flags": {},
      "label": "Get a Distance Matrix",
      "scope": [],
      "expect": [
        {
          "name": "origins",
          "spec": [
            {
              "name": "select",
              "type": "select",
              "label": "Add Origins",
              "options": [
                {
                  "label": "By Input Text",
                  "value": "text",
                  "nested": [
                    {
                      "name": "text",
                      "type": "text",
                      "label": "Value",
                      "required": true
                    }
                  ],
                  "default": true
                },
                {
                  "label": "By Input Geographic Coordinates",
                  "value": "geo",
                  "nested": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Latitude",
                      "required": true,
                      "validate": {
                        "max": 90,
                        "min": -90
                      }
                    },
                    {
                      "name": "long",
                      "type": "number",
                      "label": "Longitude",
                      "required": true,
                      "validate": {
                        "max": 180,
                        "min": -180
                      }
                    }
                  ]
                }
              ],
              "mappable": false,
              "required": true
            }
          ],
          "type": "array",
          "label": "Origins",
          "required": true
        },
        {
          "name": "destinations",
          "spec": [
            {
              "name": "select",
              "type": "select",
              "label": "Add Destinations",
              "options": [
                {
                  "label": "By Input Text",
                  "value": "text",
                  "nested": [
                    {
                      "name": "text",
                      "type": "text",
                      "label": "Value",
                      "required": true
                    }
                  ],
                  "default": true
                },
                {
                  "label": "By Input Geographic Coordinates",
                  "value": "geo",
                  "nested": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Latitude",
                      "required": true,
                      "validate": {
                        "max": 90,
                        "min": -90
                      }
                    },
                    {
                      "name": "long",
                      "type": "number",
                      "label": "Longitude",
                      "required": true,
                      "validate": {
                        "max": 180,
                        "min": -180
                      }
                    }
                  ]
                }
              ],
              "mappable": false,
              "required": true
            }
          ],
          "type": "array",
          "label": "Destinations",
          "required": true
        },
        {
          "name": "mode",
          "type": "select",
          "label": "Travel Mode",
          "options": [
            {
              "label": "Driving",
              "value": "driving",
              "default": true
            },
            {
              "label": "Walking",
              "value": "walking"
            },
            {
              "label": "Bicycling",
              "value": "bicycling"
            },
            {
              "label": "Transit",
              "value": "transit",
              "nested": [
                {
                  "name": "transit_mode",
                  "type": "select",
                  "label": "Preference",
                  "options": [
                    {
                      "label": "Bus",
                      "value": "bus"
                    },
                    {
                      "label": "Subway",
                      "value": "subway"
                    },
                    {
                      "label": "Train",
                      "value": "train"
                    },
                    {
                      "label": "Tram",
                      "value": "tram"
                    }
                  ],
                  "multiple": true
                }
              ]
            }
          ],
          "mappable": false,
          "required": true
        },
        {
          "name": "avoid",
          "type": "select",
          "label": "Avoid",
          "options": [
            {
              "label": "Tolls",
              "value": "tolls"
            },
            {
              "label": "Highways",
              "value": "highways"
            },
            {
              "label": "Ferries",
              "value": "ferries"
            },
            {
              "label": "Indoor",
              "value": "indoor"
            }
          ],
          "advanced": true,
          "multiple": true
        },
        {
          "name": "units",
          "type": "select",
          "label": "Units",
          "options": [
            {
              "label": "Metric (km or m)",
              "value": "metric",
              "default": true
            },
            {
              "label": "Imperial (miles or feets)",
              "value": "imperial"
            }
          ],
          "advanced": true,
          "mappable": false,
          "required": true
        },
        {
          "name": "define",
          "type": "select",
          "label": "Define Time",
          "options": [
            {
              "label": "Departure Time and Date",
              "value": "departure",
              "nested": [
                {
                  "name": "departure_time",
                  "time": true,
                  "type": "date",
                  "label": "Departure Time"
                }
              ]
            },
            {
              "label": "Arrival Time and Date",
              "value": "arrival",
              "nested": [
                {
                  "name": "arrival_time",
                  "time": true,
                  "type": "date",
                  "label": "Arrival Time"
                }
              ]
            }
          ],
          "advanced": true,
          "mappable": false
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/distancematrix/json\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"origins\": \"{{join(originsParameter(parameters.origins), '|')}}\",\n        \"destinations\": \"{{join(destinationsParameters(parameters.destinations), '|')}}\",\n        \"mode\": \"{{parameters.mode}}\",\n        \"transit_mode\": \"{{if(parameters.transit_mode, join(parameters.transit_mode, '|'), undefined)}}\",\n        \"avoid\": \"{{if(parameters.avoid, join(parameters.avoid, '|'), undefined)}}\",\n        \"units\": \"{{parameters.units}}\",\n        \"arrival_time\": \"{{formatDate(parameters.arrival_time, 'X')}}\",\n        \"departure_time\": \"{{formatDate(parameters.departure_time, 'X')}}\"\n    },\n    \"response\": {\n        \"iterate\": \"{{body.rows}}\",\n        \"output\": \"{{item}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "elements",
          "spec": {
            "spec": [
              {
                "name": "distance",
                "spec": [
                  {
                    "name": "text",
                    "type": "text",
                    "label": "Text"
                  },
                  {
                    "name": "value",
                    "type": "number",
                    "label": "Value"
                  }
                ],
                "type": "collection",
                "label": "Distance"
              },
              {
                "name": "duration",
                "spec": [
                  {
                    "name": "text",
                    "type": "text",
                    "label": "Text"
                  },
                  {
                    "name": "value",
                    "type": "number",
                    "label": "Value"
                  }
                ],
                "type": "collection",
                "label": "Duration"
              },
              {
                "name": "duration_in_traffic",
                "spec": [
                  {
                    "name": "text",
                    "type": "text",
                    "label": "Text"
                  },
                  {
                    "name": "value",
                    "type": "number",
                    "label": "Value"
                  }
                ],
                "type": "collection",
                "label": "Duration in Traffic"
              },
              {
                "name": "fare",
                "spec": [
                  {
                    "name": "currency",
                    "type": "text",
                    "label": "Currency"
                  },
                  {
                    "name": "text",
                    "type": "text",
                    "label": "Text"
                  },
                  {
                    "name": "value",
                    "type": "number",
                    "label": "Value"
                  }
                ],
                "type": "collection",
                "label": "Fare"
              },
              {
                "name": "status",
                "type": "text",
                "label": "Status"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Elements"
        }
      ],
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Provides travel distance and time for a matrix of origins and destinations.",
      "expectJsonc": "[\n    {\n        \"name\": \"origins\",\n        \"label\": \"Origins\",\n        \"type\": \"array\",\n        \"required\": true,\n        \"spec\": [\n            {\n                \"name\": \"select\",\n                \"label\": \"Add Origins\",\n                \"type\": \"select\",\n                \"required\": true,\n                \"mappable\": false,\n                \"options\": [\n                    {\n                        \"label\": \"By Input Text\",\n                        \"value\": \"text\",\n                        \"default\": true,\n                        \"nested\": [\n                            {\n                                \"name\": \"text\",\n                                \"label\": \"Value\",\n                                \"type\": \"text\",\n                                \"required\": true\n                            }\n                        ]\n                    },\n                    {\n                        \"label\": \"By Input Geographic Coordinates\",\n                        \"value\": \"geo\",\n                        \"nested\": [\n                            {\n                                \"name\": \"lat\",\n                                \"label\": \"Latitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -90,\n                                    \"max\": 90\n                                }\n                            },\n                            {\n                                \"name\": \"long\",\n                                \"label\": \"Longitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -180,\n                                    \"max\": 180\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"destinations\",\n        \"label\": \"Destinations\",\n        \"type\": \"array\",\n        \"required\": true,\n        \"spec\": [\n            {\n                \"name\": \"select\",\n                \"label\": \"Add Destinations\",\n                \"type\": \"select\",\n                \"required\": true,\n                \"mappable\": false,\n                \"options\": [\n                    {\n                        \"label\": \"By Input Text\",\n                        \"value\": \"text\",\n                        \"default\": true,\n                        \"nested\": [\n                            {\n                                \"name\": \"text\",\n                                \"label\": \"Value\",\n                                \"type\": \"text\",\n                                \"required\": true\n                            }\n                        ]\n                    },\n                    {\n                        \"label\": \"By Input Geographic Coordinates\",\n                        \"value\": \"geo\",\n                        \"nested\": [\n                            {\n                                \"name\": \"lat\",\n                                \"label\": \"Latitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -90,\n                                    \"max\": 90\n                                }\n                            },\n                            {\n                                \"name\": \"long\",\n                                \"label\": \"Longitude\",\n                                \"type\": \"number\",\n                                \"required\": true,\n                                \"validate\": {\n                                    \"min\": -180,\n                                    \"max\": 180\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"mode\",\n        \"label\": \"Travel Mode\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"Driving\",\n                \"value\": \"driving\",\n                \"default\": true\n            },\n            {\n                \"label\": \"Walking\",\n                \"value\": \"walking\"\n            },\n            {\n                \"label\": \"Bicycling\",\n                \"value\": \"bicycling\"\n            },\n            {\n                \"label\": \"Transit\",\n                \"value\": \"transit\",\n                \"nested\": [\n                    {\n                        \"name\": \"transit_mode\",\n                        \"label\": \"Preference\",\n                        \"type\": \"select\",\n                        \"multiple\": true,\n                        \"options\": [\n                            {\n                                \"label\": \"Bus\",\n                                \"value\": \"bus\"\n                            },\n                            {\n                                \"label\": \"Subway\",\n                                \"value\": \"subway\"\n                            },\n                            {\n                                \"label\": \"Train\",\n                                \"value\": \"train\"\n                            },\n                            {\n                                \"label\": \"Tram\",\n                                \"value\": \"tram\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"avoid\",\n        \"label\": \"Avoid\",\n        \"type\": \"select\",\n        \"multiple\": true,\n        \"advanced\": true,\n        \"options\": [\n            {\n                \"label\": \"Tolls\",\n                \"value\": \"tolls\"\n            },\n            {\n                \"label\": \"Highways\",\n                \"value\": \"highways\"\n            },\n            {\n                \"label\": \"Ferries\",\n                \"value\": \"ferries\"\n            },\n            {\n                \"label\": \"Indoor\",\n                \"value\": \"indoor\"\n            }\n        ]\n    },\n    {\n        \"name\": \"units\",\n        \"label\": \"Units\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"advanced\": true,\n        \"options\": [\n            {\n                \"label\": \"Metric (km or m)\",\n                \"value\": \"metric\",\n                \"default\": true\n            },\n            {\n                \"label\": \"Imperial (miles or feets)\",\n                \"value\": \"imperial\"\n            }\n        ]\n    },\n    {\n        \"name\": \"define\",\n        \"label\": \"Define Time\",\n        \"type\": \"select\",\n        \"mappable\": false,\n        \"advanced\": true,\n        \"options\": [\n            {\n                \"label\": \"Departure Time and Date\",\n                \"value\": \"departure\",\n                \"nested\": [\n                    {\n                        \"name\": \"departure_time\",\n                        \"label\": \"Departure Time\",\n                        \"type\": \"date\",\n                        \"time\": true\n                    }\n                ]\n            },\n            {\n                \"label\": \"Arrival Time and Date\",\n                \"value\": \"arrival\",\n                \"nested\": [\n                    {\n                        \"name\": \"arrival_time\",\n                        \"label\": \"Arrival Time\",\n                        \"type\": \"date\",\n                        \"time\": true\n                    }\n                ]\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Elements\",\n        \"name\": \"elements\",\n        \"spec\": {\n            \"spec\": [\n                {\n                    \"label\": \"Distance\",\n                    \"name\": \"distance\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Text\",\n                            \"name\": \"text\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"label\": \"Value\",\n                            \"name\": \"value\",\n                            \"type\": \"number\"\n                        }\n                    ],\n                    \"type\": \"collection\"\n                },\n                {\n                    \"label\": \"Duration\",\n                    \"name\": \"duration\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Text\",\n                            \"name\": \"text\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"label\": \"Value\",\n                            \"name\": \"value\",\n                            \"type\": \"number\"\n                        }\n                    ],\n                    \"type\": \"collection\"\n                },\n                {\n                    \"name\": \"duration_in_traffic\",\n                    \"label\": \"Duration in Traffic\",\n                    \"type\": \"collection\",\n                    \"spec\": [\n                        {\n                            \"label\": \"Text\",\n                            \"name\": \"text\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"label\": \"Value\",\n                            \"name\": \"value\",\n                            \"type\": \"number\"\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"fare\",\n                    \"label\": \"Fare\",\n                    \"type\": \"collection\",\n                    \"spec\": [\n                        {\n                            \"name\": \"currency\",\n                            \"label\": \"Currency\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"label\": \"Text\",\n                            \"name\": \"text\",\n                            \"type\": \"text\"\n                        },\n                        {\n                            \"label\": \"Value\",\n                            \"name\": \"value\",\n                            \"type\": \"number\"\n                        }\n                    ]\n                },\n                {\n                    \"label\": \"Status\",\n                    \"name\": \"status\",\n                    \"type\": \"text\"\n                }\n            ],\n            \"type\": \"collection\"\n        },\n        \"type\": \"array\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "convertAnAddressIntoGeocode": {
      "id": 3211,
      "api": {
        "qs": {
          "latlng": "{{if(parameters.lat && parameters.long, parameters.lat + ',' + parameters.long, undefined)}}",
          "address": "{{parameters.address}}"
        },
        "url": "/geocode/json",
        "method": "GET",
        "response": {
          "output": "{{locationResponse(body.results[], parameters)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "convertAnAddressIntoGeocode",
      "epoch": null,
      "flags": {},
      "label": "Get a Location",
      "scope": [],
      "expect": [
        {
          "name": "select",
          "type": "select",
          "label": "Input Format Of Location",
          "options": [
            {
              "label": "Address",
              "value": "address",
              "nested": [
                {
                  "name": "address",
                  "type": "text",
                  "label": "Address",
                  "required": true
                }
              ],
              "default": true
            },
            {
              "label": "Geographic Coordinates",
              "value": "geo",
              "nested": [
                {
                  "name": "lat",
                  "type": "number",
                  "label": "Latitude",
                  "required": true,
                  "validate": {
                    "max": 90,
                    "min": -90
                  }
                },
                {
                  "name": "long",
                  "type": "number",
                  "label": "Longitude",
                  "required": true,
                  "validate": {
                    "max": 180,
                    "min": -180
                  }
                }
              ]
            }
          ],
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "google-maps",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/geocode/json\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"address\": \"{{parameters.address}}\",\n        \"latlng\": \"{{if(parameters.lat && parameters.long, parameters.lat + ',' + parameters.long, undefined)}}\"\n    },\n    \"response\": {\n        \"output\": \"{{locationResponse(body.results[], parameters)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "address_components",
          "spec": {
            "spec": [
              {
                "name": "long_name",
                "type": "text",
                "label": "Long Name"
              },
              {
                "name": "short_name",
                "type": "text",
                "label": "Short Name"
              },
              {
                "name": "types",
                "spec": {
                  "type": "text"
                },
                "type": "array",
                "label": "Types"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Address Components"
        },
        {
          "name": "formatted_address",
          "type": "text",
          "label": "Formatted Address"
        },
        {
          "name": "geometry",
          "spec": [
            {
              "name": "bounds",
              "spec": [
                {
                  "name": "northeast",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Geographical Latitude"
                    },
                    {
                      "name": "lng",
                      "type": "number",
                      "label": "Geographical Longitude"
                    }
                  ],
                  "type": "collection",
                  "label": "Northeast"
                },
                {
                  "name": "southwest",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Geographical Latitude"
                    },
                    {
                      "name": "lng",
                      "type": "number",
                      "label": "Geographical Longitude"
                    }
                  ],
                  "type": "collection",
                  "label": "Southwest"
                }
              ],
              "type": "collection",
              "label": "Bounds"
            },
            {
              "name": "location",
              "spec": [
                {
                  "name": "lat",
                  "type": "number",
                  "label": "Geographical Latitude"
                },
                {
                  "name": "lng",
                  "type": "number",
                  "label": "Geographical Longitude"
                }
              ],
              "type": "collection",
              "label": "Location"
            },
            {
              "name": "location_type",
              "type": "text",
              "label": "Location Type"
            },
            {
              "name": "viewport",
              "spec": [
                {
                  "name": "northeast",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Geographical Latitude"
                    },
                    {
                      "name": "lng",
                      "type": "number",
                      "label": "Geographical Longitude"
                    }
                  ],
                  "type": "collection",
                  "label": "Northeast"
                },
                {
                  "name": "southwest",
                  "spec": [
                    {
                      "name": "lat",
                      "type": "number",
                      "label": "Geographical Latitude"
                    },
                    {
                      "name": "lng",
                      "type": "number",
                      "label": "Geographical Longitude"
                    }
                  ],
                  "type": "collection",
                  "label": "Southwest"
                }
              ],
              "type": "collection",
              "label": "Viewport"
            }
          ],
          "type": "collection",
          "label": "Geometry"
        },
        {
          "name": "place_id",
          "type": "text",
          "label": "Place ID"
        },
        {
          "name": "plus_code",
          "spec": [
            {
              "name": "compound_code",
              "type": "text",
              "label": "Compound Code"
            },
            {
              "name": "global_code",
              "type": "text",
              "label": "Global Code"
            }
          ],
          "type": "collection",
          "label": "Plus Code"
        },
        {
          "name": "types",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Types"
        },
        {
          "name": "urlMap",
          "type": "url",
          "label": "URL Map"
        }
      ],
      "appVersion": 2,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "google-maps",
      "description": "Gets the details of a location by either input address or geocodes.",
      "expectJsonc": "[\n    {\n        \"name\": \"select\",\n        \"label\": \"Input Format Of Location\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"Address\",\n                \"value\": \"address\",\n                \"default\": true,\n                \"nested\": [\n                    {\n                        \"name\": \"address\",\n                        \"label\": \"Address\",\n                        \"type\": \"text\",\n                        \"required\": true\n                    }\n                ]\n            },\n            {\n                \"label\": \"Geographic Coordinates\",\n                \"value\": \"geo\",\n                \"nested\": [\n                    {\n                        \"name\": \"lat\",\n                        \"label\": \"Latitude\",\n                        \"type\": \"number\",\n                        \"required\": true,\n                        \"validate\": {\n                            \"min\": -90,\n                            \"max\": 90\n                        }\n                    },\n                    {\n                        \"name\": \"long\",\n                        \"label\": \"Longitude\",\n                        \"type\": \"number\",\n                        \"required\": true,\n                        \"validate\": {\n                            \"min\": -180,\n                            \"max\": 180\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Address Components\",\n        \"name\": \"address_components\",\n        \"spec\": {\n            \"spec\": [\n                {\n                    \"label\": \"Long Name\",\n                    \"name\": \"long_name\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"label\": \"Short Name\",\n                    \"name\": \"short_name\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"label\": \"Types\",\n                    \"name\": \"types\",\n                    \"spec\": {\n                        \"type\": \"text\"\n                    },\n                    \"type\": \"array\"\n                }\n            ],\n            \"type\": \"collection\"\n        },\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Formatted Address\",\n        \"name\": \"formatted_address\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Geometry\",\n        \"name\": \"geometry\",\n        \"spec\": [\n            {\n                \"label\": \"Bounds\",\n                \"name\": \"bounds\",\n                \"spec\": [\n                    {\n                        \"label\": \"Northeast\",\n                        \"name\": \"northeast\",\n                        \"spec\": [\n                            {\n                                \"label\": \"Geographical Latitude\",\n                                \"name\": \"lat\",\n                                \"type\": \"number\"\n                            },\n                            {\n                                \"label\": \"Geographical Longitude\",\n                                \"name\": \"lng\",\n                                \"type\": \"number\"\n                            }\n                        ],\n                        \"type\": \"collection\"\n                    },\n                    {\n                        \"label\": \"Southwest\",\n                        \"name\": \"southwest\",\n                        \"spec\": [\n                            {\n                                \"label\": \"Geographical Latitude\",\n                                \"name\": \"lat\",\n                                \"type\": \"number\"\n                            },\n                            {\n                                \"label\": \"Geographical Longitude\",\n                                \"name\": \"lng\",\n                                \"type\": \"number\"\n                            }\n                        ],\n                        \"type\": \"collection\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Location\",\n                \"name\": \"location\",\n                \"spec\": [\n                    {\n                        \"label\": \"Geographical Latitude\",\n                        \"name\": \"lat\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Geographical Longitude\",\n                        \"name\": \"lng\",\n                        \"type\": \"number\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Location Type\",\n                \"name\": \"location_type\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Viewport\",\n                \"name\": \"viewport\",\n                \"spec\": [\n                    {\n                        \"label\": \"Northeast\",\n                        \"name\": \"northeast\",\n                        \"spec\": [\n                            {\n                                \"label\": \"Geographical Latitude\",\n                                \"name\": \"lat\",\n                                \"type\": \"number\"\n                            },\n                            {\n                                \"label\": \"Geographical Longitude\",\n                                \"name\": \"lng\",\n                                \"type\": \"number\"\n                            }\n                        ],\n                        \"type\": \"collection\"\n                    },\n                    {\n                        \"label\": \"Southwest\",\n                        \"name\": \"southwest\",\n                        \"spec\": [\n                            {\n                                \"label\": \"Geographical Latitude\",\n                                \"name\": \"lat\",\n                                \"type\": \"number\"\n                            },\n                            {\n                                \"label\": \"Geographical Longitude\",\n                                \"name\": \"lng\",\n                                \"type\": \"number\"\n                            }\n                        ],\n                        \"type\": \"collection\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Place ID\",\n        \"name\": \"place_id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Plus Code\",\n        \"name\": \"plus_code\",\n        \"spec\": [\n            {\n                \"label\": \"Compound Code\",\n                \"name\": \"compound_code\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Global Code\",\n                \"name\": \"global_code\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Types\",\n        \"name\": \"types\",\n        \"spec\": {\n            \"type\": \"text\"\n        },\n        \"type\": \"array\"\n    },\n    {\n        \"name\": \"urlMap\",\n        \"label\": \"URL Map\",\n        \"type\": \"url\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 609,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "google-maps": {
      "api": {
        "qs": {
          "key": "{{connection.apiKey}}",
          "address": "integromat s.r.o."
        },
        "log": {
          "sanitize": [
            "request.qs.key"
          ]
        },
        "url": "https://maps.googleapis.com/maps/api/geocode/json",
        "method": "GET",
        "response": {
          "error": {
            "200": {
              "message": "{{body.error_message}}"
            },
            "message": "[{{statusCode}}] {{if(body.error_message, body.error_message, if(body.errorMessage, body.errorMessage, body.error.message))}}"
          },
          "valid": {
            "condition": "{{!body.error_message}}"
          }
        }
      },
      "rev": 5,
      "name": "google-maps",
      "type": "basic",
      "label": "Google Maps",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "google-maps",
      "install": {},
      "apiJsonc": "{\r\n    \"url\": \"https://maps.googleapis.com/maps/api/geocode/json\",\r\n    \"method\": \"GET\",\r\n    \"qs\": {\r\n        \"address\": \"integromat s.r.o.\",\r\n        \"key\": \"{{connection.apiKey}}\"\r\n    },\r\n    \"response\": {\r\n        \"valid\": {\r\n            \"condition\": \"{{!body.error_message}}\"\r\n        },\r\n        \"error\": {\r\n            \"message\": \"[{{statusCode}}] {{if(body.error_message, body.error_message, if(body.errorMessage, body.errorMessage, body.error.message))}}\",\r\n            \"200\": {\r\n                \"message\": \"{{body.error_message}}\"\r\n            }\r\n        }\r\n    },\r\n    \"log\": {\r\n        \"sanitize\": [\r\n            \"request.qs.key\"\r\n        ]\r\n    }\r\n}",
      "authorId": 609,
      "appVersion": 2,
      "parameters": [
        {
          "name": "apiKey",
          "type": "password",
          "label": "API Key",
          "editable": true,
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "installSpec": [],
      "scopesJsonc": "{\n}",
      "installJsonc": "{\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"apiKey\",\n        \"type\": \"password\",\n        \"label\": \"API Key\",\n        \"required\": true,\n        \"editable\": true\n    }\n]",
      "installSpecJsonc": "[\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"https://maps.googleapis.com/maps/api\",\n    \"qs\": {\n        \"key\": \"{{connection.apiKey}}\"\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.qs.key\"\n        ]\n    },\n    \"response\": {\n        \"valid\": {\n            \"condition\": \"{{!body.error_message}}\"\n        },\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{if(body.error_message, body.error_message, if(body.errorMessage, body.errorMessage, body.error.message))}}\",\n            \"200\": {\n                \"message\": \"{{body.error_message}}\"\n            }\n        }\n    }\n}",
  "countries": null,
  "_functions": {
    "sleep": {
      "rev": 2,
      "code": "function sleep(pageToken) {\n\n    const millis = 2000;\n\n    const date = new Date();\n    let curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n\n    return pageToken;\n}",
      "name": "sleep",
      "test": null,
      "appName": "google-maps",
      "arguments": "(pageToken)",
      "appVersion": 2
    },
    "markers": {
      "rev": 2,
      "code": "function markers(markers) {\n\n\tif (!markers) return;\n\tlet arr = [];\n\n\tmarkers.forEach(item => {\n\t\tlet string = \"markers=\";\n\n\t\tif (item.size) {\n\t\t\tstring = string + 'size:' + item.size + '|';\n\t\t}\n\t\tif (item.color) {\n\t\t\tstring = string + 'color:' + item.color + '|';\n\t\t}\n\t\tif (item.label) {\n\t\t\tstring = string + 'label:' + iml.upper(item.label) + '|';\n\t\t}\n\n\t\tif (item.address) {\n\t\t\tstring = string + item.address\n\t\t}\n\t\telse if (item.lat && item.long) {\n\t\t\tstring = string + item.lat + ',' + item.long\n\t\t}\n\n\t\tstring.substring(0, string.length - 1);\n\t\tarr.push(string);\n\t});\n\n\treturn iml.join(arr, '&');\n}",
      "name": "markers",
      "test": null,
      "appName": "google-maps",
      "arguments": "(markers)",
      "appVersion": 2
    },
    "geoParameter": {
      "rev": 2,
      "code": "function geoParameter(path) {\n\n    let arr = [];\n\n    path.forEach(item => {\n\n        arr.push(item.lat + ',' + item.long);\n        \n    });\n\n    return arr;\n}",
      "name": "geoParameter",
      "test": null,
      "appName": "google-maps",
      "arguments": "(path)",
      "appVersion": 2
    },
    "roadResponse": {
      "rev": 2,
      "code": "function roadResponse(body, select) {\n\n    if(select === 'speed') {\n        body.snappedPoints.forEach(item => {\n            item.urlMap = encodeURI('https://maps.google.com/?q=' + item.location.latitude + ',' + item.location.longitude);\n        });\n\n        return body;\n    }\n\n    else {\n        body.forEach(item => {\n            item.urlMap = encodeURI('https://maps.google.com/?q=' + item.location.latitude + ',' + item.location.longitude);\n        });\n\n        return body;\n    }\n}",
      "name": "roadResponse",
      "test": null,
      "appName": "google-maps",
      "arguments": "(body, select)",
      "appVersion": 2
    },
    "placeResponse": {
      "rev": 2,
      "code": "function placeResponse(body, opennow) {\n\n    let arr = [];    \n    body.forEach(item => {\n\n        item.urlMap = encodeURI('https://maps.google.com/?q=' + item.geometry.location.lat + ',' + item.geometry.location.lng);\n\n        if (item.opening_hours) {\n            if(item.opening_hours.open_now && opennow) {\n                arr.push(item);\n            }\n        }\n    });\n\n    if(iml.length(arr) === 0) return body;\n\n    return arr;\n    \n}",
      "name": "placeResponse",
      "test": null,
      "appName": "google-maps",
      "arguments": "(body, opennow)",
      "appVersion": 2
    },
    "locationResponse": {
      "rev": 3,
      "code": "function locationResponse(body, param) {\n\n    if(!body) return;\n\n    if(body.geometry && body.geometry.location) {\n        body.urlMap = encodeURI(\"https://maps.google.com/?q=\" + body.geometry.location.lat + ',' + body.geometry.location.lng);\n    }\n    else if (body.location) {\n        body.urlMap = encodeURI(\"https://maps.google.com/?q=\" + body.location.lat + ',' + body.location.lng);\n    }\n    else {\n        body.urlMap = encodeURI(\"https://maps.google.com/?q=\" + param.lat + ',' + param.long);\n    }    \n\n    return body;\n\n}",
      "name": "locationResponse",
      "test": null,
      "appName": "google-maps",
      "arguments": "(body, param)",
      "appVersion": 2
    },
    "originsParameter": {
      "rev": 2,
      "code": "function originsParameter(origins) {\n\n    let arr = [];\n\n    origins.forEach(item => {\n\n        if(item.select === 'text') {\n            arr.push(item.text);\n        }\n        else if (item.select === 'geo') {\n            arr.push(item.lat + ',' + item.long);\n        }\n        \n    });\n\n    return arr;\n}",
      "name": "originsParameter",
      "test": null,
      "appName": "google-maps",
      "arguments": "(origins)",
      "appVersion": 2
    },
    "staticMapRequest": {
      "rev": 2,
      "code": "function staticMapRequest(parameters, connection) {\n\n    let obj = {\n        center: iml.if(parameters.select === 'geo', parameters.lat + ',' + parameters.long, parameters.address),\n        zoom: parameters.zoom,\n        size: parameters.imageSize.width + 'x' + parameters.imageSize.height,\n        scale: 2,\n        format: parameters.format,\n        maptype: parameters.maptype,\n        key: connection.apiKey\n    };\n\n    return obj;\n\n}",
      "name": "staticMapRequest",
      "test": null,
      "appName": "google-maps",
      "arguments": "(parameters, connection)",
      "appVersion": 2
    },
    "directionResponse": {
      "rev": 2,
      "code": "function directionResponse(body, param) {\n\n    if(iml.length(body) > 0) {\n        body.forEach(item => {\n            if (item.arrival_time) {\n                item.arrival_time.value = iml.parseDate(item.arrival_time.value, 'X');\n            }\n            if (item.departure_time) {\n                item.departure_time.value = iml.parseDate(item.departure_time.value, 'X');\n            }\n            if (item.transit_details && item.transit_details.arrival_time && item.transit_details.departure_time) {\n                item.transit_details.arrival_time.value = iml.parseDate(item.transit_details.arrival_time.value, 'X');\n                item.transit_details.departure_time.value = iml.parseDate(item.transit_details.departure_time.value, 'X');\n            }\n            if (item.steps) {\n                item.steps.forEach(i => {\n                    if (i.transit_details) {\n                        i.transit_details.arrival_time.value = iml.parseDate(i.transit_details.arrival_time.value, 'X');\n                        i.transit_details.departure_time.value = iml.parseDate(i.transit_details.departure_time.value, 'X');\n                    }\n                });\n            }\n    \n            item.urlMap = encodeURI(\"https://www.google.com/maps/dir/?api=1&origin=\" + item.start_address + \"&destination=\" + item.end_address + \"&travelmode=\" + param.travelMode);\n        });\n    }\n    \n    return body;\n}",
      "name": "directionResponse",
      "test": null,
      "appName": "google-maps",
      "arguments": "(body, param)",
      "appVersion": 2
    },
    "destinationsParameters": {
      "rev": 2,
      "code": "function destinationsParameters(destinations) {\n\n    let arr = [];\n\n    destinations.forEach(item => {\n\n        if(item.select === 'text') {\n            arr.push(item.text);\n        }\n        else if (item.select === 'geo') {\n            arr.push(item.lat + ',' + item.long);\n        }\n        \n    });\n\n    return arr;\n\n}",
      "name": "destinationsParameters",
      "test": null,
      "appName": "google-maps",
      "arguments": "(destinations)",
      "appVersion": 2
    }
  },
  "approvedAt": "2022-02-21T23:51:59.795024+00:00",
  "categories": [],
  "opensource": false,
  "description": null,
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "c47a24b48092c50b5d341f9d160d99d2",
  "versionFull": "2.1.3",
  "compiledName": "google-maps",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": "[\n]"
}
