{
  "rev": 21,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization"
      ]
    },
    "baseUrl": "https://api.sendgrid.com/v3",
    "headers": {
      "Authorization": "Bearer {{connection.apiKey}}"
    },
    "response": {
      "error": {
        "408": {
          "message": "[{{statusCode}}] Request timeout"
        },
        "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "sendgrid",
  "_rpcs": {
    "getLists": {
      "api": {
        "qs": {},
        "url": "/contactdb/lists",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.lists}}"
        }
      },
      "rev": 3,
      "name": "getLists",
      "label": "Get all lists (legacy)",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/contactdb/lists\",\n\t\"method\": \"GET\",\n\t\"qs\": {},\n\t\"body\": {},\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"iterate\": \"{{body.lists}}\",\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.name}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t},\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getGroups": {
      "api": {
        "url": "/asm/groups",
        "method": "GET",
        "response": {
          "limit": 300,
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "name": "getGroups",
      "label": "Get Groups",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/asm/groups\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"limit\": 300,\n\t\t\"iterate\": \"{{body}}\",\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.name}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t}\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getContactCF": {
      "api": {
        "qs": {},
        "url": "/contactdb/custom_fields",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": "{{buildContactCFs(item)}}",
          "iterate": "{{body.custom_fields}}"
        }
      },
      "rev": 3,
      "name": "getContactCF",
      "label": "Get all contact's custom fields (legacy)",
      "appName": "sendgrid",
      "apiJsonc": "{\n    \"url\": \"/contactdb/custom_fields\",\n    \"method\": \"GET\",\n    \"qs\": {},\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"iterate\": \"{{body.custom_fields}}\",\n        \"output\": \"{{buildContactCFs(item)}}\",\n        \"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getTemplates": {
      "api": {
        "qs": {},
        "url": "/contactdb/recipients",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": "{{testSleep(item)}}",
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "name": "getTemplates",
      "label": "Get all whatever",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/contactdb/recipients\",\n\t\"method\": \"GET\",\n\t\"qs\": {},\n\t\"body\": {},\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"output\": \"{{testSleep(item)}}\",\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getAllSenders": {
      "api": {
        "qs": {},
        "url": "/senders",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": "{{onlyVerified(item)}}",
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "name": "getAllSenders",
      "label": "Get all verified Senders (from)",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/senders\",\n\t\"method\": \"GET\",\n\t\"qs\": {},\n\t\"body\": {},\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"iterate\": \"{{body}}\",\n\t\t\"output\": \"{{onlyVerified(item)}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getRecipients": {
      "api": {
        "qs": {
          "page_size": 300
        },
        "url": "/contactdb/recipients",
        "body": {},
        "method": "GET",
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "limit": 300,
          "output": {
            "label": "{{item.email}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.recipients}}"
        }
      },
      "rev": 3,
      "name": "getRecipients",
      "label": "Get all recipients (legacy)",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/contactdb/recipients\",\n\t\"method\": \"GET\",\n\t\"qs\": {\n\t\t\"page_size\": 300\n\t},\n\t\"body\": {},\n\t\"response\": {\n\t\t\"limit\": 300,\n\t\t\"iterate\": \"{{body.recipients}}\",\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.email}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t},\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getAllContacts": {
      "api": {
        "qs": {
          "page_size": 1000
        },
        "url": "/marketing/contacts",
        "method": "GET",
        "response": {
          "limit": 3000,
          "output": {
            "label": "{{item.email}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.result}}"
        },
        "pagination": {
          "url": "{{body._metadata.next}}",
          "condition": "{{body._metadata.next}}"
        }
      },
      "rev": 3,
      "name": "getAllContacts",
      "label": "Get all contacts (New)",
      "appName": "sendgrid",
      "apiJsonc": "{\n    \"url\": \"/marketing/contacts\",\n    \"qs\": {\n        \"page_size\": 1000\n    },\n    \"method\": \"GET\",\n    \"response\": {\n        \"limit\": 3000,\n        \"iterate\": \"{{body.result}}\",\n        \"output\": {\n            \"label\": \"{{item.email}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    },\n    \"pagination\": {\n        \"url\": \"{{body._metadata.next}}\",\n        \"condition\": \"{{body._metadata.next}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getAllNewLists": {
      "api": {
        "qs": {
          "page_size": 1000
        },
        "url": "/marketing/lists",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "limit": 3000,
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{sort(body.result, 'name')}}"
        },
        "pagination": {
          "url": "{{body._metadata.next}}",
          "condition": "{{body._metadata.next}}"
        }
      },
      "rev": 3,
      "name": "getAllNewLists",
      "label": "Get all lists (new)",
      "appName": "sendgrid",
      "apiJsonc": "{\n    \"url\": \"/marketing/lists\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"page_size\": 1000\n    },\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"limit\": 3000,\n        \"iterate\": \"{{sort(body.result, 'name')}}\",\n        \"output\": {\n            \"label\": \"{{item.name}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    },\n    \"pagination\": {\n        \"url\": \"{{body._metadata.next}}\",\n        \"condition\": \"{{body._metadata.next}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "contactFieldsNew": {
      "api": {
        "qs": {},
        "url": "/marketing/field_definitions",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": "{{buildContactFieldsNew(body)}}"
        }
      },
      "rev": 3,
      "name": "contactFieldsNew",
      "label": "Get all contact's fields (New)",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/marketing/field_definitions\",\n\t\"method\": \"GET\",\n\t\"qs\": {},\n\t\"body\": {},\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"output\": \"{{buildContactFieldsNew(body)}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getVerifiedSenders": {
      "api": {
        "url": "/verified_senders",
        "method": "GET",
        "response": {
          "limit": 300,
          "output": {
            "label": "{{item.from_email}}",
            "value": "{{item.from_email}}"
          },
          "iterate": "{{body.results}}"
        }
      },
      "rev": 3,
      "name": "getVerifiedSenders",
      "label": "Get Verified Senders",
      "appName": "sendgrid",
      "apiJsonc": "{\n    \"url\": \"/verified_senders\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"limit\": 300,\n        \"iterate\": \"{{body.results}}\",\n        \"output\": {\n            \"label\": \"{{item.from_email}}\",\n            \"value\": \"{{item.from_email}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getAllDynamicTemplates": {
      "api": {
        "qs": {
          "generations": "dynamic"
        },
        "url": "/templates",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.templates}}"
        }
      },
      "rev": 3,
      "name": "getAllDynamicTemplates",
      "label": "Get all dynamic templates",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/templates\",\n\t\"method\": \"GET\",\n\t\"qs\": {\n\t\t\"generations\": \"dynamic\"\n\t},\n\t\"body\": {},\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"iterate\": \"{{body.templates}}\",\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.name}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t}\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "contactsCustomFieldsNew": {
      "api": {
        "qs": {},
        "url": "/marketing/field_definitions",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": "{{buildContactCFsNew(body.custom_fields)}}"
        }
      },
      "rev": 3,
      "name": "contactsCustomFieldsNew",
      "label": "Get all contact's custom fields (New)",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/marketing/field_definitions\",\n\t\"method\": \"GET\",\n\t\"qs\": {},\n\t\"body\": {},\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"output\": \"{{buildContactCFsNew(body.custom_fields)}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "getAllRecipientsUnderList": {
      "api": {
        "qs": {},
        "url": "/contactdb/lists/{{parameters.list_id}}/recipients",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": {
            "label": "{{item.email}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.recipients}}"
        }
      },
      "rev": 3,
      "name": "getAllRecipientsUnderList",
      "label": "Get all recipients under List (legacy)",
      "appName": "sendgrid",
      "apiJsonc": "{\n\t\"url\": \"/contactdb/lists/{{parameters.list_id}}/recipients\",\n\t\"method\": \"GET\",\n\t\"qs\": {},\n\t\"body\": {},\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"iterate\": \"{{body.recipients}}\",\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.email}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t},\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n\t}\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "list_id",
          "type": "text",
          "default": 6927719
        }
      ],
      "accountName": "sendgrid",
      "altAccountName": null,
      "parametersJsonc": "[\n\t{\n\t\t\"name\": \"list_id\",\n\t\t\"type\": \"text\",\n\t\t\"default\": 6927719\n\t}\n]"
    }
  },
  "flags": {},
  "label": "SendGrid",
  "theme": "#294661",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Contacts (New)",
      "modules": [
        "watchContactsNewApi",
        "createAListNew",
        "addOrUpdateAContact",
        "getAllListsNew",
        "getAllContactsNew",
        "SearchForContacts",
        "deleteAListNew",
        "deleteContactsNew",
        "removeContactsFromAListNew"
      ]
    },
    {
      "label": "Contacts (Legacy)",
      "modules": [
        "watchNewLists",
        "watchNewRecipients",
        "createList",
        "addRecipients",
        "addRecipientsToAList",
        "getAllLists",
        "getAllRecipients",
        "deleteLists",
        "deleteRecipients",
        "deleteRecipientFromList"
      ]
    },
    {
      "label": "Bounces",
      "modules": [
        "retrievebounces",
        "deleteAllBounces",
        "deleteBounces"
      ]
    },
    {
      "label": "Blocks",
      "modules": [
        "getAllBlocks",
        "getABlock",
        "deleteBlocks"
      ]
    },
    {
      "label": "Global Suppressions",
      "modules": [
        "getAllGlobalSuppresions",
        "getAGlobalSuppression",
        "addEmailsToGlobalSuppression",
        "deleteAGlobalSuppression"
      ]
    },
    {
      "label": "Deliverability",
      "modules": [
        "validateAnEmail"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "sendMail",
        "testingModule",
        "makeApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000001754944415458c3ed97cf4ac3401087bf8d4114512f7ad48207f1ee49f0317c19efbe898fe0cd17f0e2c54710541444101a459b663d64a3a1fd4d926e855c32506867f6cfb793f94db63058cfe6ba0ef4de575f938679ae21e6811cc0b9bf216904f419700c4c456c1bd837c0de8073e0b11e880138044e058007768123230bcfc0c5ac3306a0089b4f85bf5874b12402e05f6d0088a981cafc12733540d0ba0356b1f59c52664e65cf03df626e024c14b4cac01a7002ac1b0007947a57153f01ee84df01afc057178004d8043604b10b80a90190039901f0d13503f574aadf6dcfde85316ec6271f69ef2a1800ac1aa8faba2ac2fa471d481dca59874d0ddf08d842175c0e3c19b10c7831c0df297bc45ce0d742231a01d7c01e5a6a97c00db022d67a0831055010a4d8762149289b906a443e2cf4690064c0787693268b7d17a81a68ba8e99d6bb0a0680981aa8aee5cef02f0d3006ae801db4d66f817be6b357bd7217baa8a83e50f99bfe60b46ed2558683f56e3fc91852b71c48c7590000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000001d94944415478daed9ac14ac34014454f6245a914c59de042282ec59d2bffc0dff0a3fc007fc30f70e3d245c1bd565154a882b67131130c2edabc31e915f30e8476919bdc773321f32601c7711cc771ba4ad6d6818ba228ffee01c78987d906064061d064c01b700e8cb36c7e89bdb602a830044e490b7b1fd849d03d0217c078d18ecb08a000a6406ed4547f5bc362ea5fe201a80da8f100d406d478006a036a3c00b501351e80da809a65f402555a9fdb371e40a5ad5d2574749622a6519747adb5239cc56358dbe1cfba9aba23a00f1c01eb463333e010d84a281ee01eb8336a32e019786f32803c16d1379a99121634cad163e5059824685fe3b91b0b00c295b7dec3299a9fa4dc3ab5f7effc53c003501b50e301a80da8f100d406d478006a036a3c00b50135965ea06c4d2dcc08bd404608dbdad6aec4cd4279ae5afd40dd00d6800360d368a6889a1ba3ae2ce41678aa5b4c8549dc6a9d647e056141644878ddbc8bed2ae6c0257046180d56ae805142001017459afc3ea0877d38c2f70a8d35800cf8885a1615928a753de0b7b4f6454a2a9d7f0a78006a036a3c00b501351e80da801a0f406d408d07a036a0c61240ea3cfecfcdff4de6623b3c004e800dec8b1a63e0daa82b7920bc216ead1b741cc7711ca7bb7c01c41f4d062c4d224c0000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-06-10T13:22:36.38194+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda793000002d04944415478daedddbf6a53711887f1e797169542abe2e2e424b87a07ee0e5e8057e04d79233a39b93a8abba08820289616d3e370120da5a9427fe74d93eff38142ff9eb727799aa4c39b802449922449922449922449da356dd3bfc0550cc3b07cf710b8593c7e06ec6fe0b4bf0227adf5b9ea36710253780e3c01e645f306e00ef09031842a27c00be06daf03ee42000db8073c007e15cd1c16331f511bc03170d0f380bb1000c0d9e26db8ea81aee9bcc954d6ab6bc800c219403803086700e10c209c01843380700610ce00c219403803086700e10c209c01843380700610ce00c219403803086700e10c209c01843380700610ce00c2edca6ad8d2d6af6a55eb12c0ca9a36d4dfaa34feaeb957afbb0f2b6f15e7d97d56ef5b8003e03170a3e002591a1837836f53b71ebef4be78de09f0b3e7017b07b00fdc076e555d228c011c3146775638f714f842dddd4e5bcc3ced79d0291e0354dd246e6adeaa75773dc3cae7864bbe3e5cf0f3c3251f373adfcd6dfb83c0ebfaa0afad79fffce7da3f7e76ddf774e3bf81e10c209c01843380700610ce00c219403803086700e10c209c01843380700610ce00c219403803086700e10c209c01843380700610ce00c219403803086700e10c20dc14ab619b7a59d559e1ccb698b7577c9e7bbd0fd83b8023e019e32b6b575e30c7c09bc2790df80e7ca07623790e7cea79c0de011c024f1957c42bbd045e31c15fc81a33e0336374f3d6a67f5e8a734fc2d1cd54ebe19596f366d4dd0d342658d5be74e044916dfb7af845aa9f2666abf95f403803086700e10c209c01843380700610ce00c219403803086700e10c209c01843380700610ce00c219403803086700e10c209c01843380700610ce00c2194038030837c56a58f56ad67255bb72576f3973ebf50ee007f01ab84bed92e83be02375574a03be51bb1a3ed9895cd9caea72638caafa5660ce786554cefdf3a2d515ebe1922449922449922449922449ffeb37e6d9593297656edd0000000049454e44ae426082",
  "icon256": "\\x89504e470d0a1a0a0000000d49484452000001000000010008060000005c72a86600000006624b474400ff00ff00ffa0bda793000005104944415478daedd9cb8a23651cc6e1b77ada43a383208a38200eba71e56db9f62a5c7a0fb3f55a5cba135cc8a0a8308a0e2a62978bee681b729853a70eeff34048917427ff2fe9ef57099d0000000000000000000000000000000000000000000000000000000000000000007b0d530fd06e1cc7cde1cb49ee4e3dcf89dc49729e647cde079ab921c92f491e27c930cc6fbb9d4f3d00fffa38c92749cea61ee4968d49ee2579371d01f83cc983a907d94700e6e3f5241fe6eaecb8f68df17e92fb530f71226f4f3dc02102302f97b93a6bac3900e3f53a376b9cdfe7e217bbd659bf9702304f6bdd14e38ad7b6486bffbe091c2000504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900143b9f7a807dc6719c7a84a9adf50558ebba1669b6012834deb83418a61e809906e0c6d9ff22c90749ee4c3dd32dfb3bc97b49eea6e36bd99f49be9d7a8813384bf2dbd4431c32cb00dc7091e4a324af64dd67c6cb24f793bc968e003c4ef2fdd4439cc059929fa71ee290b9076063ed1f8dd7bebe2735e4bfd761fbf8a663b7ef7adc63bf7bccb1c71e77dc36fbaf394b0940b2801793a3c61c7e1fb737ffe67a3cf2f337edda90e313feeed37896d966674901609d8623b73f6bf84f71c258fc49a9e1fb26b0870040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a090014130028763ef500ec352619b6aeb3e33807ee1bb77ee6d0f1f6f364eb39b2e3be5df71f9a69df3ad76678fe87388d2504e0f2fab26697d9bff1b6afb78f0fddf734c7bb9e67dbb13fec277dbe9b97b55ac41ae71e809792bc93e4d5acf34cb17199e48d248fa71ee4048624bf267994996f8e17e02cc9ef530f71c8dc03702fc9a749deccba033024f926c91749fec8ba37c6d9f55abf9a7a9013f969ea010e997b00ce73b5f9df9a7a9013f82ec90fb93a63ac3d000f937c9d24c3b0e6a5cedfdc0390acfbccbf6dc8d50659ebae18afd7b759e3388ea3084cc8bf01a1980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0980040310180620200c504008a0900141300282600504c00a0d8f9d4033ca571ea016ec150b2cea6f52dc61202b0d9206bfda319afd738e4ea13d9f07c0fb7080d6b5c84b907e06192cf925c4c3dc82d1b92fc98e4cb247f65fd1be451d61b74806558fb996611c6f1ff27c361f0b60000000000000000000000000000000000000000000000000000000000000000ccc53f31b17b16df488c260000000049454e44ae426082",
  "icon512": "\\x89504e470d0a1a0a0000000d4948445200000200000002000806000000f478d4fa00000006624b474400ff00ff00ffa0bda79300000d164944415478daeddc3b9363470186e14f33b3bbb6b9144404ce9d139011f003a822e567f2034849881d020e28220aaaecc56bbc66258223d58c6735577559dbe77b9e2a95766e9a9e392b9d57ddad4900803a9b24d9ed76e71e0700f003da38f903409f8b730f0000f8e109000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a090000287475ee01c0076873ee01008fb63bf700662500e07d1e5080d51300f0be97495e4408accd6596d91dc7751d3649b649fe73ee81cc4a00c0b58b2c0f28bf4df2bb245f66396930b76d9257493e4bf2d1feed43081c967b6efefbb6631f7bcae73ff6fbdc755bb9e7f6eefbde777ddeeddb7ccccff7d0db77ddfeedf13cf66779e8f77438a65f24f97d92774ff89db22700e07d9f26f955927f65b98f78c638af4d9693c327497e79eec130dc2f62cfceb3090078df7749de24f9266600d660bbbf7e9de4c737de665ebb2ce7afaf23d09f4d00c0fb365996030e17e67791eb3d0017f1ac71768793be403f8107370028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a0d0d5b907b0029b730f80611c4b98c32ecbfd7577ee81cc4c009cce7fc0f578b7bfde6639ae870bf3ba7992d8dcba665e8ee50002e03497493e8e93c45a5c24799de45596fbc6559663ccdc36598eedbb2c71b78d13c7ecb6495ee43ada790601f03c8767153f4ff29b2cff093da0cc6d97e5fef0ef249f25f9e9fefd9711786b7091e42f715f5d8b5d9650ff5bdc3f9f4d009ce622cb0c800a5d87cb249f6479667178d6b88913c61a6c927c95e46d96e3eaa431b743007c79ee81cc4c009cee30a5c8fc36b95eff677d2ef7979b017098cd3b767d70f3ffc3e681f7dd8ec5dd91af794c50deb5c9ed31e33d761bf77dde7de3dd3cf263c7c67cd7586f7fecd818eefafa836d2cd19d4c009cce33c4f5701cd7edd8c6cedd03d7c76ee3bef73df4f1fb6efb29dfeba9e37de8f31efbf33ce567bdef7b3f663c0f8d5da89fc8df010080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a09000028240000a090000080420200000a5d9d7b002bb0d95f98df264b146f92ec6e5c5807c7743d1ccb0104c0697649be4df22e226076bb2cf787ff66399e97fbcbc5fe639b1bd7b9f5efdcf3be87de9f277ecdb18fdd753b371f1c3747befebe9fe7beb1dd3596c77ecd43bf8763e37aeaeff6d8c7af926c737d4c99d72ed7f7519e49009ce665924fb39c3098df45929f24f9519237596240d8adc326c9eb246f63e9730d76598ee5d7e71ec8cc36bb9d107e86cb2c27fd5f27f963965980c4c96276db241f25f973923fe4fbcb01ccebb04cf7a724ff4cf2228ee91a5c6489f4bfc6f17c163300a7b94af26a7f613dbe4df2454c2faec521003e4ff2e5b907031f0a0130c6767f6d06606edb5caffbbfdcffdb0cc0fc0e01f0719600b88c63ba26dbd36fa2930018c7ab01e67773e3d92ecb038b63ba1edb1bd702807a36c38ce12401c054040000141200005048008c613d1180a9088031ec0100602a0200000a0980312c01003015013086250000a6220000a090000080420200000a090000282400c6f02a0000a62200c6f02a0000a62200c6300300c05404c018660000988a000080420200000a098031ec0100602a02600c7b0000988a0018c30c000053110063980100602a0200000a09000028240000a0900000804202600caf0200602a0200000a09000028240000a0900018c31f0202602a02600c9b0001988a0018c30c0000531100005048008c61090080a90880312c0100301501000085040000141200005048008c6113200053110063d80408c05404000014120063580200602a02600c4b00004c45000040210100008504c018f6000030150130863d00004c45008c61060080a9080000282400c6b00400c05404000014120063d80300c05404c018960000988a0000804202600c4b00004c45008c61090080a908000028240000a0900018c31e0000a6220000a0900018c3264000a62200c6b00400c05404c018660000988a0000804202600c4b00004c45000040210130863d00004c45008c61090080a908000028240000a0900000804202600c9b0001988a0018c3264000a6220000a0900000804202600c7b0000988a000080420200000a090000282400c6f0324000a62200c6b0091080a908000028240000a090000080420200000a098031bc0a0080a9088031bc0a0080a908000028240000a0900018c31e0000a62200c6b0070080a9088031cc00003015013086190000a6220000a090000080420200000a09000028240000a0900018c3cb0001988a000080420200000a098031fc212000a6220000a0900018c3264000a62200c6b00400c054040000141200005048000040210130864d80004c45008c611320005311000050480000402101000085040000141200637815000053110063781500005311000050e8eadc0398dc61ea7fbbbf361330b76d9628dee5fbcb3a967880d51100a7b9bc75cddc0e3362afb2dc372e22ea66b7cbf571752ce10601709a3749fe91e4edfe6d0f3073db26f928c9df937c1501b006bb2cc77093e47fe71e0c7c4836bb9dd9cd13bc48f2b3730f82610ecf16df26f9e6dc8361b8ef72bd5c07f504000014b204703a53c4eba48c81551300a773a200603afe0efa3fd77c264b2a3673660000000049454e44ae426082",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "sendMail": {
      "id": 41751,
      "api": {
        "url": "/mail/send",
        "body": "{{removeEmptyArrays(removeEmpty(removeEmptyObjects(buildMailSendBody(parameters)))}}",
        "method": "POST",
        "response": {
          "output": {
            "XmessageId": "{{headers.`x-message-id`}}"
          }
        }
      },
      "rev": 8,
      "crud": "create",
      "name": "sendMail",
      "epoch": null,
      "flags": {},
      "label": "Send an Email",
      "scope": [],
      "expect": [
        {
          "name": "from",
          "spec": [
            {
              "name": "email",
              "type": "select",
              "label": "Email address",
              "options": "rpc://app%23sendgrid@1/getVerifiedSenders",
              "required": true
            },
            {
              "name": "name",
              "type": "text",
              "label": "Name"
            }
          ],
          "type": "collection",
          "label": "From"
        },
        {
          "name": "send_to",
          "spec": {
            "spec": [
              {
                "name": "email",
                "type": "email",
                "label": "Email address",
                "required": true
              },
              {
                "help": "The name of the person to whom you are sending an email.",
                "name": "name",
                "type": "text",
                "label": "Name"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Send to",
          "required": true,
          "validate": {
            "maxItems": 1000
          }
        },
        {
          "name": "templateOrNot",
          "type": "select",
          "label": "Use SendGrid Transactional template?",
          "options": [
            {
              "label": "Yes",
              "value": "template",
              "nested": [
                {
                  "help": "The ID of a template that you would like to use. The subject and content of the template will override any **Subject** and **Content** supplied in this module.",
                  "name": "template_id",
                  "type": "select",
                  "label": "Template ID",
                  "options": "rpc://app%23sendgrid@1/getAllDynamicTemplates",
                  "required": true
                },
                {
                  "name": "json_or_values",
                  "type": "select",
                  "label": "Map JSON or fill Keys and Values",
                  "options": {
                    "store": [
                      {
                        "label": "JSON",
                        "value": "json",
                        "nested": [
                          {
                            "help": "For more information how the data should look like, visit [this documentation.](https://sendgrid.com/docs/for-developers/sending-email/using-handlebars/#basic-replacement)",
                            "name": "dynamic_template_dataJSON",
                            "type": "any",
                            "label": "Dynamic Template Data"
                          }
                        ]
                      },
                      {
                        "label": "Keys & Values",
                        "value": "values",
                        "nested": [
                          {
                            "name": "dynamic_template_data",
                            "spec": [
                              {
                                "name": "key",
                                "type": "text",
                                "label": "Key",
                                "required": true
                              },
                              {
                                "name": "value",
                                "type": "any",
                                "label": "Value"
                              }
                            ],
                            "type": "array",
                            "label": "Dynamic Template Data"
                          }
                        ]
                      }
                    ],
                    "placeholder": "No Dynamic Template Data"
                  },
                  "mappable": false
                },
                {
                  "help": "Will be ignored if a template is used.",
                  "name": "subject",
                  "type": "text",
                  "label": "Subject"
                },
                {
                  "help": "The MIME type of the content you are including in your email.",
                  "name": "content_type",
                  "type": "select",
                  "label": "Content Type",
                  "options": [
                    {
                      "label": "Plaintext",
                      "value": "text/plain"
                    },
                    {
                      "label": "HTML",
                      "value": "text/html"
                    }
                  ]
                },
                {
                  "help": "Will be ignored if a template is used.",
                  "name": "content_value",
                  "type": "text",
                  "label": "Content"
                }
              ]
            },
            {
              "label": "No",
              "value": "no_template",
              "nested": [
                {
                  "name": "subject",
                  "type": "text",
                  "label": "Subject",
                  "required": true
                },
                {
                  "help": "The MIME type of the content you are including in your email.",
                  "name": "content_type",
                  "type": "select",
                  "label": "Content Type",
                  "options": [
                    {
                      "label": "Plaintext",
                      "value": "text/plain"
                    },
                    {
                      "label": "HTML",
                      "value": "text/html"
                    }
                  ],
                  "required": true
                },
                {
                  "name": "content_value",
                  "type": "text",
                  "label": "Content",
                  "required": true
                }
              ],
              "default": true
            }
          ],
          "required": true
        },
        {
          "name": "attachments",
          "spec": [
            {
              "name": "filename",
              "type": "text",
              "label": "File name",
              "required": true,
              "semantic": "file:name"
            },
            {
              "name": "content",
              "type": "buffer",
              "label": "Data",
              "required": true,
              "semantic": "file:data"
            },
            {
              "help": "The content id for the attachment. This is used when the attachment is an image, allowing the file to be displayed within the body of your email.",
              "name": "content_id",
              "type": "text",
              "label": "Content ID"
            }
          ],
          "type": "array",
          "label": "Attachments"
        },
        {
          "help": "An array of category names for this message.",
          "name": "categories",
          "spec": {
            "type": "text",
            "label": "Category",
            "validate": {
              "max": 255
            }
          },
          "type": "array",
          "label": "Categories",
          "validate": {
            "maxItems": 10
          }
        },
        {
          "help": "Specify when you want your email to be delivered. Scheduling more than 72 hours in advance is forbidden.",
          "name": "send_at",
          "type": "date",
          "label": "Send at"
        },
        {
          "help": "An array of recipients who will receive a copy of your email.",
          "name": "copy_recipient",
          "spec": {
            "spec": [
              {
                "name": "email",
                "type": "email",
                "label": "Email"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Copy recipient",
          "advanced": true,
          "validate": {
            "maxItems": 999
          }
        },
        {
          "help": "An array of recipients who will receive a blind carbon copy of your email.",
          "name": "blind_copy_recipient",
          "spec": {
            "spec": [
              {
                "name": "email",
                "type": "email",
                "label": "Email"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Blind copy recipient",
          "advanced": true,
          "validate": {
            "maxItems": 999
          }
        },
        {
          "name": "reply_to",
          "spec": [
            {
              "name": "email",
              "type": "email",
              "label": "Email address"
            },
            {
              "name": "name",
              "type": "text",
              "label": "Name"
            }
          ],
          "type": "collection",
          "label": "Reply to",
          "advanced": true
        },
        {
          "name": "asm",
          "spec": [
            {
              "help": "The unsubscribe group to associate with this email.",
              "name": "group_id",
              "type": "select",
              "label": "Group ID",
              "options": "rpc://app%23sendgrid@1/getGroups"
            },
            {
              "help": "An array containing the unsubscribe groups that you would like to be displayed on the unsubscribe preferences page.",
              "name": "groups_to_display",
              "type": "select",
              "label": "Groups to Display",
              "options": "rpc://app%23sendgrid@1/getGroups",
              "multiple": true
            }
          ],
          "type": "collection",
          "label": "ASM"
        },
        {
          "name": "custom_args",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Custom Args"
        },
        {
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key",
              "required": true
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "advanced": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/mail/send\",\n    \"body\": \"{{removeEmptyArrays(removeEmpty(removeEmptyObjects(buildMailSendBody(parameters)))}}\",\n    \"method\": \"POST\",\n    \"response\": {\n        \"output\": {\n            \"XmessageId\": \"{{headers.`x-message-id`}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "XmessageId",
          "type": "text",
          "label": "X Message ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Sends an email.",
      "expectJsonc": "[\n    {\n        \"name\": \"from\",\n        \"spec\": [\n            {\n                \"name\": \"email\",\n                \"type\": \"select\",\n                \"label\": \"Email address\",\n                \"required\": true,\n                \"options\": \"rpc://getVerifiedSenders\"\n            },\n            {\n                \"name\": \"name\",\n                \"type\": \"text\",\n                \"label\": \"Name\"\n            }\n        ],\n        \"type\": \"collection\",\n        \"label\": \"From\"\n    },\n    {\n        \"name\": \"send_to\",\n        \"spec\": {\n            \"spec\": [\n                {\n                    \"name\": \"email\",\n                    \"type\": \"email\",\n                    \"label\": \"Email address\",\n                    \"required\": true\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"label\": \"Name\",\n                    \"help\": \"The name of the person to whom you are sending an email.\"\n                }\n            ],\n            \"type\": \"collection\"\n        },\n        \"type\": \"array\",\n        \"label\": \"Send to\",\n        \"required\": true,\n        \"validate\": {\n            \"maxItems\": 1000\n        }\n    },\n    {\n        \"name\": \"templateOrNot\",\n        \"label\": \"Use SendGrid Transactional template?\",\n        \"required\": true,\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Yes\",\n                \"value\": \"template\",\n                \"nested\": [\n                    {\n                        \"name\": \"template_id\",\n                        \"type\": \"select\",\n                        \"options\": \"rpc://getAllDynamicTemplates\",\n                        \"label\": \"Template ID\",\n                        \"help\": \"The ID of a template that you would like to use. The subject and content of the template will override any **Subject** and **Content** supplied in this module.\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"json_or_values\",\n                        \"label\": \"Map JSON or fill Keys and Values\",\n                        \"type\": \"select\",\n                        \"options\": {\n                            \"store\": [\n                                {\n                                    \"label\": \"JSON\",\n                                    \"value\": \"json\",\n                                    \"nested\": [\n                                        {\n                                            \"name\": \"dynamic_template_dataJSON\",\n                                            \"label\": \"Dynamic Template Data\",\n                                            \"type\": \"any\",\n                                            \"help\": \"For more information how the data should look like, visit [this documentation.](https://sendgrid.com/docs/for-developers/sending-email/using-handlebars/#basic-replacement)\"\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"label\": \"Keys & Values\",\n                                    \"value\": \"values\",\n                                    \"nested\": [\n                                        {\n                                            \"name\": \"dynamic_template_data\",\n                                            \"label\": \"Dynamic Template Data\",\n                                            \"type\": \"array\",\n                                            \"spec\": [\n                                                {\n                                                    \"name\": \"key\",\n                                                    \"label\": \"Key\",\n                                                    \"type\": \"text\",\n                                                    \"required\": true\n                                                },\n                                                {\n                                                    \"name\": \"value\",\n                                                    \"label\": \"Value\",\n                                                    \"type\": \"any\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            ],\n                            \"placeholder\": \"No Dynamic Template Data\"\n                        },\n                        \"mappable\": false\n                    },\n                    {\n                        \"name\": \"subject\",\n                        \"type\": \"text\",\n                        \"label\": \"Subject\",\n                        \"help\": \"Will be ignored if a template is used.\"\n                    },\n                    {\n                        \"name\": \"content_type\",\n                        \"type\": \"select\",\n                        \"label\": \"Content Type\",\n                        \"options\": [\n                            {\n                                \"label\": \"Plaintext\",\n                                \"value\": \"text/plain\"\n                            },\n                            {\n                                \"label\": \"HTML\",\n                                \"value\": \"text/html\"\n                            }\n                        ],\n                        \"help\": \"The MIME type of the content you are including in your email.\"\n                    },\n                    {\n                        \"name\": \"content_value\",\n                        \"type\": \"text\",\n                        \"label\": \"Content\",\n                        \"help\": \"Will be ignored if a template is used.\"\n                    }\n                ]\n            },\n            {\n                \"label\": \"No\",\n                \"default\": true,\n                \"value\": \"no_template\",\n                \"nested\": [\n                    {\n                        \"name\": \"subject\",\n                        \"type\": \"text\",\n                        \"label\": \"Subject\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"content_type\",\n                        \"type\": \"select\",\n                        \"label\": \"Content Type\",\n                        \"options\": [\n                            {\n                                \"label\": \"Plaintext\",\n                                \"value\": \"text/plain\"\n                            },\n                            {\n                                \"label\": \"HTML\",\n                                \"value\": \"text/html\"\n                            }\n                        ],\n                        \"help\": \"The MIME type of the content you are including in your email.\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"content_value\",\n                        \"type\": \"text\",\n                        \"label\": \"Content\",\n                        \"required\": true\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"attachments\",\n        \"spec\": [\n            {\n                \"name\": \"filename\",\n                \"type\": \"text\",\n                \"label\": \"File name\",\n                \"required\": true,\n                \"semantic\": \"file:name\"\n            },\n            {\n                \"name\": \"content\",\n                \"type\": \"buffer\",\n                \"label\": \"Data\",\n                \"required\": true,\n                \"semantic\": \"file:data\"\n            },\n            {\n                \"name\": \"content_id\",\n                \"type\": \"text\",\n                \"label\": \"Content ID\",\n                \"help\": \"The content id for the attachment. This is used when the attachment is an image, allowing the file to be displayed within the body of your email.\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Attachments\"\n    },\n    {\n        \"name\": \"categories\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"text\",\n            \"label\": \"Category\",\n            \"validate\": {\n                \"max\": 255\n            }\n        },\n        \"label\": \"Categories\",\n        \"validate\": {\n            \"maxItems\": 10\n        },\n        \"help\": \"An array of category names for this message.\"\n    },\n    {\n        \"name\": \"send_at\",\n        \"label\": \"Send at\",\n        \"type\": \"date\",\n        \"help\": \"Specify when you want your email to be delivered. Scheduling more than 72 hours in advance is forbidden.\"\n    },\n    //ADVANCED\n    {\n        \"name\": \"copy_recipient\",\n        \"type\": \"array\",\n        \"label\": \"Copy recipient\",\n        \"spec\": {\n            \"spec\": [\n                {\n                    \"name\": \"email\",\n                    \"label\": \"Email\",\n                    \"type\": \"email\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"label\": \"Name\",\n                    \"type\": \"text\"\n                }\n            ],\n            \"type\": \"collection\"\n        },\n        \"advanced\": true,\n        \"help\": \"An array of recipients who will receive a copy of your email.\",\n        \"validate\": {\n            \"maxItems\": 999\n        }\n    },\n    {\n        \"name\": \"blind_copy_recipient\",\n        \"type\": \"array\",\n        \"label\": \"Blind copy recipient\",\n        \"spec\": {\n            \"spec\": [\n                {\n                    \"name\": \"email\",\n                    \"label\": \"Email\",\n                    \"type\": \"email\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"label\": \"Name\",\n                    \"type\": \"text\"\n                }\n            ],\n            \"type\": \"collection\"\n        },\n        \"advanced\": true,\n        \"help\": \"An array of recipients who will receive a blind carbon copy of your email.\",\n        \"validate\": {\n            \"maxItems\": 999\n        }\n    },\n    {\n        \"name\": \"reply_to\",\n        \"spec\": [\n            {\n                \"name\": \"email\",\n                \"type\": \"email\",\n                \"label\": \"Email address\"\n            },\n            {\n                \"name\": \"name\",\n                \"type\": \"text\",\n                \"label\": \"Name\"\n            }\n        ],\n        \"type\": \"collection\",\n        \"label\": \"Reply to\",\n        \"advanced\": true\n    },\n    {\n        \"name\": \"asm\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"group_id\",\n                \"type\": \"select\",\n                \"options\": \"rpc://getGroups\",\n                \"label\": \"Group ID\",\n                \"help\": \"The unsubscribe group to associate with this email.\"\n            },\n            {\n                \"name\": \"groups_to_display\",\n                \"type\": \"select\",\n                \"options\": \"rpc://getGroups\",\n                \"multiple\": true,\n                \"label\": \"Groups to Display\",\n                \"help\": \"An array containing the unsubscribe groups that you would like to be displayed on the unsubscribe preferences page.\"\n            }\n        ],\n        \"label\": \"ASM\"\n    },\n    {\n        \"name\": \"custom_args\",\n        \"label\": \"Custom Args\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"type\": \"array\",\n        \"label\": \"Headers\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\",\n                \"required\": true\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n        \"advanced\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\r\n    {\r\n        \"name\": \"XmessageId\",\r\n        \"label\": \"X Message ID\",\r\n        \"type\": \"text\"\r\n    }\r\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getABlock": {
      "id": 41752,
      "api": {
        "qs": {},
        "url": "/suppression/blocks/{{parameters.email}}",
        "body": {},
        "temp": {
          "timestampDateResponseKeys": [
            "created"
          ]
        },
        "method": "GET",
        "headers": {},
        "response": {
          "output": "{{transformResponseDates(body, temp.timestampDateResponseKeys)}}"
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "getABlock",
      "epoch": null,
      "flags": {},
      "label": "Get a Block",
      "scope": [],
      "expect": [
        {
          "help": "The email address of the specific block.",
          "name": "email",
          "type": "email",
          "label": "Email address",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/suppression/blocks/{{parameters.email}}\",\n    \"method\": \"GET\",\n    \"qs\": {},\n    \"body\": {},\n    \"temp\": {\n        \"timestampDateResponseKeys\": [\n            \"created\"\n        ]\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{transformResponseDates(body, temp.timestampDateResponseKeys)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "created",
          "time": true,
          "type": "date",
          "label": "Created"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "reason",
          "type": "text",
          "label": "Reason"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Retrieves a specific email address from your block list.",
      "expectJsonc": "[\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n        \"label\": \"Email address\",\n        \"required\": true,\n        \"help\": \"The email address of the specific block.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"created\",\n        \"label\": \"Created\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"email\",\n        \"label\": \"Email\",\n        \"type\": \"email\"\n    },\n    {\n        \"name\": \"reason\",\n        \"label\": \"Reason\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"status\",\n        \"label\": \"Status\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createList": {
      "id": 41753,
      "api": {
        "qs": {},
        "url": "/contactdb/lists",
        "body": {
          "name": "{{parameters.name}}"
        },
        "method": "POST",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "create",
      "name": "createList",
      "epoch": null,
      "flags": {},
      "label": "Create a List (Legacy)",
      "scope": [],
      "expect": [
        {
          "name": "name",
          "type": "text",
          "label": "Name",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contactdb/lists\",\n    \"method\": \"POST\",\n    \"qs\": {},\n    \"body\": {\n        \"name\": \"{{parameters.name}}\"\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\",\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "List ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "recipient_count",
          "type": "uinteger",
          "label": "Recipient count"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Creates a new list. Using Legacy Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"uinteger\",\n        \"label\": \"List ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"label\": \"Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"recipient_count\",\n        \"label\": \"Recipient count\",\n        \"type\": \"uinteger\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteLists": {
      "id": 41754,
      "api": {
        "url": "/contactdb/lists",
        "body": "{{parameters.lists}}",
        "method": "DELETE",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "delete",
      "name": "deleteLists",
      "epoch": null,
      "flags": {},
      "label": "Delete a List (Legacy)",
      "scope": [],
      "expect": [
        {
          "name": "lists",
          "spec": {
            "type": "uinteger",
            "label": "List ID"
          },
          "type": "array",
          "label": "Lists",
          "editable": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contactdb/lists\",\n    \"method\": \"DELETE\",\n    \"body\": \"{{parameters.lists}}\",\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\",\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "User ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Deletes one or more lists. Using Legacy Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"lists\",\n        \"type\": \"array\",\n        \"label\": \"Lists\",\n        \"spec\":{\n            \"label\": \"List ID\",\n            \"type\": \"uinteger\"\n        },\n        \"required\": true,\n        \"editable\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": null,
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAllLists": {
      "id": 41755,
      "api": {
        "qs": {},
        "url": "/contactdb/lists",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.lists}}"
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "getAllLists",
      "epoch": null,
      "flags": {},
      "label": "Get all Lists (Legacy)",
      "scope": [],
      "expect": [
        {
          "name": "limit",
          "type": "uinteger",
          "label": "Number of lists"
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contactdb/lists\",\n    \"method\": \"GET\",\n    \"qs\": {\n    },\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{item}}\",\n        \"iterate\": \"{{body.lists}}\",\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "List ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "recipient_count",
          "type": "uinteger",
          "label": "Recipient count"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Retrieves all of you recipient lists. Using Legacy Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"limit\",\n        \"label\": \"Number of lists\",\n        \"type\": \"uinteger\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"uinteger\",\n        \"label\": \"List ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"label\": \"Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"recipient_count\",\n        \"label\": \"Recipient count\",\n        \"type\": \"uinteger\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeApiCall": {
      "id": 41756,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "/{{replace(parameters.url, '/^//', emptystring)}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 3,
      "crud": null,
      "name": "makeApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://api.sendgrid.com/v3/`. For example: `marketing/contacts`",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/{{replace(parameters.url, '/^\\//', emptystring)}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n\t},\n    \"headers\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n\t},\n\t\"body\": \"{{parameters.body}}\",\n\t\"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n\t\t\t\"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to `https://api.sendgrid.com/v3/`. For example: `marketing/contacts`\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n\t\t\"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n\t\t\"default\": [\n\t\t\t{\n\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\"value\": \"application/json\"\n\t\t\t}\n\t\t]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteBlocks": {
      "id": 41757,
      "api": {
        "qs": {},
        "url": "/suppression/blocks",
        "body": {
          "emails": "{{parameters.emails}}",
          "delete_all": "{{if(parameters.deleta_all_or_specific == 'all', true, undefined)}}"
        },
        "method": "DELETE",
        "headers": {},
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "delete",
      "name": "deleteBlocks",
      "epoch": null,
      "flags": {},
      "label": "Delete Blocks",
      "scope": [],
      "expect": [
        {
          "name": "deleta_all_or_specific",
          "type": "select",
          "label": "Delete All or Specific",
          "options": [
            {
              "label": "Delete All",
              "value": "all"
            },
            {
              "label": "Delete Specific Emails",
              "value": "specific",
              "nested": [
                {
                  "name": "emails",
                  "spec": {
                    "type": "text",
                    "label": "Email"
                  },
                  "type": "array",
                  "label": "Email address"
                }
              ]
            }
          ],
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/suppression/blocks\",\n    \"method\": \"DELETE\",\n    \"qs\": {},\n    \"body\": {\n        \"delete_all\": \"{{if(parameters.deleta_all_or_specific == 'all', true, undefined)}}\",\n        \"emails\": \"{{parameters.emails}}\"\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Deletes either all or specific emails on your block list.",
      "expectJsonc": "[\n    {\n        \"name\": \"deleta_all_or_specific\",\n        \"label\": \"Delete All or Specific\",\n        \"required\": true,\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Delete All\",\n                \"value\": \"all\"\n            },\n            {\n                \"label\": \"Delete Specific Emails\",\n                \"value\": \"specific\",\n                \"nested\": [\n                    {\n                        \"name\": \"emails\",\n                        \"type\": \"array\",\n                        \"label\": \"Email address\",\n                        \"spec\": {\n                            \"type\": \"text\",\n                            \"label\": \"Email\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAllBlocks": {
      "id": 41758,
      "api": {
        "qs": {
          "limit": 500,
          "end_time": "{{formatDate(parameters.end_time, 'X')}}",
          "start_time": "{{formatDate(parameters.start_time, 'X')}}"
        },
        "url": "/suppression/blocks",
        "body": {},
        "temp": {
          "timestampDateResponseKeys": [
            "created"
          ]
        },
        "method": "GET",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{transformResponseDates(item, temp.timestampDateResponseKeys)}}",
          "iterate": "{{body}}"
        },
        "pagination": {
          "qs": {
            "offset": "{{(pagination.page - 1) * 500}}"
          }
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "getAllBlocks",
      "epoch": null,
      "flags": {},
      "label": "List Blocks",
      "scope": [],
      "expect": [
        {
          "name": "start_time",
          "time": true,
          "type": "date",
          "label": "Start Time"
        },
        {
          "name": "end_time",
          "time": true,
          "type": "date",
          "label": "End Time"
        },
        {
          "name": "limit",
          "type": "uinteger",
          "label": "Number of blocked emails to return",
          "default": 2
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/suppression/blocks\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"start_time\": \"{{formatDate(parameters.start_time, 'X')}}\",\n        \"end_time\": \"{{formatDate(parameters.end_time, 'X')}}\",\n        \"limit\": 500\n    },\n    \"temp\": {\n        \"timestampDateResponseKeys\": [\n            \"created\"\n        ]\n    },\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{transformResponseDates(item, temp.timestampDateResponseKeys)}}\",\n        \"iterate\": \"{{body}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"offset\": \"{{(pagination.page - 1) * 500}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "created",
          "time": true,
          "type": "date",
          "label": "Created"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "reason",
          "type": "text",
          "label": "Reason"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Lists all email addresses that are currently on your block list.",
      "expectJsonc": "[\n    {\n        \"name\": \"start_time\",\n        \"label\": \"Start Time\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"end_time\",\n        \"label\": \"End Time\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Number of blocked emails to return\",\n        \"type\": \"uinteger\",\n        \"default\": 2\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\r\n    {\r\n        \"name\": \"created\",\r\n        \"label\": \"Created\",\r\n        \"type\": \"date\",\r\n        \"time\": true\r\n    },\r\n    {\r\n        \"name\": \"email\",\r\n        \"label\": \"Email\",\r\n        \"type\": \"email\"\r\n    },\r\n    {\r\n        \"name\": \"reason\",\r\n        \"label\": \"Reason\",\r\n        \"type\": \"text\"\r\n    },\r\n    {\r\n        \"name\": \"status\",\r\n        \"label\": \"Status\",\r\n        \"type\": \"text\"\r\n    }\r\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "addRecipients": {
      "id": 41759,
      "api": {
        "qs": {},
        "url": "/contactdb/recipients",
        "body": [
          "{{parameters}}"
        ],
        "method": "POST",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": "{{testSleep(body)}}"
        }
      },
      "rev": 4,
      "crud": "create",
      "name": "addRecipients",
      "epoch": null,
      "flags": {},
      "label": "Add or Update a Recipient (Legacy)",
      "scope": [],
      "expect": [
        {
          "help": "If a contact with this email address is found, it will be updated.",
          "name": "email",
          "type": "email",
          "label": "Email address",
          "required": true
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last name"
        },
        "rpc://app%23sendgrid@1/getContactCF"
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contactdb/recipients\",\n    \"method\": \"POST\",\n    \"qs\": {},\n    \"body\": [\n        \"{{parameters}}\"\n    ],\n    \"headers\": {},\n    \"response\": {\n        \"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        },\n        \"output\": \"{{testSleep(body)}}\" //limit is 3 new contacts per 2 seconds, so the module waits 1 second before it creates the contact\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "new_count",
          "type": "number",
          "label": "New count"
        },
        {
          "name": "updated_count",
          "type": "number",
          "label": "Updated count"
        },
        {
          "name": "error_count",
          "type": "number",
          "label": "Error count"
        },
        {
          "name": "error_indices",
          "type": "array",
          "label": "Error indices"
        },
        {
          "name": "unmodified_indices",
          "type": "array",
          "label": "Unmodified indices"
        },
        {
          "name": "persisted_recipients",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Persisted recipients"
        },
        {
          "name": "errors",
          "spec": {
            "spec": [
              {
                "name": "message",
                "type": "text",
                "label": "Message"
              },
              {
                "name": "error_indices",
                "type": "array",
                "label": "Error indices"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Errors"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Adds a new recipient or updates an existing one based on the email address. Using Legacy Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n        \"label\": \"Email address\",\n        \"required\": true,\n        \"help\": \"If a contact with this email address is found, it will be updated.\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"type\": \"text\",\n        \"label\": \"First name\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"type\": \"text\",\n        \"label\": \"Last name\"\n    },\n    \"rpc://getContactCF\"\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"new_count\",\n        \"type\": \"number\",\n        \"label\": \"New count\"\n    },\n    {\n        \"name\": \"updated_count\",\n        \"type\": \"number\",\n        \"label\": \"Updated count\"\n    },\n    {\n        \"name\": \"error_count\",\n        \"type\": \"number\",\n        \"label\": \"Error count\"\n    },\n    {\n        \"name\": \"error_indices\",\n        \"type\": \"array\",\n        \"label\": \"Error indices\"\n    },\n    {\n        \"name\": \"unmodified_indices\",\n        \"type\": \"array\",\n        \"label\": \"Unmodified indices\"\n    },\n    {\n        \"name\": \"persisted_recipients\",\n        \"label\": \"Persisted recipients\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"text\"\n        }\n    },\n    {\n        \"name\": \"errors\",\n        \"label\": \"Errors\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"message\",\n                    \"type\": \"text\",\n                    \"label\": \"Message\"\n                },\n                {\n                    \"name\": \"error_indices\",\n                    \"type\": \"array\",\n                    \"label\": \"Error indices\"\n                }\n            ]\n        }\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteBounces": {
      "id": 41760,
      "api": {
        "url": "/suppression/bounces",
        "body": {
          "emails": "{{parameters.emails}}"
        },
        "method": "DELETE",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "delete",
      "name": "deleteBounces",
      "epoch": null,
      "flags": {},
      "label": "Delete Bounces",
      "scope": [],
      "expect": [
        {
          "name": "emails",
          "spec": {
            "type": "email",
            "label": "Email"
          },
          "type": "array",
          "label": "Emails",
          "editable": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/suppression/bounces\",\n    \"method\": \"DELETE\",\n    \"body\": {\n\t\t\"emails\": \"{{parameters.emails}}\"\n\t},\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Deletes specified bounces.",
      "expectJsonc": "[\n    {\n        \"name\": \"emails\",\n        \"label\": \"Emails\",\n        \"type\": \"array\",\n        \"spec\": \n            {\n                \"type\": \"email\",\n                \"label\": \"Email\"\n            }\n        ,\n        \"editable\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "testingModule": {
      "id": 41761,
      "api": {
        "url": "/contactdb/lists/{{parameters.listId}}/recipients",
        "method": "GET",
        "response": {
          "output": "{{item}}",
          "iterate": "{{body}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "testingModule",
      "epoch": null,
      "flags": {},
      "label": "Testing module DEV ONLY",
      "scope": [],
      "expect": [
        {
          "name": "listId",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23sendgrid@1/getLists"
        }
      ],
      "public": false,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/contactdb/lists/{{parameters.listId}}/recipients\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": \"{{item}}\",\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "User ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Testing module only, shouldnt be public.",
      "expectJsonc": "[\n\t {\n\t \t\"name\": \"listId\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"List ID\",\n\t\t\"options\": \"rpc://getLists\"\n\t }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": null,
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchNewLists": {
      "id": 41762,
      "api": {
        "url": "/contactdb/lists",
        "method": "GET",
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.lists}}",
          "trigger": {
            "id": "{{item.id}}",
            "type": "id",
            "order": "unordered"
          }
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "watchNewLists",
      "epoch": {
        "response": {
          "limit": 100,
          "output": {
            "label": "{{item.name}}"
          }
        }
      },
      "flags": {},
      "label": "Watch new Lists (Legacy)",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contactdb/lists\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"iterate\": \"{{body.lists}}\",\n        \"trigger\": {\n            \"id\": \"{{item.id}}\",\n            \"type\": \"id\",\n            \"order\": \"unordered\"\n        },\n        \"output\": \"{{item}}\",\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        },\n        \"limit\": \"{{parameters.limit}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "uinteger",
          "label": "List ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "recipient_count",
          "type": "uinteger",
          "label": "Recipient count"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 100,\n        \"output\": {\n            \"label\": \"{{item.name}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Triggers when a new list is created. Using Legacy Marketing Campaigns API.",
      "expectJsonc": null,
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"uinteger\",\n        \"label\": \"List ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"label\": \"Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"recipient_count\",\n        \"label\": \"Recipient count\",\n        \"type\": \"uinteger\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createAListNew": {
      "id": 41763,
      "api": {
        "qs": {},
        "url": "/marketing/lists",
        "body": {
          "name": "{{parameters.name}}"
        },
        "method": "POST",
        "headers": {},
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "create",
      "name": "createAListNew",
      "epoch": null,
      "flags": {},
      "label": "Create a List (New)",
      "scope": [],
      "expect": [
        {
          "name": "name",
          "type": "text",
          "label": "Name",
          "required": true,
          "validate": {
            "max": 100
          }
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/marketing/lists\",\n    \"method\": \"POST\",\n    \"qs\": {},\n    \"body\": {\n        \"name\": \"{{parameters.name}}\"\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "id",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "contact_count",
          "type": "number",
          "label": "Contact Count"
        },
        {
          "name": "_metadata",
          "spec": [
            {
              "name": "self",
              "type": "url",
              "label": "Self"
            }
          ],
          "type": "collection",
          "label": " Metadata"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Creates a new list. Using New Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\",\n        \"required\": true,\n        \"validate\": {\n            \"max\": 100\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Name\",\n        \"name\": \"name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"List ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Contact Count\",\n        \"name\": \"contact_count\",\n        \"type\": \"number\"\n    },\n    {\n        \"label\": \" Metadata\",\n        \"name\": \"_metadata\",\n        \"spec\": [\n            {\n                \"label\": \"Self\",\n                \"name\": \"self\",\n                \"type\": \"url\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteAListNew": {
      "id": 41764,
      "api": {
        "qs": {
          "delete_contacts": "{{parameters.delete_contacts}}"
        },
        "url": "/marketing/lists/{{parameters.list_id}}",
        "body": {},
        "method": "DELETE",
        "headers": {},
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 4,
      "crud": "delete",
      "name": "deleteAListNew",
      "epoch": null,
      "flags": {},
      "label": "Delete a List (New)",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "list_id",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23sendgrid@1/getAllNewLists",
          "required": true
        },
        {
          "name": "delete_contacts",
          "type": "boolean",
          "label": "Delete Contacts",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/marketing/lists/{{parameters.list_id}}\",\n    \"method\": \"DELETE\",\n    \"qs\": {\n        \"delete_contacts\": \"{{parameters.delete_contacts}}\"\n    },\n    \"body\": {\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "job_id",
          "type": "text",
          "label": "Job ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Deletes a list. Using New Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"list_id\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"mode\": \"edit\",\n        \"options\": \"rpc://getAllNewLists\",\n        \"required\": true\n    },\n    {\n        \"name\": \"delete_contacts\",\n        \"type\": \"boolean\",\n        \"label\": \"Delete Contacts\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\r\n    {\r\n        \"name\": \"job_id\",\r\n        \"label\": \"Job ID\",\r\n        \"type\": \"text\"\r\n    }\r\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAllListsNew": {
      "id": 41765,
      "api": {
        "qs": {
          "page_size": 1000
        },
        "url": "/marketing/lists",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.result}}"
        },
        "pagination": {
          "url": "{{body._metadata.next}}",
          "condition": "{{body._metadata.next}}"
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "getAllListsNew",
      "epoch": null,
      "flags": {},
      "label": "Get all Lists (New)",
      "scope": [],
      "expect": [
        {
          "name": "limit",
          "type": "uinteger",
          "label": "Number of lists to return"
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/marketing/lists\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"page_size\": 1000\n    },\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{item}}\",\n        \"iterate\": \"{{body.result}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body._metadata.next}}\",\n        \"condition\": \"{{body._metadata.next}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "name",
          "type": "text",
          "label": "List Name"
        },
        {
          "name": "id",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "contact_count",
          "type": "uinteger",
          "label": "Contact Count"
        },
        {
          "name": "_metadata",
          "spec": [
            {
              "name": "self",
              "type": "url",
              "label": "Self"
            }
          ],
          "type": "collection",
          "label": "Metadata"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Retrieves all your contact lists. Using New Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Number of lists to return\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\r\n    {\r\n        \"name\": \"name\",\r\n        \"label\": \"List Name\",\r\n        \"type\": \"text\"\r\n    },\r\n    {\r\n        \"name\": \"id\",\r\n        \"label\": \"List ID\",\r\n        \"type\": \"text\"\r\n    },\r\n    {\r\n        \"name\": \"contact_count\",\r\n        \"label\": \"Contact Count\",\r\n        \"type\": \"uinteger\"\r\n    },\r\n    {\r\n        \"name\": \"_metadata\",\r\n        \"label\": \"Metadata\",\r\n        \"type\": \"collection\",\r\n        \"spec\": [\r\n            {\r\n                \"name\": \"self\",\r\n                \"label\": \"Self\",\r\n                \"type\": \"url\"\r\n            }\r\n        ]\r\n    }\r\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "retrievebounces": {
      "id": 41766,
      "api": {
        "qs": {
          "limit": "{{parameters.limit}}",
          "end_time": "{{formatDate(parameters.end_time, 'X')}}",
          "start_time": "{{formatDate(parameters.start_time, 'X')}}"
        },
        "url": "/suppression/bounces",
        "method": "GET",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": null,
      "name": "retrievebounces",
      "epoch": null,
      "flags": {},
      "label": "Get all Bounces",
      "scope": [],
      "expect": [
        {
          "help": "Refers start of the time range when a bounce was created (inclusive).",
          "name": "start_time",
          "type": "date",
          "label": "Start time"
        },
        {
          "help": "Refers end of the time range when a bounce was created (inclusive).",
          "name": "end_time",
          "type": "date",
          "label": "End time"
        },
        {
          "name": "limit",
          "type": "uinteger",
          "label": "Number of bounces",
          "validate": {
            "max": 500
          }
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/suppression/bounces\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"start_time\": \"{{formatDate(parameters.start_time, 'X')}}\",\n        \"end_time\": \"{{formatDate(parameters.end_time, 'X')}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "created",
          "type": "date",
          "label": "Date created"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email address"
        },
        {
          "name": "reason",
          "type": "text",
          "label": "Reason"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Retrieves all of your bounces.",
      "expectJsonc": "[\n    {\n        \"name\": \"start_time\",\n        \"type\": \"date\",\n        \"label\": \"Start time\",\n        \"help\": \"Refers start of the time range when a bounce was created (inclusive).\"\n    },\n    {\n        \"name\": \"end_time\",\n        \"type\": \"date\",\n        \"label\": \"End time\",\n        \"help\": \"Refers end of the time range when a bounce was created (inclusive).\"\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Number of bounces\",\n        \"type\": \"uinteger\",\n        \"validate\": {\n            \"max\": 500\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"created\",\n\t\t\"type\": \"date\",\n\t\t\"label\": \"Date created\"\n\t},\n\t{\n\t\t\"name\": \"email\",\n\t\t\"type\": \"email\",\n\t\t\"label\": \"Email address\"\n\t},\n\t{\n\t\t\"name\": \"reason\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Reason\"\n\t},\n\t{\n\t\t\"name\": \"status\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Status\"\n\t}\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "validateAnEmail": {
      "id": 41767,
      "api": {
        "url": "/validations/email",
        "body": {
          "email": "{{parameters.email}}",
          "source": "{{parameters.source}}"
        },
        "method": "POST",
        "response": {
          "output": "{{body.result}}"
        }
      },
      "rev": 3,
      "crud": null,
      "name": "validateAnEmail",
      "epoch": null,
      "flags": {},
      "label": "Validate an Email",
      "scope": [],
      "expect": [
        {
          "name": "email",
          "type": "email",
          "label": "Email address",
          "required": true
        },
        {
          "name": "source",
          "type": "text",
          "label": "Source",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/validations/email\",\n    \"method\": \"POST\",\n    \"body\": {\n        \"source\": \"{{parameters.source}}\",\n        \"email\": \"{{parameters.email}}\"\n    },\n    \"response\": {\n        \"output\": \"{{body.result}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "verdict",
          "type": "text",
          "label": "Verdict"
        },
        {
          "name": "score",
          "type": "number",
          "label": "Score"
        },
        {
          "name": "local",
          "type": "text",
          "label": "Local"
        },
        {
          "name": "host",
          "type": "text",
          "label": "Host"
        },
        {
          "name": "checks",
          "spec": [
            {
              "name": "domain",
              "spec": [
                {
                  "name": "has_valid_address_syntax",
                  "type": "boolean",
                  "label": "Has Valid Address Syntax"
                },
                {
                  "name": "has_mx_or_a_record",
                  "type": "boolean",
                  "label": "Has Mx Or A Record"
                },
                {
                  "name": "is_suspected_disposable_address",
                  "type": "boolean",
                  "label": "Is Suspected Disposable Address"
                }
              ],
              "type": "collection",
              "label": "Domain"
            },
            {
              "name": "local_part",
              "spec": [
                {
                  "name": "is_suspected_role_address",
                  "type": "boolean",
                  "label": "Is Suspected Role Address"
                }
              ],
              "type": "collection",
              "label": "Local Part"
            },
            {
              "name": "additional",
              "spec": [
                {
                  "name": "has_known_bounces",
                  "type": "boolean",
                  "label": "Has Known Bounces"
                },
                {
                  "name": "has_suspected_bounces",
                  "type": "boolean",
                  "label": "Has Suspected Bounces"
                }
              ],
              "type": "collection",
              "label": "Additional"
            }
          ],
          "type": "collection",
          "label": "Checks"
        },
        {
          "name": "source",
          "type": "text",
          "label": "Source"
        },
        {
          "name": "ip_address",
          "type": "text",
          "label": "Ip Address"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Validates an email address. Requires Email API Pro plan or higher.",
      "expectJsonc": "[\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n        \"label\": \"Email address\",\n        \"required\": true\n    },\n    {\n        \"name\": \"source\",\n        \"type\": \"text\",\n        \"label\": \"Source\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\r\n    {\r\n        \"label\": \"Email\",\r\n        \"name\": \"email\",\r\n        \"type\": \"email\"\r\n    },\r\n    {\r\n        \"label\": \"Verdict\",\r\n        \"name\": \"verdict\",\r\n        \"type\": \"text\"\r\n    },\r\n    {\r\n        \"label\": \"Score\",\r\n        \"name\": \"score\",\r\n        \"type\": \"number\"\r\n    },\r\n    {\r\n        \"label\": \"Local\",\r\n        \"name\": \"local\",\r\n        \"type\": \"text\"\r\n    },\r\n    {\r\n        \"label\": \"Host\",\r\n        \"name\": \"host\",\r\n        \"type\": \"text\"\r\n    },\r\n    {\r\n        \"label\": \"Checks\",\r\n        \"name\": \"checks\",\r\n        \"spec\": [\r\n            {\r\n                \"label\": \"Domain\",\r\n                \"name\": \"domain\",\r\n                \"spec\": [\r\n                    {\r\n                        \"label\": \"Has Valid Address Syntax\",\r\n                        \"name\": \"has_valid_address_syntax\",\r\n                        \"type\": \"boolean\"\r\n                    },\r\n                    {\r\n                        \"label\": \"Has Mx Or A Record\",\r\n                        \"name\": \"has_mx_or_a_record\",\r\n                        \"type\": \"boolean\"\r\n                    },\r\n                    {\r\n                        \"label\": \"Is Suspected Disposable Address\",\r\n                        \"name\": \"is_suspected_disposable_address\",\r\n                        \"type\": \"boolean\"\r\n                    }\r\n                ],\r\n                \"type\": \"collection\"\r\n            },\r\n            {\r\n                \"label\": \"Local Part\",\r\n                \"name\": \"local_part\",\r\n                \"spec\": [\r\n                    {\r\n                        \"label\": \"Is Suspected Role Address\",\r\n                        \"name\": \"is_suspected_role_address\",\r\n                        \"type\": \"boolean\"\r\n                    }\r\n                ],\r\n                \"type\": \"collection\"\r\n            },\r\n            {\r\n                \"label\": \"Additional\",\r\n                \"name\": \"additional\",\r\n                \"spec\": [\r\n                    {\r\n                        \"label\": \"Has Known Bounces\",\r\n                        \"name\": \"has_known_bounces\",\r\n                        \"type\": \"boolean\"\r\n                    },\r\n                    {\r\n                        \"label\": \"Has Suspected Bounces\",\r\n                        \"name\": \"has_suspected_bounces\",\r\n                        \"type\": \"boolean\"\r\n                    }\r\n                ],\r\n                \"type\": \"collection\"\r\n            }\r\n        ],\r\n        \"type\": \"collection\"\r\n    },\r\n    {\r\n        \"label\": \"Source\",\r\n        \"name\": \"source\",\r\n        \"type\": \"text\"\r\n    },\r\n    {\r\n        \"label\": \"Ip Address\",\r\n        \"name\": \"ip_address\",\r\n        \"type\": \"text\"\r\n    }\r\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteAllBounces": {
      "id": 41768,
      "api": {
        "url": "/suppression/bounces",
        "body": {
          "delete_all": true
        },
        "method": "DELETE",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "delete",
      "name": "deleteAllBounces",
      "epoch": null,
      "flags": {},
      "label": "Delete all Bounces",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/suppression/bounces\",\n    \"method\": \"DELETE\",\n    \"body\": {\n\t\t\"delete_all\": true\n\t},\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Deletes all bounces.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteRecipients": {
      "id": 41769,
      "api": {
        "qs": {},
        "url": "/contactdb/recipients",
        "body": "{{map(parameters.recipients, 'id')}}",
        "method": "DELETE",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": "{{body}}"
        }
      },
      "rev": 4,
      "crud": "delete",
      "name": "deleteRecipients",
      "epoch": null,
      "flags": {},
      "label": "Delete Recipients (Legacy)",
      "scope": [],
      "expect": [
        {
          "name": "recipients",
          "spec": [
            {
              "mode": "edit",
              "name": "id",
              "type": "select",
              "label": "Recipient ID",
              "options": "rpc://app%23sendgrid@1/getRecipients",
              "editable": true,
              "required": true
            }
          ],
          "type": "array",
          "label": "Recipients",
          "editable": true,
          "required": true,
          "validate": {
            "minItems": 1
          }
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contactdb/recipients\",\n    \"method\": \"DELETE\",\n    \"qs\": {},\n    \"body\": \"{{map(parameters.recipients, 'id')}}\",\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\",\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Deletes one or more recipients. Using Legacy Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"recipients\",\n        \"label\": \"Recipients\",\n        \"spec\": [\n            {\n                \"name\": \"id\",\n                \"type\": \"select\",\n                \"label\": \"Recipient ID\",\n                \"options\": \"rpc://getRecipients\",\n                \"editable\": true,\n                \"mode\": \"edit\",\n                \"required\": true\n            }\n        ],\n        \"type\": \"array\",\n        \"required\": true,\n        \"editable\": true,\n        \"validate\": {\n            \"minItems\": 1\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAllRecipients": {
      "id": 41770,
      "api": {
        "qs": {
          "page_size": 1000
        },
        "url": "{{if(parameters.list_id, '/contactdb/lists/' + parameters.list_id + '/recipients', '/contactdb/recipients')}}",
        "temp": {
          "recipientsCount": 0,
          "timestampDateResponseKeys": [
            "created_at",
            "updated_at"
          ]
        },
        "method": "GET",
        "response": {
          "temp": {
            "recipientsCount": "{{temp.recipientsCount + length(body.recipients)}}"
          },
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "limit": "{{parameters.limit}}",
          "output": "{{transformResponseDates(item, temp.timestampDateResponseKeys)}}",
          "iterate": "{{body.recipients}}"
        },
        "pagination": {
          "qs": {
            "page": "{{pagination.page}}"
          },
          "condition": "{{body.recipient_count > temp.recipientsCount}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "getAllRecipients",
      "epoch": null,
      "flags": {},
      "label": "Get all Recipients (Legacy)",
      "scope": [],
      "expect": [
        {
          "name": "list_id",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23sendgrid@1/getLists"
        },
        {
          "name": "limit",
          "type": "uinteger",
          "label": "Number of recipients"
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"{{if(parameters.list_id, '/contactdb/lists/' + parameters.list_id + '/recipients', '/contactdb/recipients')}}\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"page_size\": 1000\n    },\n    \"temp\": {\n        \"recipientsCount\": 0, //pagination doesnt work as it should so I am comparing this variable with the number of all recipients and if it is less then it goes to next page\n        \"timestampDateResponseKeys\": [\n            \"created_at\",\n            \"updated_at\"\n        ]\n    },\n    \"response\": {\n        \"temp\": {\n            \"recipientsCount\": \"{{temp.recipientsCount + length(body.recipients)}}\"\n        },\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{transformResponseDates(item, temp.timestampDateResponseKeys)}}\",\n        \"iterate\": \"{{body.recipients}}\",\n        \"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"page\": \"{{pagination.page}}\"\n        },\n        \"condition\": \"{{body.recipient_count > temp.recipientsCount}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Recipient ID"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email address"
        },
        {
          "name": "created_at",
          "type": "number",
          "label": "Created at"
        },
        {
          "name": "updated_at",
          "type": "number",
          "label": "Updated at"
        },
        {
          "name": "last_emailed",
          "type": "text",
          "label": "Last emailed"
        },
        {
          "name": "last_clicked",
          "type": "text",
          "label": "Last clicked"
        },
        {
          "name": "last_opened",
          "type": "text",
          "label": "Last opened"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last name"
        },
        {
          "name": "custom_fields",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "number",
                "label": "ID"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              },
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              },
              {
                "name": "value",
                "type": "text",
                "label": "Value"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Custom fields"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Retrieves all of your recipients or recipients under specified list. Using Legacy Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"list_id\",\n        \"label\": \"List ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://getLists\"\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Number of recipients\",\n        \"type\": \"uinteger\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n\t\t\"label\": \"Recipient ID\"\n    },\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n\t\t\"label\": \"Email address\"\n    },\n    {\n        \"name\": \"created_at\",\n        \"type\": \"number\",\n\t\t\"label\": \"Created at\"\n    },\n    {\n        \"name\": \"updated_at\",\n        \"type\": \"number\",\n\t\t\"label\": \"Updated at\"\n    },\n    {\n        \"name\": \"last_emailed\",\n        \"type\": \"text\",\n\t\t\"label\": \"Last emailed\"\n    },\n    {\n        \"name\": \"last_clicked\",\n        \"type\": \"text\",\n\t\t\"label\": \"Last clicked\"\n    },\n    {\n        \"name\": \"last_opened\",\n        \"type\": \"text\",\n\t\t\"label\": \"Last opened\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"type\": \"text\",\n\t\t\"label\": \"First name\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"type\": \"text\",\n\t\t\"label\": \"Last name\"\n    },\n    {\n        \"name\": \"custom_fields\",\n\t\t\"label\": \"Custom fields\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"type\": \"number\",\n\t\t\t\t\t\"label\": \"ID\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n\t\t\t\t\t\"label\": \"Name\"\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"text\",\n\t\t\t\t\t\"label\": \"Type\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"text\",\n\t\t\t\t\t\"label\": \"Value\"\n                }\n            ]\n        }\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "SearchForContacts": {
      "id": 41771,
      "api": {
        "qs": {},
        "url": "/marketing/contacts/search",
        "body": {
          "query": "{{parameters.query}}"
        },
        "method": "POST",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseResponseDates(item, 'contact')}}",
          "iterate": "{{body.result}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "SearchForContacts",
      "epoch": null,
      "flags": {},
      "label": "Search for Contacts",
      "scope": [],
      "expect": [
        {
          "help": "Use [Segmentation Query Language](https://sendgrid.com/docs/for-developers/sending-email/segmentation-query-language/). For example: `email LIKE '%gmail.com'`.",
          "name": "query",
          "type": "text",
          "label": "Query",
          "required": true
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle. Maximum `50` records.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": " {\n    \"url\": \"/marketing/contacts/search\",\n    \"method\": \"POST\",\n    \"qs\": {},\n    \"body\": {\n        \"query\": \"{{parameters.query}}\"\n    },\n    \"headers\": {},\n    \"response\": {\n        \"iterate\": \"{{body.result}}\",\n        \"output\": \"{{parseResponseDates(item, 'contact')}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    }\n} \n/* [\n    {\n        \"url\": \"/marketing/contacts/exports\",\n        \"method\": \"POST\",\n        \"qs\": {},\n        \"body\": {\n            \"file_type\": \"json\",\n            \"max_file_size\": 100\n        },\n        \"headers\": {},\n        \"response\": {\n            \"temp\": {\n                \"id\": \"{{body.id}}\",\n                \"status\":\"notReady\"\n            }\n        }\n    },\n    {\n        \"condition\": \"{{temp.id}}\",\n        \"repeat\": {\n            \"condition\": \"{{temp.status !== 'ready'}}\",\n            \"delay\": 1000,\n            \"limit\": 3\n        },\n        \"url\": \"/marketing/contacts/exports/{{temp.id}}\",\n        \"method\": \"GET\",\n        \"qs\": {},\n        \"body\": {},\n        \"headers\": {},\n        \"response\": {\n            \"temp\": {\n                \"urls\": \"{{body.urls}}\",\n                \"i\": 1,\n                \"status\":\"{{body.status}}\"\n            }\n        }\n    },\n    {\n        \"condition\": \"{{temp.status === 'ready'}}\",\n        \"repeat\": {\n            \"condition\": \"{{temp.i <= length(body.urls)}}\",\n            \"limit\": 30\n        },\n        \"url\": \"{{temp.urls[temp.i]}}\",\n        \"method\": \"GET\",\n        \"qs\": {},\n        \"body\": {},\n        \"headers\": {\n            \"Authorization\":\"{{undefined}}\"\n        },\n        \"response\": {\n            \"temp\": {\n                \"i\": \"{{temp.i + 1}}\"\n            },\n            \"output\": \"{{body}}\"\n        }\n    }\n] */\n",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "address_line_1",
          "type": "text",
          "label": "Address line 1"
        },
        {
          "name": "address_line_2",
          "type": "text",
          "label": "Address line 2"
        },
        {
          "name": "alternate_emails",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Alternate emails"
        },
        {
          "name": "city",
          "type": "text",
          "label": "City"
        },
        {
          "name": "country",
          "type": "text",
          "label": "Country"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First name"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Contact ID"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last name"
        },
        {
          "name": "list_ids",
          "type": "array",
          "label": "List IDs"
        },
        {
          "name": "postal_code",
          "type": "text",
          "label": "Postal code"
        },
        {
          "name": "state_province_region",
          "type": "text",
          "label": "State province region"
        },
        {
          "name": "phone_number",
          "type": "text",
          "label": "Phone number"
        },
        {
          "name": "whatsapp",
          "type": "text",
          "label": "WhatsApp"
        },
        {
          "name": "line",
          "type": "text",
          "label": "Line"
        },
        {
          "name": "facebook",
          "type": "text",
          "label": "Facebook"
        },
        {
          "name": "unique_name",
          "type": "text",
          "label": "Unique name"
        },
        {
          "name": "custom_fields",
          "spec": [],
          "type": "collection",
          "label": "Custom fields"
        },
        {
          "name": "created_at",
          "type": "date",
          "label": "Created at"
        },
        {
          "name": "updated_at",
          "type": "date",
          "label": "Updated at"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Searches for contacts.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"query\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Query\",\n\t\t\"required\": true,\n\t\t\"help\": \"Use [Segmentation Query Language](https://sendgrid.com/docs/for-developers/sending-email/segmentation-query-language/). For example: `email LIKE '%gmail.com'`.\"\n\t},\n\t{\n\t\t\"help\": \"The maximum number of results to be worked with during one execution cycle. Maximum `50` records.\",\n\t\t\"name\": \"limit\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Limit\",\n\t\t\"default\": 2,\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"address_line_1\",\n        \"type\": \"text\",\n\t\t\"label\": \"Address line 1\"\n    },\n    {\n        \"name\": \"address_line_2\",\n        \"type\": \"text\",\n\t\t\"label\": \"Address line 2\"\n    },\n    {\n        \"name\": \"alternate_emails\",\n        \"type\": \"array\",\n\t\t\"label\": \"Alternate emails\",\n        \"spec\": {\n            \"type\": \"text\"\n        }\n    },\n    {\n        \"name\": \"city\",\n        \"type\": \"text\",\n\t\t\"label\": \"City\"\n    },\n    {\n        \"name\": \"country\",\n        \"type\": \"text\",\n\t\t\"label\": \"Country\"\n    },\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n\t\t\"label\": \"Email\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"type\": \"text\",\n\t\t\"label\": \"First name\"\n    },\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n\t\t\"label\": \"Contact ID\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"type\": \"text\",\n\t\t\"label\": \"Last name\"\n    },\n    {\n        \"name\": \"list_ids\",\n        \"type\": \"array\",\n\t\t\"label\": \"List IDs\"\n    },\n    {\n        \"name\": \"postal_code\",\n        \"type\": \"text\",\n\t\t\"label\": \"Postal code\"\n    },\n    {\n        \"name\": \"state_province_region\",\n        \"type\": \"text\",\n\t\t\"label\": \"State province region\"\n    },\n    {\n        \"name\": \"phone_number\",\n        \"type\": \"text\",\n\t\t\"label\": \"Phone number\"\n    },\n    {\n        \"name\": \"whatsapp\",\n        \"type\": \"text\",\n\t\t\"label\": \"WhatsApp\"\n    },\n    {\n        \"name\": \"line\",\n        \"type\": \"text\",\n\t\t\"label\": \"Line\"\n    },\n    {\n        \"name\": \"facebook\",\n        \"type\": \"text\",\n\t\t\"label\": \"Facebook\"\n    },\n    {\n        \"name\": \"unique_name\",\n        \"type\": \"text\",\n\t\t\"label\": \"Unique name\"\n    },\n    {\n        \"name\": \"custom_fields\",\n        \"type\": \"collection\",\n\t\t\"label\": \"Custom fields\",\n        \"spec\": []\n    },\n    {\n        \"name\": \"created_at\",\n        \"type\": \"date\",\n\t\t\"label\": \"Created at\"\n    },\n    {\n        \"name\": \"updated_at\",\n        \"type\": \"date\",\n\t\t\"label\": \"Updated at\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteContactsNew": {
      "id": 41772,
      "api": {
        "qs": {
          "ids": "{{join(parameters.contact_ids, ',')}}",
          "delete_all_contacts": "{{parameters.delete_all_contacts}}"
        },
        "url": "/marketing/contacts",
        "method": "DELETE",
        "response": {
          "error": {
            "message": "[{{statusCode}}] {{body.parameter}} - {{body.message}}"
          },
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "delete",
      "name": "deleteContactsNew",
      "epoch": null,
      "flags": {},
      "label": "Delete Contacts (New)",
      "scope": [],
      "expect": [
        {
          "name": "all_or_specific",
          "type": "select",
          "label": "Delete all or Specific contacts",
          "options": [
            {
              "label": "Delete All",
              "value": "deleteAll",
              "nested": [
                {
                  "name": "delete_all_contacts",
                  "type": "boolean",
                  "label": "Delete All Contacts",
                  "advanced": true,
                  "required": true
                }
              ]
            },
            {
              "label": "Specific",
              "value": "specific",
              "nested": [
                {
                  "name": "contact_ids",
                  "spec": {
                    "type": "text",
                    "label": "ID"
                  },
                  "type": "array",
                  "label": "Contact IDs",
                  "required": true
                }
              ],
              "default": true
            }
          ],
          "mappable": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/marketing/contacts\",\n    \"method\": \"DELETE\",\n    \"qs\": {\n        \"ids\": \"{{join(parameters.contact_ids, ',')}}\",\n        \"delete_all_contacts\": \"{{parameters.delete_all_contacts}}\"\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.parameter}} - {{body.message}}\"\n        },\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "job_id",
          "type": "text",
          "label": "Job ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Deletes one or more contacts. Using New Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"all_or_specific\",\n        \"mappable\":false,\n        \"label\": \"Delete all or Specific contacts\",\n        \"required\": true,\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Delete All\",\n                \"value\": \"deleteAll\",\n                \"nested\": [\n                    {\n                        \"name\": \"delete_all_contacts\",\n                        \"type\": \"boolean\",\n                        \"label\": \"Delete All Contacts\",\n                        \"required\": true,\n                        \"advanced\": true\n                    }\n                ]\n            },\n            {\n                \"label\": \"Specific\",\n                \"value\": \"specific\",\n                \"default\": true,\n                \"nested\": [\n                    {\n                        \"name\": \"contact_ids\",\n                        \"type\": \"array\",\n                        \"label\": \"Contact IDs\",\n                        \"spec\": {\n                            \"type\": \"text\",\n                            \"label\": \"ID\"\n                        },\n                        \"required\": true\n                    }\n                ]\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"job_id\",\n        \"label\": \"Job ID\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAllContactsNew": {
      "id": 41773,
      "api": {
        "url": "/marketing/contacts",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseResponseDates(item, 'contact')}}",
          "iterate": "{{body.result}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "getAllContactsNew",
      "epoch": null,
      "flags": {},
      "label": "Get all Contacts (New)",
      "scope": [],
      "expect": [
        {
          "help": "This module returns up to `50` records.",
          "name": "limit",
          "type": "uinteger",
          "label": "Number of contacts to return"
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/marketing/contacts\",\n    \"method\": \"GET\",\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{parseResponseDates(item, 'contact')}}\",\n        \"iterate\": \"{{body.result}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "address_line_1",
          "type": "text",
          "label": "Address Line 1"
        },
        {
          "name": "address_line_2",
          "type": "text",
          "label": "Address Line 2"
        },
        {
          "name": "alternate_emails",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Alternate Emails"
        },
        {
          "name": "city",
          "type": "text",
          "label": "City"
        },
        {
          "name": "country",
          "type": "text",
          "label": "Country"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First Name"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Contact ID"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last Name"
        },
        {
          "name": "list_ids",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "List Ids"
        },
        {
          "name": "postal_code",
          "type": "text",
          "label": "Postal Code"
        },
        {
          "name": "state_province_region",
          "type": "text",
          "label": "State Province Region"
        },
        {
          "name": "phone_number",
          "type": "text",
          "label": "Phone Number"
        },
        {
          "name": "whatsapp",
          "type": "text",
          "label": "Whatsapp"
        },
        {
          "name": "line",
          "type": "text",
          "label": "Line"
        },
        {
          "name": "facebook",
          "type": "text",
          "label": "Facebook"
        },
        {
          "name": "unique_name",
          "type": "text",
          "label": "Unique Name"
        },
        {
          "name": "_metadata",
          "spec": [
            {
              "name": "self",
              "type": "text",
              "label": "Self"
            }
          ],
          "type": "collection",
          "label": " Metadata"
        },
        {
          "name": "custom_fields",
          "spec": [],
          "type": "collection",
          "label": "Custom Fields"
        },
        {
          "name": "created_at",
          "type": "date",
          "label": "Created At"
        },
        {
          "name": "updated_at",
          "type": "date",
          "label": "Updated At"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Retrieves all your contacts. Using New Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Number of contacts to return\",\n        \"help\": \"This module returns up to `50` records.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n        {\n        \"label\": \"Address Line 1\",\n        \"name\": \"address_line_1\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Address Line 2\",\n        \"name\": \"address_line_2\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Alternate Emails\",\n        \"name\": \"alternate_emails\",\n        \"spec\": {\n            \"type\": \"text\"\n        },\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"City\",\n        \"name\": \"city\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Country\",\n        \"name\": \"country\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Email\",\n        \"name\": \"email\",\n        \"type\": \"email\"\n    },\n    {\n        \"label\": \"First Name\",\n        \"name\": \"first_name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Contact ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Last Name\",\n        \"name\": \"last_name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"List Ids\",\n        \"name\": \"list_ids\",\n        \"spec\": {\n            \"type\": \"text\"\n        },\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Postal Code\",\n        \"name\": \"postal_code\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"State Province Region\",\n        \"name\": \"state_province_region\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Phone Number\",\n        \"name\": \"phone_number\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Whatsapp\",\n        \"name\": \"whatsapp\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Line\",\n        \"name\": \"line\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Facebook\",\n        \"name\": \"facebook\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Unique Name\",\n        \"name\": \"unique_name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \" Metadata\",\n        \"name\": \"_metadata\",\n        \"spec\": [\n            {\n                \"label\": \"Self\",\n                \"name\": \"self\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"name\": \"custom_fields\",\n        \"label\": \"Custom Fields\",\n        \"type\": \"collection\",\n        \"spec\": []\n    },\n    {\n        \"label\": \"Created At\",\n        \"name\": \"created_at\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Updated At\",\n        \"name\": \"updated_at\",\n        \"type\": \"date\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchNewRecipients": {
      "id": 41774,
      "api": {
        "qs": {
          "page_size": 1000
        },
        "url": "{{if(parameters.list_id, '/contactdb/lists/' + parameters.list_id + '/recipients', '/contactdb/recipients')}}",
        "temp": {
          "recipientsCount": 0,
          "timestampDateResponseKeys": [
            "created_at",
            "updated_at"
          ]
        },
        "method": "GET",
        "response": {
          "temp": {
            "recipientsCount": "{{temp.recipientsCount + length(body.recipients)}}"
          },
          "limit": "{{parameters.limit}}",
          "output": "{{transformResponseDates(item, temp.timestampDateResponseKeys}}",
          "iterate": "{{body.recipients}}",
          "trigger": {
            "id": "{{item.id}}",
            "date": "{{parseDate(item.created_at, 'X')}}",
            "type": "date",
            "order": "desc"
          }
        },
        "pagination": {
          "qs": {
            "page": "{{pagination.page}}"
          },
          "condition": "{{body.recipient_count > temp.recipientsCount}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "watchNewRecipients",
      "epoch": {
        "response": {
          "limit": 500,
          "output": {
            "date": "{{parseDate(item.created_at, 'X')}}",
            "label": "{{item.email}}"
          }
        }
      },
      "flags": {},
      "label": "Watch new Recipients (Legacy)",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"{{if(parameters.list_id, '/contactdb/lists/' + parameters.list_id + '/recipients', '/contactdb/recipients')}}\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"page_size\": 1000\n    },\n    \"temp\": {\n        \"recipientsCount\": 0,\n        \"timestampDateResponseKeys\": [\n            \"created_at\",\n            \"updated_at\"\n        ]\n    },\n    \"response\": {\n        \"temp\": {\n            \"recipientsCount\": \"{{temp.recipientsCount + length(body.recipients)}}\"\n        },\n        \"iterate\": \"{{body.recipients}}\",\n        \"trigger\": {\n            \"id\": \"{{item.id}}\",\n            \"date\": \"{{parseDate(item.created_at, 'X')}}\",\n            \"type\": \"date\",\n            \"order\": \"desc\"\n        },\n        \"output\": \"{{transformResponseDates(item, temp.timestampDateResponseKeys}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"page\": \"{{pagination.page}}\"\n        },\n        \"condition\": \"{{body.recipient_count > temp.recipientsCount}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Recipient ID"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email address"
        },
        {
          "name": "created_at",
          "type": "number",
          "label": "Created at"
        },
        {
          "name": "updated_at",
          "type": "number",
          "label": "Updated at"
        },
        {
          "name": "last_emailed",
          "type": "text",
          "label": "Last emailed"
        },
        {
          "name": "last_clicked",
          "type": "text",
          "label": "Last clicked"
        },
        {
          "name": "last_opened",
          "type": "text",
          "label": "Last opened"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First name"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last name"
        },
        {
          "name": "custom_fields",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "number",
                "label": "ID"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              },
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              },
              {
                "name": "value",
                "type": "text",
                "label": "Value"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Custom fields"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 500,\n        \"output\": {\n            \"date\": \"{{parseDate(item.created_at, 'X')}}\",\n            \"label\": \"{{item.email}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "name": "list_id",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23sendgrid@1/getLists"
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Triggers when a new recipient is created. Using Legacy Marketing Campaigns API.",
      "expectJsonc": null,
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Recipient ID\"\n    },\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n        \"label\": \"Email address\"\n    },\n    {\n        \"name\": \"created_at\",\n        \"type\": \"number\",\n        \"label\": \"Created at\"\n    },\n    {\n        \"name\": \"updated_at\",\n        \"type\": \"number\",\n        \"label\": \"Updated at\"\n    },\n    {\n        \"name\": \"last_emailed\",\n        \"type\": \"text\",\n        \"label\": \"Last emailed\"\n    },\n    {\n        \"name\": \"last_clicked\",\n        \"type\": \"text\",\n        \"label\": \"Last clicked\"\n    },\n    {\n        \"name\": \"last_opened\",\n        \"type\": \"text\",\n        \"label\": \"Last opened\"\n    },\n    {\n        \"name\": \"first_name\",\n        \"type\": \"text\",\n        \"label\": \"First name\"\n    },\n    {\n        \"name\": \"last_name\",\n        \"type\": \"text\",\n        \"label\": \"Last name\"\n    },\n    {\n        \"name\": \"custom_fields\",\n        \"label\": \"Custom fields\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"type\": \"number\",\n                    \"label\": \"ID\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"label\": \"Name\"\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"text\",\n                    \"label\": \"Type\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"text\",\n                    \"label\": \"Value\"\n                }\n            ]\n        }\n    }\n]",
      "parametersJsonc": "[\n    {\n        \"name\": \"list_id\",\n        \"label\": \"List ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://getLists\"\n    },\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "addOrUpdateAContact": {
      "id": 41775,
      "api": {
        "url": "/marketing/contacts",
        "body": {
          "contacts": [
            "{{parameters}}"
          ],
          "list_ids": "{{parameters.list_ids}}"
        },
        "method": "PUT",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 4,
      "crud": null,
      "name": "addOrUpdateAContact",
      "epoch": null,
      "flags": {},
      "label": "Add or Update a Contact (New)",
      "scope": [],
      "expect": "rpc://app%23sendgrid@1/contactFieldsNew",
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/marketing/contacts\",\n    \"method\": \"PUT\",\n    \"body\": {\n        \"list_ids\": \"{{parameters.list_ids}}\",\n        \"contacts\": [\"{{parameters}}\"]\n    },\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "job_id",
          "type": "text",
          "label": "Job ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Creates new contact or updates existing based on the email address. Using New Marketing Campaigns API.",
      "expectJsonc": "\"rpc://contactFieldsNew\"",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"job_id\",\n        \"type\": \"text\",\n        \"label\": \"Job ID\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchContactsNewApi": {
      "id": 41776,
      "api": {
        "qs": {
          "contact_sample": "{{if(parameters.list_id, true, undefined)}}"
        },
        "url": "{{if(parameters.list_id, '/marketing/lists/' + parameters.list_id, '/marketing/contacts')}}",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{parseResponseDates(item, 'contact')}}",
          "iterate": "{{if(parameters.list_id, body.contact_sample, body.result)}}",
          "trigger": {
            "id": "{{item.id}}",
            "date": "{{switch(parameters.watch, 'create', parseDate(item.created_at, 'YYYY-MM-DDTHH:mm:ssZ'), 'update', parseDate(item.updated_at, 'YYYY-MM-DDTHH:mm:ss.SSSZ'))}}",
            "type": "date",
            "order": "unordered"
          }
        }
      },
      "rev": 6,
      "crud": "read",
      "name": "watchContactsNewApi",
      "epoch": {
        "response": {
          "limit": 1000,
          "output": {
            "date": "{{switch(parameters.watch, 'create', parseDate(item.created_at, 'YYYY-MM-DDTHH:mm:ssZ'), 'update', parseDate(item.updated_at, 'YYYY-MM-DDTHH:mm:ss.SSSZ'))}}",
            "label": "{{item.email}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Contacts (Deprecated)",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"{{if(parameters.list_id, '/marketing/lists/' + parameters.list_id, '/marketing/contacts')}}\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"contact_sample\": \"{{if(parameters.list_id, true, undefined)}}\"\n    },\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"iterate\": \"{{if(parameters.list_id, body.contact_sample, body.result)}}\",\n        \"trigger\": {\n            \"id\": \"{{item.id}}\",\n            \"date\": \"{{switch(parameters.watch, 'create', parseDate(item.created_at, 'YYYY-MM-DDTHH:mm:ssZ'), 'update', parseDate(item.updated_at, 'YYYY-MM-DDTHH:mm:ss.SSSZ'))}}\",\n            \"type\": \"date\",\n            \"order\": \"unordered\"\n        },\n        \"output\": \"{{parseResponseDates(item, 'contact')}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    }\n} ",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "address_line_1",
          "type": "text",
          "label": "Address Line 1"
        },
        {
          "name": "address_line_2",
          "type": "text",
          "label": "Address Line 2"
        },
        {
          "name": "alternate_emails",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Alternate Emails"
        },
        {
          "name": "city",
          "type": "text",
          "label": "City"
        },
        {
          "name": "country",
          "type": "text",
          "label": "Country"
        },
        {
          "name": "email",
          "type": "email",
          "label": "Email"
        },
        {
          "name": "first_name",
          "type": "text",
          "label": "First Name"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Contact ID"
        },
        {
          "name": "last_name",
          "type": "text",
          "label": "Last Name"
        },
        {
          "name": "list_ids",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "List Ids"
        },
        {
          "name": "postal_code",
          "type": "text",
          "label": "Postal Code"
        },
        {
          "name": "state_province_region",
          "type": "text",
          "label": "State Province Region"
        },
        {
          "name": "phone_number",
          "type": "text",
          "label": "Phone Number"
        },
        {
          "name": "whatsapp",
          "type": "text",
          "label": "Whatsapp"
        },
        {
          "name": "line",
          "type": "text",
          "label": "Line"
        },
        {
          "name": "facebook",
          "type": "text",
          "label": "Facebook"
        },
        {
          "name": "unique_name",
          "type": "text",
          "label": "Unique Name"
        },
        {
          "name": "_metadata",
          "spec": [
            {
              "name": "self",
              "type": "text",
              "label": "Self"
            }
          ],
          "type": "collection",
          "label": " Metadata"
        },
        {
          "name": "custom_fields",
          "spec": [],
          "type": "collection",
          "label": "Custom Fields"
        },
        {
          "name": "created_at",
          "type": "date",
          "label": "Created At"
        },
        {
          "name": "updated_at",
          "type": "date",
          "label": "Updated At"
        }
      ],
      "appVersion": 1,
      "deprecated": true,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 1000,\n        \"output\": {\n            \"date\": \"{{switch(parameters.watch, 'create', parseDate(item.created_at, 'YYYY-MM-DDTHH:mm:ssZ'), 'update', parseDate(item.updated_at, 'YYYY-MM-DDTHH:mm:ss.SSSZ'))}}\",\n            \"label\": \"{{item.email}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "name": "watch",
          "type": "select",
          "label": "Watch",
          "options": [
            {
              "label": "Create + Update",
              "value": "update"
            },
            {
              "label": "Create",
              "value": "create",
              "default": true
            }
          ],
          "required": true
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle. Maximum `50` records.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Unfortunately, this module must be deprecated. Due to limitation of the API it works only for 50 contacts.",
      "expectJsonc": null,
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n        {\n        \"label\": \"Address Line 1\",\n        \"name\": \"address_line_1\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Address Line 2\",\n        \"name\": \"address_line_2\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Alternate Emails\",\n        \"name\": \"alternate_emails\",\n        \"spec\": {\n            \"type\": \"text\"\n        },\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"City\",\n        \"name\": \"city\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Country\",\n        \"name\": \"country\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Email\",\n        \"name\": \"email\",\n        \"type\": \"email\"\n    },\n    {\n        \"label\": \"First Name\",\n        \"name\": \"first_name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Contact ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Last Name\",\n        \"name\": \"last_name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"List Ids\",\n        \"name\": \"list_ids\",\n        \"spec\": {\n            \"type\": \"text\"\n        },\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Postal Code\",\n        \"name\": \"postal_code\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"State Province Region\",\n        \"name\": \"state_province_region\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Phone Number\",\n        \"name\": \"phone_number\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Whatsapp\",\n        \"name\": \"whatsapp\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Line\",\n        \"name\": \"line\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Facebook\",\n        \"name\": \"facebook\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Unique Name\",\n        \"name\": \"unique_name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \" Metadata\",\n        \"name\": \"_metadata\",\n        \"spec\": [\n            {\n                \"label\": \"Self\",\n                \"name\": \"self\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"name\": \"custom_fields\",\n        \"label\": \"Custom Fields\",\n        \"type\": \"collection\",\n        \"spec\": []\n    },\n    {\n        \"label\": \"Created At\",\n        \"name\": \"created_at\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Updated At\",\n        \"name\": \"updated_at\",\n        \"type\": \"date\"\n    }\n]",
      "parametersJsonc": "[\n    /*\n    {\n        \"name\": \"list_id\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"options\": \"rpc://getAllNewLists\"\n    },*/\n    {\n        \"name\": \"watch\",\n        \"label\": \"Watch\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Create + Update\",\n                \"value\": \"update\"\n            },\n            {\n                \"label\": \"Create\",\n                \"value\": \"create\",\n                \"default\": true\n            }\n        ],\n        \"required\": true\n    },\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle. Maximum `50` records.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "addRecipientsToAList": {
      "id": 41777,
      "api": {
        "qs": {},
        "url": "/contactdb/lists/{{parameters.list_id}}/recipients",
        "body": "{{map(parameters.recipients, 'id')}}",
        "method": "POST",
        "headers": {},
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": "{{body}}"
        }
      },
      "rev": 4,
      "crud": "create",
      "name": "addRecipientsToAList",
      "epoch": null,
      "flags": {},
      "label": "Add Recipients to a List (Legacy)",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "list_id",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23sendgrid@1/getLists",
          "editable": true,
          "required": true
        },
        {
          "name": "recipients",
          "spec": [
            {
              "mode": "edit",
              "name": "id",
              "type": "select",
              "label": "Recipient ID",
              "options": "rpc://app%23sendgrid@1/getRecipients",
              "editable": true,
              "required": true
            }
          ],
          "type": "array",
          "label": "Recipients",
          "editable": true,
          "required": true,
          "validate": {
            "minItems": 1
          }
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contactdb/lists/{{parameters.list_id}}/recipients\",\n    \"method\": \"POST\",\n    \"qs\": {},\n    \"body\": \"{{map(parameters.recipients, 'id')}}\",\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\",\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Adds existing recipients to a list. Using Legacy Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"list_id\",\n        \"label\": \"List ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://getLists\",\n        \"mode\": \"edit\",\n        \"required\": true,\n        \"editable\": true\n    },\n    {\n        \"name\": \"recipients\",\n        \"label\": \"Recipients\",\n        \"spec\": [\n            {\n                \"name\": \"id\",\n                \"type\": \"select\",\n                \"label\": \"Recipient ID\",\n                \"options\": \"rpc://getRecipients\",\n                \"editable\": true,\n                \"mode\": \"edit\",\n                \"required\": true\n            }\n        ],\n        \"type\": \"array\",\n        \"required\": true,\n        \"editable\": true,\n        \"validate\": {\n            \"minItems\": 1\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAGlobalSuppression": {
      "id": 41778,
      "api": {
        "qs": {},
        "url": "/asm/suppressions/global/{{parameters.email}}",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "valid": {
            "message": "Email is not Globally Suppressed.",
            "condition": "{{body && length(keys(body)) > 0}}"
          },
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "getAGlobalSuppression",
      "epoch": null,
      "flags": {},
      "label": "Get a Global Suppression",
      "scope": [],
      "expect": [
        {
          "name": "email",
          "type": "email",
          "label": "Email",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/asm/suppressions/global/{{parameters.email}}\",\n    \"method\": \"GET\",\n    \"qs\": {},\n    \"body\": {\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\",\n        \"valid\": {\n            \"condition\": \"{{body && length(keys(body)) > 0}}\",\n            \"message\": \"Email is not Globally Suppressed.\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "recipient_email",
          "type": "email",
          "label": "Recipient Email"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Retrieves a specific global suppression email.",
      "expectJsonc": "[\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n        \"label\": \"Email\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"recipient_email\",\n        \"type\": \"email\",\n        \"label\": \"Recipient Email\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteRecipientFromList": {
      "id": 41779,
      "api": {
        "url": "/contactdb/lists/{{parameters.list_id}}/recipients/{{parameters.recipient_id}}",
        "method": "DELETE",
        "response": {
          "error": {
            "403": {
              "message": "[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead."
            },
            "message": "[{{statusCode}}] {{join(verboseError(body.errors), '\n'))}}"
          },
          "output": "{{body}}"
        }
      },
      "rev": 4,
      "crud": "delete",
      "name": "deleteRecipientFromList",
      "epoch": null,
      "flags": {},
      "label": "Delete Recipient from a List (Legacy)",
      "scope": [],
      "expect": [
        {
          "name": "list_id",
          "type": "select",
          "label": "List ID",
          "options": {
            "store": "rpc://app%23sendgrid@1/getLists",
            "nested": [
              {
                "mode": "edit",
                "name": "recipient_id",
                "type": "select",
                "label": "Recipient ID",
                "options": "rpc://app%23sendgrid@1/getAllRecipientsUnderList",
                "required": true
              }
            ]
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/contactdb/lists/{{parameters.list_id}}/recipients/{{parameters.recipient_id}}\",\n    \"method\": \"DELETE\",\n    \"response\": {\n        \"output\": \"{{body}}\",\n\t\t\"error\": {\n            \"403\": {\n                \"message\": \"[{{statusCode}}] {{body.errors[].message}}. Your API Key doesn't support Legacy contacts API. Please use Contacts (New) instead.\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Deletes recipient from a specific list. Using Legacy Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"list_id\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"required\": true,\n        \"options\": {\n            \"store\": \"rpc://getLists\",\n            \"nested\": [\n                {\n                    \"name\": \"recipient_id\",\n                    \"type\": \"select\",\n                    \"label\": \"Recipient ID\",\n                    \"options\": \"rpc://getAllRecipientsUnderList\",\n                    \"required\": true,\n                    \"mode\": \"edit\"\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAllGlobalSuppresions": {
      "id": 41780,
      "api": {
        "qs": {
          "limit": 500,
          "end_time": "{{formatDate(parameters.end_time, 'X')}}",
          "start_time": "{{formatDate(parameters.start_time, 'X')}}"
        },
        "url": "/suppression/unsubscribes",
        "body": {},
        "temp": {
          "timestampDateResponseKeys": [
            "created"
          ]
        },
        "method": "GET",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{transformResponseDates(item, temp.timestampDateResponseKeys)}}",
          "iterate": "{{body}}"
        },
        "pagination": {
          "qs": {
            "offset": "{{(pagination.page - 1) * 500}}"
          }
        }
      },
      "rev": 3,
      "crud": "read",
      "name": "getAllGlobalSuppresions",
      "epoch": null,
      "flags": {},
      "label": "List Global Suppressions",
      "scope": [],
      "expect": [
        {
          "name": "start_time",
          "type": "date",
          "label": "Start Time"
        },
        {
          "name": "end_time",
          "type": "date",
          "label": "End Time"
        },
        {
          "name": "limit",
          "type": "uinteger",
          "label": "Number of emails to return",
          "default": 2
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/suppression/unsubscribes\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"start_time\": \"{{formatDate(parameters.start_time, 'X')}}\",\n        \"end_time\": \"{{formatDate(parameters.end_time, 'X')}}\",\n        \"limit\": 500\n    },\n    \"body\": {},\n    \"temp\": {\n        \"timestampDateResponseKeys\": [\n            \"created\"\n        ]\n    },\n    \"headers\": {},\n    \"response\": {\n        \"limit\": \"{{parameters.limit}}\",\n        \"output\": \"{{transformResponseDates(item, temp.timestampDateResponseKeys)}}\",\n        \"iterate\": \"{{body}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"offset\": \"{{(pagination.page - 1) * 500}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "created",
          "type": "date",
          "label": "Created"
        },
        {
          "help": "The email address of the recipient who is globally suppressed.",
          "name": "email",
          "type": "email",
          "label": "Email"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Lists all email addresses that are globally suppressed.",
      "expectJsonc": "[\n    {\n        \"name\": \"start_time\",\n        \"type\": \"date\",\n        \"label\": \"Start Time\"\n    },\n    {\n        \"name\": \"end_time\",\n        \"type\": \"date\",\n        \"label\": \"End Time\"\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Number of emails to return\",\n        \"type\": \"uinteger\",\n        \"default\": 2\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[    \n    {\n        \"name\": \"created\",\n        \"type\": \"date\",\n        \"label\": \"Created\"\n    },\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n        \"label\": \"Email\",\n        \"help\": \"The email address of the recipient who is globally suppressed.\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteAGlobalSuppression": {
      "id": 41781,
      "api": {
        "qs": {},
        "url": "/asm/suppressions/global/{{parameters.email}}",
        "body": {},
        "method": "DELETE",
        "headers": {},
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 3,
      "crud": "delete",
      "name": "deleteAGlobalSuppression",
      "epoch": null,
      "flags": {},
      "label": "Delete a Global Suppression",
      "scope": [],
      "expect": [
        {
          "name": "email",
          "type": "email",
          "label": "Email",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/asm/suppressions/global/{{parameters.email}}\",\n    \"method\": \"DELETE\",\n    \"qs\": {},\n    \"body\": {\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Removes an email address from the global suppressions group.",
      "expectJsonc": "[\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n        \"label\": \"Email\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "removeContactsFromAListNew": {
      "id": 41782,
      "api": {
        "qs": {
          "contact_ids": "{{join(parameters.contact_ids, ',')}}"
        },
        "url": "/marketing/lists/{{parameters.list_id}}/contacts",
        "method": "DELETE",
        "headers": {},
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 4,
      "crud": "delete",
      "name": "removeContactsFromAListNew",
      "epoch": null,
      "flags": {},
      "label": "Remove Contacts from a List (New)",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "list_id",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23sendgrid@1/getAllNewLists",
          "required": true
        },
        {
          "name": "contact_ids",
          "spec": {
            "type": "text",
            "label": "ID"
          },
          "type": "array",
          "label": "Contact IDs",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/marketing/lists/{{parameters.list_id}}/contacts\",\n    \"method\": \"DELETE\",\n    \"qs\": {\n        \"contact_ids\": \"{{join(parameters.contact_ids, ',')}}\"\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "job_id",
          "type": "text",
          "label": "Job ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Removes contacts from the given list. The contacts will not be deleted. Using New Marketing Campaigns API.",
      "expectJsonc": "[\n    {\n        \"name\": \"list_id\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"options\": \"rpc://getAllNewLists\",\n        \"mode\": \"edit\",\n        \"required\": true\n    },\n    {\n        \"name\": \"contact_ids\",\n        \"type\": \"array\",\n        \"label\": \"Contact IDs\",\n        \"spec\": {\n            \"type\": \"text\",\n            \"label\": \"ID\"\n        },\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\r\n    {\r\n        \"name\": \"job_id\",\r\n        \"label\": \"Job ID\",\r\n        \"type\": \"text\"\r\n    }\r\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "addEmailsToGlobalSuppression": {
      "id": 41783,
      "api": {
        "qs": {},
        "url": "/asm/suppressions/global",
        "body": {
          "recipient_emails": "{{parameters.recipient_emails}}"
        },
        "method": "POST",
        "headers": {},
        "response": {
          "output": ""
        }
      },
      "rev": 3,
      "crud": "create",
      "name": "addEmailsToGlobalSuppression",
      "epoch": null,
      "flags": {},
      "label": "Add Emails to Global Suppression",
      "scope": [],
      "expect": [
        {
          "name": "recipient_emails",
          "spec": {
            "type": "email",
            "label": "Email"
          },
          "type": "array",
          "label": "Recipient Emails",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "sendgrid",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/asm/suppressions/global\",\n    \"method\": \"POST\",\n    \"qs\": {},\n    \"body\": {\n        \"recipient_emails\": \"{{parameters.recipient_emails}}\"\n    },\n    \"headers\": {},\n    \"response\": {\n        \"output\": \"\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "recipient_emails",
          "spec": {
            "type": "email",
            "label": "Email"
          },
          "type": "array",
          "label": "Recipient Emails"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "sendgrid",
      "description": "Adds recipient email address to the global suppression group.",
      "expectJsonc": "[\n    {\n        \"name\": \"recipient_emails\",\n        \"type\": \"array\",\n        \"label\": \"Recipient Emails\",\n        \"spec\":{\n            \"type\": \"email\",\n            \"label\": \"Email\"\n        },\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"recipient_emails\",\n        \"type\": \"array\",\n        \"label\": \"Recipient Emails\",\n        \"spec\":{\n            \"type\": \"email\",\n            \"label\": \"Email\"\n        }\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "sendgrid": {
      "api": {
        "log": {
          "sanitize": [
            "request.headers.authorization"
          ]
        },
        "url": "https://api.sendgrid.com/v3/api_keys/{{get(split(parameters.apiKey, '.'), 2)}}",
        "headers": {
          "Authorization": "Bearer {{parameters.apiKey}}"
        },
        "response": {
          "error": {
            "message": "[{{statusCode}}] {{join(verboseError(body.errors); '\n'))}}"
          },
          "metadata": {
            "type": "text",
            "value": "{{body.name}}"
          }
        }
      },
      "rev": 7,
      "name": "sendgrid",
      "type": "basic",
      "label": "SendGrid",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "sendgrid",
      "install": {},
      "apiJsonc": "{\n    \"url\": \"https://api.sendgrid.com/v3/api_keys/{{get(split(parameters.apiKey, '.'), 2)}}\",\n    \"headers\": {\n        \"Authorization\": \"Bearer {{parameters.apiKey}}\"\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors); '\\n'))}}\"\n        },\n        \"metadata\": {\n            \"type\": \"text\",\n            \"value\": \"{{body.name}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "To find out the type of API key you need, see [SendGrid API keys types documentation](https://www.twilio.com/docs/sendgrid/ui/account-and-settings/api-keys#types-of-api-keys).",
          "name": "apiKey",
          "type": "password",
          "label": "API Key",
          "editable": true,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "installSpec": [],
      "scopesJsonc": null,
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"apiKey\",\n        \"type\": \"password\",\n        \"label\": \"API Key\",\n        \"required\": true,\n        \"editable\": true,\n        \"help\": \"To find out the type of API key you need, see [SendGrid API keys types documentation](https://www.twilio.com/docs/sendgrid/ui/account-and-settings/api-keys#types-of-api-keys).\"\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"https://api.sendgrid.com/v3\",\n    \"headers\": {\n        \"Authorization\": \"Bearer {{connection.apiKey}}\"\n    },\n    \"response\": {\n        \"error\": {\n            \"408\": {\n                \"message\": \"[{{statusCode}}] Request timeout\"\n            },\n            \"message\": \"[{{statusCode}}] {{join(verboseError(body.errors), '\\n'))}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    }\n}",
  "countries": null,
  "_functions": {
    "strigify": {
      "rev": 3,
      "code": "function strigify(data) {\n\nreturn JSON.strigify(data);\n}",
      "name": "strigify",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(data)",
      "appVersion": 1
    },
    "testSleep": {
      "rev": 3,
      "code": "function testSleep(body) {\n\n\tconst start = new Date().getTime();\n  \tconst expire = start + 1000;\n  \twhile (new Date().getTime() < expire) { }\n\nreturn body;\n}",
      "name": "testSleep",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(body)",
      "appVersion": 1
    },
    "removeEmpty": {
      "rev": 5,
      "code": "function removeEmpty(input) {\n    if (input === null) return undefined;\n    if (Array.isArray(input)) {\n        return input\n            .map((item) => removeEmpty(item))\n            .filter((item) => item !== undefined);\n    }\n    if (\n        typeof input !== \"object\" ||\n        input === null ||\n        input instanceof Date\n    ) return input;\n\n    const output = Object.entries(input).reduce((acc, [key, value]) => {\n        const child = removeEmpty(value);\n        if (child !== undefined) acc[key] = child;\n        return acc;\n    }, {});\n\n    if (Object.keys(output).length === 0) return undefined;\n\n    return output;\n}",
      "name": "removeEmpty",
      "test": "it('Correct input', () => {\r\n    const input = {\r\n        a: {},\r\n        b: {\r\n            c: 1,\r\n            d: {},\r\n            e: {\r\n                f: {\r\n                    g: {},\r\n                    h: {\r\n                        i: {\r\n                            j: 2,\r\n                            k: null,\r\n                            l: [\r\n                                {\r\n                                    m: {\r\n                                        n: {},\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    const output = {\r\n        b: {\r\n            c: 1,\r\n            e: {\r\n                f: {\r\n                    h: {\r\n                        i: {\r\n                            j: 2,\r\n                            l: [],\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    assert.deepEqual(removeEmpty(input), output);\r\n});\r\n\r\nit('Correct input: array', () => {\r\n    const input = [\r\n        {\r\n            a: {},\r\n            b: {\r\n                c: 1,\r\n                d: {},\r\n            },\r\n        },\r\n        {\r\n            e: {\r\n                f: {\r\n                    g: {},\r\n                    h: {\r\n                        i: {\r\n                            j: 2,\r\n                            k: null,\r\n                            l: [\r\n                                {\r\n                                    m: {\r\n                                        n: {},\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    const output = [\r\n        {\r\n            b: {\r\n                c: 1,\r\n            },\r\n        },\r\n        {\r\n            e: {\r\n                f: {\r\n                    h: {\r\n                        i: {\r\n                            j: 2,\r\n                            l: [],\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    assert.deepEqual(removeEmpty(input), output);\r\n});\r\n\r\nit('Input is a string', () => {\r\n    assert.ok(removeEmpty('text'), 'text');\r\n});\r\n\r\nit('input is null', () => {\r\n    assert.equal(removeEmpty(null), null);\r\n});\r\n\r\nit('Input is date', () => {\r\n    const input = '2023-10-18T21:30:00.000Z';\r\n    assert.ok(removeEmpty(input), input);\r\n});\r\n",
      "appName": "sendgrid",
      "arguments": "(input)",
      "appVersion": 1
    },
    "removeNulls": {
      "rev": 3,
      "code": "function removeNulls(src) {\n    if (src && typeof src === 'object') {\n\t\tObject.keys(src).forEach(key => {\n\t\t\tif (src[key] == null) {\n\t\t\t\tdelete src[key];\n\t\t\t} else if (typeof src[key] === 'object') {\n\t\t\t\timl.removeNulls(src[key]);\n\t\t\t}\n\t\t});\n\t}\n\treturn src;\n}",
      "name": "removeNulls",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(src)",
      "appVersion": 1
    },
    "onlyVerified": {
      "rev": 3,
      "code": "function onlyVerified(item) {\n\n\tif(item.verified.status === true){\n\t\t\n\t\treturn {\n\t\t\t'label': item.from.email + ' (' + item.from.name + ')',\n\t\t\t'value': item.from.email\n\t\t}\n\t\t\n\t}\n\t\n\treturn;\n}",
      "name": "onlyVerified",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(item)",
      "appVersion": 1
    },
    "verboseError": {
      "rev": 3,
      "code": "function verboseError(errors) {\nconst out = [];\nfor(var k in errors){\n\tlet error = errors[k];\n\tif(error.field == null){\n\t\tout.push(error.message)\n\t}else{\n\tout.push(\"Error on field \" + iml.replace(iml.upper(error.field), '.', ' -> ') + \": \" + error.message)}\n}\nreturn out;\n}",
      "name": "verboseError",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(errors)",
      "appVersion": 1
    },
    "buildContactCFs": {
      "rev": 3,
      "code": "function buildContactCFs(item) {\n\n\tvar obj = {};\n\tobj.name = item.name;\n\tobj.type = item.type;\n\tobj.label = item.label;\n\t\n\tswitch(item.type){\n\t\tcase \"date\":\n\t\t\tobj.time = false;\n\t}\n\nreturn obj;\n}",
      "name": "buildContactCFs",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(item)",
      "appVersion": 1
    },
    "testingFunction": {
      "rev": 3,
      "code": "function testingFunction(parameters) {\n\t\n\tlet o = {};\n\t\n\tparameters.headers.filter(pair => pair.key).forEach(pair => o[pair.key] = pair.value);\n\n\tparameters.headers = o;\n\n\treturn JSON.stringify(parameters);\n}",
      "name": "testingFunction",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(parameters)",
      "appVersion": 1
    },
    "buildMailSendBody": {
      "rev": 3,
      "code": "function buildMailSendBody(parameters) {\n\n\tif(parameters.custom_args !== null && parameters.custom_args !== undefined) {\n\t\tlet custom_args = {}\n\t\tparameters.custom_args.map(item => {\n\t\t\tcustom_args[item['key']] = item['value'];\n\t\t})\n\t\tparameters.custom_args = custom_args\n\t}\n\n\t//PERSONALIZATIONS array of objects\n\tparameters.personalizations = [];\n\tparameters.personalizations[0] = {};\n\tparameters.personalizations[0].to = parameters.send_to;\n\tparameters.personalizations[0].cc = parameters.copy_recipient;\n\tparameters.personalizations[0].bcc = parameters.blind_copy_recipient;\n\tif(parameters.dynamic_template_data){\n\n\t\tparameters.dynamic_template_data.forEach(obj => {\n\n\t\t\ttry {\n\t\t\t\tconst DTvalue = JSON.parse(obj.value);\n\t\t\t\tobj.value = DTvalue;\n\t\t\t} catch (e) {}         \n\t\t});\n\n\t\tparameters.personalizations[0].dynamic_template_data = iml.toCollection(parameters.dynamic_template_data, 'key', 'value')\n\n\t}\n\tif(parameters.send_at){\n\t\tparameters.personalizations[0].send_at = Number(iml.formatDate(parameters.send_at, 'X'));\n\t}\n\n\tif(parameters.dynamic_template_dataJSON){\n\t\tparameters.personalizations[0].dynamic_template_data = JSON.parse(parameters.dynamic_template_dataJSON);\n\t}\n\n\tdelete parameters.send_at;\n\tdelete parameters.send_to;\n\tdelete parameters.copy_recipient;\n\tdelete parameters.blind_copy_recipient;\n\tdelete parameters.dynamic_template_data;\n\tdelete parameters.dynamic_template_dataJSON;\n\tif(iml.length(parameters.personalizations[0].cc) === 0){\n\t\tdelete parameters.personalizations[0].cc;\n\t}\n\n\t//CONTENT array of objects\n\tparameters.content = [];\n\tparameters.content[0] = {};\n\tparameters.content[0].type = parameters.content_type;\n\tparameters.content[0].value = parameters.content_value;\n\n\tdelete parameters.content_type;\n\tdelete parameters.content_value;\n\tdelete parameters.templateOrNot;\n\n\t//ATTACHMENTS\n\tfor (i = 0; i < iml.length(parameters.attachments); i++){\n\t\tparameters.attachments[i].content = iml.base64(parameters.attachments[i].content);\n\t\tif(parameters.attachments[i].content_id){\n\t\t\tparameters.attachments[i].disposition = 'inline';\n\t\t}else{\n\t\t\tparameters.attachments[i].disposition = 'attachment';\n\t\t}\n\t}\n\n\t//HEADERS\n\tlet o = {};\n\n\tif(parameters.headers){\n\t\tparameters.headers.filter(pair => pair.key).forEach(pair => o[pair.key] = pair.value);\n\n\t\tparameters.headers = o;\n\t}\n\n\treturn parameters;\n}",
      "name": "buildMailSendBody",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(parameters)",
      "appVersion": 1
    },
    "removeEmptyArrays": {
      "rev": 3,
      "code": "function removeEmptyArrays(src) {\n\tif (src && typeof src === 'object') {\n\t\tObject.keys(src).forEach(key => {\n\t\t\tif (src[key] instanceof Array && src[key].length === 0) {\n\t\t\t\tdelete src[key];\n\t\t\t} else if (typeof src[key] === 'object') {\n\t\t\t\timl.removeEmptyArrays(src[key]);\n\t\t\t}\n\t\t});\n\t}\n\treturn src;\n}",
      "name": "removeEmptyArrays",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(src)",
      "appVersion": 1
    },
    "removeEmptyString": {
      "rev": 3,
      "code": "function removeEmptyString(src) {\nif (src && typeof src === 'object') {\n\t\tObject.keys(src).forEach(key => {\n\t\t\tif (src[key] === \"\") {\n\t\t\t\tdelete src[key];\n\t\t\t} else if (typeof src[key] === 'object') {\n\t\t\t\timl.removeEmptyString(src[key]);\n\t\t\t}\n\t\t});\n\t}\n\treturn src;\n}",
      "name": "removeEmptyString",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(src)",
      "appVersion": 1
    },
    "buildContactCFsNew": {
      "rev": 3,
      "code": "function buildContactCFsNew(items) {\n    let outputArr = [];\n    let customFields = [];\n    \n    items.forEach(fields => {\n        let obj = {};\n        obj.name = fields.id;\n        obj.label = fields.name;\n        \n        switch(fields.field_type){\n            case 'Text':\n            case 'Number':\n            case 'Date':\n                obj.type  = iml.lower(fields.field_type);\n                break;\n            default:\n                obj.type = 'text';\n        }\n\n        customFields.push(obj);\n    });\n\n        \n\n    if(customFields.length === 0) return;\n\t\t\n\tlet customFieldsObj = {\n\t\t\tname: 'custom_fields',\n\t\t\tlabel: 'Custom Fields',\n\t\t\ttype: 'collection',\n\t\t\tspec: customFields\n\t\t};\n\t\n    outputArr.push(customFieldsObj);\n\n    return outputArr;\n}",
      "name": "buildContactCFsNew",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(items)",
      "appVersion": 1
    },
    "parseResponseDates": {
      "rev": 3,
      "code": "function parseResponseDates(itemObj, objType) {\n\n    if(objType === 'contact'){\n\t\titemObj.created_at = iml.parseDate(itemObj.created_at, 'YYYY-MM-DDTHH:mm:ssZ');\n        itemObj.updated_at = iml.parseDate(itemObj.updated_at, 'YYYY-MM-DDTHH:mm:ss.SSSZ');\n    }\n    \n    return itemObj;\n}",
      "name": "parseResponseDates",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(itemObj, objType)",
      "appVersion": 1
    },
    "removeEmptyObjects": {
      "rev": 3,
      "code": "function removeEmptyObjects(src) {\n\tif (src && typeof src === 'object') {\n\t\tObject.keys(src).forEach(key => {\n\t\t\tif (src[key] && typeof src[key] === 'object') {\n\t\t\t\timl.removeEmptyObjects(src[key]);\n\t\t\t\tif (Object.keys(src[key]).length === 0) {\n\t\t\t\t  delete src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn src;\n}",
      "name": "removeEmptyObjects",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(src)",
      "appVersion": 1
    },
    "formatResponseDates": {
      "rev": 3,
      "code": "function formatResponseDates(itemObj, objType) {\n\t\n\treturn itemObj;\n}",
      "name": "formatResponseDates",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(itemObj, objType)",
      "appVersion": 1
    },
    "buildContactFieldsNew": {
      "rev": 3,
      "code": "function buildContactFieldsNew(body) {\n    let customFields = [];\n    let outputArr = [];\n    \n    outputArr.unshift(\n        {\n            name: 'list_ids',\n            type: 'select',\n            label: 'List',\n            options: 'rpc://getAllNewLists',\n            multiple: true\n        },\n        {\n            name: 'email',\n            type: 'email',\n            label: 'Email',\n            required: true,\n            validate: { max: 254},\n            help: 'Contact with the same email will be updated.'\n        }\n    );\n\n    body.reserved_fields.forEach(reservedFields => {\n        if(reservedFields.read_only || reservedFields.name === 'email') return;\n\n        let reservedObj = {\n            name: reservedFields.name,\n            label: iml.startcase(iml.replace(reservedFields.name, '_', ' '))\n        };\n\n        switch(reservedFields.field_type){\n            case 'Text':\n            case 'Number':\n            case 'Date':\n                reservedObj.type  = iml.lower(reservedFields.field_type);\n                break;\n            default:\n                reservedObj.type = 'text';\n        }\n\n        if(reservedFields.name === 'alternate_emails'){\n            reservedObj.type = 'array',\n            reservedObj.spec = { type: 'text', label: 'Email'},\n            reservedObj.validate = {maxItems: 5}\n        }\n\n        outputArr.push(reservedObj);\n    })\n\n    outputArr.push(\n        {\n            name: 'id',\n            type: 'select',\n            label: 'Contact ID',\n            options: 'rpc://getAllContacts',\n            advanced: true,\n            mode: 'edit',\n            help: 'Use only if you wish to update the main email of the contact.'\n        }\n    ); //put the id as last parameter in the array\n\n    if(body.custom_fields){\n        body.custom_fields.forEach(fields => {\n            let obj = {};\n            obj.name = fields.id;\n            obj.label = fields.name;\n            \n            switch(fields.field_type){\n                case 'Text':\n                case 'Number':\n                case 'Date':\n                    obj.type  = iml.lower(fields.field_type);\n                    break;\n                default:\n                    obj.type = 'text';\n            }\n    \n            customFields.push(obj);\n        });\n    }       \n\n    if(customFields.length > 0){\n        outputArr.push(\n            {\n                name: 'custom_fields',\n                label: 'Custom Fields',\n                type: 'collection',\n                spec: customFields\n            }\n        );\n    }\n    \n    return outputArr;\n}",
      "name": "buildContactFieldsNew",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(body)",
      "appVersion": 1
    },
    "transformResponseDates": {
      "rev": 3,
      "code": "function transformResponseDates(obj, timestampDateKeys) {\n\t// timestampDateKeys are the object keys that need to be transformed from timestamp to date object\n\n\tvar keys = iml.keys(obj);\n\t\n\tvar output = {}\n\tlet keysLength = keys.length;\n\tfor (var i = 0; i < keysLength; i++) {\n\t\tvar value = obj[keys[i]];\n\t\t\n\t\tif (value && timestampDateKeys && timestampDateKeys.includes(keys[i])) {\n\t\t\tvalue = iml.parseDate(value, 'X');\n\t\t}\n\t\t\n\t\toutput[keys[i]] = value;\n\t}\n\t\n\treturn output;\n}",
      "name": "transformResponseDates",
      "test": null,
      "appName": "sendgrid",
      "arguments": "(obj, timestampDateKeys)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-06-10T13:22:43.288795+00:00",
  "categories": [],
  "opensource": false,
  "description": "Start automating your email in minutes with SendGrid and {{integromat}}. Connect SendGrid to Google Contacts, Google Sheets, Typeform, Wufoo, Cognito Forms and many other apps to streamline your workflows.",
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "3ac66a69428f818de6f8db10f07e9ed0",
  "versionFull": "1.20.12",
  "compiledName": "sendgrid",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": null,
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": null
}
