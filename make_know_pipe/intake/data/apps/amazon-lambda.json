{
  "rev": 12,
  "base": {
    "aws": {
      "key": "{{connection.key}}",
      "secret": "{{connection.secret}}",
      "sign_version": "4"
    },
    "log": {
      "sanitize": []
    },
    "baseUrl": "https://lambda.{{connection.region}}.amazonaws.com",
    "response": {
      "error": {
        "403": {
          "message": "[403] Unable to determine service/operation name to be authorized."
        },
        "message": "[{{statusCode}}] {{body.message}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "amazon-lambda",
  "_rpcs": {
    "listLayer": {
      "api": {
        "qs": {
          "MaxItems": 50
        },
        "url": "/2018-10-31/layers",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.LayerName}}",
            "value": "{{item.LayerName}}"
          },
          "iterate": "{{body.Layers}}"
        },
        "pagination": {
          "qs": {
            "Marker": "{{body.NextMarker}}"
          },
          "condition": "{{ifempty(body.NextMarker, false)}}"
        }
      },
      "rev": 2,
      "name": "listLayer",
      "label": "List Layer",
      "appName": "amazon-lambda",
      "apiJsonc": "{\n    \"url\": \"/2018-10-31/layers\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"MaxItems\": 50\n    },\n    \"response\": {\n        \"iterate\": \"{{body.Layers}}\",\n        \"output\": {\n            \"label\": \"{{item.LayerName}}\",\n            \"value\": \"{{item.LayerName}}\"\n        }\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"Marker\": \"{{body.NextMarker}}\"\n        },\n        \"condition\": \"{{ifempty(body.NextMarker, false)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "amazon-lambda",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listFunctions": {
      "api": {
        "qs": {
          "MaxItems": 1000,
          "FunctionVersion": "ALL"
        },
        "url": "/2015-03-31/functions/",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.FunctionName + ' (' + item.Version + ')'}}",
            "value": "{{item.FunctionName}}"
          },
          "iterate": "{{body.Functions}}"
        },
        "pagination": {
          "qs": {
            "Marker": "{{body.NextMarker}}"
          },
          "condition": "{{ifempty(body.NextMarker, false)}}"
        }
      },
      "rev": 2,
      "name": "listFunctions",
      "label": "List Functions",
      "appName": "amazon-lambda",
      "apiJsonc": "{\n    \"url\": \"/2015-03-31/functions/\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"FunctionVersion\": \"ALL\",\n        \"MaxItems\": 1000\n    },\n    \"response\": {\n        \"iterate\": \"{{body.Functions}}\",\n        \"output\": {\n            \"label\": \"{{item.FunctionName + ' (' + item.Version + ')'}}\",\n            \"value\": \"{{item.FunctionName}}\"\n        }\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"Marker\": \"{{body.NextMarker}}\"\n        },\n        \"condition\": \"{{ifempty(body.NextMarker, false)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "amazon-lambda",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listLayerVersions": {
      "api": {
        "qs": {
          "MaxItems": 50
        },
        "url": "/2018-10-31/layers/{{parameters.layer}}/versions",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.Version}}",
            "value": "{{item.Version}}"
          },
          "iterate": "{{body.LayerVersions}}"
        },
        "pagination": {
          "qs": {
            "Marker": "{{body.NextMarker}}"
          },
          "condition": "{{ifempty(body.NextMarker, false)}}"
        }
      },
      "rev": 2,
      "name": "listLayerVersions",
      "label": "List Layer Versions",
      "appName": "amazon-lambda",
      "apiJsonc": "{\n    \"url\": \"/2018-10-31/layers/{{parameters.layer}}/versions\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"MaxItems\": 50\n    },\n    \"response\": {\n        \"iterate\": \"{{body.LayerVersions}}\",\n        \"output\": {\n            \"label\": \"{{item.Version}}\",\n            \"value\": \"{{item.Version}}\"\n        }\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"Marker\": \"{{body.NextMarker}}\"\n        },\n        \"condition\": \"{{ifempty(body.NextMarker, false)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "amazon-lambda",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    }
  },
  "flags": {},
  "label": "Amazon Lambda",
  "theme": "#f37b21",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Function",
      "modules": [
        "watchFunctions",
        "listFunctions",
        "getAFunction",
        "invokeAFunction"
      ]
    },
    {
      "label": "Layer",
      "modules": [
        "watchLayerVersions",
        "listLayers",
        "listLayerVersions",
        "getALayerVersion"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "makeApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af40000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000004694944415458c395975b88955514c77fe79c3475d4662635cc0b4838221a46a4528a10298524dde82512222cadb04031e90611940f153ed843610f155da808c20cb39b15154446464423544c995a9439a633537a9c5f0fdffa387bbececd051bf6b7f7daffb5f67fedbdd6fe4ab4296adead005d4037303ec6068023403f500528954a6de1b6d40ac315a007b81c580acc0126016342ed9f70603ff019b027fad5761da96b582da917ab4fabbfaaa76d2dc3ea2175bb7a895a4ed86bdb30ea4475b37ab060e0b4daaffea8ee8bf6837ab48e8387d507d4ce1cb75de3d3d597d55309d83175a77a87ba2874baa34d5317aa6bd51de1602ea7d4d7d4994d9d2818df5900d8a5ae50c7340249d68f51af088c9309ceeea64e24b4bf942cfa5b7d38a170b4da5568a352c042081f0ce6727935c76ae4fda684f6e3ea7af5ac64fe3af5eba4ed5357d7db558c55d475891355f5fe11fa09f845ea2f89e223b9f1446f4d9d53bf5bed6812968afa50b2b183713b3227ac5db76d05d0ee3ad45e19b1dda9f6856ebfbaacd1e18a759deadb09fe33e6d733147a12c0e3eaca22adf15d8e9897d4bbcdeebcead6360ee78ae4761c50e7a60eac49c01a525a009daffe166bbe5767b460616ce176dda952264bc74ba8a5e55d64b9bd2158c82c605cf46703cb0bf345190aec5c96009532700e596e073801ec8596c5640a702f3021be2bc00dc0d87aca09d65ee058f47b80ce32d0094c8ec1a3c0c136767f1b705961fa526001cde510f057f427015d65a023f17ca011fd89f185c03aa00c1c06f6c57837704d8b300c06cb9055d28e3250d46ec6fd386013301d18069e02b6002763fe6a602aed8be5d8f1500c8c0f461aedfe466055f43f07b693d5feef626c0ed99ba1110b1dd4cecd103050267bc5fc1e835dc08c06dece02360675fdb1f33fa2bd153aa380eb81d10d30a691850ae04fe06899ec54f6261e2e4c7760ed45b41eb830f45e00de4d8077842300cb80f940453dbf50ac160113a3df0bf4e749e2166b8f890fd4094906435dae1e89f96fd459851a71b6fa46cc0fab6f9abd01be52e7854e87fa4ea2737b9a092f307be1a80ea8d726c6bbd5f7636e50bd394dbb89de4d8eacffb9a13531bf32d2bc91f67b5207509f4c167ea44e8ef1b566cfad13ea739152ff7748d5a9eab7b1be1a69fac3d84c97fa5e82bf2deac9088079ea4fa1705a7d3ca89dad2e367b864da95774924d6c545f546f0dbcb171061e0da7547f56178cc04900d6abff26a1d86cf60aa295c4fa5166f53ffdde10ec1921da50b7722607e5d9a4320e04139355cec011d473d52d8971d5e7f303de6ce179eaeb891355f5e388e584468e24ebc7ababd43d09edf9cd985a5c5f2a82844c011e035627496510f892aca47e011ca056373ac8d2f322e02a6031b58c7a127805b88fac76b4fe6d4bc271577230d3ab3560f6a7b45fed357be19c4858cba54fbd2758692b84f5289dab3e619627aab6966a38bd356e42a999e1767f4ecbc04cb234bb14981b61cacbf810592aee053e053e01fa80e156749fd1af6b385322ab9a9d499c07c90ad471c033f923fe0fda4eef12e690384f0000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000009e84944415478daed9b6b8c5d5515c77ff3eab4c3743ab56f4a2d6d415aa094e2a33c24b5921a29d00a94d442d0046d4330a152a3883186408846d0c8232a891a23298856d1582d1835d6b4525a5e2dada6a594472b16680bd3ce4c3b77e6debf1fd6bebd7bceec73ef39f7dc5b3fe83f3999c93d7beff5d86bafbdf65afbc0ff381aea4d4052f1df26a01d18e59e538056c7431fd00374b9e72890076868a82f8b351f3d22f0a9c0b9c087dcdf69c038a78856d706276c0ee8060e02af013b80e780edc0bf80817a28a466a379824f04e60357021702a701c3ab1c3607ec07b600bf07fe02bc594b45641ec5137c06b01cb80e98090cab098725f4032f036b814781dd80eabd44ca0aee9e4992ee90f4b2a482ea8f82a45725dd29694a918fff86f0c3245d23698ba4fc49103c8abca417252d97d45aad1252d98f4764027007701330326977ccd3bf0b1cc2bc7d9f7bd70a74006380d1d80ed19870dc1ee011e01ecc5fa4f20f895b7ac2cf01ee033e9e80c91cb0177806d80cec744c7601c7715b1db61bb462dbe364e06c601ee644cf70ef2a297713b01ad89a5609898477cf02493b1398e76149bf90749da4532535a6315147ab51d24449574b7a54d23b09e8ee9674794dfd8227fc2724edadc0c011496b245dea7c4426463cda2d92e649fa89a4f72af0b04fd2a76aa2048f818f497aa58243da2c6971d121d56c0606f3d222e9939236a8bce3dde7da55cf8727fc79925e2a43ac57d2439226d743f0189e2648ba4f527719be7649fa70d53cb98ee3253d5986c82149b72ab20d454c77b87b1f7a864b6a4acba04adbf00a4907caf0b741d269e5c66f8823003403df04be14d3ee2dccebfe1c28f85ed7eb7f17e6c9f384d1043c09dc4bcaa8ce13ea1ae0016cf708e1fbc06d402ed1f8deec2d2ee3700e49ba21cebcbc195aafcad825696a3566eaf17aada4b762c63f2a6959e2a5e099fec698018f49faa2ca6c6d29153020e9f3d5ae554f092b15ef139eadb414a283ad56bc97fd815bbb95c649aa0049fa83a4b66a14e0d16b91f41d85cf230549dfa8a864d7e0fd9276c430bad5bd4fc2501a051c967449b50af0684e2a63b97b247d204aa3d91fc06129168a46d1037c1b7823214f79e067c0d340c1fd56c08ecacb7dda58fc7f35b049529630f6df98e35e8385d53e6600cb80bb83349c06c7c8029a107e2969440d6669bac211e54eb95822e3f82d927e1a23c38bb2f03ad8114957c99c5c145d9216565c43c9186c8c61b05fd28d596878725c22e96080469f223b42f434b78870faea6fc046a8c929ab80a5b77291df9bb13dbdd2c92f161e6f5bb1f45914c3802b7cb97d058c072e0e74ca03bf028e6595dc63f019c2bee4a3c07959e960ca5dcb50258305662782265f013381e9810e6f60169079f63dd39e8e39be28c6028b236d53c1e3f1efc0ab812653b00cb529c023743e96ae8ee279927bfe24e8046ec7b23f215c856596b3e24dccd2a2180e5c00a664df02ce8d19680b2e279f059ea26f042e2bd374169656cf7ab22cc428a0286b239496c0086c9f8ca20f2b5064327f4f9073805b819632cd8761ceb0852ae1f1ba138b5fa2381dcb3b9e50403b96e88ce208b0af6ac9870ab61acbf155c27cc2c1585aecc792b0518cc392b08314d01168d8051ccec28137fb576045932498805596b22e83f762147042dea202da08efffdd406f160e1c26015f61680a3d0fbc4d2954f6b104db15b2a00fb3e2285a9dcc2714d042a950e923477c32a322dcec3500376369ee28b6015f8d617236161764b182014ab5071f4db8d25dd2e243b5c283051e2b189a55eac5ea0b8f6355e0288603d732f8d09416e53cb77c05e4086f75ad191968c74c7f52e0dd5ae009a7885f17198a6001705606fa4d849776b11c7f4201bd58a5268a91b8ed220dbcd95f065c1e68f20a96072cd27c8a70d436193b9f54bb0c4630f4588ca3dbeb2be028e631a318457cc456096762db5ef470d30fdc8f8b2f1cf63a2584b0048b1eabc168c221f7519cdf292aa01b381068d8014c4d4351a58cf02ac27bf95358a2c40f58842d83ee40fbb9c045ded869302546016f4715d0879965142d98374e44dc6bb310b821d0e400f02d2cbe20a2842d849d611b16192676d81e1fb3b16510c55e5c84e80fba3d66bc79a43ba38fc51c5f67e4f702f043ac8a1b0aad8f00bf21ec0c17922c82f4d18ced4021ec1844c765482e52b80eb04fd2cc4a16e065636e97a5baa3d8282b6995eb7f96a4d7037d0bb20a54b15d832c753f475273744cd7e67485eb993d922e1bd4c775789f2c7f1e227e4bb95495c7d8053102bc2be9ca0463344afab1c2f8aba433252d92f43d49db6479c469fe981e2f9f8d99889db2ec715080efc610ffb3a48e0acc8f90f4584cff07423315a3c4456e96a238e666b4d7fb2d2769a9af58f77f9ba47531bc3cec2c28c8c04259292964364b4233e8317e7d84b922b6cb32c11517ad1ba753d22625c7831e0fbe1c5d314a5c1c92a3d8b143666a21ac0f5981eb3755d20b813ebd4a91e9f504f8720a053c274be7fbb3bf36a6ede662db72c4572abc768e4bfa9c869a5ba3a47b6308ae51ca5a821bf36c49fb132a609fa4b91eff9f5678091524dd567632dccb89b2125808ff90db11bc67beac329b97e5f6fbddff7b645e3a5500e3da374b7a2486879ca4d7243d21ab61ce2b2a59b6d45e88e9b743812a74e8a073007818bb0d164d4bcd02ee0456523ac2be037c81c167fa062c1bb31daa4aa70d60a9f8a5d861e6087633f4692c43fd3c96a9eaf7fab4015fc792bb51e4811f01af279d814ec5df0ce9977497ac049556b044703c8c9574bf2caeb858d26805bcb76bdbe4daf5c5f0bc41d2b844fc7aa6bd40f1970eba658149eaeb2d291450f42f496287158abfcc715869afcea9146d7dcdcd78085d9256d5d31212f0d82473da876278cc4bbaa7aa89720446497a5cf1e89674b7dcf6783214e159c7296e82bacaf0f73bc56d7b29084d57f9c02427bb153aabde4af0783a43b64bf495e1eb59793b5656827365b17739ec726bb1e6d6e0f1d12ee933b22daddcd5fc7f4abab0267c78c4e72550c271497f945da31f9595018ff648d9616a9dc2f717a2c2cfafe924442c61a32aa357b6f5ac92748edca5aa240c79b45a9d09df223b8c7527a0bbd54d5462e1abb92e3f0dbb879324655dc0d24fdbb08ccf36ec83a8835852b218c8346381cc18ac6e371b4bc49c8f55899a2ad0c903ebb044cc6e481e7c55fbc1440716fdad225c538cc300a5846437a5a2c5304ae5aa91a42b8c1e021ec26e8b1e4e237cd5502900b95476c7af2f8179d61a39497f926577ea12902551423156b849f6ed50ee2408de2f3bf0dc2c0b8f3339bb5a7e36371eabe85e0f7c84e4df1225450f96357e0cf82d762730b3b9d7e3c3c976e0835845673e56daea207d1d5298afd8036c00d6638ef4482d04afb9026294d1895588e6609e7d065627ecc4f2f5c55d6400bb85d6851dc7f7022f61bbc66eeae8dc4eca67979e425ab05a63bb5340f1ebd29c53408f7b72f512f8ff88e03f9f97698619230f3b0000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-02-21T23:48:00.621807+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000015084944415478daed9d79945d5595c67f5549154955129290901012488004c320880c014446a11103342e446475a3d2a80c0b5b11badbc5eab61b6c406d71c2a1151514441b05d2ca20a02020630342204a26e640c840852495a4aaded77fecf3f24e6ebdaabae7be3b55ac6fad5aa954d5bb77ef7df639679f7df6004318c210863084bf5234154d40da9054fdb61918018c01b605c6bbef47b9af91408bfbdb6ea013580bac03d600ab800ef7fd7aa002d0d4b475896cd073e306bc09180b4c056601ef0066023b019331051805b402c331e568f2f897fbaa003dc0264c113a80e5c0cbc042e0cfc0f3c08bc06ab602a51874947b337c14b02bb03f3007d807d81918870d7216bc75634af112f00cf028f018f017f7f341a70c83825a6fd04703ef048e068e00f604b6038615445a051bf805c07dc0ddc093d8ea302894a1d414ba811f8e2de7c70373817db125bd8cb4af05e603b701bf069ec5b693d22a43e9a8f2667b1b7030703a702cb023b6770f0608b31dee017e86ad0e6f43f914a134d47803df0e1c059c051c8959ee8319eb803f023f026e07de82f2284229a87083bf0db6af9f8b29c0a8a2e94a191b800781ef0077608a51b82214fa7637f0cdc07ec0a7811319fc337e20ac07ee04be8e294477914a50c89bbde57e32f049e013c094c2a4500c56003f01be092c85625683dcdfe859f6ef032e010ea2b8635cd110f0347039700bb0316f25c8ed6ddeac9f08fc23f029cc3d3b043b3e5e0b5c89791d735b0d72798b37f8fb61da7e34d9cf7a015dd8f16b15f026b0d27dadc18cb26ef7b7c3a8dd1b8cc79c4b13dcbf63301772d6b212f010f079e00f80f25082ccdfe0067f18f041e032cca993c9abb0817d0173c03c8df9ee5fc4cee46f531b74bb407002f614b4899a328cc694601a76b7b037b017b00b76ef90954fe255e052e0c7e4b02564fa7427d876ccc2bf08135c9aa800af038f03f7020f038bb019df038d2fa591dbc56db1fb8703b123eb8198836a78ca7cadc38e8bffc920722b6f86a4ead70449df96b451e9a243d25d922e90b4a7a46daaefcc91b71649bb49fa0749f324ad94544991c72e4937489a9a176f690b684749374aea4e49201549af4afa6f4947491a55b4603c5e474a3a58d25592964aea4991e73b24cd2c9ad750814c93746b8a33e25527dc7d250d2fa3201cdfcd927697f41f9296a4c8ff7d92f628b51244067f5e4a8caf92cdf8fd240d2b2df3bde5d02469b6a4af4a7a2325593ce09e593e25f0067f8aa45b52607693a4df4a7a9f6caf2d9ac5a4321926e91049bf92d499825cee93d91de5520247d07692ae57e3cbde2b922e9234be748c26930b327be56c490b535082db64f6553964e3086993f40d3566f0754bba5b36639a4ac15cba3242d23b25dd2cb3f093a222e9a792c6162e23d50c9f8bd4d812b74ed2d7244d2a8d6667232b248d93f4ef92de6a405e5d92ae90d45a98ac3c864e96b4a20166964b3a4fee2cbfb5c3c96cb8a43324bdd080dcd6cab695fc278c37f87b4b7ab60126163b05daaa96fc00f91d2ee9a906e4f7b27b46622548e45f742f1b0ffc103829a11ce603e761171fb15d9d1ea37f83c50a5612bebf8ab5c0f7806579ba5b3d3ef601be0d1c92f0510f607193afe442bf6ae7dc4b94dc98794ad2814934d79b3d973530737c74cbdcb9b92fa51e2fb325fd2121fd1599fd94fd71d923f84849af272478bea483920adca3e1d2941440927e233bc9e4aa00117ef690f45042fa3b249d9254a6a1c46e2773d224c152a73c8909cd480156ca8e9fb92b4084a7fd243d9d908747655ed8a077c7bed3f61e7c2616ae1d8a95d895f0efa174d79be371b64c114ae0c9e209eceafcc5048fd91f380768ce8407a7a17b4a5a94403b3b257d46e63348838eb45700497a46cec356143cdece50323fc1eb920e55c00a1b6b05502daae71c2c2022882f2cbae5bb40a56433dfc7ee583e42618e284f363f07be810b6a09c0246c05698bfb810115c013c641c08712f0f520f045a0b3c4830f562be0142c1cac30381975035fc3328942f17ee03888a7c8716d80562c7e7f622031cb812f00af6420ab2c702816fb5706acc264b734f073edd858c54ab0e957013c0d9a039c104848058b6bfb1d94cee8eb0b13b1eca442ef233c59fd1f70152ec338008701c7c4e1234e30e370e0a3588874081ec2f6fdacc29b5761b363a07db209d81e8bf28d830f005763c1a685a1a9a9a93a78d761493473033ede868dd91d582a5a32386bf2dd9296055aa36f2b23c78467298f91054cee38c0d71499a72c2e364afa7016b437c0eb7b65976621e890744c623ebc975f91e03872a32c50b250017a7c1ce1041217bf509157adbde91f16a8c455fc404943e9dc8ba7ca5cb72158a1066fa83210e0b692ee0fe061992c00b568f27d1ef652f8f5f14b7271847da1b9af173a1c8155dd0ac1afb182086532fc3ab094ecb8988c337acba204d8ede9cf033f3315bb35ed938ffe4e01ad9845dc427cacc62a61741525a5283c25fc2de68e8e8b13b1d4b0c2e1f1703d6147ea26cca8edd300ee4f0176c56af484e077c02311a2cb82f9580a595cec8df905cab60afc26f033efc22aabd5452f05f0983d8cb0a20d1b811bb104cc32623d762c8a8b91986730edbcbf447013aa826d031d011f1d473f2eeebe5680e1ee432119b0f3098ceec90b1e3df700cb023e7a24e13650d6781c2b4e198223e8a3e6525f033c05cbe50fc11d98ebb7cc5884296a5c4cc5ea1396691b781bdb064208aaa6b5f742733f1f981af0820eccc82addec8f60176046c0df37617102638b261c7aad64219eca0958bc402f45de4201bc5f1e80ed8171f11c5690a19450ad0cdd6781dd023fbe1fce182ed12ab0100b1e898b66ec3ea7ee2fa268257cf97f105700b16cf006ed04e0d4048f68c78cc13215b2da80551f0dc13ed459c9ea29c0042c38222e36513ec74f1453b070b4b81742511c4378204c26f064fc305612272e76a6ceb65e4f01aa35f6e3e20dc20cabdca05a2f814f62e55c926267ca670c56fb16c4c538ea28713d059849d84c590cbc56b434a2f006ea60e06c1a2bead4049c4cb9aa98aec06cafb868c51d697d25de2c14ef87bb1126ace770756f4b8831c0c5c00e293cebdd34b68aa48d1eac6945087a55686baef3ff90631258b38452c153e60fe32e4352c0686c15283c8fd1b303161076efb213761ada8ca8026c43d86cd9082c89105516ccc22a926ed3e0737c1c074c2f9a310f2fe2fa10c4c42422db7b54014661e15371b19630d76ae650ad16f105c0ec941f3f030bcf2a8b31b89cb0e3f738222ee1a802b4116600ae21ec8a35537883720cf0910c5e310cdb0662c7dd678cb73163302eda89f802eaad0021ccbd85ad0265c244ccf01b97d1f3e710ee28cb0a9db84aa23151ad87bc195105184d5862c41acc0e281cdeec3f0b786f86af1a87ad0265d806ba08db025a88b8f8a30a3082b0fbeff584c7aca70e6f20aa0992216edb67b03e8021381e2b225d342a84790387318002b410e603d840e3153ad2423bf039eca81317ab817f026e0a7cd72c0ace23f4101280d3c4000a506da91a17dd017f9b09bc01f85b5c564f00aec5f2effe97b0289be194208fd0212481b45a0e7f33064b1fbe81301db890b02bec27b1c64d902ccae610ec866d5023aa003d84459ae4d149a34fa896b67e3ed651342ed6025fc29a4b54ff7f3361dbd904ca610c86446d57bba86c465401ba028530828256114fe88763554b42f03f589326df837927e199b827506cb7b35e7bfa00a86047c7cd880e5ea855df8ead0245612c76cf1f12bfbf10f82f6043c47dbd1417d616807760019745ad02d52e2671d1c3000a506da614176308d3c054e009fbefb0065471b1092bbcf0acff432fe4fa66c27ceb2d98f159d42468212c5eb18b182b40483a712fdf728ed80bf3f787ec817762d9357d5d5e3d8ae5e487e030ac8d7d116827acf55e2711c7515401d611e6591a4d78d59086e066ff08c2033c97617df9fa3bee7560ab40c87a3e0997bb5fc036b02d61751bd61243014262fbdb090b1f6f089e80e71216e059c1cac1f619bbe8fdec766aa783b8984bce13c16132615bc04a2277375105d84858f2610b2ece2c47ed9f8a79fc42b69e07885fad64317057204d7b01efc9590e60790eed017fbf8c48f456bd23dc924022f620bf0694d500cf03023eba1a5bfadf18e80f23c6604898db0872cc23f4946c3661f71e2fd0971fc09b198b0873f1ce26e360c94880e7598429dc4f08cf5a7a18f31486e008c2c2e91b452be115cd16467f506f05584c985f7c0661173049311a3bf38784acfd0973f7760786acbd05dc1a48df54f22d2a3119f343c44527164abec544a8a7002f1366076c87e5a067c27824c0f3f8808fae07be4ce096e609e736278b109c447e1dd1f724cc005f514f16f514603561f1e6c33003284b3b6016f019c2023c7f09fc0a1207ac3e8f2b6c1d807d718d1fb25a05bce71e4a98136e3175e237eb29400f619534c0f6e6906ca210665bb0fab721019e4b80af10f17a05a21b53a09067b4914f1ee118c2a39e9ea48e61bb8502442a5486b84477c512275283a7e9c71216e0d90d7c0b97ad9c64f67b9f7990f0e48ba3a9938051e5c9956d9b26e943b25a8a49f20cf6725f71d18519b6bde4d1d74dde02c26ec64662458ad34e9ad81e0bf01c1bf099bbb0eae469e42aac00e6057e661a5e1ea16a5dc2a66376ccf781bb811b30a336f6658e27dbe3080b7a5d46dc538d6a3d81be175893ee794933d250004f709f575827ee65920e4bab46a17bce3e925e0b94c57d9226cadabc9e296bf4b848d612d7c76a59d7f1107ab697f458203d372b6e5b3e4ff8a7cacaa6c645b7a4731a15bef7fefd65850ee3a247d21794620b3a47478ba41b0205be56d2ef652d72066aacf5b938328b8ccb86005a2a92ce0f1a17f7c73b49fa4b20e3f7aac196a6aab5a2bd31f0ddf74b9a9cd6e04784fec140a187609e62cc4e47c70849bf0c7cfeabb2fe8e759fdb5f34cf2bc0bd81323b10773f9f6420b46580674875ec0e2cc42bd50adf9e0d713fd9d540d817ab3f10070711deafe9119c03a81efa53800a162d1b121f3012f838c92b71e084712161194ad7e36a006694a4badcc9220bec401f059caa50ed38fc51c28cbf6ecca3199ebce3969cf1921e0c5c72d6cb8e3841ab806a47a4af04beef1999b195d1f86ca6ed5d4ade2b71207c5f7dd82eaa6d43872bbc47f3b31aa095dc40019dab308f5a887447622d6163072a78041e8969795c7462f17d8b128f6e7c3c8b2b849901e66081257da10d8b7c0e6dda318f7077760d4ef376951df142d025e982b8ab806aab4d6843ca9f496acf72f67bf4216b241172328a8b75928e8bca2bf2de7581cf5c266b44d92f6f7142ba1763ab40088663abc080ee5b8fc0d086942f60865fe6e5693cbbe23ee0cf293fbe1aab3fbd8fdf4fc3c2df4253d26f238dda8daab5897f3181665f233bbac4797e4843ca2e499f554a0e9f003920e9f21466fc2659f3875b255d28698eac05ce667e54b389ae949de543b052d6662635c69b1c21a1582bf384d51d28f7f39192ae0b7ceeedb22d2397c18fd03b47e1c65845d609f47149df94397376956b4b13e54335659b2b695502b95fab982d6f629d99dc8376c7ba8184965a5d049c862b6dea1fd3dc73a701e762317e0351dc84dd565e8fcbe5cbb33691a3772456167fa044d42ecc07ff27cc8ff047ec8e6535fdc4267a83b61bf00b5cac450096637e94f48a777a1af9cf0af3cd577187a449fd687ad1f975a1723853bd5dbc15496b243d21e93b32c36da69c972f2e7faa7544bb3e819c25e92a256d141583b029921e49405445d2d52a4927b114e4304d76c6aec85cadb74bfa17d9be3b4109ef2354bb39fc57f5be388a83059276cf44c69ef69f26dbdb43d129e9e24cb433473819344b3a5dd2c7645db94686ccf201e4fb3185b5b8ab62a3a4f31aa5230e912325fd380181925d7f7e3ce90cd95ae10dfec90a6fd259c53c597bbc5c889d2de9b984842e77b3674809d862f08f57b2a3b664d7e607653afbeb107c86ac456c12bcee3edffcd7ac049e2cdf2f8b1d48828d923e9dcbe047086f95b5330d755254f1a6a4b365464fd163913b54f3af9cd2c0cc972c586554ee32740cec20e9ee0688ef901d2d07fde92081ec5adc0478a301f93d216956aeb33fc204920e90b4b001263a257d4bce4fb0352b8227b3b1922e93f90d92e23549c7162a338fa153644b7a52f4c86e02f7df5a95c093d56c493769e058c1feb046b67a142f2bd5cec5e72b997fc0c712c7585be18ca52fa35659a04c6837f62836c81c452da59191c7e0bfa9f1e0c9f53237e8dea5d0f0c6e5528da9b85a8d2df992455e7f5d39c4402465b64dd297954ed0c462d995efc4c1a608dec06f2b5bd1e62bf969a98a1e493f548351d779303e4ad25795cc971d45972cdcfb7427cc522b8237f06db2abdc3b954e38798f2cb9644299f9f785304ab612a4154bdf293b6e7e44d2766553046d39e34f92748b923bc9ea4d826b06c5e04704d2263356d212849c423d24db1a76977322152518d50ce019923e25cb060a8ddd1b88dfab54e6657f00e1b44a3a57e6ff4f133d32efd975b2dbc99df352066fd0a7483a51d277657e90468e75f5d021cb8dccf4449469388d23bc19cbf2b9926c6ae86cc2ba673d8645de3c816536afc295524f1a15e309be5a92753a16a1f31e2c4b6717b22919ff0a700916f9145ade26087955f702ebb3f3252cf237ab02d3152c4dec252c7a77015618e965e04df7bb4e4c69baa915c66ec622995bb12a2463b0fac3d3b0d0acd9583d9ee958664e5605208415e7b81897969775c85b2e01759e124cc63a749c4563e96321a816485e8b29c01a2cdd6d23b56a68c3b081af764d1be3fe6d23a7d26f8ec61b814b71b519f28877ccb5d6bf5384562c68f112acd051e93a4e168025c015d892bf3ecf40d7dc85efad0633b124d0d3295753e63cd189a56f5d8e450fe7de81b5e86e1fad5839958b30a32aafe5b66854b0ac9dabb0acab75504cfbdd42975f6f35d81ef87be01398d1b5b56e0bc20cd21f01d7b8ef0bedbb5c0a4147b68533b1aa60d3cb425f1a2c62492237013fc08a4dc4295c9d398aa7c0836a05a16762b6c169eefbc1ba3554308bfe66ccc07b06e829c3c057511e4a3c788a50adbf7b2a564563b0188beb81a7b0fd7d1e66e557ca34f055948f220fded6301a5380b95867f09994a369a38f4dd86cbf171bf487708d9dcb38f0559497b208bc556112d62fe028ac2eef2c6c65c8bb7d9d30e7d2126cb0efc10a32bd4a49677b3d0c0e2a23f094612ca600fb634ab107e6be1d47ba4d2dab451c3a303ffd02ac9ceee3eefb950ca241f731f8288e20726133066be4381dab5f3c03538849d43a9c8dc09463b8c7bf30b77017d6366f1db67c2fc766f452ac52ca52f7ffb768f0a2a92c18dcd4f7034f31aa2dd3dbb0c16f77dfb752bbd4a9607bf87a6cf037b8ef3b71f705837da0873084210c61084388e0ff0196258883af886b960000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "listLayers": {
      "id": 2663,
      "api": {
        "qs": {
          "MaxItems": 50,
          "CompatibleRuntime": "{{parameters.CompatibleRuntime}}"
        },
        "url": "/2018-10-31/layers",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{layerResponse(item)}}",
          "iterate": "{{body.Layers}}"
        },
        "pagination": {
          "qs": {
            "Marker": "{{body.NextMarker}}"
          },
          "condition": "{{ifempty(body.NextMarker, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "listLayers",
      "epoch": null,
      "flags": {},
      "label": "List Layers",
      "scope": [],
      "expect": [
        {
          "name": "CompatibleRuntime",
          "type": "select",
          "label": "Compatible Runtime",
          "options": [
            {
              "label": "nodejs 8.10",
              "value": "nodejs8.10"
            },
            {
              "label": "nodejs 10.x",
              "value": "nodejs10.x"
            },
            {
              "label": "nodejs 12.x",
              "value": "nodejs12.x"
            },
            {
              "label": "java 8",
              "value": "java8"
            },
            {
              "label": "java 11",
              "value": "java11"
            },
            {
              "label": "python 2.7",
              "value": "python2.7"
            },
            {
              "label": "python 3.6",
              "value": "python3.6"
            },
            {
              "label": "python 3.7",
              "value": "python3.7"
            },
            {
              "label": "python 3.8",
              "value": "python3.8"
            },
            {
              "label": "dotnetcore 1.0",
              "value": "dotnetcore1.0"
            },
            {
              "label": "dotnetcore 2.1",
              "value": "dotnetcore2.1"
            },
            {
              "label": "go 1.x",
              "value": "go1.x"
            },
            {
              "label": "ruby 2.5",
              "value": "ruby2.5"
            }
          ]
        },
        {
          "help": "Maximum number of results",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/2018-10-31/layers\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"CompatibleRuntime\": \"{{parameters.CompatibleRuntime}}\",\n        \"MaxItems\": 50\n    },\n    \"response\": {\n        \"output\": \"{{layerResponse(item)}}\",\n        \"iterate\": \"{{body.Layers}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"Marker\": \"{{body.NextMarker}}\"\n        },\n        \"condition\": \"{{ifempty(body.NextMarker, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "LatestMatchingVersion",
          "spec": [
            {
              "name": "CompatibleRuntimes",
              "type": "array",
              "label": "Compatible Runtimes"
            },
            {
              "name": "CreatedDate",
              "time": true,
              "type": "date",
              "label": "Created Date"
            },
            {
              "name": "Description",
              "type": "text",
              "label": "Description"
            },
            {
              "name": "LayerVersionArn",
              "type": "text",
              "label": "Layer Version Arn"
            },
            {
              "name": "LicenseInfo",
              "type": "text",
              "label": "License Info"
            },
            {
              "name": "Version",
              "type": "text",
              "label": "Version"
            }
          ],
          "type": "collection",
          "label": "Latest Matching Version"
        },
        {
          "name": "LayerArn",
          "type": "text",
          "label": "Layer Arn"
        },
        {
          "name": "LayerName",
          "type": "text",
          "label": "Layer Name"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Retireves a list of all AWS Lambda layers.",
      "expectJsonc": "[\n    {\n        \"name\": \"CompatibleRuntime\",\n        \"label\": \"Compatible Runtime\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"nodejs 8.10\",\n                \"value\": \"nodejs8.10\"\n            },\n            {\n                \"label\": \"nodejs 10.x\",\n                \"value\": \"nodejs10.x\"\n            },\n            {\n                \"label\": \"nodejs 12.x\",\n                \"value\": \"nodejs12.x\"\n            },\n            {\n                \"label\": \"java 8\",\n                \"value\": \"java8\"\n            },\n            {\n                \"label\": \"java 11\",\n                \"value\": \"java11\"\n            },\n            {\n                \"label\": \"python 2.7\",\n                \"value\": \"python2.7\"\n            },\n            {\n                \"label\": \"python 3.6\",\n                \"value\": \"python3.6\"\n            },\n            {\n                \"label\": \"python 3.7\",\n                \"value\": \"python3.7\"\n            },\n            {\n                \"label\": \"python 3.8\",\n                \"value\": \"python3.8\"\n            },\n            {\n                \"label\": \"dotnetcore 1.0\",\n                \"value\": \"dotnetcore1.0\"\n            },\n            {\n                \"label\": \"dotnetcore 2.1\",\n                \"value\": \"dotnetcore2.1\"\n            },\n            {\n                \"label\": \"go 1.x\",\n                \"value\": \"go1.x\"\n            },\n            {\n                \"label\": \"ruby 2.5\",\n                \"value\": \"ruby2.5\"\n            }\n        ]\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"default\": 10,\n        \"help\": \"Maximum number of results\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"LatestMatchingVersion\",\n        \"label\": \"Latest Matching Version\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"CompatibleRuntimes\",\n                \"label\": \"Compatible Runtimes\",\n                \"type\": \"array\"\n            },\n            {\n                \"name\": \"CreatedDate\",\n                \"label\": \"Created Date\",\n                \"type\": \"date\",\n                \"time\": true\n            },\n            {\n                \"name\": \"Description\",\n                \"label\": \"Description\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"LayerVersionArn\",\n                \"label\": \"Layer Version Arn\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"LicenseInfo\",\n                \"label\": \"License Info\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"Version\",\n                \"label\": \"Version\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"LayerArn\",\n        \"label\": \"Layer Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LayerName\",\n        \"label\": \"Layer Name\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeApiCall": {
      "id": 2664,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://lambda.{{connection.region}}.amazonaws.com/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "makeApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://lambda.{region}.amazonaws.com`.\ne.g.`/2015-03-31/functions/`",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://lambda.{{connection.region}}.amazonaws.com/{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n\t},\n    \"headers\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n\t},\n\t\"body\": \"{{parameters.body}}\",\n\t\"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n\t\t\t\"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to `https://lambda.{region}.amazonaws.com`.\\ne.g.`/2015-03-31/functions/`\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n\t\t\"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n\t\t\"default\": [\n\t\t\t{\n\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\"value\": \"application/json\"\n\t\t\t}\n\t\t]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAFunction": {
      "id": 2665,
      "api": {
        "url": "/2015-03-31/functions/{{parameters.function}}",
        "method": "GET",
        "response": {
          "output": "{{functionResponse(body.Configuration)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getAFunction",
      "epoch": null,
      "flags": {},
      "label": "Get a Function",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "function",
          "type": "select",
          "label": "Function Name",
          "options": "rpc://listFunctions",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/2015-03-31/functions/{{parameters.function}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": \"{{functionResponse(body.Configuration)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "Description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "TracingConfig",
          "spec": [
            {
              "name": "Mode",
              "type": "text",
              "label": "Mode"
            }
          ],
          "type": "collection",
          "label": "Tracing Config"
        },
        {
          "name": "VpcConfig",
          "spec": [
            {
              "name": "SecurityGroupIds",
              "type": "array",
              "label": "Security Group IDs"
            },
            {
              "name": "SubnetIds",
              "type": "array",
              "label": "Subnet IDs"
            },
            {
              "name": "VpcId",
              "type": "text",
              "label": "Vpc ID"
            }
          ],
          "type": "collection",
          "label": "Vpc Config"
        },
        {
          "name": "RevisionId",
          "type": "text",
          "label": "Revision ID"
        },
        {
          "name": "LastModified",
          "type": "date",
          "label": "Last Modified"
        },
        {
          "name": "FunctionName",
          "type": "text",
          "label": "Function Name"
        },
        {
          "name": "Runtime",
          "type": "text",
          "label": "Runtime"
        },
        {
          "name": "Version",
          "type": "text",
          "label": "Version"
        },
        {
          "name": "LastUpdateStatus",
          "type": "text",
          "label": "Last Update Status"
        },
        {
          "name": "Layers",
          "spec": [
            {
              "name": "Arn",
              "type": "text",
              "label": "Arn"
            },
            {
              "name": "CodeSize",
              "type": "uinteger",
              "label": "Code Size"
            }
          ],
          "type": "array",
          "label": "Layers"
        },
        {
          "name": "FunctionArn",
          "type": "text",
          "label": "Function Arn"
        },
        {
          "name": "KMSKeyArn",
          "type": "text",
          "label": "KMS Key Arn"
        },
        {
          "name": "MemorySize",
          "type": "uinteger",
          "label": "Memory Size"
        },
        {
          "name": "LastUpdateStatusReason",
          "type": "text",
          "label": "Last Update Status Reason"
        },
        {
          "name": "DeadLetterConfig",
          "spec": [
            {
              "name": "TargetArn",
              "type": "text",
              "label": "Target Arn"
            }
          ],
          "type": "collection",
          "label": "Dead Letter Config"
        },
        {
          "name": "Timeout",
          "type": "uinteger",
          "label": "Timeout"
        },
        {
          "name": "Handler",
          "type": "text",
          "label": "Handler"
        },
        {
          "name": "CodeSha256",
          "type": "text",
          "label": "Code Sha 256"
        },
        {
          "name": "Role",
          "type": "text",
          "label": "Role"
        },
        {
          "name": "MasterArn",
          "type": "text",
          "label": "Master Arn"
        },
        {
          "name": "CodeSize",
          "type": "uinteger",
          "label": "Code Size"
        },
        {
          "name": "State",
          "type": "text",
          "label": "State"
        },
        {
          "name": "StateReason",
          "type": "text",
          "label": "State Reason"
        },
        {
          "name": "Environment",
          "spec": [
            {
              "name": "Error",
              "spec": [
                {
                  "name": "ErrorCode",
                  "type": "text",
                  "label": "Error Code"
                },
                {
                  "name": "Message",
                  "type": "text",
                  "label": "Message"
                }
              ],
              "type": "collection",
              "label": "Error"
            },
            {
              "name": "Variables",
              "spec": [],
              "type": "collection",
              "label": "Variables"
            }
          ],
          "type": "collection",
          "label": "Environment"
        },
        {
          "name": "StateReasonCode",
          "type": "text",
          "label": "State Reason Code"
        },
        {
          "name": "LastUpdateStatusReasonCode",
          "type": "text",
          "label": "Last Update Status Reason Code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Gets the information of an AWS Lambda function.",
      "expectJsonc": "[\r\n    {\r\n        \"name\": \"function\",\r\n        \"label\": \"Function Name\",\r\n        \"type\": \"select\",\r\n        \"options\": \"rpc://listFunctions\",\r\n        \"required\": true,\r\n        \"mode\": \"edit\"\r\n    }\r\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"Description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"TracingConfig\",\n        \"label\": \"Tracing Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"Mode\",\n                \"label\": \"Mode\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"VpcConfig\",\n        \"label\": \"Vpc Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"SecurityGroupIds\",\n                \"label\": \"Security Group IDs\",\n                \"type\": \"array\"\n            },\n            {\n                \"name\": \"SubnetIds\",\n                \"label\": \"Subnet IDs\",\n                \"type\": \"array\"\n            },\n            {\n                \"name\": \"VpcId\",\n                \"label\": \"Vpc ID\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"RevisionId\",\n        \"label\": \"Revision ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastModified\",\n        \"label\": \"Last Modified\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"FunctionName\",\n        \"label\": \"Function Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Runtime\",\n        \"label\": \"Runtime\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Version\",\n        \"label\": \"Version\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastUpdateStatus\",\n        \"label\": \"Last Update Status\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Layers\",\n        \"label\": \"Layers\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"Arn\",\n                \"label\": \"Arn\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"CodeSize\",\n                \"label\": \"Code Size\",\n                \"type\": \"uinteger\"\n            }\n        ]\n    },\n    {\n        \"name\": \"FunctionArn\",\n        \"label\": \"Function Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"KMSKeyArn\",\n        \"label\": \"KMS Key Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"MemorySize\",\n        \"label\": \"Memory Size\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"LastUpdateStatusReason\",\n        \"label\": \"Last Update Status Reason\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"DeadLetterConfig\",\n        \"label\": \"Dead Letter Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"TargetArn\",\n                \"label\": \"Target Arn\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"Timeout\",\n        \"label\": \"Timeout\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"Handler\",\n        \"label\": \"Handler\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"CodeSha256\",\n        \"label\": \"Code Sha 256\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Role\",\n        \"label\": \"Role\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"MasterArn\",\n        \"label\": \"Master Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"CodeSize\",\n        \"label\": \"Code Size\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"State\",\n        \"label\": \"State\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"StateReason\",\n        \"label\": \"State Reason\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Environment\",\n        \"label\": \"Environment\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"Error\",\n                \"label\": \"Error\",\n                \"type\": \"collection\",\n                \"spec\": [\n                    {\n                        \"name\": \"ErrorCode\",\n                        \"label\": \"Error Code\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"name\": \"Message\",\n                        \"label\": \"Message\",\n                        \"type\": \"text\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"Variables\",\n                \"label\": \"Variables\",\n                \"type\": \"collection\",\n                \"spec\": []\n            }\n        ]\n    },\n    {\n        \"name\": \"StateReasonCode\",\n        \"label\": \"State Reason Code\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastUpdateStatusReasonCode\",\n        \"label\": \"Last Update Status Reason Code\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listFunctions": {
      "id": 2666,
      "api": {
        "qs": {
          "MaxItems": 1000,
          "FunctionVersion": "ALL"
        },
        "url": "/2015-03-31/functions/",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{functionResponse(item)}}",
          "iterate": "{{body.Functions}}"
        },
        "pagination": {
          "qs": {
            "Marker": "{{body.NextMarker}}"
          },
          "condition": "{{ifempty(body.NextMarker, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "listFunctions",
      "epoch": null,
      "flags": {},
      "label": "List Functions",
      "scope": [],
      "expect": [
        {
          "help": "Maximum number of results",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/2015-03-31/functions/\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"FunctionVersion\": \"ALL\",\n        \"MaxItems\": 1000\n    },\n    \"response\": {\n        \"output\": \"{{functionResponse(item)}}\",\n        \"iterate\": \"{{body.Functions}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"Marker\": \"{{body.NextMarker}}\"\n        },\n        \"condition\": \"{{ifempty(body.NextMarker, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "Description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "TracingConfig",
          "spec": [
            {
              "name": "Mode",
              "type": "text",
              "label": "Mode"
            }
          ],
          "type": "collection",
          "label": "Tracing Config"
        },
        {
          "name": "VpcConfig",
          "spec": [
            {
              "name": "SecurityGroupIds",
              "type": "array",
              "label": "Security Group IDs"
            },
            {
              "name": "SubnetIds",
              "type": "array",
              "label": "Subnet IDs"
            },
            {
              "name": "VpcId",
              "type": "text",
              "label": "Vpc ID"
            }
          ],
          "type": "collection",
          "label": "Vpc Config"
        },
        {
          "name": "RevisionId",
          "type": "text",
          "label": "Revision ID"
        },
        {
          "name": "LastModified",
          "type": "date",
          "label": "Last Modified"
        },
        {
          "name": "FunctionName",
          "type": "text",
          "label": "Function Name"
        },
        {
          "name": "Runtime",
          "type": "text",
          "label": "Runtime"
        },
        {
          "name": "Version",
          "type": "text",
          "label": "Version"
        },
        {
          "name": "LastUpdateStatus",
          "type": "text",
          "label": "Last Update Status"
        },
        {
          "name": "Layers",
          "spec": [
            {
              "name": "Arn",
              "type": "text",
              "label": "Arn"
            },
            {
              "name": "CodeSize",
              "type": "uinteger",
              "label": "Code Size"
            }
          ],
          "type": "array",
          "label": "Layers"
        },
        {
          "name": "FunctionArn",
          "type": "text",
          "label": "Function Arn"
        },
        {
          "name": "KMSKeyArn",
          "type": "text",
          "label": "KMS Key Arn"
        },
        {
          "name": "MemorySize",
          "type": "uinteger",
          "label": "Memory Size"
        },
        {
          "name": "LastUpdateStatusReason",
          "type": "text",
          "label": "Last Update Status Reason"
        },
        {
          "name": "DeadLetterConfig",
          "spec": [
            {
              "name": "TargetArn",
              "type": "text",
              "label": "Target Arn"
            }
          ],
          "type": "collection",
          "label": "Dead Letter Config"
        },
        {
          "name": "Timeout",
          "type": "uinteger",
          "label": "Timeout"
        },
        {
          "name": "Handler",
          "type": "text",
          "label": "Handler"
        },
        {
          "name": "CodeSha256",
          "type": "text",
          "label": "Code Sha 256"
        },
        {
          "name": "Role",
          "type": "text",
          "label": "Role"
        },
        {
          "name": "MasterArn",
          "type": "text",
          "label": "Master Arn"
        },
        {
          "name": "CodeSize",
          "type": "uinteger",
          "label": "Code Size"
        },
        {
          "name": "State",
          "type": "text",
          "label": "State"
        },
        {
          "name": "StateReason",
          "type": "text",
          "label": "State Reason"
        },
        {
          "name": "Environment",
          "spec": [
            {
              "name": "Error",
              "spec": [
                {
                  "name": "ErrorCode",
                  "type": "text",
                  "label": "Error Code"
                },
                {
                  "name": "Message",
                  "type": "text",
                  "label": "Message"
                }
              ],
              "type": "collection",
              "label": "Error"
            },
            {
              "name": "Variables",
              "spec": [],
              "type": "collection",
              "label": "Variables"
            }
          ],
          "type": "collection",
          "label": "Environment"
        },
        {
          "name": "StateReasonCode",
          "type": "text",
          "label": "State Reason Code"
        },
        {
          "name": "LastUpdateStatusReasonCode",
          "type": "text",
          "label": "Last Update Status Reason Code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Retrieves a list of all AWS Lambda functions.",
      "expectJsonc": "[\r\n    {\r\n        \"name\": \"limit\",\r\n        \"label\": \"Limit\",\r\n        \"type\": \"uinteger\",\r\n        \"default\": 10,\r\n        \"help\": \"Maximum number of results\"\r\n    }\r\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"Description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"TracingConfig\",\n        \"label\": \"Tracing Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"Mode\",\n                \"label\": \"Mode\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"VpcConfig\",\n        \"label\": \"Vpc Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"SecurityGroupIds\",\n                \"label\": \"Security Group IDs\",\n                \"type\": \"array\"\n            },\n            {\n                \"name\": \"SubnetIds\",\n                \"label\": \"Subnet IDs\",\n                \"type\": \"array\"\n            },\n            {\n                \"name\": \"VpcId\",\n                \"label\": \"Vpc ID\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"RevisionId\",\n        \"label\": \"Revision ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastModified\",\n        \"label\": \"Last Modified\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"FunctionName\",\n        \"label\": \"Function Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Runtime\",\n        \"label\": \"Runtime\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Version\",\n        \"label\": \"Version\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastUpdateStatus\",\n        \"label\": \"Last Update Status\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Layers\",\n        \"label\": \"Layers\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"Arn\",\n                \"label\": \"Arn\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"CodeSize\",\n                \"label\": \"Code Size\",\n                \"type\": \"uinteger\"\n            }\n        ]\n    },\n    {\n        \"name\": \"FunctionArn\",\n        \"label\": \"Function Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"KMSKeyArn\",\n        \"label\": \"KMS Key Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"MemorySize\",\n        \"label\": \"Memory Size\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"LastUpdateStatusReason\",\n        \"label\": \"Last Update Status Reason\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"DeadLetterConfig\",\n        \"label\": \"Dead Letter Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"TargetArn\",\n                \"label\": \"Target Arn\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"Timeout\",\n        \"label\": \"Timeout\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"Handler\",\n        \"label\": \"Handler\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"CodeSha256\",\n        \"label\": \"Code Sha 256\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Role\",\n        \"label\": \"Role\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"MasterArn\",\n        \"label\": \"Master Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"CodeSize\",\n        \"label\": \"Code Size\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"State\",\n        \"label\": \"State\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"StateReason\",\n        \"label\": \"State Reason\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Environment\",\n        \"label\": \"Environment\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"Error\",\n                \"label\": \"Error\",\n                \"type\": \"collection\",\n                \"spec\": [\n                    {\n                        \"name\": \"ErrorCode\",\n                        \"label\": \"Error Code\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"name\": \"Message\",\n                        \"label\": \"Message\",\n                        \"type\": \"text\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"Variables\",\n                \"label\": \"Variables\",\n                \"type\": \"collection\",\n                \"spec\": []\n            }\n        ]\n    },\n    {\n        \"name\": \"StateReasonCode\",\n        \"label\": \"State Reason Code\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastUpdateStatusReasonCode\",\n        \"label\": \"Last Update Status Reason Code\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchFunctions": {
      "id": 2667,
      "api": {
        "qs": {
          "MaxItems": 1000,
          "FunctionVersion": "ALL"
        },
        "url": "/2015-03-31/functions/",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{functionResponse(item)}}",
          "iterate": "{{body.Functions}}",
          "trigger": {
            "id": "{{item.FunctionArn}}",
            "date": "{{parseDate(item.LastModified)}}",
            "type": "date",
            "order": "desc"
          }
        },
        "pagination": {
          "qs": {
            "Marker": "{{body.NextMarker}}"
          },
          "condition": "{{ifempty(body.NextMarker, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "watchFunctions",
      "epoch": {
        "response": {
          "limit": 1000,
          "output": {
            "date": "{{parseDate(item.LastModified)}}",
            "label": "{{item.FunctionName}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Functions",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/2015-03-31/functions/\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"FunctionVersion\": \"ALL\",\n        \"MaxItems\": 1000\n    },\n    \"response\": {\n        \"iterate\": \"{{body.Functions}}\",\n        \"trigger\": {\n            \"id\": \"{{item.FunctionArn}}\",\n            \"date\": \"{{parseDate(item.LastModified)}}\",\n            \"type\": \"date\",\n            \"order\": \"desc\"\n        },\n        \"output\": \"{{functionResponse(item)}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"Marker\": \"{{body.NextMarker}}\"\n        },\n        \"condition\": \"{{ifempty(body.NextMarker, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "Description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "TracingConfig",
          "spec": [
            {
              "name": "Mode",
              "type": "text",
              "label": "Mode"
            }
          ],
          "type": "collection",
          "label": "Tracing Config"
        },
        {
          "name": "VpcConfig",
          "spec": [
            {
              "name": "SecurityGroupIds",
              "type": "array",
              "label": "Security Group IDs"
            },
            {
              "name": "SubnetIds",
              "type": "array",
              "label": "Subnet IDs"
            },
            {
              "name": "VpcId",
              "type": "text",
              "label": "Vpc ID"
            }
          ],
          "type": "collection",
          "label": "Vpc Config"
        },
        {
          "name": "RevisionId",
          "type": "text",
          "label": "Revision ID"
        },
        {
          "name": "LastModified",
          "type": "date",
          "label": "Last Modified"
        },
        {
          "name": "FunctionName",
          "type": "text",
          "label": "Function Name"
        },
        {
          "name": "Runtime",
          "type": "text",
          "label": "Runtime"
        },
        {
          "name": "Version",
          "type": "text",
          "label": "Version"
        },
        {
          "name": "LastUpdateStatus",
          "type": "text",
          "label": "Last Update Status"
        },
        {
          "name": "Layers",
          "spec": [
            {
              "name": "Arn",
              "type": "text",
              "label": "Arn"
            },
            {
              "name": "CodeSize",
              "type": "uinteger",
              "label": "Code Size"
            }
          ],
          "type": "array",
          "label": "Layers"
        },
        {
          "name": "FunctionArn",
          "type": "text",
          "label": "Function Arn"
        },
        {
          "name": "KMSKeyArn",
          "type": "text",
          "label": "KMS Key Arn"
        },
        {
          "name": "MemorySize",
          "type": "uinteger",
          "label": "Memory Size"
        },
        {
          "name": "LastUpdateStatusReason",
          "type": "text",
          "label": "Last Update Status Reason"
        },
        {
          "name": "DeadLetterConfig",
          "spec": [
            {
              "name": "TargetArn",
              "type": "text",
              "label": "Target Arn"
            }
          ],
          "type": "collection",
          "label": "Dead Letter Config"
        },
        {
          "name": "Timeout",
          "type": "uinteger",
          "label": "Timeout"
        },
        {
          "name": "Handler",
          "type": "text",
          "label": "Handler"
        },
        {
          "name": "CodeSha256",
          "type": "text",
          "label": "Code Sha 256"
        },
        {
          "name": "Role",
          "type": "text",
          "label": "Role"
        },
        {
          "name": "MasterArn",
          "type": "text",
          "label": "Master Arn"
        },
        {
          "name": "CodeSize",
          "type": "uinteger",
          "label": "Code Size"
        },
        {
          "name": "State",
          "type": "text",
          "label": "State"
        },
        {
          "name": "StateReason",
          "type": "text",
          "label": "State Reason"
        },
        {
          "name": "Environment",
          "spec": [
            {
              "name": "Error",
              "spec": [
                {
                  "name": "ErrorCode",
                  "type": "text",
                  "label": "Error Code"
                },
                {
                  "name": "Message",
                  "type": "text",
                  "label": "Message"
                }
              ],
              "type": "collection",
              "label": "Error"
            },
            {
              "name": "Variables",
              "spec": [],
              "type": "collection",
              "label": "Variables"
            }
          ],
          "type": "collection",
          "label": "Environment"
        },
        {
          "name": "StateReasonCode",
          "type": "text",
          "label": "State Reason Code"
        },
        {
          "name": "LastUpdateStatusReasonCode",
          "type": "text",
          "label": "Last Update Status Reason Code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 1000,\n        \"output\": {\n            \"date\": \"{{parseDate(item.LastModified)}}\",\n            \"label\": \"{{item.FunctionName}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Triggers when a function is last updated.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"Description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"TracingConfig\",\n        \"label\": \"Tracing Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"Mode\",\n                \"label\": \"Mode\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"VpcConfig\",\n        \"label\": \"Vpc Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"SecurityGroupIds\",\n                \"label\": \"Security Group IDs\",\n                \"type\": \"array\"\n            },\n            {\n                \"name\": \"SubnetIds\",\n                \"label\": \"Subnet IDs\",\n                \"type\": \"array\"\n            },\n            {\n                \"name\": \"VpcId\",\n                \"label\": \"Vpc ID\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"RevisionId\",\n        \"label\": \"Revision ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastModified\",\n        \"label\": \"Last Modified\",\n        \"type\": \"date\"\n    },\n    {\n        \"name\": \"FunctionName\",\n        \"label\": \"Function Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Runtime\",\n        \"label\": \"Runtime\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Version\",\n        \"label\": \"Version\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastUpdateStatus\",\n        \"label\": \"Last Update Status\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Layers\",\n        \"label\": \"Layers\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"Arn\",\n                \"label\": \"Arn\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"CodeSize\",\n                \"label\": \"Code Size\",\n                \"type\": \"uinteger\"\n            }\n        ]\n    },\n    {\n        \"name\": \"FunctionArn\",\n        \"label\": \"Function Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"KMSKeyArn\",\n        \"label\": \"KMS Key Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"MemorySize\",\n        \"label\": \"Memory Size\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"LastUpdateStatusReason\",\n        \"label\": \"Last Update Status Reason\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"DeadLetterConfig\",\n        \"label\": \"Dead Letter Config\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"TargetArn\",\n                \"label\": \"Target Arn\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"Timeout\",\n        \"label\": \"Timeout\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"Handler\",\n        \"label\": \"Handler\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"CodeSha256\",\n        \"label\": \"Code Sha 256\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Role\",\n        \"label\": \"Role\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"MasterArn\",\n        \"label\": \"Master Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"CodeSize\",\n        \"label\": \"Code Size\",\n        \"type\": \"uinteger\"\n    },\n    {\n        \"name\": \"State\",\n        \"label\": \"State\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"StateReason\",\n        \"label\": \"State Reason\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Environment\",\n        \"label\": \"Environment\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"Error\",\n                \"label\": \"Error\",\n                \"type\": \"collection\",\n                \"spec\": [\n                    {\n                        \"name\": \"ErrorCode\",\n                        \"label\": \"Error Code\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"name\": \"Message\",\n                        \"label\": \"Message\",\n                        \"type\": \"text\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"Variables\",\n                \"label\": \"Variables\",\n                \"type\": \"collection\",\n                \"spec\": []\n            }\n        ]\n    },\n    {\n        \"name\": \"StateReasonCode\",\n        \"label\": \"State Reason Code\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LastUpdateStatusReasonCode\",\n        \"label\": \"Last Update Status Reason Code\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "invokeAFunction": {
      "id": 2668,
      "api": {
        "url": "/2015-03-31/functions/{{parameters.function}}/invocations",
        "body": "{{if(parameters.body, parseJSON(parameters.body), undefined)}}",
        "method": "POST",
        "headers": {
          "X-Amz-Log-Type": "Tail",
          "X-Amz-Invocation-Type": "{{parameters.InvocationType}}"
        },
        "timeout": 120000,
        "response": {
          "error": {
            "200": {
              "message": "{{body.errorMessage if(body.trace, if(length(body.trace)>0, '\n' +'Stack Trace: \n ◼ '+ join(body.trace, '\n ◼ ', '')), if(length(body.stackTrace)>0, '\n' +'Stack Trace: \n ◼ '+ join(body.stackTrace, '\n ◼ ', ''))) }}"
            },
            "403": {
              "message": "[403] Unable to determine service/operation name to be authorized."
            },
            "message": "[{{statusCode}}] {{body.message}}"
          },
          "valid": "{{if(headers['x-amz-function-error'], false, true)}}",
          "output": {
            "body": "{{body}}"
          }
        }
      },
      "rev": 4,
      "crud": "create",
      "name": "invokeAFunction",
      "epoch": null,
      "flags": {},
      "label": "Invoke a Function",
      "scope": [],
      "expect": [
        {
          "name": "function",
          "type": "select",
          "label": "Function Name",
          "options": "rpc://listFunctions",
          "required": true
        },
        {
          "help": "`Request Response`: Invoke the function synchronously.\n`Event`: Invoke the function asynchronously.\n`Dry Run`: Validate parameter values and verify that the user or role has permission to invoke the function.",
          "name": "InvocationType",
          "type": "select",
          "label": "Invocation Type",
          "options": [
            {
              "label": "Request Response",
              "value": "RequestResponse",
              "default": true
            },
            {
              "label": "Event",
              "value": "Event"
            },
            {
              "label": "Dry Run",
              "value": "DryRun"
            }
          ],
          "required": true
        },
        {
          "help": "The JSON format that you want to provide to your Lambda function as input, e.g. { \"key\": \"value\" }",
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/2015-03-31/functions/{{parameters.function}}/invocations\",\n    \"method\": \"POST\",\n    \"body\": \"{{if(parameters.body, parseJSON(parameters.body), undefined)}}\",\n    \"headers\": {\n        \"X-Amz-Invocation-Type\": \"{{parameters.InvocationType}}\",\n        \"X-Amz-Log-Type\": \"Tail\"\n    },\n    \"timeout\": 120000,\n    \"response\": {\n        \"output\": {\n            \"body\": \"{{body}}\"\n        },\n        \"valid\": \"{{if(headers['x-amz-function-error'], false, true)}}\",\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.message}}\",\n            \"403\": {\n                \"message\": \"[403] Unable to determine service/operation name to be authorized.\"\n            },\n            \"200\": {\n                \"message\": \"{{body.errorMessage if(body.trace, if(length(body.trace)>0, '\\n' +'Stack Trace: \\n ◼ '+ join(body.trace, '\\n ◼ ', '')), if(length(body.stackTrace)>0, '\\n' +'Stack Trace: \\n ◼ '+ join(body.stackTrace, '\\n ◼ ', ''))) }}\"\n            }\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Invokes a AWS Lambda function synchronously or asynchronously.",
      "expectJsonc": "[\n    {\n        \"name\": \"function\",\n        \"label\": \"Function Name\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listFunctions\",\n        \"required\": true\n    },\n    {\n        \"name\": \"InvocationType\",\n        \"label\": \"Invocation Type\",\n        \"required\": true,\n        \"help\": \"`Request Response`: Invoke the function synchronously.\\n`Event`: Invoke the function asynchronously.\\n`Dry Run`: Validate parameter values and verify that the user or role has permission to invoke the function.\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Request Response\",\n                \"value\": \"RequestResponse\",\n                \"default\": true\n            },\n            {\n                \"label\": \"Event\",\n                \"value\": \"Event\"\n            },\n            {\n                \"label\": \"Dry Run\",\n                \"value\": \"DryRun\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\",\n        \"help\": \"The JSON format that you want to provide to your Lambda function as input, e.g. { \\\"key\\\": \\\"value\\\" }\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getALayerVersion": {
      "id": 2669,
      "api": {
        "url": "/2018-10-31/layers/{{parameters.layer}}/versions/{{parameters.version}}",
        "method": "GET",
        "response": {
          "output": "{{layerVersionResponse(body)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getALayerVersion",
      "epoch": null,
      "flags": {},
      "label": "Get a Layer Version",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "layer",
          "type": "select",
          "label": "Layer Name",
          "options": {
            "store": "rpc://listLayer",
            "nested": [
              {
                "name": "version",
                "type": "select",
                "label": "Version",
                "options": "rpc://listLayerVersions",
                "required": true
              }
            ]
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/2018-10-31/layers/{{parameters.layer}}/versions/{{parameters.version}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": \"{{layerVersionResponse(body)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "CompatibleRuntimes",
          "type": "array",
          "label": "Compatible Runtimes"
        },
        {
          "name": "CreatedDate",
          "time": true,
          "type": "date",
          "label": "Created Date"
        },
        {
          "name": "Description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "LayerVersionArn",
          "type": "text",
          "label": "Layer Version Arn"
        },
        {
          "name": "LicenseInfo",
          "type": "text",
          "label": "License Info"
        },
        {
          "name": "Version",
          "type": "text",
          "label": "Version"
        },
        {
          "name": "LayerArn",
          "type": "text",
          "label": "Layer Arn"
        },
        {
          "name": "Content",
          "spec": [
            {
              "name": "CodeSha256",
              "type": "text",
              "label": "Code Sha 256"
            },
            {
              "name": "CodeSize",
              "type": "uinteger",
              "label": "Code Size"
            },
            {
              "name": "Location",
              "type": "text",
              "label": "Location"
            },
            {
              "name": "UncompressedCodeSize",
              "type": "uinteger",
              "label": "Uncompressed Code Size"
            }
          ],
          "type": "collection",
          "label": "Content"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Gets the information of a version of an AWS Lambda layer.",
      "expectJsonc": "[\n    {\n        \"name\": \"layer\",\n        \"label\": \"Layer Name\",\n        \"type\": \"select\",\n        \"mode\": \"edit\",\n        \"options\": {\n            \"store\": \"rpc://listLayer\",\n            \"nested\": [\n                {\n                    \"name\": \"version\",\n                    \"label\": \"Version\",\n                    \"type\": \"select\",\n                    \"options\": \"rpc://listLayerVersions\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"CompatibleRuntimes\",\n        \"label\": \"Compatible Runtimes\",\n        \"type\": \"array\"\n    },\n    {\n        \"name\": \"CreatedDate\",\n        \"label\": \"Created Date\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"Description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LayerVersionArn\",\n        \"label\": \"Layer Version Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LicenseInfo\",\n        \"label\": \"License Info\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Version\",\n        \"label\": \"Version\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LayerArn\",\n        \"label\": \"Layer Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Content\",\n        \"label\": \"Content\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"CodeSha256\",\n                \"label\": \"Code Sha 256\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"CodeSize\",\n                \"label\": \"Code Size\",\n                \"type\": \"uinteger\"\n            },\n            {\n                \"name\": \"Location\",\n                \"label\": \"Location\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"UncompressedCodeSize\",\n                \"label\": \"Uncompressed Code Size\",\n                \"type\": \"uinteger\"\n            }\n        ]\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listLayerVersions": {
      "id": 2670,
      "api": {
        "qs": {
          "MaxItems": 50,
          "CompatibleRuntime": "{{parameters.CompatibleRuntime}}"
        },
        "url": "/2018-10-31/layers/{{parameters.layer}}/versions",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{layerVersionResponse(item)}}",
          "iterate": "{{body.LayerVersions}}"
        },
        "pagination": {
          "qs": {
            "Marker": "{{body.NextMarker}}"
          },
          "condition": "{{ifempty(body.NextMarker, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "listLayerVersions",
      "epoch": null,
      "flags": {},
      "label": "List Layer Versions",
      "scope": [],
      "expect": [
        {
          "name": "layer",
          "type": "select",
          "label": "Layer Name",
          "options": "rpc://listLayer",
          "required": true
        },
        {
          "name": "CompatibleRuntime",
          "type": "select",
          "label": "Compatible Runtime",
          "options": [
            {
              "label": "nodejs 8.10",
              "value": "nodejs8.10"
            },
            {
              "label": "nodejs 10.x",
              "value": "nodejs10.x"
            },
            {
              "label": "nodejs 12.x",
              "value": "nodejs12.x"
            },
            {
              "label": "java 8",
              "value": "java8"
            },
            {
              "label": "java 11",
              "value": "java11"
            },
            {
              "label": "python 2.7",
              "value": "python2.7"
            },
            {
              "label": "python 3.6",
              "value": "python3.6"
            },
            {
              "label": "python 3.7",
              "value": "python3.7"
            },
            {
              "label": "python 3.8",
              "value": "python3.8"
            },
            {
              "label": "dotnetcore 1.0",
              "value": "dotnetcore1.0"
            },
            {
              "label": "dotnetcore 2.1",
              "value": "dotnetcore2.1"
            },
            {
              "label": "go 1.x",
              "value": "go1.x"
            },
            {
              "label": "ruby 2.5",
              "value": "ruby2.5"
            }
          ]
        },
        {
          "help": "Maximum number of results",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/2018-10-31/layers/{{parameters.layer}}/versions\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"CompatibleRuntime\": \"{{parameters.CompatibleRuntime}}\",\n        \"MaxItems\": 50\n    },\n    \"response\": {\n        \"output\": \"{{layerVersionResponse(item)}}\",\n        \"iterate\": \"{{body.LayerVersions}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"Marker\": \"{{body.NextMarker}}\"\n        },\n        \"condition\": \"{{ifempty(body.NextMarker, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "CompatibleRuntimes",
          "type": "array",
          "label": "Compatible Runtimes"
        },
        {
          "name": "CreatedDate",
          "time": true,
          "type": "date",
          "label": "Created Date"
        },
        {
          "name": "Description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "LayerVersionArn",
          "type": "text",
          "label": "Layer Version Arn"
        },
        {
          "name": "LicenseInfo",
          "type": "text",
          "label": "License Info"
        },
        {
          "name": "Version",
          "type": "text",
          "label": "Version"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Retrieves a list of the versions of an AWS Lambda layer.",
      "expectJsonc": "[\n    {\n        \"name\": \"layer\",\n        \"label\": \"Layer Name\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLayer\",\n        \"required\": true\n    },\n    {\n        \"name\": \"CompatibleRuntime\",\n        \"label\": \"Compatible Runtime\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"nodejs 8.10\",\n                \"value\": \"nodejs8.10\"\n            },\n            {\n                \"label\": \"nodejs 10.x\",\n                \"value\": \"nodejs10.x\"\n            },\n            {\n                \"label\": \"nodejs 12.x\",\n                \"value\": \"nodejs12.x\"\n            },\n            {\n                \"label\": \"java 8\",\n                \"value\": \"java8\"\n            },\n            {\n                \"label\": \"java 11\",\n                \"value\": \"java11\"\n            },\n            {\n                \"label\": \"python 2.7\",\n                \"value\": \"python2.7\"\n            },\n            {\n                \"label\": \"python 3.6\",\n                \"value\": \"python3.6\"\n            },\n            {\n                \"label\": \"python 3.7\",\n                \"value\": \"python3.7\"\n            },\n            {\n                \"label\": \"python 3.8\",\n                \"value\": \"python3.8\"\n            },\n            {\n                \"label\": \"dotnetcore 1.0\",\n                \"value\": \"dotnetcore1.0\"\n            },\n            {\n                \"label\": \"dotnetcore 2.1\",\n                \"value\": \"dotnetcore2.1\"\n            },\n            {\n                \"label\": \"go 1.x\",\n                \"value\": \"go1.x\"\n            },\n            {\n                \"label\": \"ruby 2.5\",\n                \"value\": \"ruby2.5\"\n            }\n        ]\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"default\": 10,\n        \"help\": \"Maximum number of results\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"CompatibleRuntimes\",\n        \"label\": \"Compatible Runtimes\",\n        \"type\": \"array\"\n    },\n    {\n        \"name\": \"CreatedDate\",\n        \"label\": \"Created Date\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"Description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LayerVersionArn\",\n        \"label\": \"Layer Version Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LicenseInfo\",\n        \"label\": \"License Info\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Version\",\n        \"label\": \"Version\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchLayerVersions": {
      "id": 2671,
      "api": {
        "qs": {
          "MaxItems": 50,
          "CompatibleRuntime": "{{parameters.CompatibleRuntime}}"
        },
        "url": "/2018-10-31/layers/{{parameters.layer}}/versions",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{layerVersionResponse(item)}}",
          "iterate": "{{body.LayerVersions}}",
          "trigger": {
            "id": "{{item.LayerVersionArn}}",
            "date": "{{parseDate(item.CreatedDate)}}",
            "type": "date",
            "order": "desc"
          }
        },
        "pagination": {
          "qs": {
            "Marker": "{{body.NextMarker}}"
          },
          "condition": "{{ifempty(body.NextMarker, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "watchLayerVersions",
      "epoch": {
        "response": {
          "limit": 50,
          "output": {
            "date": "{{parseDate(item.CreatedDate)}}",
            "label": "{{item.Version}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Layer Versions",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "amazon-lambda",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/2018-10-31/layers/{{parameters.layer}}/versions\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"CompatibleRuntime\": \"{{parameters.CompatibleRuntime}}\",\n        \"MaxItems\": 50\n    },\n    \"response\": {\n        \"iterate\": \"{{body.LayerVersions}}\",\n        \"trigger\": {\n            \"id\": \"{{item.LayerVersionArn}}\",\n            \"date\": \"{{parseDate(item.CreatedDate)}}\",\n            \"type\": \"date\",\n            \"order\": \"desc\"\n        },\n        \"output\": \"{{layerVersionResponse(item)}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"qs\": {\n            \"Marker\": \"{{body.NextMarker}}\"\n        },\n        \"condition\": \"{{ifempty(body.NextMarker, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "CompatibleRuntimes",
          "type": "array",
          "label": "Compatible Runtimes"
        },
        {
          "name": "CreatedDate",
          "time": true,
          "type": "date",
          "label": "Created Date"
        },
        {
          "name": "Description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "LayerVersionArn",
          "type": "text",
          "label": "Layer Version Arn"
        },
        {
          "name": "LicenseInfo",
          "type": "text",
          "label": "License Info"
        },
        {
          "name": "Version",
          "type": "text",
          "label": "Version"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 50,\n        \"output\": {\n            \"date\": \"{{parseDate(item.CreatedDate)}}\",\n            \"label\": \"{{item.Version}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "name": "layer",
          "type": "select",
          "label": "Layer Name",
          "options": "rpc://listLayer",
          "required": true
        },
        {
          "name": "CompatibleRuntime",
          "type": "select",
          "label": "Compatible Runtime",
          "options": [
            {
              "label": "nodejs 8.10",
              "value": "nodejs8.10"
            },
            {
              "label": "nodejs 10.x",
              "value": "nodejs10.x"
            },
            {
              "label": "nodejs 12.x",
              "value": "nodejs12.x"
            },
            {
              "label": "java 8",
              "value": "java8"
            },
            {
              "label": "java 11",
              "value": "java11"
            },
            {
              "label": "python 2.7",
              "value": "python2.7"
            },
            {
              "label": "python 3.6",
              "value": "python3.6"
            },
            {
              "label": "python 3.7",
              "value": "python3.7"
            },
            {
              "label": "python 3.8",
              "value": "python3.8"
            },
            {
              "label": "dotnetcore 1.0",
              "value": "dotnetcore1.0"
            },
            {
              "label": "dotnetcore 2.1",
              "value": "dotnetcore2.1"
            },
            {
              "label": "go 1.x",
              "value": "go1.x"
            },
            {
              "label": "ruby 2.5",
              "value": "ruby2.5"
            }
          ]
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "amazon-lambda",
      "description": "Triggers when a new version of an AWS Lambda layer is created.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"CompatibleRuntimes\",\n        \"label\": \"Compatible Runtimes\",\n        \"type\": \"array\"\n    },\n    {\n        \"name\": \"CreatedDate\",\n        \"label\": \"Created Date\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"Description\",\n        \"label\": \"Description\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LayerVersionArn\",\n        \"label\": \"Layer Version Arn\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"LicenseInfo\",\n        \"label\": \"License Info\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"Version\",\n        \"label\": \"Version\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n    {\n        \"name\": \"layer\",\n        \"label\": \"Layer Name\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLayer\",\n        \"required\": true\n    },\n    {\n        \"name\": \"CompatibleRuntime\",\n        \"label\": \"Compatible Runtime\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"nodejs 8.10\",\n                \"value\": \"nodejs8.10\"\n            },\n            {\n                \"label\": \"nodejs 10.x\",\n                \"value\": \"nodejs10.x\"\n            },\n            {\n                \"label\": \"nodejs 12.x\",\n                \"value\": \"nodejs12.x\"\n            },\n            {\n                \"label\": \"java 8\",\n                \"value\": \"java8\"\n            },\n            {\n                \"label\": \"java 11\",\n                \"value\": \"java11\"\n            },\n            {\n                \"label\": \"python 2.7\",\n                \"value\": \"python2.7\"\n            },\n            {\n                \"label\": \"python 3.6\",\n                \"value\": \"python3.6\"\n            },\n            {\n                \"label\": \"python 3.7\",\n                \"value\": \"python3.7\"\n            },\n            {\n                \"label\": \"python 3.8\",\n                \"value\": \"python3.8\"\n            },\n            {\n                \"label\": \"dotnetcore 1.0\",\n                \"value\": \"dotnetcore1.0\"\n            },\n            {\n                \"label\": \"dotnetcore 2.1\",\n                \"value\": \"dotnetcore2.1\"\n            },\n            {\n                \"label\": \"go 1.x\",\n                \"value\": \"go1.x\"\n            },\n            {\n                \"label\": \"ruby 2.5\",\n                \"value\": \"ruby2.5\"\n            }\n        ]\n    },\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "amazon-lambda": {
      "api": {
        "aws": {
          "key": "{{connection.key}}",
          "secret": "{{connection.secret}}",
          "sign_version": "4"
        },
        "log": {
          "sanitize": []
        },
        "url": "https://lambda.{{connection.region}}.amazonaws.com/2015-03-31/functions/",
        "response": {
          "error": {
            "message": "[{{statusCode}}] {{body.message}}"
          },
          "limit": 1
        }
      },
      "rev": 6,
      "name": "amazon-lambda",
      "type": "basic",
      "label": "Amazon Lambda",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "amazon-lambda",
      "install": {},
      "apiJsonc": "{\n    \"url\": \"https://lambda.{{connection.region}}.amazonaws.com/2015-03-31/functions/\",\n    \"aws\": {\n        \"key\": \"{{connection.key}}\",\n        \"secret\": \"{{connection.secret}}\",\n        \"sign_version\": \"4\"\n    },\n    \"log\": {\n        \"sanitize\": []\n    },\n    \"response\": {\n        \"limit\": 1,\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.message}}\"\n        }\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "key",
          "type": "text",
          "label": "AWS Key",
          "editable": true,
          "required": true
        },
        {
          "name": "secret",
          "type": "password",
          "label": "AWS Secret Key",
          "editable": true,
          "required": true
        },
        {
          "name": "region",
          "type": "select",
          "label": "Region",
          "options": [
            {
              "label": "US East (N. Virginia)",
              "value": "us-east-1",
              "default": true
            },
            {
              "label": "US East (Ohio)",
              "value": "us-east-2"
            },
            {
              "label": "US West (N. California)",
              "value": "us-west-1"
            },
            {
              "label": "US West (Oregon)",
              "value": "us-west-2"
            },
            {
              "label": "Africa (Cape Town)",
              "value": "af-south-1"
            },
            {
              "label": "Asia Pacific (Hong Kong)",
              "value": "ap-east-1"
            },
            {
              "label": "Asia Pacific (Hyderabad)",
              "value": "ap-south-2"
            },
            {
              "label": "Asia Pacific (Jakarta)",
              "value": "ap-southeast-3"
            },
            {
              "label": "Asia Pacific (Malaysia)",
              "value": "ap-southeast-5"
            },
            {
              "label": "Asia Pacific (Melbourne)",
              "value": "ap-southeast-4"
            },
            {
              "label": "Asia Pacific (Mumbai)",
              "value": "ap-south-1"
            },
            {
              "label": "Asia Pacific (Osaka)",
              "value": "ap-northeast-3"
            },
            {
              "label": "Asia Pacific (Seoul)",
              "value": "ap-northeast-2"
            },
            {
              "label": "Asia Pacific (Singapore)",
              "value": "ap-southeast-1"
            },
            {
              "label": "Asia Pacific (Sydney)",
              "value": "ap-southeast-2"
            },
            {
              "label": "Asia Pacific (Thailand)",
              "value": "ap-southeast-7"
            },
            {
              "label": "Asia Pacific (Tokyo)",
              "value": "ap-northeast-1"
            },
            {
              "label": "Canada (Central)",
              "value": "ca-central-1"
            },
            {
              "label": "Canada West (Calgary)",
              "value": "ca-west-1"
            },
            {
              "label": "EU (Frankfurt)",
              "value": "eu-central-1"
            },
            {
              "label": "EU (Ireland)",
              "value": "eu-west-1"
            },
            {
              "label": "EU (London)",
              "value": "eu-west-2"
            },
            {
              "label": "EU (Milan)",
              "value": "eu-south-1"
            },
            {
              "label": "EU (Paris)",
              "value": "eu-west-3"
            },
            {
              "label": "EU (Spain)",
              "value": "eu-south-2"
            },
            {
              "label": "EU (Stockholm)",
              "value": "eu-north-1"
            },
            {
              "label": "EU (Zurich)",
              "value": "eu-central-2"
            },
            {
              "label": "Israel (Tel Aviv)",
              "value": "il-central-1"
            },
            {
              "label": "Mexico (Central)",
              "value": "mx-central-1"
            },
            {
              "label": "Middle East (Bahrain)",
              "value": "me-south-1"
            },
            {
              "label": "Middle East (UAE)",
              "value": "me-central-1"
            },
            {
              "label": "South America (Sao Paulo)",
              "value": "sa-east-1"
            },
            {
              "label": "AWS GovCloud (US-East)",
              "value": "us-gov-east-1"
            },
            {
              "label": "AWS GovCloud (US-West)",
              "value": "us-gov-west-1"
            }
          ],
          "editable": true,
          "mappable": true,
          "required": true,
          "validate": false
        }
      ],
      "scopeJsonc": "[\n]",
      "installSpec": [],
      "scopesJsonc": "{\n}",
      "installJsonc": "{\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"key\",\n        \"type\": \"text\",\n        \"label\": \"AWS Key\",\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"name\": \"secret\",\n        \"type\": \"password\",\n        \"label\": \"AWS Secret Key\",\n        \"editable\": true,\n        \"required\": true\n    },\n    {\n        \"name\": \"region\",\n        \"label\": \"Region\",\n        \"type\": \"select\",\n        \"editable\": true,\n        \"required\": true,\n        \"mappable\": true,\n        \"validate\": false,\n        \"options\": [\n            {\n                \"label\": \"US East (N. Virginia)\",\n                \"value\": \"us-east-1\",\n                \"default\": true\n            },\n            {\n                \"label\": \"US East (Ohio)\",\n                \"value\": \"us-east-2\"\n            },\n            {\n                \"label\": \"US West (N. California)\",\n                \"value\": \"us-west-1\"\n            },\n            {\n                \"label\": \"US West (Oregon)\",\n                \"value\": \"us-west-2\"\n            },\n            {\n                \"label\": \"Africa (Cape Town)\",\n                \"value\": \"af-south-1\"\n            },\n            {\n                \"label\": \"Asia Pacific (Hong Kong)\",\n                \"value\": \"ap-east-1\"\n            },\n            {\n                \"label\": \"Asia Pacific (Hyderabad)\",\n                \"value\": \"ap-south-2\"\n            },\n            {\n                \"label\": \"Asia Pacific (Jakarta)\",\n                \"value\": \"ap-southeast-3\"\n            },\n            {\n                \"label\": \"Asia Pacific (Malaysia)\",\n                \"value\": \"ap-southeast-5\"\n            },\n            {\n                \"label\": \"Asia Pacific (Melbourne)\",\n                \"value\": \"ap-southeast-4\"\n            },\n            {\n                \"label\": \"Asia Pacific (Mumbai)\",\n                \"value\": \"ap-south-1\"\n            },\n            {\n                \"label\": \"Asia Pacific (Osaka)\",\n                \"value\": \"ap-northeast-3\"\n            },\n            {\n                \"label\": \"Asia Pacific (Seoul)\",\n                \"value\": \"ap-northeast-2\"\n            },\n            {\n                \"label\": \"Asia Pacific (Singapore)\",\n                \"value\": \"ap-southeast-1\"\n            },\n            {\n                \"label\": \"Asia Pacific (Sydney)\",\n                \"value\": \"ap-southeast-2\"\n            },\n            {\n                \"label\": \"Asia Pacific (Thailand)\",\n                \"value\": \"ap-southeast-7\"\n            },\n            {\n                \"label\": \"Asia Pacific (Tokyo)\",\n                \"value\": \"ap-northeast-1\"\n            },\n            {\n                \"label\": \"Canada (Central)\",\n                \"value\": \"ca-central-1\"\n            },\n            {\n                \"label\": \"Canada West (Calgary)\",\n                \"value\": \"ca-west-1\"\n            },\n            {\n                \"label\": \"EU (Frankfurt)\",\n                \"value\": \"eu-central-1\"\n            },\n            {\n                \"label\": \"EU (Ireland)\",\n                \"value\": \"eu-west-1\"\n            },\n            {\n                \"label\": \"EU (London)\",\n                \"value\": \"eu-west-2\"\n            },\n            {\n                \"label\": \"EU (Milan)\",\n                \"value\": \"eu-south-1\"\n            },\n            {\n                \"label\": \"EU (Paris)\",\n                \"value\": \"eu-west-3\"\n            },\n            {\n                \"label\": \"EU (Spain)\",\n                \"value\": \"eu-south-2\"\n            },\n            {\n                \"label\": \"EU (Stockholm)\",\n                \"value\": \"eu-north-1\"\n            },\n            {\n                \"label\": \"EU (Zurich)\",\n                \"value\": \"eu-central-2\"\n            },\n            {\n                \"label\": \"Israel (Tel Aviv)\",\n                \"value\": \"il-central-1\"\n            },\n            {\n                \"label\": \"Mexico (Central)\",\n                \"value\": \"mx-central-1\"\n            },\n            {\n                \"label\": \"Middle East (Bahrain)\",\n                \"value\": \"me-south-1\"\n            },\n            {\n                \"label\": \"Middle East (UAE)\",\n                \"value\": \"me-central-1\"\n            },\n            {\n                \"label\": \"South America (Sao Paulo)\",\n                \"value\": \"sa-east-1\"\n            },\n            {\n                \"label\": \"AWS GovCloud (US-East)\",\n                \"value\": \"us-gov-east-1\"\n            },\n            {\n                \"label\": \"AWS GovCloud (US-West)\",\n                \"value\": \"us-gov-west-1\"\n            }\n        ]\n    }\n]",
      "installSpecJsonc": "[\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"https://lambda.{{connection.region}}.amazonaws.com\",\n    \"aws\": {\n        \"key\": \"{{connection.key}}\",\n        \"secret\": \"{{connection.secret}}\",\n        \"sign_version\": \"4\"\n    },\n    \"log\": {\n        \"sanitize\": []\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.message}}\",\n            \"403\": {\n                \"message\": \"[403] Unable to determine service/operation name to be authorized.\"\n            }\n        }\n    }\n}",
  "countries": null,
  "_functions": {
    "parseJSON": {
      "rev": 2,
      "code": "function parseJSON(param) {\n\n    return JSON.parse(param);\n\n}",
      "name": "parseJSON",
      "test": null,
      "appName": "amazon-lambda",
      "arguments": "(param)",
      "appVersion": 1
    },
    "layerResponse": {
      "rev": 2,
      "code": "function layerResponse(item) {\n\n    item.LatestMatchingVersion.CreatedDate = iml.parseDate(item.LatestMatchingVersion.CreatedDate);\n\n    return item;\n\n}",
      "name": "layerResponse",
      "test": null,
      "appName": "amazon-lambda",
      "arguments": "(item)",
      "appVersion": 1
    },
    "functionResponse": {
      "rev": 2,
      "code": "function functionResponse(item) {\n\n    item.LastModified = iml.parseDate(item.LastModified);\n\n    return item;\n\n}",
      "name": "functionResponse",
      "test": null,
      "appName": "amazon-lambda",
      "arguments": "(item)",
      "appVersion": 1
    },
    "layerVersionResponse": {
      "rev": 2,
      "code": "function layerVersionResponse(item) {\n\n    item.CreatedDate = iml.parseDate(item.CreatedDate);\n\n    return item;\n}",
      "name": "layerVersionResponse",
      "test": null,
      "appName": "amazon-lambda",
      "arguments": "(item)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-02-21T23:48:05.629771+00:00",
  "categories": [],
  "opensource": false,
  "description": null,
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "a3717d8f0fb14e7ab7fa4a1a0c46b1ab",
  "versionFull": "1.1.4",
  "compiledName": "amazon-lambda",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": "[\n]"
}
