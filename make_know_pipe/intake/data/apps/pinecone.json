{
  "rev": 13,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.Api-Key"
      ]
    },
    "baseUrl": "https://{{connection.indexName}}.pinecone.io",
    "headers": {
      "Api-Key": "{{connection.apiKey}}"
    },
    "timeout": "{{common.timeout}}",
    "response": {
      "error": {
        "message": "[{{statusCode}}] {{body.message || body}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "pinecone",
  "_rpcs": {
    "universalUrlParam": {
      "api": {
        "response": {
          "output": {
            "help": "Enter a path relative to `https://{{connection.indexName}}.pinecone.io`.\nFor example `/vectors/fetch`.",
            "name": "url",
            "type": "text",
            "label": "URL",
            "required": true
          }
        }
      },
      "rev": 2,
      "name": "universalUrlParam",
      "label": "URL for Universal Module",
      "appName": "pinecone",
      "apiJsonc": "{\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"help\": \"Enter a path relative to `https://{{connection.indexName}}.pinecone.io`.\\nFor example `/vectors/fetch`.\",\n\t\t\t\"name\": \"url\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"label\": \"URL\",\n\t\t\t\"required\": true\n\t\t}\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "pinecone",
      "altAccountName": null,
      "parametersJsonc": null
    }
  },
  "flags": {},
  "label": "Pinecone",
  "theme": "#201d1e",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Vectors",
      "modules": [
        "upsertVector",
        "updateVector",
        "fetchVectors",
        "searchIds",
        "deleteVector"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "universal"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af40000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000002c94944415458c3edd65fa8df731807f0f7f9d91fdb8e65da469913a7b09972e1cf8ab00be498ff56a6684e31943be66a6ed69292b8e152223bb9980b292d1192327f6e14662486fdf1e7c8109b735e2ef67cebdb299d73bedb523a4ffdfafd7ecfe7cff37ede9ff7f37c3ec98ccdd87f6c7d5d17a2f9794a92db93ec4bf24292f1bebecedb4e3d38e6631d3ec0387ec48d3576cc8307976237dec52ff8093b71d17440cc9a22d5b393ac4fb2b2d62c48f24c925b922c4af25c92cd496e4e7249921d473be3d3f195c3f6295ec6f935760d3ec4d95882d5b812fd47e5386a93cb8ae65ff126065b473117cb30abfe6fa9e3781d1bb0e88840d4a677d579df8d2ff050f98fc3722c6d015a82c77010874aa847143cb8b6325b885595f1323c82efb10d2715a087f11df6e1f73a8ecec17b18c65315bcf1afc6c7388031fc8d27300f0f14439b0ac859d306d03adb07f1039ec68216805578121b6b7c04fb1bbaebb3a19859382d00ad0deec15ff8198fe26acca9b1befabe175fe31cdcd164dbd2c20d38a12b8075f813dfe2736c6f675373cec39d45fdc43d2ec6376d56a60ba21fafe07d9c8b8156e6a9b25bd12eb3f2cfc655d51fdec33b25d04e2c5c811db8a0e50bcec0e3a5f46727087431de2e6d1c28810e7765611eaeaf926b7c43f80cbf55051cc4e6cabce90d83b81fa355a6435d012caedbeebe02b1029757c96d2ae58f14136b5a2097e20d7cd2f481aea5782a76616bf5fb111c5f631b4b9c679610075bedf8e4ea071776be0f6ae172ec75d85e2b31b67bc1fa5669de54bd61a000afed1cbc05e034bc853f2adb2dad86d49b20cca1ea7c5bb1a7daf7a4717a938cef4eb236c97549b625999f642cc99a242f25b9b5e6ad4c3250f36f4b329ae4a36ea9ff3b1b8dc27b9525bc5abe617c590c8cd6ddd19b0a0393be8892a4796462ac5c23494e4cf27c31f26292ed49fa93cc4db237c9f894f6eec246d99c24879238e6afe019fb5fdb3f13ae784454dac15e0000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000006eb4944415478daed9a778c155514c6bfd906b8b0800a115144b081d83b121513a3c46e8c468958891a021883055b4c30c62ec658628b2d1ad4583026180b44c1022a48b12b4a28b15144711797f7f38f7386b9ccbef77685b7efad3a5ff2f266eedc3b73ce99d3e74a193264c8902143860c19fe9f882a4d80240192d459d27e929a24cd93948ba20e415efb320e54017b018f036b80e5c0697eadd224b62be302b6036e00960039127c031cf49f1342c0783d3012980d6c203fde05faffa784e0cc44c02d4093339a0356038d7984f02cd0d09e02a8aa841c247de1ff4d925e9474a5a4dffcfa779216fbf1e992ae9654d75e42a82929674664274903655e3da6baabff1a242d94f4bca43d5c10cf4a1a2ea9bbcf7d55d21b921e93d45bd21849d37dace3c2d5bb1a9804fc04ac0a7ebf072a7f7de0fde375e302b5bfc4c72e037e031e067aff2b3440524f49274bea55644e95244551940b981ae4ff8d92bef7e38724cd97f4919fd7027f953a3728b500fa49ea9b1afb52d214493949cd6aa9ca91a49592964a5a23330b4551b40e785b52bda4077dedd3c06c496b7d4e89c9df02b8da9e04ac4f79f25f7cbc45380b4ca00bb0333018a889e7f9b5a33d4102580bbced66b2536c461547c0c8b54e6833f05910dabe058ef8a731dde78ff07bfd1508b519f81a980cec5ef15c2110c0a34ee01ae044e09120c35b00ecb1190210d017380f782b25883857a8d95c0194320f68908536c96c7aaea48992a6f9586759284c33d71f38073824fd26031b5f26e92d498b64be24445d0979d83c38e17d80b9fec66702dd7c7c4fe0296058c0b4fcfa79c07c7f933f0047a6e6c843e078e08b0269f3ed15358194231b049c001c9562a22e38ae018603afe6497fdf27c8ffddc9ddc7a685d212e02b3fde008cea08cc0f735bdca7156fbf0b700ff02b85f122b06db066149644ad749fb29f6b14c03a176645993fd63d325805b74301016c03cc08186d027e4ebdddf8adde0574f275dd811b81635c7bbab833048b2efdca2e0092b47724b03420fecd2202a8727b05f80e4b7faf0ed6ce0096f9f19f582a1c915490f17d760216fbbcf780ae65158013d1099880e5f960a1e9692c5ce5754801f1570143fc7c92af5f0f9c0a5c88d50d604e6f40782f1267fb10e6706f8d85536ee66ff6b7143aaf835d3dab69c52b9338c3977dfd4a60ff404bbe014e274f7c0fb4a91b49a429ab008660d55e88756e0a3381e780312e8c62f7e90e7ce0eb17e1151fd003739611859d690fe002e04ebf4f5905d01b6b6515c3c63ca0c87db6c64add4fb108d2b935460201dc86a5c38d5812551e2d080838373081d5c014603af039f007f06031a282fb54033d09c25e1b9f7f66f0fcf768c77e412122ba01d3020738c67d431fe0504a5ca004761f3751ea8197fcf9cdc0d84a68c1f12465ea7cda188f49c2da202cc919dc466d190f3c015c815588e34932c9363fbf9442a8059e0cecfefa3632d213cb0116fbba4f8a698c8f3700b3826735bae9c5b5410e4b96caae058760b9f96cd788624cd4f99ce9b46c9a4c2d64c781e37d1fcb110a7d47f8ba125a5083e5e6799d58a0ee7b6379fc9a02c4e780fbc9133a837bf4070e034663df157e48dd6316d0abdc0288b05a603456ca6e92b8f89c01583324c69fe42f861addbeab5b31a3083803fb861863a6bf88b227455d03db9ce3f61d121a678e8ffb9ccf818b80bbfdbc19783d10c82a2cc415d2a64ec0e558e6889bc3541772797b0224d9dcc7c15ba8c742d571c04d58c626ac15760db0ab9f3fec6b5663a5f4b5815f98110b32cff38e0884d504dc4b1b7388f612c0d6c03c27e835ec6bef24ac13dc0c4c0c890bb466a6af590cec086c85f51317ba4915d280aeee2b7ef7e7d4979df11441fd48c2d9222c396af6f3f558d736dde6ee4bd23f78c7998afb051b5599a0a8228922b52ef46328526b945300f90a2380ef814b49d5ea24e5ec332eb83bf26888b0caf001e080606c22d6461bed1a5339e603620fc73e5684f8903c1dde148375c0f6a1d30caeef8df50262b3eae1f3e6f8d8024a98fb6f695bbc5a2df719f59674bea491927621f87a134551fc5b1f45d1f2288a56c5630156485ae2c7c74aba58d25e9276f3b139927e2ed17bdc7c90144593b1de5c139bf6f7726ee3dbb4f56d051a7210966102acc04265cefdcba88a78fd2204d7ba333cc585318724e37b21768241389c005c071c987272b1e3abf5ff71b44c9997e275438743c0444f6028d6f01c118c0f24c919c01aa34383eb5db00ecf34e015ac3dbe2e2580a978b7f85f0567706c9e68313910408f9480f2e1aa52ab7fa9f70714c38656ae57c9f60745b23d01bdfcb85ab6ed66997c6f4129f70594658781bfb181925e90b4af0f2f9174b6a459012df5ce70bd2c9a44ce7c83a41f252d50897790965300923458d25992b6926d94fa50121d6aa747860c193264c890214386ff09fe068967141e89dc34320000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2023-06-22T16:44:33.147596+00:00",
  "icon128": "\\",
  "icon256": "\\",
  "icon512": "\\x89504e470d0a1a0a0000000d4948445200000200000002000806000000f478d4fa0000000467414d410000b18f0bfc610500000006624b474400ff00ff00ffa0bda793000016de4944415478daeddde992db38b20650ea46bfff2bebfe706b5cadd2c2054b26f29c888e9976db2e1282901f1314b56d004039b76ddbb6fbfd3efb380080816e8a3f00d4f37fb30f0000184fe89fd907009471dff17b6eb30f12aad0010046d853fc8ffc3ee0221d00a0a73305fdf1677403a023010068add555fc7d1302a01b5b00404bad5bf8b604a01301006845b186446c010057f52efcee09800e7400802b5cf54352020070c67d1b5ffc850d684800008e9851f89f7f3ed0800000ec31bbf03f1f0b709100007c12a9f03f1f1770814f0100af28b0b0381d00202b21052ed001001e3216548f0b8693740080a8fbfc478e1f38480080da144f28ca1600d4b45ae1f7b86038480700ea59adf80327080050cbeac57ff5f383666c01c0da2a16449f0c801d7400605d158bbf73879d0400589302087c640b00d6a2f0ffe59301f08100006b50f881436c01407e8aff67c6075ed001809c14b5637c32009ee800403e8aff39c60d7e1000201745ec1ae307ffb2050039285c40533a00109fe2df96f1844d00800cdcbcd69e104079020050951040690200e410b10b10f198809d0400e08cdbd3ff66a50b40590200e431bbd8de7efcf3b042015de11ce0300100f8e6b9e8af4808a01c01007259bd10cf2404508a0000f98c0801afdafdcf7a16cc595d072180320400e059a42e8310009d080090538fc25861af1ff89700009c29fc23af926704135d00962700405e2d8a62c42bfe28c72404b0340100723b5b2c33b6fbdd0f000d0900504bc6c2ff7cfca309012c490080fcf616c5cc857ff67908012c470080f565bfea7f774ec005ffcc3e0028e6d395e495a2767bf177672c92478ef9d539033b0900704ce48293b1e0039308006411b9f0b63c4745fc185d00384900203a8b3bdff40e0142194b72132051dd37c53faa5eafcbd57b20800374008846d1270aa182a5e90000ab6859b0157f9627001089abfff8a2bf46ab7e3f023427001045f4c2421e95be1f014e13008840f1a7b5a3855ce1a71c0100000af2290060558fabfa5e8f5f86d4740080bd56dbaa51fc294d000022e8598c6f3b7f0d4ab1050054a0e0c3131d00002848000080820400665bedc6328ed39e870904000028c84d8000fb3c77ab742e484d070098297311bd6fb6b0484c0060268b671ed55fabfbc9ff0661d90280399e1f539bf94a18db03242400c06f23176f85624d821de1d90200f8ec4a8bdff60061e900304be485f1beb9727bb6e79bf578cdf600210900c0119f8ad78ae1a0c739d91e20045b00f0da8ac5acb7db76aca8552f803e46c8543a00f09ead80738cd931b608984207003e738556d7acd7de9c63080100beb320339aed01bab30500f05b94e26b7b806e7400609f280581dacc439a1100603f8b6f0dd15fe7fb668b8006040066c8bc70653e76d6230c709a0000b006218043dc0408c77992dbbab21751370db29b0e00a3655f60573d17d6647b80b7040080f50902fc2200c03516d6b5acde3277d320ffe31e0056e22b6b69e1670858792eb997a5381d0056317b115bb95054367b5e8d60ee16250030d2a88566d6a26d215dd3d1af39cec8b64041b60058d5aced005f21bcaee7d755c124351d00684f61a861c5a067ee162200b03adb01f474db6a6c11b02001800a84004658250c98b745080054917d512617f38df0040056b077b19db128bb9aaa6b958e008b1200a8460860866c61c09c2d400020bb330baa10c04c5942008b130018450184bf3275035894004055166078cf7ba3000100600e5d31a6f228604688bcd0dd061d9f2b2ab62df67b81627400a06f71b6d5c04396e26fbe16a103007f8cea0464b4675c148df7cc2b421200e0afd621207b513c32168fdf9bfd9c5b52f809cd1600bd555c045768fb9f7ddd2abedeaf1807c2d30120b31e45f66a172073e16f55b4eec9c7e1ca79431a3a00f0dbd9e295b9e8b52e5e958ae1bdd8f9b20801005e3b5acc15ff717f6f2415ce91450900f05ee46f196c61c495ebaa05d2553fe90900f0d9b7e29eb1f88f2e5e2b15cad50b7fc6f9cc4902009c9771b15cb978f566ec588a4f0190d5c8e2fbfcc9806c853f42e1cafac9800863075de800d05bc645ffdd7964fc7c7fa40216e958563c5e3844006084d645335b119e2562018b784caf8e31c371c225b60018e55dd1b6d0b6653ccf316e8275390200b37d5b74ee077f7f65598a58d6fb016029b600882ee3befb0c598a7fd6e385e5e800908510f05bf622aa130013e900404ed98b3fc7f4ee84096205e900402eab157e5d80cf8c0ddde800400e2b7f342dc279452bb4ee7da13b0100e28b50202b9c638482fba9f047182316620b8096323f2e37a26a0b7ef5ed80cae7ce0402002ddcdffc9a05ed9c6a85fff9dc67ce9be7ef7d18f1f3600a5b005c753ff9df78cd98d51903c59fa90400aed8b3505759ccaf5af9263f7e53fc99ce16006729566d18c7d71ee332a350f6da06b8722ee609cde90070c6d1c5c8e2f59a7189ab65f088fe91bec8c746470200479d2d5a8add5fdafdfb651f27c595b06c01b0578b8578f61ddeb3652f66b3cc9a3767b7022acf7112d10160b4aa45b0ea79b79265fc147fd21000f8a647bb3acb62deea5c2b9def6a8e14f48cc53fe331d38800c0273d0b97a2c851b3e6ccedcb7f8b7e931fbc2400403f424e7b91c654d1273501805746b5ad576f8f2b107dcc9833b72fff9ed10ae7c0050200cf662cae2b8700fa98150266b4fbbd3fe84200e0270b4d7b91aeb2ec5503ff2300f0a0f8f733bbe8ae5af857df4282ae3c08886d9bbf88ae589c2230aef9cd7e6fb2301d002c30638c2ec6958abf390c27e800d41565d1ac54a846983d9e8f9f3f7a7e557fcc341ca6035093e2bfdef946dbe79f712c51e635a42000d41365918c54acb29f77d5b1042eb005504b84e2af58b5137d2c676c073c7e56f4b199cdf8200014a2f8af23ea38463daeac22bc6759982d801a222c248ac35f57c622e338ba1f00021200d616e54129198b566f47c7a4d54d7e11bf51af9708731fc21200d61565f153fcdfdb3336d1eeeebf7a2e401002c09a14ff35ac387ebe4867be15e71527b809703d11163c0bcc7eb7edbfaf99b16b2feb4382663d5489220480b5445828322eb4b3551bb3e7d0c367cff3c3d8d1842d8075445814aa15b26c22cc9187917365b57979dbcedf1bb2da5870810e407e5116750b0b47f5ee045498937bced1c39178490780162c2c9cd56bee98937f65f9240983090079f98c3f4744bed26e3d87cc49d8c116404e0a3ffc664ec2013a00f94428fed05ab42e022c4f00c8254af1b7d8d2c3d979653ec20902401e8a3f159cf98e04e00401208728c51f2251fce1023701c617adf87f3b1e8b722d3d5eef3dcf0730cfe0220180d69e176e0b3567bc7b0ebef9048d0800b145bbfa6f710e1670ce3277a0210180d1f6841a0b3d0fe6c235efde6fc615018090740ddaead549f2bac4b64207918e0400321008e0986fc5ffbe791f95270090916f3783df5cf17388e7009099050ffef05ee0300100d6a630acedcab7829a1bc5d90200c8a565e1762f40613a006466e1a21a57ed342300c4a6c0010fbd8abf50519400109f104044e6e5588a34cd090000081805090039b8dafacd98ec73db8c15fb0801c5f81400d4f02d0458fca1181d0060dbfe760af6740c7414c61b35e68260213a0079dc366fce0705a83f631c8f3580a6740072b128436dd6009a1100f2b100003de93214210000f04c08284000e09bbd37860163782fd2840090d3a805e0f6e2df8501a8411760713e0590d7883b823f7d53d8edc39f01faf289002ebbddefe65072235ec0d657fc578f590702fec8f8fe27085b00cc70651bc1620463b94a5c942d00f6f8b41570c5a7bfd3a203d0910090dfaa7b81aef4e1bb55dfff0c600b80bd2c3210d388b0ecfdbf2001600dbe2804e8cdfb7f3102c03ab4cca12eef7f0e130038ca5500d4e5fdbf100100600dba001c2200acc50200b55903d84d00588f3b82819ebcff17e139009cd5ebe14090d9a7e238f24bbc667e4f0849e800acc9c70261bc6fef87fb8f7f56b0ca7994a50300305eef4e812704f29500b02e0b00dbb66f0e68e5c6f2ee35f33ad1942d80b5b921b0b6bdaf8dd73087a35b08deff7ca403006b39bb203ffe9cabcc1c145e2ed301589fab801a5add5ce6b53ca7f2b8553ef7d404005ab108ccd37aecbd961c65ce242400d4a0adbba69e1f29b3a0c3e204803a6c05ac65c4587b3df7314e7f1887640400c8c7420b5c2600d09ae2d4c7aca7c8793d39c27c494400a8c5238273329e6462be262100406c1116d308c71095b1212d0f02aac72382e38bf8fa7850102c4607a0a6de8bb822715ec4e20f4799c7090800b4a6f89f93e56b62331c2331982bc1090075b52ed4b70e7f6705590afff33103c909005ca5f09f97b990663e76601300aabb5ab815fe73325ef5c319e679600200678ab8abfe73562bfcab9dcf19de07a425007084c27f5ef542b932ef09521200d8cb22774e85abe4d5cf6f0fe198746ef7bbf72edbb6bd5ec42d68e7557c63992ffb55991fe644609e04c883376a3b5516f757e76d1eedf33c4e55e70c130900d08e455c0838ebe79899470c2100c075166c5ada13a032cc394130383701c2351916e2d18c497fb72df68d87518f8b1f7400e03805ee3b5b01e33cc6d9bce4101d0038c622bb9fb1aa49f04b420080fd1434a28a323715ff446c01c0675116d6ac1ee3a730f413658e7a8d931100e0bd280b2bbc13618e2afc49d90280d7222cac2b319eed451853c53f310180572a3cbffe1b0b5b7bd5e7542b51de9fde23c9d902e0a7fb977fffc462c01e3e1e784d84c2bf6d5ec32508003c5c5d587efe798b03b4a7f8d3942d007a88d2a2bc2ad24217f9a96f47ad323f468a325eabcc41360180bea22c5a57cc5ef0562afccf56981f234418a795e761590200c465c12542f16751ee0160dbfa2d32ab14b0db3676215e65dcf67053e06b510abfd766613a0010c7ec36ebac9f1fa5d84511653c14ffc50900b04fefc530d2622b04cc13651c22cd473a110060bf1e8be2ecabfe91e7ca678a3f4309003047d4c2ff7c8c23452980334439f7e8739286040038a6c5021971918d724c510a61c5738e320718440080e3ce2e9419aefa5b9deb15510ae288f38c70ae19e7250d0800d05fab057656b1501cd6e5b52d4c006015f76dec15d5de8573950576c6fd0011ae8e7b9edf6cabcc4d4ef22020b2bbbff9b5d98bdbec9fdfe358473f106955b3c730d3dca4231d00328bb890da4f6d6bf66bbc1a7393ffd101a0979e0bcd9ea230aa0b506d41f5586458840e00d91c293eae1efb185594572dfe33ce4b678a5f040032a95cd0a37d6153a54723673fbfd5c79293040032b8724778e5d0d05bafc252a560d9a2622a0180c85a7d144c08e8a77581a956b07a9e6fb5b1e4200180a85a17edcc2120f3b11f51b560f5fa9229f84800209ad51f00b3a255bf1f212b63c92e020091f42efc82453f95be1fa18716e3602c394400208a51c55908e8e768f151ac60220180d966b4fc85807eaa7d47426b67c6c5953fa70800cc2c860af19abe1523c5eab32305dd58729a00c02c8aff7c333e82a6604110be0b80d1a214fe08df185889b13eeed3f72e184f2e130018294af1670c45aa0fe34a130200a328fee718b7da147bba1100e82d6201b3a81a03284f00a09788857fdb143e806ddb7c0a805a147f807fe9005081c20ff0440780d5652efe51b7518005e800b0b2ccc5bfa7d5c765f6331e5e05b7d5c79c840480da56bdc2b4d8d6747ffaff33e6c17de7af9ba34c670b8095f85294baee3b7f6df431b4f8bdd0850e00ab58b1f07f7a142c7f7c1b9fd9db01478f3deab1b2200180ec565f307f9e9f30f0d7d1abed2cf3e4e77965396692b2054066d516c8db669ba312818fae7400c8aa7a117c3effbdc522fbb89d2d8a99ba00308400403616f1d72a8ccbd52be29e21c0d53ae9d80220930a458ed75a1558851afea50340168a7f3d598a7596e384ffd001203a37bdd5d4b3a82ad8b00900c4a6f0d38b104079b600ea8abc002afc64d1f37de47d40573a0044a2ddcf4891433074270000c42308d39d004024f7cd55197f8c2a80e61c65090044645166db5c05435702009109028c72669ef59a9b820f43f8140019bc5b682d94ebf395c8d0890e0099e910d430f27e801ebf17421200ea5ae9eaf9be0903ab8b180220355b00ace6d502be52d8a13f5f1d4c093a0054a03bb0862845d9d3ff5882004025b60af2b315008d0800b555beda1004f21202a0010180ca2160db2cf2c451fdbdc8600200db567be1a97cee99e902c04502000f0a21d9ccf8be004fff631902003f555b84aa9d2fd7e806b014018067b74d61240f73154ef22020de79b7b0ba0a0258800e0047add22158e11cf8c36b092708009cb54a10600d99e762e66327315b005c65ab80287c75301ca003402f3a04f09df708d3e800d0dbcf05ced5d97b67c74601f92f5d00d8490060a457c5aafa627df5fc7d75ed6f4200ec600b80d9666c154428982dbf8cc8171bfd16e13586d074008862d456c1ecc2d0f3dc1e7ff7ec73641faf1353090044b4ea56c1a873b02df087ad00f8c016005964ff54c1e842a4f0011fe90090cd7308c850e8661d63a44ec08c6fd1cb3037601a0180ec8e048219c57076118a14027a9d5f462bbf2624610b80d564df2ae86176919cfdf38117740058558410a0f0f14a84b9093a0050843002fc8700007d28b840680200b417b5f8473dae4ab4ff0943000080820400a8451700d8b64d00008092040068cb153690820000000509000063f80400a108000050900000d09fab7fc2110000a0200100e8c9a72220280100dad2eae599394148020000142400004041ffcc3e0060a8d1ede8c7cfab782f80d63fa10900c008ad8a619620a1f8139e2d00682feae21ff5b88e9ec3e31fe0021d00e8e3b6e5b95acdaa470878bc66b717bf36e378a01b01006a509cf6b9edfc3548cf1600f4a37000610900b03e4104f8450080be6617dfd93f1f084a0080fe1461201c0100c698f1001ec103784b008071461564851ff84a0080b17a1767c51fd8c5730060bc330f99d9fbf701eca20300735dddab57fc81537400208623df9aa7e803970900108be20e0c610b00000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0200100000a120000a0a0ff07df01e4ff008194e90000000049454e44ae426082",
  "install": {
    "common": {
      "timeout": "{{parameters.timeout}}"
    }
  },
  "ipmRepo": null,
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "searchIds": {
      "id": 103662,
      "api": {
        "url": "/query",
        "body": {
          "id": "{{parameters.id}}",
          "topK": "{{parameters.limit}}",
          "filter": "{{if(parameters.filterType === 'custom', formatFilterQuery(parameters.filter), transformArray(parameters.filter))}}",
          "vector": "{{parameters.vector}}",
          "namespace": "{{parameters.namespace}}",
          "sparseVector": "{{deleteObjIfEmpty(parameters.sparseVector)}}",
          "includeValues": "{{parameters.includeValues}}",
          "includeMetadata": "{{parameters.includeMetadata}}"
        },
        "method": "POST",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.matches}}"
        }
      },
      "rev": 6,
      "crud": "read",
      "name": "searchIds",
      "epoch": null,
      "flags": {},
      "label": "Query Vectors",
      "scope": [],
      "expect": [
        {
          "help": "Either `Vector ID` or `Vector` must be provided.",
          "name": "vector",
          "spec": {
            "type": "number",
            "label": "Value"
          },
          "type": "array",
          "label": "Vector"
        },
        {
          "type": "html",
          "label": "<div class=\"form-text text-muted\" >The query vector. This should be the same length as the dimension of the index being queried.</div>"
        },
        {
          "help": "Either `Vector ID` or `Vector` must be provided.",
          "name": "id",
          "type": "text",
          "label": "Vector ID"
        },
        {
          "type": "html",
          "label": "<div class=\"form-text text-muted\" >The unique ID of the vector to be used as a query vector.</div>"
        },
        {
          "help": "The namespace to query.",
          "name": "namespace",
          "type": "text",
          "label": "Namespace"
        },
        {
          "name": "filterType",
          "type": "select",
          "label": "Filter Type",
          "options": [
            {
              "label": "Simple Filter",
              "value": "simple",
              "nested": [
                {
                  "name": "filter",
                  "spec": [
                    {
                      "name": "fieldName",
                      "type": "text",
                      "label": "Key",
                      "required": true
                    },
                    {
                      "name": "fieldType",
                      "type": "select",
                      "label": "Type",
                      "options": [
                        {
                          "label": "String",
                          "value": "string",
                          "nested": [
                            {
                              "name": "fieldValue",
                              "type": "text",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        },
                        {
                          "label": "Number",
                          "value": "number",
                          "nested": [
                            {
                              "name": "fieldValue",
                              "type": "number",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        },
                        {
                          "label": "Boolean",
                          "value": "boolean",
                          "nested": [
                            {
                              "name": "fieldValue",
                              "type": "boolean",
                              "label": "Value",
                              "required": true
                            }
                          ]
                        }
                      ],
                      "required": true
                    }
                  ],
                  "type": "array",
                  "label": "Filter"
                }
              ]
            },
            {
              "label": "Pinecone's Filtering Language",
              "value": "custom",
              "nested": [
                {
                  "help": "A JSON representation of the filter query, for example `{\"genre\": {\"$in\":[\"documentary\",\"action\"]}}`. More information [here](https://docs.pinecone.io/docs/metadata-filtering).",
                  "name": "filter",
                  "type": "any",
                  "label": "Filter Query"
                }
              ]
            }
          ],
          "mappable": false
        },
        {
          "name": "includeValues",
          "type": "boolean",
          "label": "Include Values"
        },
        {
          "name": "includeMetadata",
          "type": "boolean",
          "label": "Include Metadata"
        },
        {
          "name": "sparseVector",
          "spec": [
            {
              "name": "indices",
              "spec": {
                "type": "integer",
                "label": "Index"
              },
              "type": "array",
              "label": "Indices"
            },
            {
              "help": "The corresponding values of the sparse data, which must be the same length as the indices.",
              "name": "values",
              "spec": {
                "type": "number",
                "label": "Value"
              },
              "type": "array",
              "label": "Values"
            }
          ],
          "type": "collection",
          "label": "Sparse Vector"
        },
        {
          "help": "The maximum number of results.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "pinecone",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/query\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"filter\": \"{{if(parameters.filterType === 'custom', formatFilterQuery(parameters.filter), transformArray(parameters.filter))}}\",\n\t\t\"namespace\": \"{{parameters.namespace}}\",\n\t\t\"topK\": \"{{parameters.limit}}\",\n\t\t\"includeValues\": \"{{parameters.includeValues}}\",\n\t\t\"includeMetadata\": \"{{parameters.includeMetadata}}\",\n\t\t\"vector\": \"{{parameters.vector}}\",\n\t\t\"sparseVector\": \"{{deleteObjIfEmpty(parameters.sparseVector)}}\",\n\t\t\"id\": \"{{parameters.id}}\"\n\t},\n\t\"response\": {\n\t\t\"output\": \"{{item}}\",\n\t\t\"limit\": \"{{parameters.limit}}\",\n\t\t\"iterate\": \"{{body.matches}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Vector ID"
        },
        {
          "name": "score",
          "type": "number",
          "label": "Score"
        },
        {
          "name": "values",
          "spec": {
            "type": "number"
          },
          "type": "array",
          "label": "Values"
        },
        {
          "name": "sparseValues",
          "spec": [
            {
              "name": "indices",
              "spec": {
                "type": "number"
              },
              "type": "array",
              "label": "Indices"
            },
            {
              "name": "values",
              "spec": {
                "type": "number"
              },
              "type": "array",
              "label": "Values"
            }
          ],
          "type": "collection",
          "label": "Sparse Values"
        },
        {
          "name": "metadata",
          "spec": [],
          "type": "collection",
          "label": "Metadata"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "pinecone",
      "description": "Retrieves the IDs of the most similar items in a namespace, along with their similarity scores.",
      "expectJsonc": "[\n    {\n        \"name\": \"vector\",\n        \"spec\": {\n            \"type\": \"number\",\n            \"label\": \"Value\"\n        },\n        \"type\": \"array\",\n        \"help\": \"Either `Vector ID` or `Vector` must be provided.\",\n        \"label\": \"Vector\"\n    },\n    {\n        \"type\": \"html\",\n        \"label\": \"<div class=\\\"form-text text-muted\\\" >The query vector. This should be the same length as the dimension of the index being queried.</div>\"\n    },\n    {\n        \"name\": \"id\",\n        \"help\": \"Either `Vector ID` or `Vector` must be provided.\",\n        \"type\": \"text\",\n        \"label\": \"Vector ID\"\n    },\n    {\n        \"type\": \"html\",\n        \"label\": \"<div class=\\\"form-text text-muted\\\" >The unique ID of the vector to be used as a query vector.</div>\"\n    },\n    {\n        \"name\": \"namespace\",\n        \"type\": \"text\",\n        \"help\": \"The namespace to query.\",\n        \"label\": \"Namespace\"\n    },\n    {\n        \"name\": \"filterType\",\n        \"mappable\": false,\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Simple Filter\",\n                \"value\": \"simple\",\n                \"nested\": [\n                    {\n                        \"name\": \"filter\",\n                        \"type\": \"array\",\n                        \"label\": \"Filter\",\n                        \"spec\": [\n                             {\n                                \"name\": \"fieldName\",\n                                \"type\": \"text\",\n                                \"label\": \"Key\",\n                                \"required\": true\n                            },\n                            {\n                                \"name\": \"fieldType\",\n                                \"type\": \"select\",\n                                \"label\": \"Type\",\n                                \"required\": true,\n                                \"options\": [\n                                    {\n                                        \"label\": \"String\",\n                                        \"value\": \"string\",\n                                        \"nested\": [\n                                            {\n                                                \"type\": \"text\",\n                                                \"label\": \"Value\",\n                                                \"name\": \"fieldValue\",\n                                                \"required\": true\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        \"label\": \"Number\",\n                                        \"value\": \"number\",\n                                        \"nested\": [\n                                            {\n                                                \"type\": \"number\",\n                                                \"label\": \"Value\",\n                                                \"name\": \"fieldValue\",\n                                                \"required\": true\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        \"label\": \"Boolean\",\n                                        \"value\": \"boolean\",\n                                        \"nested\": [\n                                            {\n                                                \"type\": \"boolean\",\n                                                \"label\": \"Value\",\n                                                \"name\": \"fieldValue\",\n                                                \"required\": true\n                                            }\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"label\": \"Pinecone's Filtering Language\",\n                \"value\": \"custom\",\n                \"nested\": [\n                    {\n                        \"type\": \"any\",\n                        \"label\": \"Filter Query\",\n                        \"help\": \"A JSON representation of the filter query, for example `{\\\"genre\\\": {\\\"$in\\\":[\\\"documentary\\\",\\\"action\\\"]}}`. More information [here](https://docs.pinecone.io/docs/metadata-filtering).\",\n                        \"name\": \"filter\"\n                    }\n                ]\n            }\n        ],\n        \"label\": \"Filter Type\"\n    },\n    {\n        \"name\": \"includeValues\",\n        \"type\": \"boolean\",\n        \"label\": \"Include Values\"\n    },\n    {\n        \"name\": \"includeMetadata\",\n        \"type\": \"boolean\",\n        \"label\": \"Include Metadata\"\n    },\n    {\n        \"name\": \"sparseVector\",\n        \"type\": \"collection\",\n        \"label\": \"Sparse Vector\",\n        \"spec\": [\n            {\n                \"name\": \"indices\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"integer\",\n                    \"label\": \"Index\"\n                },\n                \"label\": \"Indices\"\n            },\n            {\n                \"name\": \"values\",\n                \"help\": \"The corresponding values of the sparse data, which must be the same length as the indices.\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"number\",\n                    \"label\": \"Value\"\n                },\n                \"label\": \"Values\"\n            }\n        ]\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"default\": 10,\n        \"required\": true,\n        \"help\": \"The maximum number of results.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"Vector ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"score\",\n        \"label\": \"Score\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"values\",\n        \"label\": \"Values\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"number\"\n        }\n    },\n    {\n        \"name\": \"sparseValues\",\n        \"label\": \"Sparse Values\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"indices\",\n                \"label\": \"Indices\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"number\"\n                }\n            },\n            {\n                \"name\": \"values\",\n                \"label\": \"Values\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"number\"\n                }\n            }\n        ]\n    },\n    {\n        \"name\": \"metadata\",\n        \"label\": \"Metadata\",\n        \"type\": \"collection\",\n        \"spec\": []\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "universal": {
      "id": 103771,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://{{connection.indexName}}.pinecone.io/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 2,
      "crud": null,
      "name": "universal",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "name": "text",
          "type": "hidden"
        },
        "rpc://app%23pinecone@1/universalUrlParam",
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "pinecone",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"url\": \"https://{{connection.indexName}}.pinecone.io/{{parameters.url}}\",\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"method\": \"{{parameters.method}}\",\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"response\": {\n        \"output\": {\n            \"body\": \"{{body}}\",\n            \"headers\": \"{{headers}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "pinecone",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"text\",\n        \"type\": \"hidden\"\n    },\n    \"rpc://universalUrlParam\",\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ],\n        \"required\": true\n    },\n    {\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"name\": \"headers\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"text\",\n                \"label\": \"Key\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"text\",\n                \"label\": \"Value\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Headers\",\n        \"default\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"text\",\n                \"label\": \"Key\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"text\",\n                \"label\": \"Value\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Query String\"\n    },\n    {\n        \"name\": \"body\",\n        \"type\": \"any\",\n        \"label\": \"Body\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": null,
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteVector": {
      "id": 103769,
      "api": {
        "url": "/vectors/delete",
        "body": {
          "ids": "{{parameters.ids}}",
          "namespace": "{{parameters.namespace}}"
        },
        "method": "POST",
        "response": {
          "output": null
        }
      },
      "rev": 4,
      "crud": "delete",
      "name": "deleteVector",
      "epoch": null,
      "flags": {},
      "label": "Delete a Vector",
      "scope": [],
      "expect": [
        {
          "help": "The vector's unique ID.",
          "name": "ids",
          "type": "text",
          "label": "Vector ID",
          "required": true
        },
        {
          "help": "The namespace to delete the vector from.",
          "name": "namespace",
          "type": "text",
          "label": "Namespace"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "pinecone",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/vectors/delete\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"ids\": \"{{parameters.ids}}\",\n\t\t\"namespace\": \"{{parameters.namespace}}\"\n\t},\n\t\"response\": {\n\t\t\"output\": null\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "pinecone",
      "description": "Deletes a vector.",
      "expectJsonc": "[\n  {\n      \"name\": \"ids\",\n      \"type\": \"text\",\n      \"help\": \"The vector's unique ID.\",\n      \"label\": \"Vector ID\",\n      \"required\": true\n  },\n  {\n      \"name\": \"namespace\",\n      \"type\": \"text\",\n      \"help\": \"The namespace to delete the vector from.\",\n      \"label\": \"Namespace\"\n  }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "fetchVectors": {
      "id": 103659,
      "api": {
        "qs": {
          "ids": "{{parameters.ids}}",
          "namespace": "{{parameters.namespace}}"
        },
        "url": "/vectors/fetch",
        "method": "GET",
        "response": {
          "output": "{{transformResponseToArray(body.vectors)}}"
        }
      },
      "rev": 7,
      "crud": "read",
      "name": "fetchVectors",
      "epoch": null,
      "flags": {},
      "label": "Get a Vector",
      "scope": [],
      "expect": [
        {
          "help": "The vector's unique ID.",
          "name": "ids",
          "type": "text",
          "label": "Vector ID",
          "required": true
        },
        {
          "help": "The namespace to retrieve the vector from.",
          "name": "namespace",
          "type": "text",
          "label": "Namespace"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "pinecone",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/vectors/fetch\",\n\t\"qs\": {\n\t\t\"namespace\": \"{{parameters.namespace}}\",\n\t\t\"ids\": \"{{parameters.ids}}\"\n\t},\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": \"{{transformResponseToArray(body.vectors)}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Vector ID"
        },
        {
          "name": "values",
          "spec": {
            "type": "number"
          },
          "type": "array",
          "label": "Values"
        },
        {
          "name": "sparseValues",
          "spec": [
            {
              "name": "indices",
              "spec": {
                "type": "number"
              },
              "type": "array",
              "label": "Indices"
            },
            {
              "name": "values",
              "spec": {
                "type": "number"
              },
              "type": "array",
              "label": "Values"
            }
          ],
          "type": "collection",
          "label": "Sparse Values"
        },
        {
          "name": "metadata",
          "spec": [],
          "type": "collection",
          "label": "Metadata"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "pinecone",
      "description": "Retrieves a vector from a namespace.",
      "expectJsonc": "[\n    {\n        \"name\": \"ids\",\n        \"type\": \"text\",\n        \"help\": \"The vector's unique ID.\",\n        \"label\": \"Vector ID\",\n\t\t\"required\": true\n    },\n    {\n        \"name\": \"namespace\",\n        \"type\": \"text\",\n        \"help\": \"The namespace to retrieve the vector from.\",\n        \"label\": \"Namespace\"\n\t  }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"Vector ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"values\",\n        \"label\": \"Values\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"number\"\n        }\n    },\n    {\n        \"name\": \"sparseValues\",\n        \"label\": \"Sparse Values\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"indices\",\n                \"label\": \"Indices\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"number\"\n                }\n            },\n            {\n                \"name\": \"values\",\n                \"label\": \"Values\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"number\"\n                }\n            }\n        ]\n    },\n    {\n        \"name\": \"metadata\",\n        \"label\": \"Metadata\",\n        \"type\": \"collection\",\n        \"spec\": []\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateVector": {
      "id": 103765,
      "api": {
        "url": "/vectors/update",
        "body": {
          "id": "{{parameters.id}}",
          "values": "{{parameters.values}}",
          "namespace": "{{parameters.namespace}}",
          "setMetadata": "{{deleteObjIfEmpty(transformArray(parameters.setMetadata))}}",
          "sparseValues": "{{deleteObjIfEmpty(parameters.sparseValues)}}"
        },
        "method": "POST",
        "response": {
          "output": {
            "id": "{{parameters.id}}"
          }
        }
      },
      "rev": 6,
      "crud": "update",
      "name": "updateVector",
      "epoch": null,
      "flags": {},
      "label": "Update a Vector",
      "scope": [],
      "expect": [
        {
          "help": "The vector's unique ID.",
          "name": "id",
          "type": "text",
          "label": "Vector ID",
          "required": true
        },
        {
          "name": "values",
          "spec": {
            "type": "number",
            "label": "Value"
          },
          "type": "array",
          "label": "Values"
        },
        {
          "name": "sparseValues",
          "spec": [
            {
              "name": "indices",
              "spec": {
                "type": "integer",
                "label": "Index"
              },
              "type": "array",
              "label": "Indices"
            },
            {
              "help": "The corresponding values of the sparse data, which must be the same length as the indices.",
              "name": "values",
              "spec": {
                "type": "number",
                "label": "Value"
              },
              "type": "array",
              "label": "Values"
            }
          ],
          "type": "collection",
          "label": "Sparse Values"
        },
        {
          "help": "The values of the fields will be added or will overwrite the previous value.",
          "name": "setMetadata",
          "spec": [
            {
              "name": "fieldName",
              "type": "text",
              "label": "Key",
              "required": true
            },
            {
              "name": "fieldType",
              "type": "select",
              "label": "Type",
              "options": [
                {
                  "label": "String",
                  "value": "string",
                  "nested": [
                    {
                      "name": "fieldValue",
                      "type": "text",
                      "label": "Value",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "Number",
                  "value": "number",
                  "nested": [
                    {
                      "name": "fieldValue",
                      "type": "number",
                      "label": "Value",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "Boolean",
                  "value": "boolean",
                  "nested": [
                    {
                      "name": "fieldValue",
                      "type": "boolean",
                      "label": "Value",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "List",
                  "value": "list",
                  "nested": [
                    {
                      "name": "fieldValue",
                      "spec": {
                        "type": "text",
                        "label": "Value"
                      },
                      "type": "array",
                      "label": "Value",
                      "required": true
                    }
                  ]
                }
              ],
              "required": true
            }
          ],
          "type": "array",
          "label": "Metadata"
        },
        {
          "help": "The namespace containing the vector to update.",
          "name": "namespace",
          "type": "text",
          "label": "Namespace"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "pinecone",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/vectors/update\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"id\": \"{{parameters.id}}\",\n\t\t\"values\": \"{{parameters.values}}\",\n\t\t\"sparseValues\": \"{{deleteObjIfEmpty(parameters.sparseValues)}}\",\n\t\t\"setMetadata\": \"{{deleteObjIfEmpty(transformArray(parameters.setMetadata))}}\",\n\t\t\"namespace\": \"{{parameters.namespace}}\"\n\t},\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"id\": \"{{parameters.id}}\"\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Vector ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "pinecone",
      "description": "Updates a vector.",
      "expectJsonc": "[\n    {\n        \"name\": \"id\",\n        \"required\": true,\n        \"type\": \"text\",\n        \"help\": \"The vector's unique ID.\",\n        \"label\": \"Vector ID\"\n    },\n    {\n        \"name\": \"values\",\n        \"spec\": {\n            \"type\": \"number\",\n            \"label\": \"Value\"\n        },\n        \"type\": \"array\",\n        \"label\": \"Values\"\n    },\n    {\n        \"name\": \"sparseValues\",\n        \"type\": \"collection\",\n        \"label\": \"Sparse Values\",\n        \"spec\": [\n            {\n                \"name\": \"indices\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"integer\",\n                    \"label\": \"Index\"\n                },\n                \"label\": \"Indices\"\n            },\n            {\n                \"name\": \"values\",\n                \"help\": \"The corresponding values of the sparse data, which must be the same length as the indices.\",\n                \"type\": \"array\",\n                \"spec\": {\n                    \"type\": \"number\",\n                    \"label\": \"Value\"\n                },\n                \"label\": \"Values\"\n            }\n        ]\n    },\n    {\n        \"name\": \"setMetadata\",\n        \"type\": \"array\",\n        \"help\": \"The values of the fields will be added or will overwrite the previous value.\",\n        \"label\": \"Metadata\",\n        \"spec\": [\n            {\n                \"name\": \"fieldName\",\n                \"type\": \"text\",\n                \"label\": \"Key\",\n                \"required\": true\n            },\n            {\n                \"name\": \"fieldType\",\n                \"type\": \"select\",\n                \"label\": \"Type\",\n                \"required\": true,\n                \"options\": [\n                    {\n                        \"label\": \"String\",\n                        \"value\": \"string\",\n                        \"nested\": [\n                            {\n                                \"type\": \"text\",\n                                \"label\": \"Value\",\n                                \"name\": \"fieldValue\",\n                                \"required\": true\n                            }\n                        ]\n                    },\n                    {\n                        \"label\": \"Number\",\n                        \"value\": \"number\",\n                        \"nested\": [\n                            {\n                                \"type\": \"number\",\n                                \"label\": \"Value\",\n                                \"name\": \"fieldValue\",\n                                \"required\": true\n                            }\n                        ]\n                    },\n                    {\n                        \"label\": \"Boolean\",\n                        \"value\": \"boolean\",\n                        \"nested\": [\n                            {\n                                \"type\": \"boolean\",\n                                \"label\": \"Value\",\n                                \"name\": \"fieldValue\",\n                                \"required\": true\n                            }\n                        ]\n                    },\n                    {\n                        \"label\": \"List\",\n                        \"value\": \"list\",\n                        \"nested\": [\n                            {\n                                \"type\": \"array\",\n                                \"label\": \"Value\",\n                                \"spec\": {\n                                    \"type\": \"text\",\n                                    \"label\": \"Value\"\n                                },\n                                \"name\": \"fieldValue\",\n                                \"required\": true\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"namespace\",\n        \"type\": \"text\",\n        \"help\": \"The namespace containing the vector to update.\",\n        \"label\": \"Namespace\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"Vector ID\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "upsertVector": {
      "id": 103760,
      "api": {
        "url": "/vectors/upsert",
        "body": {
          "vectors": [
            {
              "id": "{{parameters.id}}",
              "values": "{{parameters.values}}",
              "metadata": "{{deleteObjIfEmpty(transformArray(parameters.metadata))}}",
              "sparseVector": "{{deleteObjIfEmpty(parameters.sparseVector)}}"
            }
          ],
          "namespace": "{{parameters.namespace}}"
        },
        "method": "POST",
        "response": {
          "output": {
            "id": "{{parameters.id}}"
          }
        }
      },
      "rev": 7,
      "crud": "create",
      "name": "upsertVector",
      "epoch": null,
      "flags": {},
      "label": "Upsert a Vector",
      "scope": [],
      "expect": [
        {
          "help": "The vector's unique ID. If a new value is upserted for an existing vector ID, it will overwrite the previous value.",
          "name": "id",
          "type": "text",
          "label": "Vector ID",
          "required": true
        },
        {
          "name": "values",
          "spec": {
            "type": "number",
            "label": "Value"
          },
          "type": "array",
          "label": "Values",
          "required": true
        },
        {
          "name": "sparseVector",
          "spec": [
            {
              "help": "The indices of the sparce data.",
              "name": "indices",
              "spec": {
                "type": "integer",
                "label": "Index"
              },
              "type": "array",
              "label": "Indices"
            },
            {
              "help": "The corresponding values of the sparse data, which must be the same length as the indices.",
              "name": "values",
              "spec": {
                "type": "number",
                "label": "Value"
              },
              "type": "array",
              "label": "Values"
            }
          ],
          "type": "collection",
          "label": "Sparse Vector"
        },
        {
          "name": "metadata",
          "spec": [
            {
              "name": "fieldName",
              "type": "text",
              "label": "Key",
              "required": true
            },
            {
              "name": "fieldType",
              "type": "select",
              "label": "Type",
              "options": [
                {
                  "label": "String",
                  "value": "string",
                  "nested": [
                    {
                      "name": "fieldValue",
                      "type": "text",
                      "label": "Value",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "Number",
                  "value": "number",
                  "nested": [
                    {
                      "name": "fieldValue",
                      "type": "number",
                      "label": "Value",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "Boolean",
                  "value": "boolean",
                  "nested": [
                    {
                      "name": "fieldValue",
                      "type": "boolean",
                      "label": "Value",
                      "required": true
                    }
                  ]
                },
                {
                  "label": "List",
                  "value": "list",
                  "nested": [
                    {
                      "name": "fieldValue",
                      "spec": {
                        "type": "text",
                        "label": "Value"
                      },
                      "type": "array",
                      "label": "Value",
                      "required": true
                    }
                  ]
                }
              ],
              "required": true
            }
          ],
          "type": "array",
          "label": "Metadata"
        },
        {
          "help": "The namespace where you will upsert vectors.",
          "name": "namespace",
          "type": "text",
          "label": "Namespace"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "pinecone",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/vectors/upsert\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"namespace\": \"{{parameters.namespace}}\",\n\t\t\"vectors\": [\n\t\t\t{\n\t\t\t\t\"id\": \"{{parameters.id}}\",\n\t\t\t\t\"values\": \"{{parameters.values}}\",\n\t\t\t\t\"sparseVector\": \"{{deleteObjIfEmpty(parameters.sparseVector)}}\",\n\t\t\t\t\"metadata\": \"{{deleteObjIfEmpty(transformArray(parameters.metadata))}}\"\n\t\t\t}\t\n\t\t]\n\t},\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"id\": \"{{parameters.id}}\"\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Vector ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "pinecone",
      "description": "Creates new or updates an existing vector.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"help\": \"The vector's unique ID. If a new value is upserted for an existing vector ID, it will overwrite the previous value.\",\n\t\t\"required\": true,\n\t\t\"label\": \"Vector ID\"\n\t},\n\t{\n\t\t\"name\": \"values\",\n\t\t\"type\": \"array\",\n\t\t\"required\": true,\n\t\t\"spec\": {\n\t\t\t\"type\": \"number\",\n\t\t\t\"label\": \"Value\"\n\t\t},\n\t\t\"label\": \"Values\"\n\t},\n\t{\n\t\t\"name\": \"sparseVector\",\n\t\t\"type\": \"collection\",\n\t\t\"label\": \"Sparse Vector\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"indices\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"help\": \"The indices of the sparce data.\",\n\t\t\t\t\"spec\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"label\": \"Index\"\n\t\t\t\t},\n\t\t\t\t\"label\": \"Indices\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"values\",\n\t\t\t\t\"help\": \"The corresponding values of the sparse data, which must be the same length as the indices.\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"spec\": {\n\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\"label\": \"Value\"\n\t\t\t\t},\n\t\t\t\t\"label\": \"Values\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"metadata\",\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Metadata\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"fieldName\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Key\",\n\t\t\t\t\"required\": true\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"fieldType\",\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"label\": \"Type\",\n\t\t\t\t\"required\": true,\n\t\t\t\t\"options\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": \"String\",\n\t\t\t\t\t\t\"value\": \"string\",\n\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\"label\": \"Value\",\n\t\t\t\t\t\t\t\t\"name\": \"fieldValue\",\n\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": \"Number\",\n\t\t\t\t\t\t\"value\": \"number\",\n\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\t\t\"label\": \"Value\",\n\t\t\t\t\t\t\t\t\"name\": \"fieldValue\",\n\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": \"Boolean\",\n\t\t\t\t\t\t\"value\": \"boolean\",\n\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\"label\": \"Value\",\n\t\t\t\t\t\t\t\t\"name\": \"fieldValue\",\n\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"label\": \"List\",\n\t\t\t\t\t\t\"value\": \"list\",\n\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\"label\": \"Value\",\n\t\t\t\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"name\": \"fieldValue\",\n\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t\t\t\n    },\n    {\n        \"name\": \"namespace\",\n        \"type\": \"text\",\n\t\t\"help\": \"The namespace where you will upsert vectors.\",\n        \"label\": \"Namespace\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\r\n    {\r\n        \"name\": \"id\",\r\n        \"label\": \"Vector ID\",\r\n        \"type\": \"text\"\r\n    }\r\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "pinecone": {
      "api": {
        "qs": {
          "ids": 0
        },
        "log": {
          "sanitize": [
            "request.headers.Api-Key"
          ]
        },
        "url": "https://{{parameters.indexName}}.pinecone.io/vectors/fetch",
        "headers": {
          "Api-Key": "{{parameters.apiKey}}"
        },
        "response": {
          "error": {
            "message": "[{{statusCode}}] {{body}}"
          }
        }
      },
      "rev": 5,
      "name": "pinecone",
      "type": "basic",
      "label": "Pinecone",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "pinecone",
      "install": {},
      "apiJsonc": "{\n\t\"url\": \"https://{{parameters.indexName}}.pinecone.io/vectors/fetch\",\n\t\"qs\": {\n\t\t\"ids\": 0\n\t},\n\t\"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body}}\"\n        }\n    },\n\t\"headers\": {\n\t\t\"Api-Key\": \"{{parameters.apiKey}}\"\n\t},\n\t\"log\": {\n\t\t\"sanitize\": [\"request.headers.Api-Key\"]\n\t}\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "Your index name. For example, if your Index Name is `example-123.svc.exampleEnvironment.pinecone.io`, then use `example-123.svc.exampleEnvironment`.",
          "name": "indexName",
          "type": "text",
          "label": "Index Name",
          "required": true
        },
        {
          "name": "apiKey",
          "type": "password",
          "label": "API Key",
          "editable": true,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "installSpec": [],
      "scopesJsonc": null,
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"indexName\",\n        \"type\": \"text\",\n        \"help\": \"Your index name. For example, if your Index Name is `example-123.svc.exampleEnvironment.pinecone.io`, then use `example-123.svc.exampleEnvironment`.\",\n        \"label\": \"Index Name\",\n        \"required\": true\n    },\n    {\n        \"name\": \"apiKey\",\n        \"type\": \"password\",\n        \"label\": \"API Key\",\n        \"editable\": true,\n        \"required\": true\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n\t\"baseUrl\": \"https://{{connection.indexName}}.pinecone.io\",\n\t\"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.message || body}}\"\n        }\n    },\n\t\"headers\": {\n\t\t\"Api-Key\": \"{{connection.apiKey}}\"\n\t},\n\t\"timeout\": \"{{common.timeout}}\",\n\t\"log\": {\n\t\t\"sanitize\": [\"request.headers.Api-Key\"]\n\t}\n}",
  "countries": null,
  "_functions": {
    "addFieldsToUrl": {
      "rev": 3,
      "code": "function addFieldsToUrl(namespace, ids) {\n    let str = '';\n    if (namespace) str += 'namespace='+namespace;\n\n    for (let i = 0; i < ids.length; i++){\n        str += '&ids='+ids[i];\n    }\n\n    return str;\n}",
      "name": "addFieldsToUrl",
      "test": null,
      "appName": "pinecone",
      "arguments": "(namespace, ids)",
      "appVersion": 1
    },
    "transformArray": {
      "rev": 2,
      "code": "function transformArray(arr) {\n\tvar result = {};\n    if (\n        typeof arr === \"object\" &&\n        arr.length !== 0 \n    )\n        arr.forEach(pair => {\n            result[pair.fieldName] = pair.fieldValue\n        })\n    return result\n}",
      "name": "transformArray",
      "test": null,
      "appName": "pinecone",
      "arguments": "(arr)",
      "appVersion": 1
    },
    "deleteObjIfEmpty": {
      "rev": 2,
      "code": "function deleteObjIfEmpty(obj) {\n\tif (Object.keys(obj).length === 0) return undefined;\n\telse return obj;\n}",
      "name": "deleteObjIfEmpty",
      "test": null,
      "appName": "pinecone",
      "arguments": "(obj)",
      "appVersion": 1
    },
    "formatFilterQuery": {
      "rev": 2,
      "code": "function formatFilterQuery(str) {\n    try {\n        return JSON.parse(str)\n    }\n    catch (e) {\n        throw new Error(\"JSON representation of the filter query is invalid.\");\n    }\n}",
      "name": "formatFilterQuery",
      "test": null,
      "appName": "pinecone",
      "arguments": "(str)",
      "appVersion": 1
    },
    "formatUpserVectors": {
      "rev": 3,
      "code": "function formatUpserVectors(arr) {\n    if (arr && Array.isArray(arr) && arr.length > 0){\n        for (let i = 0; i < arr.length; i++){\n            arr[i].sparseVector = iml.deleteObjIfEmpty(arr[i].sparseVector);\n            arr[i].metadata = iml.deleteObjIfEmpty(iml.transformArray(arr[i].metadata));\n        }\n    }\n    return arr;\n}",
      "name": "formatUpserVectors",
      "test": null,
      "appName": "pinecone",
      "arguments": "(arr)",
      "appVersion": 1
    },
    "formatFilterQueryArray": {
      "rev": 2,
      "code": "function formatFilterQueryArray(arr) {\n    \n}",
      "name": "formatFilterQueryArray",
      "test": null,
      "appName": "pinecone",
      "arguments": "(arr)",
      "appVersion": 1
    },
    "transformResponseToArray": {
      "rev": 3,
      "code": "function transformResponseToArray(obj) {\n    return Object.values(obj)[0];\n}",
      "name": "transformResponseToArray",
      "test": null,
      "appName": "pinecone",
      "arguments": "(obj)",
      "appVersion": 1
    }
  },
  "approvedAt": "2023-06-23T11:50:25.61143+00:00",
  "categories": [],
  "opensource": false,
  "description": "The Pinecone vector database makes it easy to build high-performance vector search applications.",
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [
    {
      "name": "timeout",
      "type": "uinteger",
      "label": "Module timeout",
      "default": 40000,
      "validate": {
        "max": 300000,
        "min": 1000
      }
    }
  ],
  "inviteToken": "66831dcef08dd99f4848df6c54c1d424",
  "versionFull": "1.0.7",
  "compiledName": "pinecone",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n    \"common\": {\n        \"timeout\": \"{{parameters.timeout}}\"\n    }\n}",
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": "[\n    {\n        \"name\": \"timeout\",\n        \"label\": \"Module timeout\",\n        \"type\": \"uinteger\",\n        \"default\": 40000,\n        \"validate\": {\n            \"min\": 1000,\n            \"max\": 300000\n        }\n    }\n]"
}
