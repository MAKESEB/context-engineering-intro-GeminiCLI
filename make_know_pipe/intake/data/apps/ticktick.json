{
  "rev": 28,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.Authorization"
      ]
    },
    "temp": {
      "dateToParse": [
        "startDate",
        "dueDate",
        "completedTime"
      ]
    },
    "baseUrl": "https://ticktick.com/open/v1",
    "headers": {
      "Authorization": "Bearer {{connection.accessToken}}"
    },
    "response": {
      "error": {
        "429": {
          "type": "RateLimitError",
          "message": "[{{statusCode}}] {{body.error || body.message}}"
        },
        "message": "[{{statusCode}}] {{body.errorMessage}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "ticktick",
  "_rpcs": {
    "listTasks": {
      "api": {
        "qs": {},
        "url": "/project/{{parameters.projectId}}/data",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": {
            "label": "{{item.title}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.tasks}}"
        }
      },
      "rev": 2,
      "name": "listTasks",
      "label": "List Tasks",
      "appName": "ticktick",
      "apiJsonc": "{\n    \"url\": \"/project/{{parameters.projectId}}/data\",\n    \"method\": \"GET\",\n    \"qs\": {},\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"iterate\": \"{{body.tasks}}\",\n        \"output\": {\n            \"label\": \"{{item.title}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "ticktick",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "listProjects": {
      "api": {
        "qs": {},
        "url": "/project",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": {
            "label": "{{item.name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body}}"
        }
      },
      "rev": 2,
      "name": "listProjects",
      "label": "List Projects",
      "appName": "ticktick",
      "apiJsonc": "{\n    \"url\": \"/project\",\n    \"method\": \"GET\",\n    \"qs\": {},\n    \"body\": {},\n    \"headers\": {},\n    \"response\": {\n        \"iterate\": \"{{body}}\",\n        \"output\": {\n            \"label\": \"{{item.name}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "ticktick",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "projectInterface": {
      "api": [
        {
          "response": {
            "output": [
              {
                "name": "project",
                "spec": [
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Name"
                  },
                  {
                    "name": "color",
                    "type": "text",
                    "label": "Color"
                  },
                  {
                    "name": "closed",
                    "type": "boolean",
                    "label": "Closed"
                  },
                  {
                    "name": "sortOrder",
                    "type": "number",
                    "label": "Sort Order"
                  },
                  {
                    "name": "groupId",
                    "type": "text",
                    "label": "Group ID"
                  },
                  {
                    "name": "viewMode",
                    "type": "text",
                    "label": "View Mode"
                  },
                  {
                    "name": "kind",
                    "type": "text",
                    "label": "Kind"
                  }
                ],
                "type": "collection",
                "label": "Lists"
              },
              {
                "name": "tasks",
                "spec": {
                  "spec": [
                    {
                      "name": "id",
                      "type": "text",
                      "label": "ID"
                    },
                    {
                      "name": "isAllDay",
                      "type": "boolean",
                      "label": "Is All Day"
                    },
                    {
                      "name": "projectId",
                      "type": "text",
                      "label": "List ID"
                    },
                    {
                      "name": "title",
                      "type": "text",
                      "label": "Title"
                    },
                    {
                      "name": "content",
                      "type": "text",
                      "label": "Content"
                    },
                    {
                      "name": "desc",
                      "type": "text",
                      "label": "Desc"
                    },
                    {
                      "name": "timeZone",
                      "type": "text",
                      "label": "Time Zone"
                    },
                    {
                      "name": "repeatFlag",
                      "type": "text",
                      "label": "Repeat Flag"
                    },
                    {
                      "name": "startDate",
                      "type": "text",
                      "label": "Start Date"
                    },
                    {
                      "name": "dueDate",
                      "type": "text",
                      "label": "Due Date"
                    },
                    {
                      "name": "reminders",
                      "spec": {
                        "type": "text"
                      },
                      "type": "array",
                      "label": "Reminders"
                    },
                    {
                      "name": "priority",
                      "type": "number",
                      "label": "Priority"
                    },
                    {
                      "name": "status",
                      "type": "number",
                      "label": "Status"
                    },
                    {
                      "name": "completedTime",
                      "type": "text",
                      "label": "Completed Time"
                    },
                    {
                      "name": "sortOrder",
                      "type": "number",
                      "label": "Sort Order"
                    },
                    {
                      "name": "items",
                      "spec": {
                        "spec": [
                          {
                            "name": "id",
                            "type": "text",
                            "label": "ID"
                          },
                          {
                            "name": "status",
                            "type": "number",
                            "label": "Status"
                          },
                          {
                            "name": "title",
                            "type": "text",
                            "label": "Title"
                          },
                          {
                            "name": "sortOrder",
                            "type": "number",
                            "label": "Sort Order"
                          },
                          {
                            "name": "startDate",
                            "type": "text",
                            "label": "Start Date"
                          },
                          {
                            "name": "isAllDay",
                            "type": "boolean",
                            "label": "Is All Day"
                          },
                          {
                            "name": "timeZone",
                            "type": "text",
                            "label": "Time Zone"
                          },
                          {
                            "name": "completedTime",
                            "type": "text",
                            "label": "Completed Time"
                          }
                        ],
                        "type": "collection"
                      },
                      "type": "array",
                      "label": "Items"
                    }
                  ],
                  "type": "collection"
                },
                "type": "array",
                "label": "Tasks"
              },
              {
                "name": "columns",
                "spec": {
                  "spec": [
                    {
                      "name": "id",
                      "type": "text",
                      "label": "ID"
                    },
                    {
                      "name": "projectId",
                      "type": "text",
                      "label": "List ID"
                    },
                    {
                      "name": "name",
                      "type": "text",
                      "label": "Name"
                    },
                    {
                      "name": "sortOrder",
                      "type": "number",
                      "label": "Sort Order"
                    }
                  ],
                  "type": "collection"
                },
                "type": "array",
                "label": "Columns"
              }
            ]
          },
          "condition": "{{parameters.data == true}}"
        },
        {
          "response": {
            "output": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              },
              {
                "name": "color",
                "type": "text",
                "label": "Color"
              },
              {
                "name": "sortOrder",
                "type": "number",
                "label": "Sort Order"
              },
              {
                "name": "viewMode",
                "type": "text",
                "label": "View Mode"
              },
              {
                "name": "kind",
                "type": "text",
                "label": "Kind"
              }
            ]
          },
          "condition": "{{parameters.data !== true}}"
        }
      ],
      "rev": 3,
      "name": "projectInterface",
      "label": "Project Interface",
      "appName": "ticktick",
      "apiJsonc": "[\n    {\n        \"response\": {\n            \"output\": [\n                {\n                    \"name\": \"project\",\n                    \"type\": \"collection\",\n                    \"spec\": [\n                        {\n                            \"name\": \"id\",\n                            \"type\": \"text\",\n                            \"label\": \"ID\"\n                        },\n                        {\n                            \"name\": \"name\",\n                            \"type\": \"text\",\n                            \"label\": \"Name\"\n                        },\n                        {\n                            \"name\": \"color\",\n                            \"type\": \"text\",\n                            \"label\": \"Color\"\n                        },\n                        {\n                            \"name\": \"closed\",\n                            \"type\": \"boolean\",\n                            \"label\": \"Closed\"\n                        },\n                        {\n                            \"name\": \"sortOrder\",\n                            \"type\": \"number\",\n                            \"label\": \"Sort Order\"\n                        },\n                        {\n                            \"name\": \"groupId\",\n                            \"type\": \"text\",\n                            \"label\": \"Group ID\"\n                        },\n                        {\n                            \"name\": \"viewMode\",\n                            \"type\": \"text\",\n                            \"label\": \"View Mode\"\n                        },\n                        {\n                            \"name\": \"kind\",\n                            \"type\": \"text\",\n                            \"label\": \"Kind\"\n                        }\n                    ],\n                    \"label\": \"Lists\"\n                },\n                {\n                    \"name\": \"tasks\",\n                    \"type\": \"array\",\n                    \"spec\": {\n                        \"type\": \"collection\",\n                        \"spec\": [\n                            {\n                                \"name\": \"id\",\n                                \"type\": \"text\",\n                                \"label\": \"ID\"\n                            },\n                            {\n                                \"name\": \"isAllDay\",\n                                \"type\": \"boolean\",\n                                \"label\": \"Is All Day\"\n                            },\n                            {\n                                \"name\": \"projectId\",\n                                \"type\": \"text\",\n                                \"label\": \"List ID\"\n                            },\n                            {\n                                \"name\": \"title\",\n                                \"type\": \"text\",\n                                \"label\": \"Title\"\n                            },\n                            {\n                                \"name\": \"content\",\n                                \"type\": \"text\",\n                                \"label\": \"Content\"\n                            },\n                            {\n                                \"name\": \"desc\",\n                                \"type\": \"text\",\n                                \"label\": \"Desc\"\n                            },\n                            {\n                                \"name\": \"timeZone\",\n                                \"type\": \"text\",\n                                \"label\": \"Time Zone\"\n                            },\n                            {\n                                \"name\": \"repeatFlag\",\n                                \"type\": \"text\",\n                                \"label\": \"Repeat Flag\"\n                            },\n                            {\n                                \"name\": \"startDate\",\n                                \"type\": \"text\",\n                                \"label\": \"Start Date\"\n                            },\n                            {\n                                \"name\": \"dueDate\",\n                                \"type\": \"text\",\n                                \"label\": \"Due Date\"\n                            },\n                            {\n                                \"name\": \"reminders\",\n                                \"type\": \"array\",\n                                \"spec\": {\n                                    \"type\": \"text\"\n                                },\n                                \"label\": \"Reminders\"\n                            },\n                            {\n                                \"name\": \"priority\",\n                                \"type\": \"number\",\n                                \"label\": \"Priority\"\n                            },\n                            {\n                                \"name\": \"status\",\n                                \"type\": \"number\",\n                                \"label\": \"Status\"\n                            },\n                            {\n                                \"name\": \"completedTime\",\n                                \"type\": \"text\",\n                                \"label\": \"Completed Time\"\n                            },\n                            {\n                                \"name\": \"sortOrder\",\n                                \"type\": \"number\",\n                                \"label\": \"Sort Order\"\n                            },\n                            {\n                                \"name\": \"items\",\n                                \"type\": \"array\",\n                                \"spec\": {\n                                    \"type\": \"collection\",\n                                    \"spec\": [\n                                        {\n                                            \"name\": \"id\",\n                                            \"type\": \"text\",\n                                            \"label\": \"ID\"\n                                        },\n                                        {\n                                            \"name\": \"status\",\n                                            \"type\": \"number\",\n                                            \"label\": \"Status\"\n                                        },\n                                        {\n                                            \"name\": \"title\",\n                                            \"type\": \"text\",\n                                            \"label\": \"Title\"\n                                        },\n                                        {\n                                            \"name\": \"sortOrder\",\n                                            \"type\": \"number\",\n                                            \"label\": \"Sort Order\"\n                                        },\n                                        {\n                                            \"name\": \"startDate\",\n                                            \"type\": \"text\",\n                                            \"label\": \"Start Date\"\n                                        },\n                                        {\n                                            \"name\": \"isAllDay\",\n                                            \"type\": \"boolean\",\n                                            \"label\": \"Is All Day\"\n                                        },\n                                        {\n                                            \"name\": \"timeZone\",\n                                            \"type\": \"text\",\n                                            \"label\": \"Time Zone\"\n                                        },\n                                        {\n                                            \"name\": \"completedTime\",\n                                            \"type\": \"text\",\n                                            \"label\": \"Completed Time\"\n                                        }\n                                    ]\n                                },\n                                \"label\": \"Items\"\n                            }\n                        ]\n                    },\n                    \"label\": \"Tasks\"\n                },\n                {\n                    \"name\": \"columns\",\n                    \"type\": \"array\",\n                    \"spec\": {\n                        \"type\": \"collection\",\n                        \"spec\": [\n                            {\n                                \"name\": \"id\",\n                                \"type\": \"text\",\n                                \"label\": \"ID\"\n                            },\n                            {\n                                \"name\": \"projectId\",\n                                \"type\": \"text\",\n                                \"label\": \"List ID\"\n                            },\n                            {\n                                \"name\": \"name\",\n                                \"type\": \"text\",\n                                \"label\": \"Name\"\n                            },\n                            {\n                                \"name\": \"sortOrder\",\n                                \"type\": \"number\",\n                                \"label\": \"Sort Order\"\n                            }\n                        ]\n                    },\n                    \"label\": \"Columns\"\n                }\n            ]\n        },\n        \"condition\": \"{{parameters.data == true}}\"\n    },\n    {\n        \"response\": {\n            \"output\": [\n                {\n                    \"name\": \"id\",\n                    \"type\": \"text\",\n                    \"label\": \"ID\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"label\": \"Name\"\n                },\n                {\n                    \"name\": \"color\",\n                    \"type\": \"text\",\n                    \"label\": \"Color\"\n                },\n                {\n                    \"name\": \"sortOrder\",\n                    \"type\": \"number\",\n                    \"label\": \"Sort Order\"\n                },\n                {\n                    \"name\": \"viewMode\",\n                    \"type\": \"text\",\n                    \"label\": \"View Mode\"\n                },\n                {\n                    \"name\": \"kind\",\n                    \"type\": \"text\",\n                    \"label\": \"Kind\"\n                }\n            ]\n        },\n        \"condition\": \"{{parameters.data !== true}}\"\n    }\n]",
      "appVersion": 1,
      "parameters": [],
      "accountName": "ticktick",
      "altAccountName": null,
      "parametersJsonc": null
    }
  },
  "flags": {},
  "label": "TickTick",
  "theme": "#ffb001",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Task",
      "modules": [
        "watchTasks",
        "getATask",
        "createATask",
        "updateATask",
        "completeATask",
        "deleteATask"
      ]
    },
    {
      "label": "List",
      "modules": [
        "getAProject",
        "listProjects",
        "createAProject",
        "updatesAProject",
        "deleteAProject"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "makeAnApiCall",
        "watchCompletedTasks"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000002ec4944415458c3ed974d4854611486df3ba692965991412242e228fd2c6a111144b408da144406096eac85b5a84591519b4a68d3a24d51042d5ab48a764105451a4244044111584a191621a5569bfc7f5accb97ab88e33f70e859b0e0c33f7bbdf79dff3f37e67ee95fedb025b90643310fe4c492a93542ce9a7a4e920480435638b1210a724d549da21699ba406236f9534f84fca03849fb5c025e02330c9ac7d006a5c65fe3a7900ec015e03d3463a090c00ddc07560653400f32d06d2f65d30790b3068c413c033a0cd80cb81a2b04a59aab61fe803da8125d17d71cabed791ff002e00ab720139dfcd408ff98e5b10f9037000f5c01b47de16661bc3770df0d8e9a40fd89a248000b86cce53c0f97ce4ceb70cb8e1f4320434252d7f23f0c900ba81aa98e40170121835df31e034904adafba396c12470d8ad7ba2998cdcfa3ee0bb2bfd4d136a7ef24816b70ca01fa88b90d7021d404364dd8b0ed34075ecd2bb00ca81a706d2693d0def5502b7edde4b60bbad57034f1c790fb02911b90b6005f0ca80eefa730eec02861d513f70c84a1dda90b522dab6a5c06ac30fb20616238052e008f0d511feb6731e8aaedd8bcef95e047a817b64999cd163d4196d414423bb999d11dee688ce057edff63c072a7205905584594eca7ae00199398169608ee8ecbac6b2c73494ca1540f418b6ce032aeb698765be21c7be83d61e80e339c5c9dc41d4355fcf5cc552d9406d6d19f0d0b0be001b739e0c071a8ee209e02c71a7d95c9c134ea4d7c837d25dd9d2c05b731cb656c40ac291b700df0ce3bde926d13fe2013bd761106780e5f38138bf4ae014b3637904688e451e014b9920c3e1336e6a6f2133924b1d6989a9bd1978e44437021ccb55fa205710928a243549ea9094b65b13920624f52af3303a2da94a52bda45a4925b6af57d2394977244d15f4d4ec326c04ae9079160ccf7e369b023e0357817571ca1e2b2c578db4a49d92b658b61586f14b52bfa41792ba24bd8b9b75a12f2681a4c5924aed7a4cd2a8b54385bea4fcb705b13fb82ccb492a1482ad0000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda7930000066d4944415478daed9a6b8ca5431ec67fa7bbe7821963c5b8f4320c868948884bb00c71cf20eb9245d81d1fc466c986914ddc924596fdb236bb21123e20c40784f866171f5877bb3bebcec8187433eed9b9b08c9e99eefeed87aad6e574bdefe93ee7bca723ce939c74f7e9f7ad7a9ea7aafe55f5af822ebae8a28b2ebaf8d1a2d6c9cad4b15f6700b300818d80b55a47a97c87be0e08ee01e603fb00fb03fb020b801d8035c072e0bfd3a2be0a039256de1ef819700a7004b02730271a3286d5c0ece912df560312e1f381338065c0c1c0d6d329b0230644f1b380a5c0ef80c38099d32dae72039256df15b812b800983795227eb00624e20f016e028ee1fbe3bb5ee84660007827fefc1cf80858d744bd35e024600878864ecf22ead8e718f50d8b31acbeadfe453d59ed57678cbddf42bd4bd441f543f53cb5af99f25a157fb4bab240f868147e85ba50adb54a30a977a1fa5c52d75af57a75bb668d6d86c421eaeb05e2bf56ef5417b793502c6b9e7a6fa6ce4dea83ea5e959990885fa03e5520fe13f56275ab769288f5f6a9d745b1396c504fadda80d9eaedb18bd763503db31dddbdc0f8f3d57525b1e64feaacaa5bff5cf5ab82963fa3ddee27f51eaebe6b311e5677a86cfc4712fdea8b0563fe3715b6fcee2543cec8695127c6fef2d8d5ea7147bbc77c52efb6ea3d05434e75c0301b5517fd63e13baaffcc1058699ba37d5267affa7b8b83de7a755927c4a39ead7e9b093ccb2b1cf7e718e6f81c36ab7f302eaa2a43d212f76448bca6ee5691f823d5d525e3fe3ee3c2a7524432bb9a5ff1ddd8ced64fc4efa13e5b22fe79ab5cf064081debc4a96f9d7a541989f8bf9a7a4a6cd152c28e07bd7b4bc4bfd7a8de2a0cf8ad13a3f00a4be6dde4dde3d4358668fdcba231ebe4567a6b0deb90eac5d789b8b9600cf6968841dd5f7d2979677d14383715913cbf2c3e93c326c38cd0f15d5faf7a7f86d01f732d9188e957ff96796fc8b06ee84f9e1ddb590e14881f8dc362db8e894fc4cc56ff9e217569890133d45b2d5ebc8ca88fab073abebd7dde623c6d088c9574fd4619a13e60ab7a6f804d0ddefb0cf81a989bf95f0f219bd30fdc00fc9c903dce6100b806180428cafa44637a999875de0c7c53f66e21a2e373d47f64bae4c5452d12bf9fa95e680880451855ff6758d4e4b05efdd5645adef10dd3d3eabfe367857a57a3a1d3a8070c137279296a840c7016b55a0d75337037f001215f7850eed1d862396c016e011e68d47a89b805849e946aaa35d2d84339b600eb33dfef54f652242cf004e17ce0116084c9e321e06660780a5d77e78cd82f98d88053326004f834f3fd421a389b105f095c04dcd6884cc40bc0b5c086291806e1c8ad1e9fd2205e3532004220aa1f44fb003f69f462ad561b33e273e02ae06a42802cc22021e8bd5f676223cc05f6cb7cbf8a66cf1e9239faf818acea03d492a94c4df1d91ef534f5cd4cd0db6013dbdbf8fc0186ac548a6fd4a52d4d9ff1e59faa6f6508dfd02459e21ae051c797bdebd42b9de2f63629efd2b8be48b13aae319a139f54d0abde9d31e025e38aae893251e7abbf502f37ec19663659d676ea93197e0f35536611d95c4264b32117d899cd4931b77363774fb1c5b00e699d5b2c6427f55f19975f6eb99bb5ceeb990caf370dc9d4b63a7d597436c5a8fad796bb5a739c7a0cbbcbe10ca76bdbda332d4f8b7f69d5c9c9895c504f57bf2868fdbddaca25a9f43c274e891a4e854eacda8484c712755586c7907a49253c62a15b1b361839acaad2843af14547f20f1a0e502b757f9161a795c38025a9af16ebee53cf52df29a8fb354316aa23e704c7c56e9fc306f5cfc694792b6492fafa0d59a8a273828f6c75d5d704a9b3d58f0b088da8ff31ccc5f3a74a2ca9637b43807dd1fcb19c8640b8cc369f4d4e8660cd707af3a1c5188ae4af325caa98574434113dc7b0b6bfdc90e0d85852fec7517c36413b19347db3c8f1cb4a2710921e07963c3e0aac25eccede02de25ec0abf22ecd6b621dc2fdc9b709b74bff8776f4999af1376978f315d576d93565b6c489597b5568ad1d8a587e2678bc549d47a7c6b88f6d506bc264c9813c7fcab25e3b5150c1b22fdaf8d79be69175f60c402c3edb09763ebb68a4dea2b8638d2f6f478db074e426e17c2e5c9a5c0a184dba4dbd0380b252195bd0658013c0e3c057c024da4b73b6d40c6883e42c27211b018d8837026308f70e65023dcf8fc328a1c04de26dc28fd8c90996ebbf0ca0d68604a6f34a63772188e9f912ac576d145175d74d14517dfc3ff010396a208079974c00000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2023-08-16T10:46:51.675103+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda79300000f354944415478daed9d799065557dc73f6fa6196617060664d84164715cc0c8220a2a828122c4582605184c65b1424a9458122bc6248418d1324062829a6854d0281502950ae286118d2bb20d2a8bc822238b30c3cc30c30cccd2fd3ef9e3775fdee927337ddfbdb7fbbddb7dbf555dd333d3fdcef92de7777ee777cef91e68d0a04183060d1a3468d0a04183060d1a3468d0a04183060d1a3468d0a0418306d310ad417760aaa076be9d0dccca646f03a300add68c51c5388c0cba03552333740b980b2c019602fb027b647f2e057606e600f7029703eb07ddef41a1f66e9f8cecb9c03ec061c04b81e5c00b08c3ef9afdff488fcc2b803380479a08502324465f4018f918e078e02862942f2442fd44e84c053316b57280ccf0b38891fe6ae034e038601911d60b7deca0e51a246ae10099e147801702bf997d2d2722408312186a07c80c3f9b30fcef00bf9d7dbf53454db468a680e14332c72f03ce06ce010ea73ac337c830540ed093d19f049c079c08cc9ba4269b0830e80e7490187f7fe05ce0f780bd26b9d9196d7c18120748e6fa1380f712a37ece14343d465403672c06ea00c9a89f0fbc05b80038846a47a6c066e0196023b00ed84494806fcbbe9f4a795bc0de597fd6c260cbd0037380c4f84b8177027f02ec56c54713cafd0551eabd0bb80f5849187f2de11063c096ec67a752de57007f073c067c10b8579d597b116ae7ebf9ea3fab1b2d87b6fab47abb7ab97aa67aa8ba486d25ca1fb4bc07aa5fcbfa3caa7e55fdb5ceffcf0824cad85bfda4fa4c09c38fa94fa8d7a86f510f50771a368566fd795ee6ec5b7bfa7f937a8a3a324c7d9e4c45748cff6975738911ff88faafea49997287cae83d32efa4be4bddb01d591e50cf53170fab1c5529a213f63f51c2f8ebd4cfa9af55e70fb3c21299cf50574e20d7535984386098652aab88dd33218b84fd6deacdea5beb305212995f96f53b0fb6aa5f525fa5ce1e66f98a286381fa7e8b257cebd48fab873904495d4e7951f751af35e6fabc68abf7a8e7381df2824c1123eab9ea937d1abeadfe4cfd6323a31fea51df23f322f5328b4f75d7ab4bea20ef448a407d8391e8f46bfc9bd4d75ba3709838fc7959e42a8227b20830ab2e726f4f11a887a8dfea530163ea37d4a3eb32ea7b64fe0df5a182c67f46bd509d5b17b977a48c05ea3f19095c3fc6ff8ababca6c63f52bda5a0f1c78c15ce1e75927d47ca38535ddd8702daea0deae1755280e3eb1bd7667214c177d417d549f61d29e3a04ca07ef0036b581acdfa3b5ffd90c593bebb8da256ad64df9e3246d48b1c5ff69c083f555f57370524f2becdfe57391dfc523ddb3a277d8932505f612cdff2625da6c05a292091f7348b277d1bd43f5377ae93ec3b52c85c23f1cb5bfcd8a67e545d58270524c67f89317515c136a3c0b5ab358b7c3b52c8b17d8e865bac77d2774d1fce9ea26dac760eaa93ec13296544fd601f0a596b143c6aa580acbf0bd54b2d9ef4dd9e0d965ac9be2385601cc2f8711f23e04ab38d9dba209373b6519e5e5bd0f82bd5375a837d8d7e9482faf63e46c483eaf1751a01899c27abf71734fe7ae36cc04e75913baf6296a85fcea9843163a3644e5d9490187fb9fdd7373ad86a1c59dba52e72f7a39813d5c7fb0881b599ff1c9ff45d6df1a4ef8beafe7591bb1fe5b4d4f719071df3e0dfd479755182e3cff46d2938fa7fa41e33ad8c9f286717f387ff35c66e592d14617775f30e63fe2e8287d5373b5d92be1ee574e6c507732ae34675cf3a28c2f195bebcf2f562bdfaa70e69d237aba2cf398cb8e0311146816f02abaa68d4ee92ec002b3e199c7cce51c0df020716f8986dc0e781cf00dba6dde50fbbf3fffbcdb705baca38cd5bda50c9e83cc1c8ca2f57f7adf8b33b67fa8a6cef8ea9ffa5ee57a5630e15ec6e835e9d532937199974298538bef0f48decb3b7a8d759c12922c757fa8a267ddf354e044f4fe3278adac7fc27603e61c95dafc4f8bbab57387ee5d1566f35cee1179a731d9ff4ad2b68fcfb9c0e7bfb391485fa72f517399432aa5e50e1e8bcd8ed1f315f69245e7ddd1f48647a634e999e0b6b8d13d0b539c85ac610a8a71ab75a26c2d3c652a8b003d8bd66f57627aec3af532f51f7cad36622cfd1ea8a82c6df9cb5b9685a1bbf476167abcfe650cea3962884f48cce89ae59a506f977f5853b6a37f9ec038d9b394593be6bad20c7a90512a59d6fbe53bf3f510f2ea29ca4ade3d5dbfa34cca8fa3fc675abe73c7164b798f5f19cb23c177ea81e35238cdf63940bcd571bff9e91b8156de7e0cc9045d056ef54cfb26703ca6ed2f76e639a2a8287d4d3eb68fcb285a059042d6b9e0ac7663266ee02984fb088bca6e0efb78017019700ef0296f418eb74e0fc4c967eb116f87be06b503fd6f12a1c601ef91c600bc50999da04bdcbb325fbbb0cf82b82a265dfecdf5e06bc2ff97b3fd80a5c015c494d2b7d6539825ae4e7e86d539c977733f08f84039c4f39fab805c01f127c44571174744715f81c81af031f21c8a74a238948b30996b4edf1184ae8731bc1755438f24c254954a11e7604539f229ce021e0428239b428e6006f22c82817512c12ae002e22c8a8aa0efd27036f65fce04a1b90180cff0b7c9688ae8550d6013a146c79b01325a69c56ab85ba05f84fe009c2095e554286118ab392ad248c7f4ba76f15e338e04c261e347b00d750c201cae6006d82662d4f689f53b6bd4cd16de05b049be817c8ef8055613d1189be92f4a94af49358976ebc0a07d848bee4aef34c4ba9a552a2f07b81f7009791112e4e01b61209dfa799bca46f04d83de7cfaea1c4e8876ace03ac219f033c2ffb2a8d44f14f0017037f49e406930989a5dea5c086496c672ef9a7a6c719020758458c8c89b02bf93d7b42b45aad8e236c023e49d4096e63f2b87f5710cbc7c948fad2a8b818d833c7afb489013056a6ddaa22409ef5f9428223b75264861805ae07de067c91581e55898709e3df9cb4395958967d4d8451c2014aa12a07c81312e7010754d0deaf203388c4287d07f031aa7b0aee69e01f08079b8a4adf01c02e397e6e13f068d9c64a2dcb32ac269f27ce26d6ee73cb767a82fe3c0cfc35f03764e1ba04468962d1154c5da52faf8e9e041e29db581511607d1f1d7909b1769d944d93242fd8007c947871e4768a5520056e003e4494a1a7028b88d2741ebbfc9c48024b45a52a1c6033f000f994bc3ff11ec0a42253c836221f3817f832fde7053f22a2c8cf93cf9c142483615fe0889cbf762f154c735538409b50561edefd5d88eadda4c7d2c460b71091e053e4afd93f42247d9355e9db1e8e225fa2fc2cf0638aefaefe3faaba17702759389a0023c06bc9a681c94662b88788a7682eced1cf75c45affba9ecf986ccccd7493e72dc435c04fa6aa633b84dd7b73d7e53c3cf1a4718e704a0f4f64eded6c50d7ddeaaf1258b5ed1e265d30557d4b0ebc1caede955387df3158d74bb75fd56ee07ae0fbc453ae13bdd9bb043815b8919255ac7e906c26fd0711b14e078e26b6964781bb898da66f035b07b0b77f0a7070ce9fbd9958050c1e89079f60d09de5c1bdea4b077584caee8da685d9485a9a458729ef4fd6e65eea3773ea6ebd254f57a7289d032423e54ea2149b070711fbf1795ef8ae1cd972d156abb5b1d56a3dde6ab556b75aad2dc932724a9018f014e0e5397fed1eb28a6415a82a0984d891bb817c617d847080237a14316390c8bc3771f863518e5feb6c853f0ad524a8553a00c411a9fb73feece199e0935219ac095ac483d8c7e5fcf9c7899a46a90da04981dd5b3b1f363f85ca63c6ddfb19150592bce948e3be445e7cde61bd75940875acfd3d0ef12575d94c7202bbf71bffa58fc1b2dab8f43abc7ab2bbd6beac0fc19e352e97d49f2b37bf8e5aeaefdb1fcfe0d50e3bbb581205fa258b7e4c7dd3507b77b5fa79a57153292f5659175e25bbb9c045f647ae706be638c32f6471bd74de51e8e7026a5bfd8cc33af7ef40d0838dfb8079d13698c60a5d201d66243ad9cb7812a69f0ba83fcb22467d749208fcbbf637cf8daa575911d7cf3020d1c552f563f6472efdacfae7d6f1fd40bb9b449f323f81a4c626cde7a6831324c62ffa62eaf5d6956f2011fec5c6fcde0fb66691a0b6d34122ff32e3418c7e8d7fbffa9abacadfab84b38cc710fbc1a8912cd58e742191fb10f50bf6ffa6c053ea3bad63e8df8e32e619ab827e47c198f1f0f219d68459dc2e79e5eb0c0abb7e1947b6a81f3123beac3d92d1b0a7fad9020a517d447daf91480d653448e4dcc57836f6be027276c8256b9fff6c4f392f50bf6a3112a64d0609d3499d68302c0ab24b3373ac91c06e28209fc6499fe9492e9938c1d1eaf70b3a41dbe0effb80c1123ad067e6ec96750f54ffc258b3177d35f40ef5d5d3d2f83d0a433dcea0522daaacad0697df7b8c446b4a93a5c4f0fb198ca23759fcf1288db380a73adde8e477a0bc8e13dc54c209cc947e8741567d8c59b974329498f47b9ef156e00546a5735389fe6b3cb2759a038a660361354a043d16f8007022e58e878d028f11e7f86f248e4c3d401c566d43b1d333593f5bc4c5d6fd8873fbaf270e70ec4fc67750106de087c471f56f030e82646a60b45689131c46dcc0f92dca2914e276d256e2aee25dc4e5897b88534abf24cefc6fa14bae940eb959048dcd1ce278d61ec445cd238023896b6dcb08cabab27adb4a9cecb908b80306472f37505eb3c409f626d8bffe80e2bc3dcfd90471756d3d718cfa09e029e262c57ac21924ce282e24380c76258cbf7bd69705547b78f52982d8e912e222eb40b905074e6c9738c17ce06ce0ddc0a153d037e9468056cf9f93d5de8304addc956457ea07cd2d387007e820738459c4658d0b88cb23f307ddaf8af00c919b5c0a7c17181db4e13b188e5e6448a2c152e02c82f1e37006747fa0028c01f7111436571179c8c0477d8ae1e94982241abc18f82322415c36acfd7d2e110863ff37c128b602181b26c377307c3dca904483b9c4b2eb1ce00dc0f3a9fe3e4355e810377d9d782dec7b0495cb508dfa14c3d9ab0489232c20f283371354aa65d7e155621b41477303702db1bedf08c36bf80e86bb77091247d89958259c0cfc3ab13edf8da9cf13c688a5e55dc488bf81b861bc1986dff01dd4a3973d482a74bb1179c22b8163883701f62418c9aa9e26da0433c72ac2e83f20aec4df4d3842bb2e464f51bf1ef7207186c5c4b47028b09c583dec4b14741613534887afb8e31cbd0cdc6dba34ec9b088ab83544c1e66ee206f44f09b2e8f50ca87c5b25eaddfb1e24d3448ba8212c262a7bbb11ab882544c56f3111253a0ce6a3c4e8de40187d2d71117375f6fd06622d5f785f6158317d24c9811e0769d18d049daae0b4337083060d1a3468d0a04183060d1a3468d0a04183060d1a3468d0a04183060d1a349891f83f53ba10d961c2b7b70000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": null,
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "getATask": {
      "id": 110789,
      "api": {
        "qs": {},
        "url": "/project/{{parameters.projectId}}/task/{{parameters.taskId}}",
        "method": "GET",
        "headers": {},
        "response": {
          "output": "{{generalResponse(body, temp.dateToParse)}}"
        }
      },
      "rev": 9,
      "crud": "read",
      "name": "getATask",
      "epoch": null,
      "flags": {},
      "label": "Get a Task",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List ID",
          "options": {
            "store": "rpc://app%23ticktick@1/listProjects",
            "nested": [
              {
                "rpc": {
                  "url": "rpc://app%23ticktick@1/listTasks",
                  "label": "ID Finder",
                  "parameters": [
                    {
                      "name": "projectId",
                      "type": "select",
                      "label": "List ID",
                      "options": "rpc://app%23ticktick@1/listProjects",
                      "required": true
                    }
                  ]
                },
                "mode": "edit",
                "name": "taskId",
                "type": "select",
                "label": "Task ID",
                "options": "rpc://app%23ticktick@1/listTasks",
                "required": true
              }
            ]
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint with parameter \"id\" defined in Mappable parameters.\n    \"url\": \"/project/{{parameters.projectId}}/task/{{parameters.taskId}}\", // Relative to base URL\n    \"method\": \"GET\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {}, // Query string\n    // Response handling\n    \"response\": {\n        \"output\": \"{{generalResponse(body, temp.dateToParse)}}\" // Return JSON response body as an output bundle.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "projectId",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "sortOrder",
          "type": "number",
          "label": "Sort Order"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Content"
        },
        {
          "name": "reminders",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Reminders"
        },
        {
          "name": "startDate",
          "type": "text",
          "label": "Start Date"
        },
        {
          "name": "dueDate",
          "type": "text",
          "label": "Due Date"
        },
        {
          "name": "desc",
          "type": "text",
          "label": "Desc"
        },
        {
          "name": "timeZone",
          "type": "text",
          "label": "Time Zone"
        },
        {
          "name": "isAllDay",
          "type": "boolean",
          "label": "Is All Day"
        },
        {
          "name": "priority",
          "type": "number",
          "label": "Priority"
        },
        {
          "name": "repeatFlag",
          "type": "text",
          "label": "Repeat Flag"
        },
        {
          "name": "completedTime",
          "type": "text",
          "label": "Completed Time"
        },
        {
          "name": "status",
          "type": "number",
          "label": "Status"
        },
        {
          "name": "items",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "status",
                "type": "number",
                "label": "Status"
              },
              {
                "name": "title",
                "type": "text",
                "label": "Title"
              },
              {
                "name": "sortOrder",
                "type": "number",
                "label": "Sort Order"
              },
              {
                "name": "startDate",
                "type": "text",
                "label": "Start Date"
              },
              {
                "name": "isAllDay",
                "type": "boolean",
                "label": "Is All Day"
              },
              {
                "name": "timeZone",
                "type": "text",
                "label": "Time Zone"
              },
              {
                "name": "completedTime",
                "type": "number",
                "label": "Completed Time"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Items"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "ticktick",
      "description": "Gets information about a specific task.",
      "expectJsonc": "[\n    /*  {\n        \"name\": \"projectId\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"required\": true,\n        \"options\": \"rpc://listProjects\",\n        \"mode\": \"edit\"\n    },\n    {\n        \"name\": \"taskId\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"label\": \"Task ID\",\n        \"rpc\": {\n            \"label\": \"Search Tasks\",\n            \"parameters\": [\n                {\n                    \"name\": \"projectId\",\n                    \"label\": \"List ID\",\n                    \"type\": \"select\",\n                    \"required\": true,\n                    \"options\": \"rpc://listProjects\"\n                }\n            ],\n            \"url\": \"rpc://listTasks\"\n        }\n    }, */\n    {\n        \"name\": \"projectId\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"options\": {\n            \"store\": \"rpc://listProjects\",\n            \"nested\": [\n                {\n                    \"name\": \"taskId\",\n                    \"label\": \"Task ID\",\n                    \"type\": \"select\",\n                    \"mode\": \"edit\",\n                    \"options\": \"rpc://listTasks\",\n                    \"required\": true,\n                    \"rpc\": {\n                        \"label\": \"ID Finder\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"projectId\",\n                                \"label\": \"List ID\",\n                                \"type\": \"select\",\n                                \"required\": true,\n                                \"options\": \"rpc://listProjects\"\n                            }\n                        ],\n                        \"url\": \"rpc://listTasks\"\n                    }\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"projectId\",\n        \"type\": \"text\",\n        \"label\": \"List ID\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"number\",\n        \"label\": \"Sort Order\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Content\"\n    },\n    {\n        \"name\": \"reminders\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"text\"\n        },\n        \"label\": \"Reminders\"\n    },\n    {\n        \"name\": \"startDate\",\n        \"type\": \"text\",\n        \"label\": \"Start Date\"\n    },\n    {\n        \"name\": \"dueDate\",\n        \"type\": \"text\",\n        \"label\": \"Due Date\"\n    },\n    {\n        \"name\": \"desc\",\n        \"type\": \"text\",\n        \"label\": \"Desc\"\n    },\n    {\n        \"name\": \"timeZone\",\n        \"type\": \"text\",\n        \"label\": \"Time Zone\"\n    },\n    {\n        \"name\": \"isAllDay\",\n        \"type\": \"boolean\",\n        \"label\": \"Is All Day\"\n    },\n    {\n        \"name\": \"priority\",\n        \"type\": \"number\",\n        \"label\": \"Priority\"\n    },\n    {\n        \"name\": \"repeatFlag\",\n        \"type\": \"text\",\n        \"label\": \"Repeat Flag\"\n    },\n    {\n        \"name\": \"completedTime\",\n        \"type\": \"text\",\n        \"label\": \"Completed Time\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"number\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"items\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"type\": \"text\",\n                    \"label\": \"ID\"\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"number\",\n                    \"label\": \"Status\"\n                },\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"label\": \"Title\"\n                },\n                {\n                    \"name\": \"sortOrder\",\n                    \"type\": \"number\",\n                    \"label\": \"Sort Order\"\n                },\n                {\n                    \"name\": \"startDate\",\n                    \"type\": \"text\",\n                    \"label\": \"Start Date\"\n                },\n                {\n                    \"name\": \"isAllDay\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Is All Day\"\n                },\n                {\n                    \"name\": \"timeZone\",\n                    \"type\": \"text\",\n                    \"label\": \"Time Zone\"\n                },\n                {\n                    \"name\": \"completedTime\",\n                    \"type\": \"number\",\n                    \"label\": \"Completed Time\"\n                }\n            ]\n        },\n        \"label\": \"Items\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchTasks": {
      "id": 111681,
      "api": {
        "qs": {
          "pageSize": 100,
          "priority": 3
        },
        "url": "/project/{{parameters.projectId}}/data",
        "method": "GET",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.tasks}}",
          "trigger": {
            "id": "{{item.sortOrder}}",
            "date": "{{item.created}}",
            "type": "id",
            "order": "asc"
          }
        }
      },
      "rev": 12,
      "crud": "read",
      "name": "watchTasks",
      "epoch": {
        "response": {
          "limit": 500,
          "output": {
            "date": "{{item.sortOrder}}",
            "label": "{{item.title}}",
            "description": "{{item.id}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Tasks",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint\n    \"url\": \"/project/{{parameters.projectId}}/data\", // Relative to base URL\n    \"method\": \"GET\",\n    \"headers\": {}, // Additinal HTTP headers\n    \"qs\": { // Query string\n        \"pageSize\": 100,\n        \"priority\": 3\n    },\n    \"response\": {\n        \"iterate\": \"{{body.tasks}}\", // Iterates \"users\" array from API response to split it into individual items.\n        \"trigger\": {\n            \"type\": \"id\", // Identifies trigger polling by date.\n            \"id\": \"{{item.sortOrder}}\", // Identifies items by its property: \"id\".\n            \"date\": \"{{item.created}}\", // Identifies items by its property: \"created\" date.\n            \"order\": \"asc\" // Specifies in what order the remote API returns items.\n        },\n        \"output\": \"{{item}}\", // Outputs whole each iterated \"item\" object as separate bundle.\n        \"limit\": \"{{parameters.limit}}\" // Limits number of output bundles as requested by user (even if API returns more items).\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "projectId",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "sortOrder",
          "type": "number",
          "label": "Sort Order"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "parentId",
          "type": "text",
          "label": "Parent Id"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Content"
        },
        {
          "name": "timeZone",
          "type": "text",
          "label": "Time Zone"
        },
        {
          "name": "isAllDay",
          "type": "boolean",
          "label": "Is All Day"
        },
        {
          "name": "priority",
          "type": "number",
          "label": "Priority"
        },
        {
          "name": "startDate",
          "type": "date",
          "label": "Start Date"
        },
        {
          "name": "dueDate",
          "type": "date",
          "label": "Due Date"
        },
        {
          "name": "completedTime",
          "type": "date",
          "label": "Completed Date"
        },
        {
          "name": "status",
          "type": "number",
          "label": "Status"
        },
        {
          "name": "desc",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "repeatFlag",
          "type": "text",
          "label": "Repeat Flag"
        },
        {
          "name": "childids",
          "type": "array",
          "label": "Child Ids"
        },
        {
          "name": "items",
          "type": "array",
          "label": "Items"
        },
        {
          "name": "tags",
          "type": "array",
          "label": "Tags"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"output\": {\n            \"date\": \"{{item.sortOrder}}\",\n            \"label\": \"{{item.title}}\",\n            \"description\": \"{{item.id}}\"\n        },\n        \"limit\": 500\n    }\n}",
      "parameters": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List",
          "options": "rpc://app%23ticktick@1/listProjects",
          "required": true
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "accountName": "ticktick",
      "description": "Triggers when a new task or subtask occurs.",
      "expectJsonc": null,
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"projectId\",\n        \"type\": \"text\",\n        \"label\": \"List ID\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"number\",\n        \"label\": \"Sort Order\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"parentId\",\n        \"type\": \"text\",\n        \"label\": \"Parent Id\"\n    },\n    {\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Content\"\n    },\n    {\n        \"name\": \"timeZone\",\n        \"type\": \"text\",\n        \"label\": \"Time Zone\"\n    },\n    {\n        \"name\": \"isAllDay\",\n        \"type\": \"boolean\",\n        \"label\": \"Is All Day\"\n    },\n    {\n        \"name\": \"priority\",\n        \"type\": \"number\",\n        \"label\": \"Priority\"\n    },\n    {\n        \"name\": \"startDate\",\n        \"type\": \"date\",\n        \"label\": \"Start Date\"\n    },\n    {\n        \"name\": \"dueDate\",\n        \"type\": \"date\",\n        \"label\": \"Due Date\"\n    },\n    {\n        \"name\": \"completedTime\",\n        \"type\": \"date\",\n        \"label\": \"Completed Date\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"number\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"desc\",\n        \"type\": \"text\",\n        \"label\": \"Description\"\n    },\n    {\n        \"name\": \"repeatFlag\",\n        \"type\": \"text\",\n        \"label\": \"Repeat Flag\"\n    },\n    {\n        \"name\": \"childids\",\n        \"type\": \"array\",\n        \"label\": \"Child Ids\"\n    },\n    {\n        \"name\": \"items\",\n        \"type\": \"array\",\n        \"label\": \"Items\"\n    },\n    {\n        \"name\": \"tags\",\n        \"type\": \"array\",\n        \"label\": \"Tags\"\n    }\n]",
      "parametersJsonc": "// Defines \"limit\" as module input parameter.\n[\n    {\n        \"name\": \"projectId\", // Makes value accesible via \"{{parameters.id}}\".\n        \"type\": \"select\", // Sets the type to unsigned integer.\n        \"label\": \"List\", // Sets the user friendly label visible in the module.\n        \"required\": true,\n        \"options\": \"rpc://listProjects\",\n        \"mode\": \"edit\" // Sets the parameter as mandatory.\n    },\n    {\n        \"name\": \"limit\", // Makes value accesible via \"{{parameters.limit}}\".\n        \"type\": \"uinteger\", // Validates that an unsigned integer entered.\n        \"label\": \"Limit\", // Sets the user friendly label visible in the module\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\", // Sets the help text with an example under input field in the module.\n        \"default\": 2,\n        \"required\": true // Sets the parameter as mandatory.\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createATask": {
      "id": 110722,
      "api": {
        "qs": {},
        "url": "/task",
        "body": {
          "desc": "{{parameters.desc}}",
          "items": "{{parameters.items}}",
          "title": "{{parameters.title}}",
          "content": "{{parameters.content}}",
          "dueDate": "{{formatDate(parameters.dueDate, 'YYYY-MM-DDTHH:mm:ssZZ')}}",
          "isAllDay": "{{parameters.isAllDay}}",
          "priority": "{{parameters.priority}}",
          "timeZone": "{{parameters.timeZone}}",
          "projectId": "{{parameters.projectId}}",
          "reminders": "{{formatReminders(parameters.reminders)}}",
          "sortOrder": "{{parameters.sortOrder}}",
          "startDate": "{{formatDate(parameters.startDate, 'YYYY-MM-DDTHH:mm:ssZZ')}}",
          "repeatFlag": "{{parameters.repeatFlag}}"
        },
        "method": "POST",
        "headers": {},
        "response": {
          "output": "{{generalResponse(body, temp.dateToParse)}}"
        }
      },
      "rev": 15,
      "crud": "create",
      "name": "createATask",
      "epoch": null,
      "flags": {},
      "label": "Create a Task",
      "scope": [],
      "expect": [
        {
          "name": "title",
          "type": "text",
          "label": "Task Title",
          "required": true
        },
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23ticktick@1/listProjects"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Task Content"
        },
        {
          "help": "Whether the task is all day.",
          "name": "isAllDay",
          "type": "boolean",
          "label": "All Day"
        },
        {
          "help": "Start date and time of the task in specified format.\n\nFor paid users, we recommend using both **Start Date** and **Due Date** . If **Start Date** or **Due Date** is missing, both will have the same value.\nFor free users, **Start Date** and **Due Date** will always have the same value. If both fields are filled in with different dates, the value of **Start Date** will take precedence.",
          "name": "startDate",
          "type": "date",
          "label": "Start Date"
        },
        {
          "help": "Due date and time of the task in specified format.\n\nFor paid users, we recommend using both **Start Date** and **Due Date** . If **Start Date** or **Due Date** is missing, both will have the same value.\nFor free users, **Start Date** and **Due Date** will always have the same value. If both fields are filled in with different dates, the value of **Start Date** will take precedence.",
          "name": "dueDate",
          "type": "date",
          "label": "Due Date"
        },
        {
          "help": "Time zone in which the time is specified.\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).",
          "name": "timeZone",
          "type": "text",
          "label": "Time Zone"
        },
        {
          "help": "Priority level of the task (default is None - 0).",
          "name": "priority",
          "type": "select",
          "label": "Priority",
          "options": [
            {
              "label": "None",
              "value": 0
            },
            {
              "label": "Low",
              "value": 1
            },
            {
              "label": "Medium",
              "value": 3
            },
            {
              "label": "High",
              "value": 5
            }
          ]
        },
        {
          "help": "Description of the checklist.",
          "name": "desc",
          "type": "text",
          "label": "Description"
        },
        {
          "help": "List of checklists associated with the task.",
          "name": "items",
          "spec": {
            "spec": [
              {
                "name": "title",
                "type": "text",
                "label": "Checklist Title"
              },
              {
                "help": "Start date and time of the checklist in specified format.",
                "name": "startDate",
                "type": "date",
                "label": "Start Date"
              },
              {
                "help": "Whether the checklist is all day.",
                "name": "isAllDay",
                "type": "boolean",
                "label": "All Day"
              },
              {
                "help": "Order of the checklist.",
                "name": "sortOrder",
                "type": "integer",
                "label": "Order of Checklist"
              },
              {
                "help": "Time zone in which the time is specified.\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).",
                "name": "timeZone",
                "type": "text",
                "label": "Time Zone"
              },
              {
                "help": "Completion status of the checklist.",
                "name": "status",
                "type": "select",
                "label": "Status",
                "options": [
                  {
                    "label": "Normal",
                    "value": 0
                  },
                  {
                    "label": "Completed",
                    "value": 1
                  }
                ]
              },
              {
                "help": "Completed time of the checklist in specified format.",
                "name": "completedTime",
                "type": "date",
                "label": "Completed Time"
              }
            ],
            "type": "collection",
            "label": "Checklist"
          },
          "type": "array",
          "label": "List of Checklists",
          "labels": {
            "add": "Add checklist"
          }
        },
        {
          "name": "sortOrder",
          "type": "integer",
          "label": "Order of Task",
          "advanced": true
        },
        {
          "help": "Lists of reminders associated with the task. \n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).",
          "name": "reminders",
          "spec": {
            "spec": [
              {
                "name": "TRIGGER",
                "type": "text",
                "label": "Trigger"
              }
            ],
            "type": "collection",
            "label": "Reminder"
          },
          "type": "array",
          "label": "Lists of Reminders",
          "labels": {
            "add": "Add reminder"
          },
          "advanced": true
        },
        {
          "help": "Recurring rules of task. \n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).",
          "name": "repeatFlag",
          "type": "text",
          "label": "Repeat Flag",
          "advanced": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint.\n    \"url\": \"/task\", // Relative to base URL\n    \"method\": \"POST\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {}, // Query string\n    \"body\": {\n        \"title\": \"{{parameters.title}}\",\n        \"projectId\": \"{{parameters.projectId}}\",\n        \"content\": \"{{parameters.content}}\",\n        \"isAllDay\": \"{{parameters.isAllDay}}\",\n        \"startDate\": \"{{formatDate(parameters.startDate, 'YYYY-MM-DDTHH:mm:ssZZ')}}\",\n        \"dueDate\": \"{{formatDate(parameters.dueDate, 'YYYY-MM-DDTHH:mm:ssZZ')}}\",\n        \"timeZone\": \"{{parameters.timeZone}}\",\n        \"priority\": \"{{parameters.priority}}\",\n        \"desc\": \"{{parameters.desc}}\",\n        \"items\": \"{{parameters.items}}\",\n        \"sortOrder\": \"{{parameters.sortOrder}}\",\n        \"reminders\": \"{{formatReminders(parameters.reminders)}}\",\n        \"repeatFlag\": \"{{parameters.repeatFlag}}\"\n    },\n    // Response handling\n    \"response\": {\n        \"output\": \"{{generalResponse(body, temp.dateToParse)}}\" // Returns API response body as an output bundle.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "projectId",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "sortOrder",
          "type": "number",
          "label": "Sort Order"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Content"
        },
        {
          "name": "startDate",
          "type": "text",
          "label": "Start Date"
        },
        {
          "name": "dueDate",
          "type": "text",
          "label": "Due Date"
        },
        {
          "name": "desc",
          "type": "text",
          "label": "Desc"
        },
        {
          "name": "timeZone",
          "type": "text",
          "label": "Time Zone"
        },
        {
          "name": "isAllDay",
          "type": "boolean",
          "label": "Is All Day"
        },
        {
          "name": "priority",
          "type": "number",
          "label": "Priority"
        },
        {
          "name": "status",
          "type": "number",
          "label": "Status"
        },
        {
          "name": "items",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "status",
                "type": "number",
                "label": "Status"
              },
              {
                "name": "title",
                "type": "text",
                "label": "Title"
              },
              {
                "name": "sortOrder",
                "type": "number",
                "label": "Sort Order"
              },
              {
                "name": "startDate",
                "type": "text",
                "label": "Start Date"
              },
              {
                "name": "isAllDay",
                "type": "boolean",
                "label": "Is All Day"
              },
              {
                "name": "timeZone",
                "type": "text",
                "label": "Time Zone"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Items"
        },
        {
          "name": "tags",
          "type": "array",
          "label": "Tags"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "ticktick",
      "description": "Creates a task in a specific list.",
      "expectJsonc": "[\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Task Title\",\n        \"required\": true\n    },\n    {\n        \"name\": \"projectId\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"mode\": \"edit\",\n        \"options\": \"rpc://listProjects\"\n    },\n    {\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Task Content\"\n    },\n    {\n        \"name\": \"isAllDay\",\n        \"type\": \"boolean\",\n        \"label\": \"All Day\",\n        \"help\": \"Whether the task is all day.\"\n    },\n    {\n        \"name\": \"startDate\",\n        \"type\": \"date\",\n        \"label\": \"Start Date\",\n        \"help\": \"Start date and time of the task in specified format.\\n\\nFor paid users, we recommend using both **Start Date** and **Due Date** . If **Start Date** or **Due Date** is missing, both will have the same value.\\nFor free users, **Start Date** and **Due Date** will always have the same value. If both fields are filled in with different dates, the value of **Start Date** will take precedence.\"\n    },\n    {\n        \"name\": \"dueDate\",\n        \"type\": \"date\",\n        \"label\": \"Due Date\",\n        \"help\": \"Due date and time of the task in specified format.\\n\\nFor paid users, we recommend using both **Start Date** and **Due Date** . If **Start Date** or **Due Date** is missing, both will have the same value.\\nFor free users, **Start Date** and **Due Date** will always have the same value. If both fields are filled in with different dates, the value of **Start Date** will take precedence.\"\n    },\n    {\n        \"name\": \"timeZone\",\n        \"type\": \"text\",\n        \"label\": \"Time Zone\",\n        \"help\": \"Time zone in which the time is specified.\\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).\"\n    },\n    {\n        \"name\": \"priority\",\n        \"type\": \"select\",\n        \"label\": \"Priority\",\n        \"options\": [\n            {\n                \"value\": 0,\n                \"label\": \"None\"\n            },\n            {\n                \"value\": 1,\n                \"label\": \"Low\"\n            },\n            {\n                \"value\": 3,\n                \"label\": \"Medium\"\n            },\n            {\n                \"value\": 5,\n                \"label\": \"High\"\n            }\n        ],\n        \"help\": \"Priority level of the task (default is None - 0).\"\n    },\n    {\n        \"name\": \"desc\",\n        \"type\": \"text\",\n        \"label\": \"Description\",\n        \"help\": \"Description of the checklist.\"\n    },\n    {\n        \"name\": \"items\",\n        \"type\": \"array\",\n        \"label\": \"List of Checklists\",\n        \"help\": \"List of checklists associated with the task.\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"label\": \"Checklist\",\n            \"spec\": [\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"label\": \"Checklist Title\"\n                },\n                {\n                    \"name\": \"startDate\",\n                    \"type\": \"date\",\n                    \"label\": \"Start Date\",\n                    \"help\": \"Start date and time of the checklist in specified format.\"\n                },\n                {\n                    \"name\": \"isAllDay\",\n                    \"type\": \"boolean\",\n                    \"label\": \"All Day\",\n                    \"help\": \"Whether the checklist is all day.\"\n                },\n                {\n                    \"name\": \"sortOrder\",\n                    \"type\": \"integer\",\n                    \"label\": \"Order of Checklist\",\n                    \"help\": \"Order of the checklist.\"\n                },\n                {\n                    \"name\": \"timeZone\",\n                    \"type\": \"text\",\n                    \"label\": \"Time Zone\",\n                    \"help\": \"Time zone in which the time is specified.\\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).\"\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"select\",\n                    \"label\": \"Status\",\n                    \"help\": \"Completion status of the checklist.\",\n                    \"options\": [\n                        {\n                            \"value\": 0,\n                            \"label\": \"Normal\"\n                        },\n                        {\n                            \"value\": 1,\n                            \"label\": \"Completed\"\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"completedTime\",\n                    \"type\": \"date\",\n                    \"label\": \"Completed Time\",\n                    \"help\": \"Completed time of the checklist in specified format.\"\n                }\n            ]\n        },\n        \"labels\": {\n            \"add\": \"Add checklist\"\n        }\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"integer\",\n        \"label\": \"Order of Task\",\n        \"advanced\": true\n    },\n    {\n        \"name\": \"reminders\",\n        \"type\": \"array\",\n        \"label\": \"Lists of Reminders\",\n        \"advanced\": true,\n        \"help\": \"Lists of reminders associated with the task. \\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"label\": \"Reminder\",\n            \"spec\": [\n                {\n                    \"name\": \"TRIGGER\",\n                    \"type\": \"text\",\n                    \"label\": \"Trigger\"\n                }\n            ]\n        },\n        \"labels\": {\n            \"add\": \"Add reminder\"\n        }\n    },\n    {\n        \"name\": \"repeatFlag\",\n        \"type\": \"text\",\n        \"label\": \"Repeat Flag\",\n        \"help\": \"Recurring rules of task. \\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).\",\n        \"advanced\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"projectId\",\n        \"type\": \"text\",\n        \"label\": \"List ID\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"number\",\n        \"label\": \"Sort Order\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Content\"\n    },\n    {\n        \"name\": \"startDate\",\n        \"type\": \"text\",\n        \"label\": \"Start Date\"\n    },\n    {\n        \"name\": \"dueDate\",\n        \"type\": \"text\",\n        \"label\": \"Due Date\"\n    },\n    {\n        \"name\": \"desc\",\n        \"type\": \"text\",\n        \"label\": \"Desc\"\n    },\n    {\n        \"name\": \"timeZone\",\n        \"type\": \"text\",\n        \"label\": \"Time Zone\"\n    },\n    {\n        \"name\": \"isAllDay\",\n        \"type\": \"boolean\",\n        \"label\": \"Is All Day\"\n    },\n    {\n        \"name\": \"priority\",\n        \"type\": \"number\",\n        \"label\": \"Priority\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"number\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"items\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"type\": \"text\",\n                    \"label\": \"ID\"\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"number\",\n                    \"label\": \"Status\"\n                },\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"label\": \"Title\"\n                },\n                {\n                    \"name\": \"sortOrder\",\n                    \"type\": \"number\",\n                    \"label\": \"Sort Order\"\n                },\n                {\n                    \"name\": \"startDate\",\n                    \"type\": \"text\",\n                    \"label\": \"Start Date\"\n                },\n                {\n                    \"name\": \"isAllDay\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Is All Day\"\n                },\n                {\n                    \"name\": \"timeZone\",\n                    \"type\": \"text\",\n                    \"label\": \"Time Zone\"\n                }\n            ]\n        },\n        \"label\": \"Items\"\n    },\n    {\n        \"name\": \"tags\",\n        \"type\": \"array\",\n        \"label\": \"Tags\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteATask": {
      "id": 110786,
      "api": {
        "qs": {},
        "url": "/project/{{parameters.projectId}}/task/{{parameters.taskId}}",
        "method": "DELETE",
        "headers": {},
        "response": {
          "output": "{{undefined}}"
        }
      },
      "rev": 8,
      "crud": "delete",
      "name": "deleteATask",
      "epoch": null,
      "flags": {},
      "label": "Delete a Task",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List ID",
          "options": {
            "store": "rpc://app%23ticktick@1/listProjects",
            "nested": [
              {
                "rpc": {
                  "url": "rpc://app%23ticktick@1/listTasks",
                  "label": "ID Finder",
                  "parameters": [
                    {
                      "name": "projectId",
                      "type": "select",
                      "label": "List ID",
                      "options": "rpc://app%23ticktick@1/listProjects",
                      "required": true
                    }
                  ]
                },
                "mode": "edit",
                "name": "taskId",
                "type": "select",
                "label": "Task ID",
                "options": "rpc://app%23ticktick@1/listTasks",
                "required": true
              }
            ]
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint with parameter \"id\" defined in Mappable parameters.\n    \"url\": \"/project/{{parameters.projectId}}/task/{{parameters.taskId}}\", // Relative to base URL\n    \"method\": \"DELETE\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {},\n    //\"body\": \"{{omit(parameters, 'id')}}\", // Query string\n    // Response handling\n    \"response\": {\n        \"output\": \"{{undefined}}\" // Returns no output bundle.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "ticktick",
      "description": "Deletes a specific task in a list.",
      "expectJsonc": "// Defines \"id\", \"email\" and \"name\" as module input parameters.\n[\n     {\n        \"name\": \"projectId\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"options\": {\n            \"store\": \"rpc://listProjects\",\n            \"nested\": [\n                {\n                    \"name\": \"taskId\",\n                    \"label\": \"Task ID\",\n                    \"type\": \"select\",\n                    \"mode\": \"edit\",\n                    \"options\": \"rpc://listTasks\",\n                    \"required\": true,\n                    \"rpc\": {\n                        \"label\": \"ID Finder\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"projectId\",\n                                \"label\": \"List ID\",\n                                \"type\": \"select\",\n                                \"required\": true,\n                                \"options\": \"rpc://listProjects\"\n                            }\n                        ],\n                        \"url\": \"rpc://listTasks\"\n                    }\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "// Expects an empty API response.\n[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getAProject": {
      "id": 111192,
      "api": {
        "url": "/project/{{parameters.projectId}}{{if(parameters.data, '/data', '')}}",
        "method": "GET",
        "headers": {},
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 6,
      "crud": "read",
      "name": "getAProject",
      "epoch": null,
      "flags": {},
      "label": "Get a List",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23ticktick@1/listProjects",
          "required": true
        },
        {
          "help": "Use the 'data' field to pull all list information.",
          "name": "data",
          "type": "boolean",
          "label": "Data"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint with parameter \"id\" defined in Mappable parameters.\n    \"url\": \"/project/{{parameters.projectId}}{{if(parameters.data, '/data', '')}}\",\n    \"method\": \"GET\",\n    \"headers\": {},\n    // Response handling\n    \"response\": {\n        \"output\": \"{{body}}\" // Return JSON response body as an output bundle.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": "rpc://app%23ticktick@1/projectInterface",
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "ticktick",
      "description": "Gets information about a specific list.",
      "expectJsonc": "[\n    // Defines \"id\" as mandatory module input parameter.\n    {\n        \"name\": \"projectId\", // Makes value accesible via \"{{parameters.id}}\".\n        \"type\": \"select\", // Sets the type to unsigned integer.\n        \"label\": \"List ID\", // Sets the user friendly label visible in the module.\n        \"required\": true,\n        \"options\": \"rpc://listProjects\",\n        \"mode\": \"edit\" // Sets the parameter as mandatory.\n    },\n    {\n        \"name\": \"data\", // Makes value accesible via \"{{parameters.id}}\".\n        \"type\": \"boolean\", // Sets the type to unsigned integer.\n        \"label\": \"Data\", // Sets the parameter as mandatory.\n        \"help\": \"Use the 'data' field to pull all list information.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "\"rpc://projectInterface\"\n",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateATask": {
      "id": 110727,
      "api": {
        "qs": {},
        "url": "/task/{{parameters.taskId}}",
        "body": {
          "desc": "{{parameters.desc}}",
          "items": "{{parameters.items}}",
          "title": "{{parameters.title}}",
          "content": "{{parameters.content}}",
          "dueDate": "{{formatDate(parameters.dueDate, 'YYYY-MM-DDTHH:mm:ssZZ')}}",
          "isAllDay": "{{parameters.isAllDay}}",
          "priority": "{{parameters.priority}}",
          "timeZone": "{{parameters.timeZone}}",
          "projectId": "{{parameters.projectId}}",
          "reminders": "{{parameters.reminders}}",
          "sortOrder": "{{parameters.sortOrder}}",
          "startDate": "{{formatDate(parameters.startDate, 'YYYY-MM-DDTHH:mm:ssZZ')}}",
          "repeatFlag": "{{parameters.repeatFlag}}"
        },
        "method": "POST",
        "headers": {},
        "response": {
          "output": "{{generalResponse(body, temp.dateToParse)}}"
        }
      },
      "rev": 13,
      "crud": "update",
      "name": "updateATask",
      "epoch": null,
      "flags": {},
      "label": "Update a Task",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23ticktick@1/listProjects",
          "required": true
        },
        {
          "rpc": {
            "url": "rpc://app%23ticktick@1/listTasks",
            "label": "ID Finder",
            "parameters": [
              {
                "name": "projectId",
                "type": "select",
                "label": "List ID",
                "options": "rpc://app%23ticktick@1/listProjects",
                "required": true
              }
            ]
          },
          "name": "taskId",
          "type": "text",
          "label": "Task ID",
          "required": true
        },
        {
          "name": "title",
          "type": "text",
          "label": "Task Title"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Task Content"
        },
        {
          "help": "Whether the task is all day.",
          "name": "isAllDay",
          "type": "boolean",
          "label": "All Day"
        },
        {
          "help": "Start date and time of the task in specified format.\n\nFor paid users, we recommend using both **Start Date** and **Due Date** . If **Start Date** or **Due Date** is missing, both will have the same value.\nFor free users, **Start Date** and **Due Date** will always have the same value. If both fields are filled in with different dates, the value of **Start Date** will take precedence.",
          "name": "startDate",
          "type": "date",
          "label": "Start Date"
        },
        {
          "help": "Due date and time of the task in specified format.\n\nFor paid users, we recommend using both **Start Date** and **Due Date** . If **Start Date** or **Due Date** is missing, both will have the same value.\nFor free users, **Start Date** and **Due Date** will always have the same value. If both fields are filled in with different dates, the value of **Start Date** will take precedence.",
          "name": "dueDate",
          "type": "date",
          "label": "Due Date"
        },
        {
          "help": "Time zone in which the time is specified.\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).",
          "name": "timeZone",
          "type": "text",
          "label": "Time Zone"
        },
        {
          "help": "Priority level of the task (default is None - 0).",
          "name": "priority",
          "type": "select",
          "label": "Priority",
          "options": [
            {
              "label": "None",
              "value": 0
            },
            {
              "label": "Low",
              "value": 1
            },
            {
              "label": "Medium",
              "value": 3
            },
            {
              "label": "High",
              "value": 5
            }
          ]
        },
        {
          "help": "Description of the checklist.",
          "name": "desc",
          "type": "text",
          "label": "Description"
        },
        {
          "help": "List of checklists associated with the task.",
          "name": "items",
          "spec": {
            "spec": [
              {
                "name": "title",
                "type": "text",
                "label": "Checklist Title"
              },
              {
                "help": "Start date and time of the checklist in specified format.",
                "name": "startDate",
                "type": "date",
                "label": "Start Date"
              },
              {
                "help": "Whether the checklist is all day.",
                "name": "isAllDay",
                "type": "boolean",
                "label": "All Day"
              },
              {
                "help": "Order of the checklist.",
                "name": "sortOrder",
                "type": "integer",
                "label": "Order of Checklist"
              },
              {
                "help": "Time zone in which the start time of the checklist is specified.",
                "name": "timeZone",
                "type": "text",
                "label": "Time Zone"
              },
              {
                "help": "Completion status of the checklist.",
                "name": "status",
                "type": "select",
                "label": "Status",
                "options": [
                  {
                    "label": "Normal",
                    "value": 0
                  },
                  {
                    "label": "Completed",
                    "value": 1
                  }
                ]
              },
              {
                "help": "Completed time of the checklist in specified format.",
                "name": "completedTime",
                "type": "date",
                "label": "Completed Time"
              }
            ],
            "type": "collection",
            "label": "Checklist"
          },
          "type": "array",
          "label": "List of Checklists",
          "labels": {
            "add": "Add checklist"
          }
        },
        {
          "name": "sortOrder",
          "type": "integer",
          "label": "Order of Task",
          "advanced": true
        },
        {
          "help": "Lists of reminders associated with the task. \n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).",
          "name": "reminders",
          "spec": {
            "spec": [
              {
                "name": "TRIGGER",
                "type": "text",
                "label": "Trigger"
              }
            ],
            "type": "collection",
            "label": "Reminder"
          },
          "type": "array",
          "label": "Lists of Reminders",
          "labels": {
            "add": "Add reminder"
          },
          "advanced": true
        },
        {
          "help": "Recurring rules of task. \n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).",
          "name": "repeatFlag",
          "type": "text",
          "label": "Repeat Flag",
          "advanced": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint with parameter \"id\" defined in Mappable parameters.\n    \"url\": \"/task/{{parameters.taskId}}\", // Relative to base URL\n    \"method\": \"POST\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {}, // Query string\n    \"body\": {\n        \"title\": \"{{parameters.title}}\",\n        \"projectId\": \"{{parameters.projectId}}\",\n        \"content\": \"{{parameters.content}}\",\n        \"isAllDay\": \"{{parameters.isAllDay}}\",\n        \"startDate\": \"{{formatDate(parameters.startDate, 'YYYY-MM-DDTHH:mm:ssZZ')}}\",\n        \"dueDate\": \"{{formatDate(parameters.dueDate, 'YYYY-MM-DDTHH:mm:ssZZ')}}\",\n        \"timeZone\": \"{{parameters.timeZone}}\",\n        \"priority\": \"{{parameters.priority}}\",\n        \"desc\": \"{{parameters.desc}}\",\n        \"items\": \"{{parameters.items}}\",\n        \"sortOrder\": \"{{parameters.sortOrder}}\",\n        \"reminders\": \"{{parameters.reminders}}\",\n        \"repeatFlag\": \"{{parameters.repeatFlag}}\"\n    }, // Request body omitting the ID that is already being sent in URL.\n    // Response handling\n    \"response\": {\n        \"output\": \"{{generalResponse(body, temp.dateToParse)}}\" // Returns no output bundle as no API output is expected.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "projectId",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "sortOrder",
          "type": "number",
          "label": "Sort Order"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Content"
        },
        {
          "name": "startDate",
          "type": "text",
          "label": "Start Date"
        },
        {
          "name": "dueDate",
          "type": "text",
          "label": "Due Date"
        },
        {
          "name": "desc",
          "type": "text",
          "label": "Desc"
        },
        {
          "name": "timeZone",
          "type": "text",
          "label": "Time Zone"
        },
        {
          "name": "isAllDay",
          "type": "boolean",
          "label": "Is All Day"
        },
        {
          "name": "priority",
          "type": "number",
          "label": "Priority"
        },
        {
          "name": "status",
          "type": "number",
          "label": "Status"
        },
        {
          "name": "items",
          "spec": {
            "spec": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "status",
                "type": "number",
                "label": "Status"
              },
              {
                "name": "title",
                "type": "text",
                "label": "Title"
              },
              {
                "name": "sortOrder",
                "type": "number",
                "label": "Sort Order"
              },
              {
                "name": "startDate",
                "type": "text",
                "label": "Start Date"
              },
              {
                "name": "isAllDay",
                "type": "boolean",
                "label": "Is All Day"
              },
              {
                "name": "timeZone",
                "type": "text",
                "label": "Time Zone"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Items"
        },
        {
          "name": "tags",
          "type": "array",
          "label": "Tags"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "ticktick",
      "description": "Updates a specific task.",
      "expectJsonc": "[\n    {\n        \"name\": \"projectId\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"options\": \"rpc://listProjects\"\n    },\n    {\n        \"name\": \"taskId\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"label\": \"Task ID\",\n        \"rpc\": {\n            \"label\": \"ID Finder\",\n            \"parameters\": [\n                {\n                    \"name\": \"projectId\",\n                    \"label\": \"List ID\",\n                    \"type\": \"select\",\n                    \"required\": true,\n                    \"options\": \"rpc://listProjects\"\n                }\n            ],\n            \"url\": \"rpc://listTasks\"\n        }\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Task Title\"\n    },\n    {\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Task Content\"\n    },\n    {\n        \"name\": \"isAllDay\",\n        \"type\": \"boolean\",\n        \"label\": \"All Day\",\n        \"help\": \"Whether the task is all day.\"\n    },\n    {\n        \"name\": \"startDate\",\n        \"type\": \"date\",\n        \"label\": \"Start Date\",\n        \"help\": \"Start date and time of the task in specified format.\\n\\nFor paid users, we recommend using both **Start Date** and **Due Date** . If **Start Date** or **Due Date** is missing, both will have the same value.\\nFor free users, **Start Date** and **Due Date** will always have the same value. If both fields are filled in with different dates, the value of **Start Date** will take precedence.\"\n    },\n    {\n        \"name\": \"dueDate\",\n        \"type\": \"date\",\n        \"label\": \"Due Date\",\n        \"help\": \"Due date and time of the task in specified format.\\n\\nFor paid users, we recommend using both **Start Date** and **Due Date** . If **Start Date** or **Due Date** is missing, both will have the same value.\\nFor free users, **Start Date** and **Due Date** will always have the same value. If both fields are filled in with different dates, the value of **Start Date** will take precedence.\"\n    },\n    {\n        \"name\": \"timeZone\",\n        \"type\": \"text\",\n        \"label\": \"Time Zone\",\n        \"help\": \"Time zone in which the time is specified.\\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).\"\n    },\n    {\n        \"name\": \"priority\",\n        \"type\": \"select\",\n        \"label\": \"Priority\",\n        \"options\": [\n            {\n                \"value\": 0,\n                \"label\": \"None\"\n            },\n            {\n                \"value\": 1,\n                \"label\": \"Low\"\n            },\n            {\n                \"value\": 3,\n                \"label\": \"Medium\"\n            },\n            {\n                \"value\": 5,\n                \"label\": \"High\"\n            }\n        ],\n        \"help\": \"Priority level of the task (default is None - 0).\"\n    },\n    {\n        \"name\": \"desc\",\n        \"type\": \"text\",\n        \"label\": \"Description\",\n        \"help\": \"Description of the checklist.\"\n    },\n    {\n        \"name\": \"items\",\n        \"type\": \"array\",\n        \"label\": \"List of Checklists\",\n        \"help\": \"List of checklists associated with the task.\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"label\": \"Checklist\",\n            \"spec\": [\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"label\": \"Checklist Title\"\n                },\n                {\n                    \"name\": \"startDate\",\n                    \"type\": \"date\",\n                    \"label\": \"Start Date\",\n                    \"help\": \"Start date and time of the checklist in specified format.\"\n                },\n                {\n                    \"name\": \"isAllDay\",\n                    \"type\": \"boolean\",\n                    \"label\": \"All Day\",\n                    \"help\": \"Whether the checklist is all day.\"\n                },\n                {\n                    \"name\": \"sortOrder\",\n                    \"type\": \"integer\",\n                    \"label\": \"Order of Checklist\",\n                    \"help\": \"Order of the checklist.\"\n                },\n                {\n                    \"name\": \"timeZone\",\n                    \"type\": \"text\",\n                    \"label\": \"Time Zone\",\n                    \"help\": \"Time zone in which the start time of the checklist is specified.\"\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"select\",\n                    \"label\": \"Status\",\n                    \"help\": \"Completion status of the checklist.\",\n                    \"options\": [\n                        {\n                            \"value\": 0,\n                            \"label\": \"Normal\"\n                        },\n                        {\n                            \"value\": 1,\n                            \"label\": \"Completed\"\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"completedTime\",\n                    \"type\": \"date\",\n                    \"label\": \"Completed Time\",\n                    \"help\": \"Completed time of the checklist in specified format.\"\n                }\n            ]\n        },\n        \"labels\": {\n            \"add\": \"Add checklist\"\n        }\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"integer\",\n        \"label\": \"Order of Task\",\n        \"advanced\": true\n    },\n    {\n        \"name\": \"reminders\",\n        \"type\": \"array\",\n        \"label\": \"Lists of Reminders\",\n        \"advanced\": true,\n        \"help\": \"Lists of reminders associated with the task. \\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"label\": \"Reminder\",\n            \"spec\": [\n                {\n                    \"name\": \"TRIGGER\",\n                    \"type\": \"text\",\n                    \"label\": \"Trigger\"\n                }\n            ]\n        },\n        \"labels\": {\n            \"add\": \"Add reminder\"\n        }\n    },\n    {\n        \"name\": \"repeatFlag\",\n        \"type\": \"text\",\n        \"label\": \"Repeat Flag\",\n        \"help\": \"Recurring rules of task. \\n Example: See the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).\",\n        \"advanced\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"projectId\",\n        \"type\": \"text\",\n        \"label\": \"List ID\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"number\",\n        \"label\": \"Sort Order\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Content\"\n    },\n    {\n        \"name\": \"startDate\",\n        \"type\": \"text\",\n        \"label\": \"Start Date\"\n    },\n    {\n        \"name\": \"dueDate\",\n        \"type\": \"text\",\n        \"label\": \"Due Date\"\n    },\n    {\n        \"name\": \"desc\",\n        \"type\": \"text\",\n        \"label\": \"Desc\"\n    },\n    {\n        \"name\": \"timeZone\",\n        \"type\": \"text\",\n        \"label\": \"Time Zone\"\n    },\n    {\n        \"name\": \"isAllDay\",\n        \"type\": \"boolean\",\n        \"label\": \"Is All Day\"\n    },\n    {\n        \"name\": \"priority\",\n        \"type\": \"number\",\n        \"label\": \"Priority\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"number\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"items\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"id\",\n                    \"type\": \"text\",\n                    \"label\": \"ID\"\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"number\",\n                    \"label\": \"Status\"\n                },\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"label\": \"Title\"\n                },\n                {\n                    \"name\": \"sortOrder\",\n                    \"type\": \"number\",\n                    \"label\": \"Sort Order\"\n                },\n                {\n                    \"name\": \"startDate\",\n                    \"type\": \"text\",\n                    \"label\": \"Start Date\"\n                },\n                {\n                    \"name\": \"isAllDay\",\n                    \"type\": \"boolean\",\n                    \"label\": \"Is All Day\"\n                },\n                {\n                    \"name\": \"timeZone\",\n                    \"type\": \"text\",\n                    \"label\": \"Time Zone\"\n                }\n            ]\n        },\n        \"label\": \"Items\"\n    },\n    {\n        \"name\": \"tags\",\n        \"type\": \"array\",\n        \"label\": \"Tags\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listProjects": {
      "id": 111359,
      "api": {
        "qs": {},
        "url": "/project",
        "method": "GET",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body}}"
        }
      },
      "rev": 4,
      "crud": "read",
      "name": "listProjects",
      "epoch": null,
      "flags": {},
      "label": "List Lists",
      "scope": [],
      "expect": [
        {
          "help": "Maximum number of returned results.",
          "name": "limit",
          "type": "number",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint.\n    \"url\": \"/project\", // Relative to base URL\n    \"method\": \"GET\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {\n    },\n    // Response handling\n    \"response\": {\n        // Splits array from API response into bundles.\n        // See documentation at: https://docs.integromat.com/apps/app-blocks/api/pagination\n        \"iterate\": \"{{body}}\", // Iterates \"users\" array from API response to split it into individual items.\n        \"output\": \"{{item}}\", // Outputs whole each iterated \"item\" object as separate bundle.\n        \"limit\": \"{{parameters.limit}}\" // Limits number of output bundles as requested by user (even if API returns more items).\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "color",
          "type": "text",
          "label": "Color"
        },
        {
          "name": "sortOrder",
          "type": "number",
          "label": "Sort Order"
        },
        {
          "name": "viewMode",
          "type": "text",
          "label": "View Mode"
        },
        {
          "name": "kind",
          "type": "text",
          "label": "Kind"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "ticktick",
      "description": "Retrieves a list of a lists.",
      "expectJsonc": "// Defines \"search\" and \"limit\" as module input parameters.\n[\n    {\n        \"name\": \"limit\",\n        \"type\": \"number\",\n        \"label\": \"Limit\",\n        \"default\": 10,\n        \"help\": \"Maximum number of returned results.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"color\",\n        \"type\": \"text\",\n        \"label\": \"Color\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"number\",\n        \"label\": \"Sort Order\"\n    },\n    {\n        \"name\": \"viewMode\",\n        \"type\": \"text\",\n        \"label\": \"View Mode\"\n    },\n    {\n        \"name\": \"kind\",\n        \"type\": \"text\",\n        \"label\": \"Kind\"\n    }\n]",
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "completeATask": {
      "id": 110784,
      "api": {
        "qs": {},
        "url": "/project/{{parameters.projectId}}/task/{{parameters.taskId}}/complete",
        "body": "{{omit(parameters, 'id')}}",
        "method": "POST",
        "headers": {},
        "response": {
          "output": "{{undefined}}"
        }
      },
      "rev": 7,
      "crud": "update",
      "name": "completeATask",
      "epoch": null,
      "flags": {},
      "label": "Complete a Task",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List ID",
          "options": {
            "store": "rpc://app%23ticktick@1/listProjects",
            "nested": [
              {
                "rpc": {
                  "url": "rpc://app%23ticktick@1/listTasks",
                  "label": "ID Finder",
                  "parameters": [
                    {
                      "name": "projectId",
                      "type": "select",
                      "label": "List ID",
                      "options": "rpc://app%23ticktick@1/listProjects",
                      "required": true
                    }
                  ]
                },
                "mode": "edit",
                "name": "taskId",
                "type": "select",
                "label": "Task ID",
                "options": "rpc://app%23ticktick@1/listTasks",
                "required": true
              }
            ]
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint with parameter \"id\" defined in Mappable parameters.\n    \"url\": \"/project/{{parameters.projectId}}/task/{{parameters.taskId}}/complete\", // Relative to base URL\n    \"method\": \"POST\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {}, // Query string\n    \"body\": \"{{omit(parameters, 'id')}}\", // Request body omitting the ID that is already being sent in URL.\n    // Response handling\n    \"response\": {\n        \"output\": \"{{undefined}}\" // Returns no output bundle as no API output is expected.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "ticktick",
      "description": "Completes a specific task.",
      "expectJsonc": "// Defines \"id\", \"email\" and \"name\" as module input parameters.\n[\n    {\n        \"name\": \"projectId\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"options\": {\n            \"store\": \"rpc://listProjects\",\n            \"nested\": [\n                {\n                    \"name\": \"taskId\",\n                    \"label\": \"Task ID\",\n                    \"type\": \"select\",\n                    \"mode\": \"edit\",\n                    \"options\": \"rpc://listTasks\",\n                    \"required\": true,\n                    \"rpc\": {\n                        \"label\": \"ID Finder\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"projectId\",\n                                \"label\": \"List ID\",\n                                \"type\": \"select\",\n                                \"required\": true,\n                                \"options\": \"rpc://listProjects\"\n                            }\n                        ],\n                        \"url\": \"rpc://listTasks\"\n                    }\n                }\n            ]\n        }\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "// Expects an empty API response.\n[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeAnApiCall": {
      "id": 111329,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://ticktick.com/open/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "makeAnApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://ticktick.com/open`, e.g. `/v1/project` ",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"url\": \"https://ticktick.com/open/{{parameters.url}}\", // Defines the fixed base URL and maps the relative path URL from the user.\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"method\": \"{{parameters.method}}\",\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"response\": {\n        \"output\": {\n            \"body\": \"{{body}}\",\n            \"headers\": \"{{headers}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "ticktick",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"help\": \"Enter a path relative to `https://ticktick.com/open`, e.g. `/v1/project` \", // Gives instructions to the user about the relative path.\n        \"name\": \"url\", // Makes value accesible via \"{{parameters.url}}\"\".\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\", // Allows the user to select the method by themselves.\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ],\n        \"required\": true\n    },\n    {\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"name\": \"headers\", // Allows the user to add headers by themselves.\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"text\",\n                \"label\": \"Key\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"text\",\n                \"label\": \"Value\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Headers\",\n        \"default\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\", // Allows the user to set Query String by themselves.\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"text\",\n                \"label\": \"Key\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"text\",\n                \"label\": \"Value\"\n            }\n        ],\n        \"type\": \"array\",\n        \"label\": \"Query String\"\n    },\n    {\n        \"name\": \"body\", // Allows the user to set Body by themselves.\n        \"type\": \"any\",\n        \"label\": \"Body\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": null,
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createAProject": {
      "id": 110925,
      "api": {
        "qs": {},
        "url": "/project",
        "body": {
          "{{...}}": "{{omit(parameters,'birthday')}}"
        },
        "method": "POST",
        "headers": {},
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 9,
      "crud": "create",
      "name": "createAProject",
      "epoch": null,
      "flags": {},
      "label": "Create a List",
      "scope": [],
      "expect": [
        {
          "name": "name",
          "type": "text",
          "label": "List Name",
          "required": true
        },
        {
          "help": "Color of the List, for example, `#F18181`.",
          "name": "color",
          "type": "text",
          "label": "Color"
        },
        {
          "help": "Sort order value of the list.",
          "name": "sortOrder",
          "type": "integer",
          "label": "Sort Order"
        },
        {
          "name": "viewMode",
          "type": "select",
          "label": "View Mode",
          "options": [
            {
              "label": "List",
              "value": "list"
            },
            {
              "label": "Kanban",
              "value": "kanban"
            },
            {
              "label": "Timeline",
              "value": "timeline"
            }
          ]
        },
        {
          "name": "kind",
          "type": "select",
          "label": "List Type",
          "options": [
            {
              "label": "Task",
              "value": "TASK"
            },
            {
              "label": "Note",
              "value": "NOTE"
            }
          ]
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint.\n    \"url\": \"/project\", // Relative to base URL\n    \"method\": \"POST\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {}, // Query string\n    \"body\": {\n        \"{{...}}\": \"{{omit(parameters,'birthday')}}\" // Sends \"birthday\" parameter formatted as \"YYYY-MM-DD\".\n    },\n    // Response handling\n    \"response\": {\n        \"output\": \"{{body}}\" // Returns API response body as an output bundle.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "color",
          "type": "text",
          "label": "Color"
        },
        {
          "name": "sortOrder",
          "type": "number",
          "label": "Sort Order"
        },
        {
          "name": "viewMode",
          "type": "text",
          "label": "View Mode"
        },
        {
          "name": "kind",
          "type": "text",
          "label": "Kind"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "ticktick",
      "description": "Creates a specific list.",
      "expectJsonc": "[\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"List Name\",\n        \"required\": true\n    },\n    {\n        \"name\": \"color\",\n        \"type\": \"text\",\n        \"label\": \"Color\",\n        \"help\": \"Color of the List, for example, `#F18181`.\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"integer\",\n        \"label\": \"Sort Order\",\n        \"help\": \"Sort order value of the list.\"\n    },\n    {\n        \"name\": \"viewMode\",\n        \"type\": \"select\",\n        \"label\": \"View Mode\",\n        \"options\": [\n            {\n                \"value\": \"list\",\n                \"label\": \"List\"\n            },\n            {\n                \"value\": \"kanban\",\n                \"label\": \"Kanban\"\n            },\n            {\n                \"value\": \"timeline\",\n                \"label\": \"Timeline\"\n            }\n        ]\n    },\n    {\n        \"name\": \"kind\",\n        \"type\": \"select\",\n        \"label\": \"List Type\",\n        \"options\": [\n            {\n                \"value\": \"TASK\",\n                \"label\": \"Task\"\n            },\n            {\n                \"value\": \"NOTE\",\n                \"label\": \"Note\"\n            }\n        ]\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"color\",\n        \"type\": \"text\",\n        \"label\": \"Color\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"number\",\n        \"label\": \"Sort Order\"\n    },\n    {\n        \"name\": \"viewMode\",\n        \"type\": \"text\",\n        \"label\": \"View Mode\"\n    },\n    {\n        \"name\": \"kind\",\n        \"type\": \"text\",\n        \"label\": \"Kind\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteAProject": {
      "id": 110941,
      "api": {
        "qs": {},
        "url": "https://ticktick.com/open/v1/project/{{parameters.projectId}}",
        "body": {},
        "method": "DELETE",
        "headers": {},
        "response": {
          "output": "{{undefined}}"
        }
      },
      "rev": 4,
      "crud": "delete",
      "name": "deleteAProject",
      "epoch": null,
      "flags": {},
      "label": "Delete a List",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23ticktick@1/listProjects"
        }
      ],
      "public": false,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint with parameter \"id\" defined in Mappable parameters.\n    \"url\": \"https://ticktick.com/open/v1/project/{{parameters.projectId}}\", // Relative to base URL\n    \"method\": \"DELETE\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {},\n    \"body\": {},\n    \"response\": {\n        \"output\": \"{{undefined}}\" // Returns no output bundle.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "ticktick",
      "description": "Deletes a specific list.",
      "expectJsonc": "// Defines \"id\" as mandatory module input parameter.\n[\n    {\n        \"name\": \"projectId\", // Makes value accesible via \"{{parameters.id}}\".\n        \"type\": \"select\", // Set the type to unsigned integer.\n        \"label\": \"List ID\", // Sets the uuser friendly label visible in the module.\n        \"options\": \"rpc://listProjects\",\n        \"mode\": \"edit\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "// Expects an empty API response.\n[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updatesAProject": {
      "id": 110937,
      "api": {
        "qs": {},
        "url": "/project/{{parameters.projectId}}",
        "body": "{{omit(parameters, 'id')}}",
        "method": "POST",
        "headers": {},
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 10,
      "crud": "update",
      "name": "updatesAProject",
      "epoch": null,
      "flags": {},
      "label": "Update a List",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List ID",
          "options": "rpc://app%23ticktick@1/listProjects",
          "required": true
        },
        {
          "help": "Name of the list.",
          "name": "name",
          "type": "text",
          "label": "List Name"
        },
        {
          "help": "Color of the List, for example, `#F18181`.",
          "name": "color",
          "type": "text",
          "label": "Color"
        },
        {
          "name": "viewMode",
          "type": "select",
          "label": "View Mode",
          "options": [
            {
              "label": "List",
              "value": "list"
            },
            {
              "label": "Kanban",
              "value": "kanban"
            },
            {
              "label": "Timeline",
              "value": "timeline"
            }
          ]
        },
        {
          "name": "kind",
          "type": "select",
          "label": "List Type",
          "options": [
            {
              "label": "Task",
              "value": "TASK"
            },
            {
              "label": "Note",
              "value": "NOTE"
            }
          ]
        },
        {
          "help": "Sort order value of the list.",
          "name": "sortOrder",
          "type": "integer",
          "label": "Sort Order",
          "advanced": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint with parameter \"id\" defined in Mappable parameters.\n    \"url\": \"/project/{{parameters.projectId}}\", // Relative to base URL\n    \"method\": \"POST\",\n    \"headers\": {}, // Additional HTTP headers\n    \"qs\": {}, // Query string\n    \"body\": \"{{omit(parameters, 'id')}}\", // Request body omitting the ID that is already being sent in URL.\n    // Response handling\n    \"response\": {\n        \"output\": \"{{body}}\" // Returns no output bundle as no API output is expected.\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "color",
          "type": "text",
          "label": "Color"
        },
        {
          "name": "sortOrder",
          "type": "number",
          "label": "Sort Order"
        },
        {
          "name": "viewMode",
          "type": "text",
          "label": "View Mode"
        },
        {
          "name": "kind",
          "type": "text",
          "label": "Kind"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "ticktick",
      "description": "Updates a specific list.",
      "expectJsonc": "[\n    {\n        \"name\": \"projectId\",\n        \"type\": \"select\",\n        \"label\": \"List ID\",\n        \"required\": true,\n        \"options\": \"rpc://listProjects\",\n        \"mode\": \"edit\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"List Name\",\n        \"help\": \"Name of the list.\"\n    },\n    {\n        \"name\": \"color\",\n        \"type\": \"text\",\n        \"label\": \"Color\",\n        \"help\": \"Color of the List, for example, `#F18181`.\"\n    },\n    {\n        \"name\": \"viewMode\",\n        \"type\": \"select\",\n        \"label\": \"View Mode\",\n        \"options\": [\n            {\n                \"value\": \"list\",\n                \"label\": \"List\"\n            },\n            {\n                \"value\": \"kanban\",\n                \"label\": \"Kanban\"\n            },\n            {\n                \"value\": \"timeline\",\n                \"label\": \"Timeline\"\n            }\n        ]\n    },\n    {\n        \"name\": \"kind\",\n        \"type\": \"select\",\n        \"label\": \"List Type\",\n        \"options\": [\n            {\n                \"value\": \"TASK\",\n                \"label\": \"Task\"\n            },\n            {\n                \"value\": \"NOTE\",\n                \"label\": \"Note\"\n            }\n        ]\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"integer\",\n        \"advanced\": true,\n        \"label\": \"Sort Order\",\n        \"help\": \"Sort order value of the list.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    },\n    {\n        \"name\": \"color\",\n        \"type\": \"text\",\n        \"label\": \"Color\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"number\",\n        \"label\": \"Sort Order\"\n    },\n    {\n        \"name\": \"viewMode\",\n        \"type\": \"text\",\n        \"label\": \"View Mode\"\n    },\n    {\n        \"name\": \"kind\",\n        \"type\": \"text\",\n        \"label\": \"Kind\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchCompletedTasks": {
      "id": 125038,
      "api": {
        "qs": {
          "pageSize": 100,
          "priority": 3
        },
        "url": "/project/{{parameters.projectId}}/data",
        "method": "GET",
        "headers": {},
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{completedTaskFilter(body.tasks)}}",
          "trigger": {
            "id": "{{item.sortOrder}}",
            "date": "{{item.created}}",
            "type": "id",
            "order": "asc"
          }
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "watchCompletedTasks",
      "epoch": {
        "response": {
          "limit": 500,
          "output": {
            "date": "{{item.sortOrder}}",
            "label": "{{item.title}}",
            "description": "{{item.id}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Completed Tasks",
      "scope": [],
      "expect": [],
      "public": false,
      "typeId": 1,
      "appName": "ticktick",
      "samples": null,
      "apiJsonc": "{\n    // Request to API endpoint\n    \"url\": \"/project/{{parameters.projectId}}/data\", // Relative to base URL\n    \"method\": \"GET\",\n    \"headers\": {}, // Additinal HTTP headers\n    \"qs\": { // Query string\n        \"pageSize\": 100,\n        \"priority\": 3\n    },\n    \"response\": {\n        \"iterate\": \"{{completedTaskFilter(body.tasks)}}\", // Iterates \"users\" array from API response to split it into individual items.\n        \"trigger\": {\n            \"type\": \"id\", // Identifies trigger polling by date.\n            \"id\": \"{{item.sortOrder}}\", // Identifies items by its property: \"id\".\n            \"date\": \"{{item.created}}\", // Identifies items by its property: \"created\" date.\n            \"order\": \"asc\" // Specifies in what order the remote API returns items.\n        },\n        \"output\": \"{{item}}\", // Outputs whole each iterated \"item\" object as separate bundle.\n        \"limit\": \"{{parameters.limit}}\" // Limits number of output bundles as requested by user (even if API returns more items).\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "projectId",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "sortOrder",
          "type": "number",
          "label": "Sort Order"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "parentId",
          "type": "text",
          "label": "Parent Id"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Content"
        },
        {
          "name": "timeZone",
          "type": "text",
          "label": "Time Zone"
        },
        {
          "name": "isAllDay",
          "type": "boolean",
          "label": "Is All Day"
        },
        {
          "name": "priority",
          "type": "number",
          "label": "Priority"
        },
        {
          "name": "startDate",
          "type": "date",
          "label": "Start Date"
        },
        {
          "name": "dueDate",
          "type": "date",
          "label": "Due Date"
        },
        {
          "name": "completedTime",
          "type": "date",
          "label": "Completed Date"
        },
        {
          "name": "status",
          "type": "number",
          "label": "Status"
        },
        {
          "name": "desc",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "repeatFlag",
          "type": "text",
          "label": "Repeat Flag"
        },
        {
          "name": "childids",
          "type": "array",
          "label": "Child Ids"
        },
        {
          "name": "items",
          "type": "array",
          "label": "Items"
        },
        {
          "name": "tags",
          "type": "array",
          "label": "Tags"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"output\": {\n            \"date\": \"{{item.sortOrder}}\",\n            \"label\": \"{{item.title}}\",\n            \"description\": \"{{item.id}}\"\n        },\n        \"limit\": 500\n    }\n}",
      "parameters": [
        {
          "mode": "edit",
          "name": "projectId",
          "type": "select",
          "label": "List",
          "options": "rpc://app%23ticktick@1/listProjects",
          "required": true
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "accountName": "ticktick",
      "description": "Triggers when a task or subtask is completed.",
      "expectJsonc": null,
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"projectId\",\n        \"type\": \"text\",\n        \"label\": \"List ID\"\n    },\n    {\n        \"name\": \"sortOrder\",\n        \"type\": \"number\",\n        \"label\": \"Sort Order\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"parentId\",\n        \"type\": \"text\",\n        \"label\": \"Parent Id\"\n    },\n    {\n        \"name\": \"content\",\n        \"type\": \"text\",\n        \"label\": \"Content\"\n    },\n    {\n        \"name\": \"timeZone\",\n        \"type\": \"text\",\n        \"label\": \"Time Zone\"\n    },\n    {\n        \"name\": \"isAllDay\",\n        \"type\": \"boolean\",\n        \"label\": \"Is All Day\"\n    },\n    {\n        \"name\": \"priority\",\n        \"type\": \"number\",\n        \"label\": \"Priority\"\n    },\n    {\n        \"name\": \"startDate\",\n        \"type\": \"date\",\n        \"label\": \"Start Date\"\n    },\n    {\n        \"name\": \"dueDate\",\n        \"type\": \"date\",\n        \"label\": \"Due Date\"\n    },\n    {\n        \"name\": \"completedTime\",\n        \"type\": \"date\",\n        \"label\": \"Completed Date\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"number\",\n        \"label\": \"Status\"\n    },\n    {\n        \"name\": \"desc\",\n        \"type\": \"text\",\n        \"label\": \"Description\"\n    },\n    {\n        \"name\": \"repeatFlag\",\n        \"type\": \"text\",\n        \"label\": \"Repeat Flag\"\n    },\n    {\n        \"name\": \"childids\",\n        \"type\": \"array\",\n        \"label\": \"Child Ids\"\n    },\n    {\n        \"name\": \"items\",\n        \"type\": \"array\",\n        \"label\": \"Items\"\n    },\n    {\n        \"name\": \"tags\",\n        \"type\": \"array\",\n        \"label\": \"Tags\"\n    }\n]",
      "parametersJsonc": "// Defines \"limit\" as module input parameter.\n[\n    {\n        \"name\": \"projectId\", // Makes value accesible via \"{{parameters.id}}\".\n        \"type\": \"select\", // Sets the type to unsigned integer.\n        \"label\": \"List\", // Sets the user friendly label visible in the module.\n        \"required\": true,\n        \"options\": \"rpc://listProjects\",\n        \"mode\": \"edit\" // Sets the parameter as mandatory.\n    },\n    {\n        \"name\": \"limit\", // Makes value accesible via \"{{parameters.limit}}\".\n        \"type\": \"uinteger\", // Validates that an unsigned integer entered.\n        \"label\": \"Limit\", // Sets the user friendly label visible in the module\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\", // Sets the help text with an example under input field in the module.\n        \"default\": 2,\n        \"required\": true // Sets the parameter as mandatory.\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "ab",
  "_accounts": {
    "ticktick": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://ticktick.com/open/v1/project",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {
            "uid": "{{body.id}}",
            "metadata": {
              "type": "text",
              "value": "{{body.name}}"
            }
          }
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.code",
              "request.body.client_secret",
              "response.body.access_token"
            ]
          },
          "url": "https://ticktick.com/oauth/token",
          "body": {
            "code": "{{temp.code}}",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "authorization_code",
            "redirect_uri": "{{oauth.localRedirectUri}}",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "accessToken": "{{body.access_token}}"
            }
          }
        },
        "authorize": {
          "qs": {
            "scope": "{{join(oauth.scope, ',')}}",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "redirect_uri": "{{oauth.localRedirectUri}}",
            "response_type": "code"
          },
          "url": "https://ticktick.com/oauth/authorize",
          "response": {
            "temp": {
              "code": "{{query.code}}"
            }
          }
        }
      },
      "rev": 14,
      "name": "ticktick",
      "type": "oauth",
      "label": "Ticktick",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "ticktick",
      "install": {
        "common": {
          "clientId": "{{parameters.clientId}}",
          "clientSecret": "{{parameters.clientSecret}}"
        }
      },
      "apiJsonc": "{\n    // Step 1: OAuth2 authorization request\n    // See OAuth2 documentation: https://www.oauth.com/oauth2-servers/server-side-apps/authorization-code/\n    \"authorize\": {\n        \"url\": \"https://ticktick.com/oauth/authorize\", // Endpoint for authorization\n        \"qs\": {\n            \"scope\": \"{{join(oauth.scope, ',')}}\", // Lists the scopes from the \"default scope\" tab.\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"redirect_uri\": \"{{oauth.localRedirectUri}}\", // Redirect URI (see the link above).\n            \"response_type\": \"code\" // Response type \"code\".\n        },\n        // Authorization response handling\n        // See OAuth2 documentation https://www.oauth.com/oauth2-servers/authorization/the-authorization-response/\n        \"response\": {\n            \"temp\": {\n                \"code\": \"{{query.code}}\"\n            }\n        }\n    },\n    // Step 2: OAuth2 token request\n    \"token\": {\n        \"url\": \"https://ticktick.com/oauth/token\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"code\": \"{{temp.code}}\", // Uses stored \"code\" from authorization response.\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"grant_type\": \"authorization_code\", // Sets the \"grant_type\" to \"authorization_code\".\n            \"redirect_uri\": \"{{oauth.localRedirectUri}}\",\n            \"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\"\n        },\n        \"type\": \"urlencoded\",\n        // Token response handling\n        \"response\": {\n            \"data\": {\n                \"accessToken\": \"{{body.access_token}}\" // Stores the accessToken.\n            }\n        },\n        \"log\": {\n            \"sanitize\": [ // Excludes sensitive parameters from logs.\n                \"request.body.code\",\n                \"request.body.client_secret\",\n                \"response.body.access_token\"\n            ]\n        }\n    },\n    // Request to get authorized user information\n    \"info\": {\n        \"url\": \"https://ticktick.com/open/v1/project\",\n        \"headers\": {\n            \"authorization\": \"Bearer {{connection.accessToken}}\"\n        },\n        \"response\": {\n            \"uid\": \"{{body.id}}\", // Unique ID of user's account.\n            \"metadata\": {\n                \"type\": \"text\", // Type of the parameter. Can be \"text\" or \"email\".\n                \"value\": \"{{body.name}}\" // The value in \"user\" will be displayed in connection's label.\n            }\n        },\n        \"log\": { // Excludes sensitive parameters from logs.\n            \"sanitize\": [\n                \"request.headers.authorization\"\n            ] // Omit HTTP header \"Authorization\".\n        }\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "For information on how to obtain your __Client ID__ and __Client Secret__ values, see the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).",
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "advanced": true,
          "editable": true
        },
        {
          "name": "clientSecret",
          "type": "password",
          "label": "Client Secret",
          "advanced": true,
          "editable": true
        }
      ],
      "scopeJsonc": null,
      "installSpec": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "text",
          "label": "Client Secret",
          "required": true
        }
      ],
      "scopesJsonc": null,
      "installJsonc": "{\r\n    \"common\": {\r\n        \"clientId\": \"{{parameters.clientId}}\",\r\n        \"clientSecret\": \"{{parameters.clientSecret}}\"\r\n    }\r\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"advanced\": true,\n        \"help\": \"For information on how to obtain your __Client ID__ and __Client Secret__ values, see the [TickTick API documentation](https://developer.ticktick.com/docs#/openapi).\",\n\t\t\"editable\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"password\",\n        \"label\": \"Client Secret\",\n        \"advanced\": true,\n\t\t\"editable\": true\n    }\n]",
      "installSpecJsonc": "[\r\n    {\r\n        \"name\": \"clientId\",\r\n        \"type\": \"text\",\r\n        \"label\": \"Client ID\",\r\n        \"required\": true\r\n    },\r\n    {\r\n        \"name\": \"clientSecret\",\r\n        \"type\": \"text\",\r\n        \"label\": \"Client Secret\",\r\n        \"required\": true\r\n    }\r\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    // Default request configuration\n    \"baseUrl\": \"https://ticktick.com/open/v1\", // Default base URL for all modules and RPCs.\n    \"headers\": { // Default HTTP headers for all modules and RPCs.\n        \"Authorization\": \"Bearer {{connection.accessToken}}\" // Authorization by API key, which user will provide in the connection as parameter.\n    },\n    \"temp\": {\n        \"dateToParse\": [\n            \"startDate\",\n            \"dueDate\",\n            \"completedTime\"\n        ]\n    },\n    // Default response handling\n    \"response\": {\n        \"error\": { // Error handling\n            \"message\": \"[{{statusCode}}] {{body.errorMessage}}\",\n            \"429\": {\n                \"type\": \"RateLimitError\",\n                \"message\": \"[{{statusCode}}] {{body.error || body.message}}\"\n            } \n        }\n    },\n    \"log\": {\n        \"sanitize\": [ // Excludes sensitive parameters from logs.\n            \"request.headers.Authorization\" // Omit HTTP header \"Authorization\".\n        ]\n    }\n}",
  "countries": null,
  "_functions": {
    "formatReminders": {
      "rev": 7,
      "code": "function formatReminders(reminders) {\n    if (!Array.isArray(reminders)) return;\n    return reminders\n        .flatMap(reminder => reminder.TRIGGER ? `TRIGGER:${reminder.TRIGGER}` : []);\n}",
      "name": "formatReminders",
      "test": "it('should correct format reminders', () => {\r\n    const input = [{ TRIGGER: '1' }, { TRIGGER: '2' }];\r\n    const result = formatReminders(input);\r\n    assert.deepStrictEqual(result, ['TRIGGER:1', 'TRIGGER:2']);\r\n});\r\n\r\nit('should return undefined if input is not an array', () => {\r\n    const input = 'not an array';\r\n    const result = formatReminders(input);\r\n    assert.strictEqual(result, undefined);\r\n});\r\n\r\nit('should skip reminders without(undefined) TRIGGER', () => {\r\n    const input = [{ TRIGGER: '1' }, { TRIGGER: undefined }, { TRIGGER: '2' }];\r\n    const result = formatReminders(input);\r\n    assert.deepStrictEqual(result, ['TRIGGER:1', 'TRIGGER:2']);\r\n})",
      "appName": "ticktick",
      "arguments": "(reminders)",
      "appVersion": 1
    },
    "generalResponse": {
      "rev": 63,
      "code": "function generalResponse(obj, dateToParse) {\n  //dateToParse = [\"CreationDate\"]\n  if (!obj) return;\n\n  const result = {};\n\n    for (let [k, v] of Object.entries(obj)) {\n      if (dateToParse.includes(k)) {\n        result[k] = iml.formatDate(v, \"YYYY-MM-DD hh:mm A\");\n      } else if (Array.isArray(v)) {\n        result[k] = obj[k].map((i) => {\n          return iml.generalResponse(i, dateToParse);\n        });\n      } else if (v && v.constructor === Object && !(v instanceof Date)) {\n        result[k] = iml.generalResponse(v, dateToParse);\n      } else {\n        result[k] = v;\n      }\n    }\n    /* obj.Birthday = iml.parseDate(obj.Birthday, 'X');\n          obj.CreationDate = iml.parseDate(obj.CreationDate, 'X'); */\n  \n    return result;\n  \n}\n",
      "name": "generalResponse",
      "test": "it(\"it should handle arrays with provided date in arrays\", () => {\n  const dateToParse = [\"startDate\", \"dueDate\", \"completedTime\"];\n  const input = {\n    id: \"test\",\n    startDate: \"2023-10-20T00:00:00.000Z\",\n    dueDate: \"2023-10-20T00:00:00.000Z\",\n    completedTime: \"2023-10-20T00:00:00.000Z\",\n    items: [\n      {\n        id: \"test\",\n        completedTime: \"2023-10-20T00:00:00.000Z\",\n      },\n    ],\n  };\n\n  const output = {\n    id: \"test\",\n    startDate: \"2023-10-20 12:00 AM\",\n    dueDate: \"2023-10-20 12:00 AM\",\n    completedTime: \"2023-10-20 12:00 AM\",\n    items: [\n      {\n        id: \"test\",\n        completedTime: \"2023-10-20 12:00 AM\",\n      },\n    ],\n  };\n\n  assert.deepEqual(generalResponse(input, dateToParse), output);\n});\n\nit(\"Should return null if the input is empty\", () => {\n  const input = {};\n  assert.ok(generalResponse(input), null);\n});\n\nit(\"it should handle arrays with no dates to parse\", () => {\n  const dateToParse = [\"startDate\", \"dueDate\", \"completedTime\"];\n  const inputObj = {\n    items: [\n      {\n        id: \"123\",\n        value: \"test\",\n      },\n      {\n        id: \"456\",\n        value: \"another test\",\n      },\n    ],\n  };\n  const result = generalResponse(inputObj, dateToParse);\n  assert.deepEqual(inputObj, result);\n});\n\nit(\"it should handle nested objects with no dates to parse\", () => {\n  const dateToParse = [\"nonExistentDate\"];\n  const inputObj = {\n    parent: {\n      child: {\n        value: \"test\",\n      },\n    },\n  };\n  const result = generalResponse(inputObj, dateToParse);\n  assert.deepEqual(inputObj, result);\n});\n",
      "appName": "ticktick",
      "arguments": "(obj, dateToParse)",
      "appVersion": 1
    },
    "completedTaskFilter": {
      "rev": 10,
      "code": "function completedTaskFilter(item) {\n    \n\n\n  if (Array.isArray(item)) {\n    const task = item.map(i => {\n      return { ...i }; \n    });\n\n    function hasPriorityOneOrTwo(task) {\n      return task.status === 1 || task.status === 2;\n    }\n    \n    return task.filter(hasPriorityOneOrTwo);\n  } else {\n    return;\n  }\n  \n\n\n}",
      "name": "completedTaskFilter",
      "test": "it(\"should return an empty array when no task with priority 1 or 2 is present\", () => {\n  // data with tasks having priorities other than 1 or 2\n  const inputTasks = [\n    { id: 1, priority: 3, completed: true },\n    { id: 2, priority: 3, completed: true },\n    { id: 3, priority: 4, completed: true },\n  ];\n\n\n  const result = completedTaskFilter(inputTasks);\n\n \n  assert.deepStrictEqual(result, []);\n});\n\n/* it(\"should return tasks with priority 1 or 2\", () => {\n  //  data with tasks having priorities 1, 2, and 0\n  const inputTasks = [\n    { id: 1, priority: 1, completed: true },\n    { id: 2, priority: 2, completed: true },\n    { id: 3, priority: 0, completed: true },\n  ];\n\n \n  const result = completedTaskFilter(inputTasks);\n\n\n  assert.deepStrictEqual(result, [\n    { id: 1, priority: 1, completed: true },\n    { id: 2, priority: 2, completed: true },\n  ]);\n}); */\n\n/* it(\"should return an empty array when input is not an array\", () => {\n  //  input data that is not an array\n  const input = { id: 1, priority: 1, completed: true };\n\n\n  const result = completedTaskFilter(input);\n\n \n  assert.deepStrictEqual(result, []);\n}); */\n",
      "appName": "ticktick",
      "arguments": "(item)",
      "appVersion": 1
    }
  },
  "approvedAt": "2023-09-06T21:12:15.944243+00:00",
  "categories": [],
  "opensource": false,
  "description": "TickTick presents an array of enhanced features designed to bolster user productivity, including a dynamic Pomo timer and seamless integration of Habit tracking. Additionally, Make, an innovative companion, empowers you to establish intricate automations that optimize your experience within this platform.",
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "d2f23b3bee132c04e2e69842487fda7d",
  "versionFull": "1.0.18",
  "compiledName": "ticktick",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": null,
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": null
}
