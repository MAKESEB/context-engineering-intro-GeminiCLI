{
  "rev": 18,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization"
      ]
    },
    "baseUrl": "https://api.airtable.com/v0",
    "headers": {
      "authorization": "Bearer {{connection.apiToken}}"
    },
    "response": {
      "error": "{{body.error.message || body.error.type || body.error}}"
    }
  },
  "beta": false,
  "docs": "# Getting started with Airtable\n\nTo use any of the above modules, you need to have an Airtable account. If you do not have one yet, you can create one at [Airtable.com](https://airtable.com).\n\t\t\n## Connecting the Airtable service to Integromat\n\nTo connect your Airtable account to Integromat, follow the general instructions for [Connecting to services](https://support.integromat.com/hc/en-us/articles/360001990194#create-a-connection). You will be prompted to enter you Airtable Email, Password and API key. To get your API key, log into your Airtable account and go to https://airtable.com/account. If the API key is not shown at the bottom of this page, click the **Generate key** button to generate one.\n\n![](https://integromat.zendesk.com/hc/article_attachments/360009182353/file.png)\n\nAfter you have filled all required fields you can press the **Create connection** button.\n\n**NOTE:** If you use the \"Sign in with Google\" option to login to your Airtable account, it is necessary to create a password by clicking \"Add password\" link on your Airtable profile page [https://airtable.com/account](https://airtable.com/account):\n\n![](https://integromat.zendesk.com/hc/article_attachments/360009182373/file.png)\n\n## Why do we need your email and password?\n\nAt the moment of writing this document, the Airtable API is only limited to CRUD operations on a specific table.  As Airtable currently does not provide a public API for accessing table metadata (like columns, data types, etc.), we need you to enter your email and password so we can log into your Airtable account and download this metadata directly from the Airtable website. Without knowing the metadata, we couldn't offer you during the configuration the comfort you are used to from other similar database modules.\n\nThis is a temporary solution, once Airtable releases their metadata API publicly, we'll remove your email and password from our database.\n\n# Tutorials\n\n* [How to connect Chatfuel to Airtable](https://support.integromat.com/hc/en-us/articles/360006307494-How-to-connect-Chatfuel-to-Airtable)\n* [How to connect Airtable and Google contacts and synchronize contacts between these services](https://support.integromat.com/hc/en-us/articles/360001987073-How-to-connect-Airtable-and-Google-contacts-and-synchronize-contacts-between-these-services)\n\n# Troubleshooting\n\n## Too many requests. Please try again in 5 minutes.\n\nThis error is caused by our temporary solution of accessing table metadata. The Airtable website limits the number of logins to their website. Just wait for a few minutes and try it again. This is only happening during the configuration of the module, you'll never see this error during the scenario execution.",
  "name": "airtable",
  "_rpcs": {
    "RpcGetSchema": {
      "api": [
        {
          "url": "https://airtable.com/login",
          "response": {
            "temp": {
              "csrf": "{{getCsrfFromBody(body)}}"
            },
            "type": "text",
            "output": {}
          },
          "shareCookies": true
        },
        {
          "log": {
            "sanitize": [
              "request.body.password"
            ]
          },
          "url": "https://airtable.com/auth/login/",
          "body": {
            "_csrf": "{{temp.csrf}}",
            "email": "{{connection.email}}",
            "password": "{{connection.password}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "temp": {
              "secretSocketId": "{{match(body, '\"secretSocketId\":\"(.*?)\"', 'i')}}"
            },
            "type": "text",
            "error": {
              "429": {
                "message": "Too many requests. Please try again in 5 minutes."
              },
              "message": "Invalid log in credentials."
            },
            "valid": "{{isLoginValid(body)}}",
            "output": {}
          },
          "shareCookies": true
        },
        {
          "qs": {
            "requestId": "reqFromIntegromat",
            "secretSocketId": "{{temp.secretSocketId}}",
            "stringifiedObjectParams": "{\"includeDataForTableIds\":null,\"includeDataForViewIds\":null}"
          },
          "url": "https://airtable.com/v0.3/application/{{substring(parameters.table, 0, indexOf(parameters.table, '/'))}}/read",
          "method": "GET",
          "headers": {
            "x-time-zone": "{{environment.timezone}}",
            "x-user-locale": "en",
            "X-Requested-With": "XMLHttpRequest",
            "x-airtable-application-id": "{{substring(parameters.table, 0, indexOf(parameters.table, '/'))}}"
          },
          "response": {
            "output": "{{getSchema(body, substring(parameters.table, indexOf(parameters.table, '/') + 1), parameters.for, parameters.filter)}}",
            "wrapper": "{{wrapOutput(output, parameters.for)}}"
          },
          "shareCookies": true
        }
      ],
      "rev": 3,
      "name": "RpcGetSchema",
      "label": "Get Schema",
      "appName": "airtable",
      "apiJsonc": "[\n    {\n        \"url\": \"https://airtable.com/login\",\n        \"response\": {\n            \"temp\": {\n                \"csrf\": \"{{getCsrfFromBody(body)}}\"\n            },\n            \"type\": \"text\",\n            \"output\": {}\n        },\n        \"shareCookies\": true\n    },\n    {\n        \"url\": \"https://airtable.com/auth/login/\",\n        \"body\": {\n            \"_csrf\": \"{{temp.csrf}}\",\n            \"email\": \"{{connection.email}}\",\n            \"password\": \"{{connection.password}}\"\n        },\n        \"type\": \"urlencoded\",\n        \"method\": \"POST\",\n        \"response\": {\n            \"temp\": {\n                \"secretSocketId\": \"{{match(body, '\\\"secretSocketId\\\":\\\"(.*?)\\\"', 'i')}}\"\n            },\n            \"type\": \"text\",\n            \"error\": {\n                \"429\": {\n                    \"message\": \"Too many requests. Please try again in 5 minutes.\"\n                },\n                \"message\": \"Invalid log in credentials.\"\n            },\n            \"valid\": \"{{isLoginValid(body)}}\",\n            \"output\": {}\n        },\n        \"shareCookies\": true,\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.body.password\"]\n\t\t}\n    },\n    {\n        \"qs\": {\n            \"requestId\": \"reqFromIntegromat\",\n            \"secretSocketId\": \"{{temp.secretSocketId}}\",\n            \"stringifiedObjectParams\": \"{\\\"includeDataForTableIds\\\":null,\\\"includeDataForViewIds\\\":null}\"\n        },\n        \"url\": \"https://airtable.com/v0.3/application/{{substring(parameters.table, 0, indexOf(parameters.table, '/'))}}/read\",\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-time-zone\": \"{{environment.timezone}}\",\n            \"x-user-locale\": \"en\",\n            \"X-Requested-With\": \"XMLHttpRequest\",\n            \"x-airtable-application-id\": \"{{substring(parameters.table, 0, indexOf(parameters.table, '/'))}}\"\n        },\n        \"response\": {\n            \"output\": \"{{getSchema(body, substring(parameters.table, indexOf(parameters.table, '/') + 1), parameters.for, parameters.filter)}}\",\n            \"wrapper\": \"{{wrapOutput(output, parameters.for)}}\"\n        },\n        \"shareCookies\": true\n    }\n]",
      "appVersion": 1,
      "parameters": [
        {
          "name": "table",
          "type": "text"
        },
        {
          "name": "for",
          "type": "text"
        },
        {
          "name": "filter",
          "type": "array"
        }
      ],
      "accountName": "airtable",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"table\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"for\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"filter\",\n        \"type\": \"array\"\n    }\n]"
    },
    "RpcGetTables": {
      "api": [
        {
          "url": "https://airtable.com/login",
          "response": {
            "temp": {
              "csrf": "{{getCsrfFromBody(body)}}"
            },
            "type": "text",
            "output": {}
          },
          "shareCookies": true
        },
        {
          "log": {
            "sanitize": [
              "request.body.password"
            ]
          },
          "url": "https://airtable.com/auth/login/",
          "body": {
            "_csrf": "{{temp.csrf}}",
            "email": "{{connection.email}}",
            "password": "{{connection.password}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "type": "text",
            "error": {
              "429": {
                "message": "Too many requests. Please try again in 5 minutes."
              },
              "message": "Invalid log in credentials."
            },
            "valid": "{{isLoginValid(body)}}",
            "output": "{{item}}",
            "iterate": "{{getTables(body)}}"
          },
          "shareCookies": true
        }
      ],
      "rev": 3,
      "name": "RpcGetTables",
      "label": "Get Tables",
      "appName": "airtable",
      "apiJsonc": "[\n    {\n        \"url\": \"https://airtable.com/login\",\n        \"response\": {\n            \"temp\": {\n                \"csrf\": \"{{getCsrfFromBody(body)}}\"\n            },\n            \"type\": \"text\",\n            \"output\": {}\n        },\n        \"shareCookies\": true\n    },\n    {\n        \"url\": \"https://airtable.com/auth/login/\",\n        \"body\": {\n            \"_csrf\": \"{{temp.csrf}}\",\n            \"email\": \"{{connection.email}}\",\n            \"password\": \"{{connection.password}}\"\n        },\n        \"type\": \"urlencoded\",\n        \"method\": \"POST\",\n        \"response\": {\n            \"type\": \"text\",\n            \"error\": {\n                \"429\": {\n                    \"message\": \"Too many requests. Please try again in 5 minutes.\"\n                },\n                \"message\": \"Invalid log in credentials.\"\n            },\n            \"valid\": \"{{isLoginValid(body)}}\",\n            \"output\": \"{{item}}\",\n            \"iterate\": \"{{getTables(body)}}\"\n        },\n        \"shareCookies\": true,\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.body.password\"]\n\t\t}\n    }\n]",
      "appVersion": 1,
      "parameters": [],
      "accountName": "airtable",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "RpcGetTableViews": {
      "api": [
        {
          "url": "https://airtable.com/login",
          "response": {
            "temp": {
              "csrf": "{{getCsrfFromBody(body)}}"
            },
            "type": "text",
            "output": {}
          },
          "shareCookies": true
        },
        {
          "log": {
            "sanitize": [
              "request.body.password"
            ]
          },
          "url": "https://airtable.com/auth/login/",
          "body": {
            "_csrf": "{{temp.csrf}}",
            "email": "{{connection.email}}",
            "password": "{{connection.password}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "temp": {
              "secretSocketId": "{{match(body, '\"secretSocketId\":\"(.*?)\"', 'i')}}"
            },
            "type": "text",
            "error": {
              "429": {
                "message": "Too many requests. Please try again in 5 minutes."
              },
              "message": "Invalid log in credentials."
            },
            "valid": "{{isLoginValid(body)}}",
            "output": {}
          },
          "shareCookies": true
        },
        {
          "qs": {
            "requestId": "reqFromIntegromat",
            "secretSocketId": "{{temp.secretSocketId}}",
            "stringifiedObjectParams": "{\"includeDataForTableIds\":null,\"includeDataForViewIds\":null}"
          },
          "url": "https://airtable.com/v0.3/application/{{substring(parameters.table, 0, indexOf(parameters.table, '/'))}}/read",
          "method": "GET",
          "headers": {
            "x-time-zone": "{{environment.timezone}}",
            "x-user-locale": "{{environment.language}}",
            "x-airtable-qos": "beta",
            "X-Requested-With": "XMLHttpRequest",
            "x-airtable-application-id": "{{substring(parameters.table, 0, indexOf(parameters.table, '/'))}}"
          },
          "response": {
            "output": "{{getViews(body, substring(parameters.table, indexOf(parameters.table, '/') + 1))}}"
          },
          "shareCookies": true
        }
      ],
      "rev": 3,
      "name": "RpcGetTableViews",
      "label": "Get Views",
      "appName": "airtable",
      "apiJsonc": "[\n\t{\n\t\t\"url\": \"https://airtable.com/login\",\n\t\t\"response\": {\n\t\t\t\"temp\": {\n\t\t\t\t\"csrf\": \"{{getCsrfFromBody(body)}}\"\n\t\t\t},\n\t\t\t\"type\": \"text\",\n\t\t\t\"output\": {}\n\t\t},\n\t\t\"shareCookies\": true\n\t},\n\t{\n\t\t\"url\": \"https://airtable.com/auth/login/\",\n\t\t\"body\": {\n\t\t\t\"_csrf\": \"{{temp.csrf}}\",\n\t\t\t\"email\": \"{{connection.email}}\",\n\t\t\t\"password\": \"{{connection.password}}\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"method\": \"POST\",\n\t\t\"response\": {\n\t\t\t\"temp\": {\n\t\t\t\t\"secretSocketId\": \"{{match(body, '\\\"secretSocketId\\\":\\\"(.*?)\\\"', 'i')}}\"\n\t\t\t},\n\t\t\t\"type\": \"text\",\n\t\t\t\"error\": {\n\t\t\t\t\"429\": {\n\t\t\t\t\t\"message\": \"Too many requests. Please try again in 5 minutes.\"\n\t\t\t\t},\n\t\t\t\t\"message\": \"Invalid log in credentials.\"\n\t\t\t},\n\t\t\t\"valid\": \"{{isLoginValid(body)}}\",\n\t\t\t\"output\": {}\n\t\t},\n\t\t\"shareCookies\": true,\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.body.password\"]\n\t\t}\n\t},\n\t{\n\t\t\"qs\": {\n\t\t\t\"requestId\": \"reqFromIntegromat\",\n\t\t\t\"secretSocketId\": \"{{temp.secretSocketId}}\",\n\t\t\t\"stringifiedObjectParams\": \"{\\\"includeDataForTableIds\\\":null,\\\"includeDataForViewIds\\\":null}\"\n\t\t},\n\t\t\"url\": \"https://airtable.com/v0.3/application/{{substring(parameters.table, 0, indexOf(parameters.table, '/'))}}/read\",\n\t\t\"method\": \"GET\",\n\t\t\"headers\": {\n\t\t\t\"x-time-zone\": \"{{environment.timezone}}\",\n\t\t\t\"x-user-locale\": \"{{environment.language}}\",\n\t\t\t\"x-airtable-qos\": \"beta\",\n\t\t\t\"X-Requested-With\": \"XMLHttpRequest\",\n\t\t\t\"x-airtable-application-id\": \"{{substring(parameters.table, 0, indexOf(parameters.table, '/'))}}\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"output\": \"{{getViews(body, substring(parameters.table, indexOf(parameters.table, '/') + 1))}}\"\n\t\t},\n\t\t\"shareCookies\": true\n\t}\n]",
      "appVersion": 1,
      "parameters": [
        {
          "name": "table",
          "type": "text"
        }
      ],
      "accountName": "airtable",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"table\",\n        \"type\": \"text\"\n    }\n]"
    }
  },
  "flags": {},
  "label": "Airtable",
  "theme": "#18bfff",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Other",
      "modules": [
        "TriggerWatchRecords",
        "TriggerWatchRecordsInView",
        "ActionGetRecord",
        "ActionSearchRecords",
        "ActionCreateRecord",
        "ActionUpdateRecords",
        "ActionDeleteRecord"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000002b64944415458c3ed96b96b545118c57f2fc685b82f41c4145a888218d051102bb55244119780956023d8d888ad85e85f602b2282b8c49d20119788b844c17d291417dc93284463c862e66771efe8a0c94c2693d1c603b799b9ef9d73bff39def3ef88f7f8ca490cd6ae69929c0526041fceb267011f800982405bd363f695cc3d494ba4b7da476fb0bddea0375a73a37eecd082e9a78a2ba463dac369b1f4dea2175b53a219f90a43762600830035805ac03aa81e1059ea103b807d40267806740cfeff62459a400a38185400db00c984a817dd25b318137c059e008d008b401fc1413cb345b3dafb6f5a3cc03459b5aafceca1cba2c4be930602c30b4c813e7c250605ce40a164425a3802e6024b018580f2c01260f92051f804bd182cb403b5001b4266a15b007e8040e030d402b3013581dd71c604481c41dc07de0047012780a8c8f07ab01c6009b51e7a91fa3479dea6d75875aad96ab63d595ea01f5ad9acee1715a7da3ee5757a863e24c58a0ee56ef478e4c5c53c4e1d2d4479e6bd51a75925aa6ce54b7abd7d5f6acbdedea35759b3a431da24e5537a975eae73ede9f4ad4142122957d94b21b7842c8f271e041b46311303f7a7c0bb801f410c6f33a428ca713664a6f680696e7aa406f68514faa1b627933119ea66e551bd4affd7c575e0b72a14bdd18c92bd5ab053eff5340f90022f51238045c88bf8d04aa069ad1fe0a481366f9c1b89e453145239f801ee0317000380abc22ebbeb798eb368f80efc05d603fa1f3df41d6e53188f85d40172152fb08b16b2a1571b6805642633d04f61266c2e75213137ac872e039b016f812c5949a18e0135007bc2e4f92240dbc2e3523e1b27b0c9c26d8fb10e82c740e140a81f784abf818700568815f552e95806fc01de014a1d44f09c9fac3dec11060d67a019c237c0334d28f9e2aaadbe220aa00b6103e34eb09c32afd171af93f06073f00623851d17d3ea34e0000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000005ca4944415478daed9a5b6c15551486bf29154a115a8954824445bc24260451418b3c201151b0012f4149445f7d30065f25f18107d4179ff4418301238100522e4ad4700b0450a28d5c82a250d0cab558a0b6505a7aceefc3da5386c394d3d3739b733c7f32494f6766ef59ff5ab3d6bfd71e28a184124a28e1ff0b2f979349f2e7ac02ee0646b853cdc05f402b80e7e5eeb172329333fc16e021600e3013180b0c7197b40347804dc006e030d09d4b22b262b43baa25d5495a2ee98ca4b87a475cd22949cb24cd9454e58f932d649c62f7b0038031401df0323001189ce250978106600d16197f02f14c474546460b7868083011980b3c07dc0594a5397cdc19bfc991d1e0c8c948ae486b8440521b05cc005e019e0086a5fd64e168057603ab80cdc01940e91091f29d016f0f02c6012f01b381fb81f22c199e886e2c51ae07ea81434017a41e157dbe3a60f8edc054ccdb53ddef7ca219d88645c54ee07c2a4424bdca195e8e797836e6f171580444095780fdc057c0d7c05120968c88d0b3016f0f056a316fcfc0def5a81767017f03df01ab81bd98ce088d8a1bfee38cafc632f93c2cab0fa130d1ee0858815590b69b464440bcbc2b29a6e2c15549ef8489aade6a7415e9d7ef28a1dcd9147aa2079ee7f90c7de2ced501f762caae10d10d3462e5f233dfc6eb6c0ebbcb9150068c069ec1327f2dbdb018415c00f6006b31c174925e049397607005564ee2816800a8041e015e0066612bb95c899ebea21bf803f806f3f83ea003ae8bec324ca55e06ba3ccfc3732706020bb0906fc0d45503702961000fb813988e45c564e0b63c1b7e1ed885d5ffadc0699cb713caf96398039fc4e4f442a0cdcffa13249d0b64cd56499b25bd29698ca4327fb040a5182ca956d287920eb94c9b2b74493a2069b1a449922a8219defd5d2ee901496f4bda2ee9dfc0fd17254d94d473f11449ed2113754b3a2ae96349d3240d0d99c893344ad27c491b24b564d1f07392ea25cd9334d2cd9de898e1b2fec352494d0a2fe7edcee6a40404d126699ba4b7248d95342064f20ae791c5ce435d1930ba53d23e498b243d2a6950603eff182869bca48592f64aea483266bf08f01193745cd2a792a64b1aa6f0a818e93c55afeb5fafbee2aca4d592e64aaad18ddef6e77855d21a777dbc8f63a74540e2403b252d90bd6f615131c8796e91cc939d3719ef8aa40649ef497a58e6d9446f57ca72cf07920eaa7f51d64380cfea146cf1d05fcd1f074e6035772df0037031a4828cc096d0cf03e381e1eefe16e0176c15b713f827e1de32acbb341d78116bba54a751392e01cf02bb3245401097b11abc0e6b631d21d0e1d5b59e6135d78455ab232c9650be860193b0f23503b887cca8d21e02b221662a317d508b698b2dc05a49bbb9d6ac88615e6f09dee842bc1cb80feb29cec104d8ad59784e20bb6ace174d6f60fd84fd5854ac94d4e48848f4f65358884f73f766bdf7902b395b013c1e385ec375761d06031f01f331559a33e463c93b9a1bdb6935c0d3b9361e72bba0e9047e04dec7566b419491a7fe432e08e8c0162b4b80efc9c30668be08b8046c073ec756696d51323c9b04b43a8397003bc8e03656d40968c184cf52ec5dbf1265c33349c059ac03b30c6ba25c8dbad19922e004a6fbbf000e52a01f34a44a80b0adea55c072e037b2b0671f4502e2d8a26605b012db774b6b5b3a2a4846400cf815f812db676b2a16c3130988615ef6d18d2d5e96611de25310fd8c9e0e018dd846c264e080337c23b6f75e948663f9ac878066e075aceb728c143f3228409cc6ca37e501239bdd51ac8863aff2564cac3542f4b6b7b281764ca0adc3da7e8d04344bb11210038e3b83d7013fd1cb62acd808b88075a4ebb10ef5099208b56220a00bf81ddb15de8895ef9e5de1642854028425ec1d98b77760593d659156680474603a6523e6f1c3f4f303c94222c0df75da82797b0faea798099d121502e48e20dab0ecbd1ecbe6c7e8c3878f854ac039ec7bbe1a6cc1f5ad33fc676ef29163269077ad1bd819ba037810abdf2729f03e430925945042098580ff004e0df27af617fb1d0000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-03-21T08:34:41.696395+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda79300000ba64944415478daed9d6bb0556519c77f0714b928188a26844989e3258c2223c5102cd214e21c326b6c461bbb4d9799fad2d44c33cdf4ad993ed587a6a9b86559109703820247414208f19221885730c314b98807e47238e73c7df8afe5596cce69afb5cfde7b5df6f39bd933e23e7baf77aff7ffbeeff33e977781e3388ee3388ee3388ee3388ee3388ee3388e53589ad26e403d30b3f0b7be0f1817bc4603e7067fd20ebc0eec015e05de01aca9a9f8b7a7b0bf30e87480f380eb8099c054d4f9c381b34a3ed2091c065e013600ab81a78163008d2086426066985993995d6a66df34b336336bb7e4bc6d66abccec6e331b1d7c67da3fafea1442d6918e190c4c04e6005f002e0706f6f3eb4f01cf032b8065c04ea0038a312be4fa17443afe22e066e04e34cd5f50a34bbe05ac0716017f070e41be8590cb96071d7f167025d00cb4001f0106d5a90927806780a5c003c0cb40571e85909b164746fbf9c00d68b4cf002e49f17774037b8135c062e071e028e46756c87c2b838e1f005c06dc0edc017c02189a76db4a388204b018580bfc871c6c2533d9bac8681f0a4c02be04dc86b67003d26e5f19ba8097d0d2b014f8175a3232392b64aa451187cd25687abf134df7e7a7ddb60a39888cc545c8b7f016644b08a9b72432da072143ae05988d0cbcb3d36e5f95e80076a06de40ab4adeccc8210526b41a4e347a2addb97d156eea2b46f4a2d7f36f006d0866c85cdc8ed9cdaac50f7ab061d3f10396966015f44ce9bc1a9dc81f438063c092c416ee75781ee7a0ba12e572bf1cb4f4646ddadc007c8be51576bba5110ea41e06fc053d431fe50d32b448cbab1c02dc8a89b8c84e09cc961b42c2c061e46cb454db79255ffe61afbe51b85bac51faaf66d29f8e51b859ac61ffafd2d19f0cb370a35893f54f4e98cfae51b85aac61f127d22477ef946a1dff187587f1919f19702df477bf7cbf02d5c56e8424bc222e037c0beb82248228011c002b4ce3bd96521f01de0781c112419c193d03aef649b99c0d571ff38890086e1967d1e38870436591201ec4429d34eb6d985f21162914400bb811fa30487ceb47fa57306a7d08ee027c09b713f147bbf10d9098c013e87760237a06a1b273d0e200fe152143f48947492d8731011c210e4eb6f413e81f114278123eb74a0a97e258a17ec004e42726750bfbc769168df68e03368569882fbff6b8101fb818d68b43f8a467bbfa2855571db96cc0a1390af6026c54aeb4a8b93c8005f816200cf51e168ef8d33be21d299a181d89de4629159e1fdc074342b4c052e4ce906e61103f6a151be04adf1fb21713f80b6ee8380e3f4123c6aeae543c3d0ba7e2bb2f637a070e45e124c3791069c83a283b3515ec055b83fa12f4e00cfd233da9f27611e40245e3316f82cf0793418ff09fc9a608b187e5f53c907cf067e06fc08751c48042fa394a5e55450321d99152e02a6a159e12660141e3d0c1345d7a3b57d134a27af64b40f47c1b9663480c7717a197c1b701770a02f014c4196e5c83eae7518d88ab254d6a1e853ec44c69259e16a94143a1bb8861ec1350ac7914fa5155805bc089c4ab2ae4772313e8c3abc19b9ecfb4ab93b8122b8abfb12c03dc07cca8fca2ee4187a0889e12912c6a4236218856c843bd0ec70718cebe7154327913c82d6f62d24ccf089dcb70b901f660ecac08a93606bc0d781f9e1f54a4fc9889bb33710edfbc7035f03b6a1e96bad99bd468c4c95f07d33db4f4f96cb95f4cc0a13284eaaf831b4062f474be94b24280c299939af423bac59c13d1a92b02da75df4ac841fee8de1c8d8988e72dbd702cbcc6c1b4a58f8bfea8ebcd76166db81edc06f814f235be166f299691466eeb42181ff032da195eea8a6a1d13e952ada4ed51040c840b4167d17b81b78022d0f6bcc6c0f096605e0a099b5a282892b90e29b818f925cf1f5e6283294c3d1be9bca46fb50e4699d8d0a63afa006bba76a0a20cab96846b809780d198c4bcdec7162964205ef9f32b39dc811f27bb4e6dd81bc8e63c8ceacd01dfcceb548f4b17f674864fbf6419477d10c7c8a1ac75a6a258090307ff05bc057898c0c337b85182323f2fe21335b859221c7a351d1027c8cf472128fa0f2ae6541bb62cd742191d13e02f824eaf45b827b56971a8a5a0b20ca30b4ae4f017e8822574bcd6c0b31d7c6e0fd4e33db8582217381eb91ad3083fa949a7511b175d052d71ea7fd21119fcbe5c851d38c847c6eac2fa822f51440c800945c7a2ff01594ebde0aac36b31749362b1c36b38790a1f5217a66858f53fd9bd98e763bcb50e7ff9bca46fb85c08dc8a09b4eca4b591a02883214adebd7033f20d81f9bd96662ee8f23b3c28bc899321fd51fce41d3e9a5543e2bf4cbdf51b27dbb066ddd6605ff9d892d6eda0208694223e16e5439bc9dc01f6e662fa06c97b8dbc977cc6c1d12d338e4216b411eb21131da62c0dbf48cf64a3d9e61987c3a12e38d68fb96294a3d81f7027f201bd6b5a1d4a60dc86bb60965bf54e2353b0fb816ed4aae43c21849cfb6ea64f0ddbb51c76f443b8f77e35e2f72ad61683d6f46eb7b9612650cf80630af2f4f609608cf0aba0b8da01d284eb1323002cb46c922ef1d099695cda8d38707af21c14d398eb66ded04f98e0945361059ee33d06c339978b34dea6459005106a328d724e07b68842e013606aee4b261eaa8c7118df6039536a6a4367232eaf419680f9fab12f8bc0820a409058bee4453ec7304797181c3a86a9932a5443afd6ce495bb0d79e926a2693f97e44d005106a19b3f1195428599b11bcc6c1f553a592362d08d427e8c1664d8e5313e71067916409451c819340b65d1ac025acdec592a38a4b1e4949309c1f786255785ca5b288a004206216bff5ae0db68e7f03ba0cdccca3a98221d7f31f221cc419ecbc2e633164d00512e4076c25424862566d6e74c10e9fc49c0af907157e4fb0334467dff48940513278c3c04f8291af585ef7c680c0180122ae2440c4721a3b2616814013c43109f2f439843df30147d9aeb4286e02ff18ae65e29aa004ea151bf101dbf9ab963dab342d104d0811234e6a32c63eff8321445002750c1ca3c94489afba779d58bbc0be0185ae3e7a2b87daa67efe791bc0ae028ca13988b6aeacad61f38bd933701b4a3913e17057ffcb9befd242f023884d2aee7a27abacc3e852b6f645d00ff457504f7a384cc93dee9d5258b02305465b304b80fe5e665e2095b45244b02307410e55fd1887f81141ea2d4686441005da8b3ef479dbf9b1c3c72b528a429804e94e97b1f9aee73f1acdda29186004ea122d185a824ec0d708b3e2dea298093a86c7a01cad94b74ec99531bea2180e3c063c84fbf16955d79c767845a0a2074d7ce43eeda4425d44e7da885000ea372ed79285013bbbecea93fd514c041148a9d8f42b3eeaecd01d510c09ba83c6b0172d77678a7e787fe08602f2ac5fa23aae777776d0e2915c049e492edab270d9d8fb318f8133aa7a7df8f2f75d2a354003b9063664cc9ffef46a75bfe2578bd8cfbe90b41a9009e057e8e4e0c1f8dfcf4bb803fa3ecda5771776ddeb1e83fde134053531366d68db66f5b5085ccbb28cbf6f5f06f9c5cd341e0810d396d06083ab80bc5e077a6dd5aa7ea6c4303fa3db2100e766a8ba1e370da805fa047d1bc870ba0b89c4046fd0328f8d6eb113a2e8062d18df228d7a35ccac72873b49e0ba0188447d4b7a2ece9d80fa47001e4972e743af93a34da9fa082ca281740fe781b05db9623c3ee35fae1947301e4830e9438fb200abc3d4395aaa25c00d9c55079fb267468f5a328f25a554fac0b207b1c472ef99528bf6217353c01d505900dc2278c3d82d6f62d247c7a68a5b800d2e5084aa26945dbb758cf51aa262e80fad389aa9fd6a28e7f921413665d00f5e3107a78e43234d5277a0a49ad7001d4960e64c4ad4646dd7664e46526b4ee02a83e86226e1bd168df88b673994ca47101548f63f43cec6a3572dc947dac4ddab800fa47375acb1f46a37d2b393ba2ce05703a5da853cbd18e822fadc89adf434ed3e25d00a77310653c8fede5bdcee0bd35a8e39fc68fa72b0e6616be6e37b33dd6c301335b6166f798d958331b1079b844ee71e946883c206a02300d59f45b516a55a6b66f8ee3388ee3388ee3388ee3388ee3388ee3388e5396ff015b2f0ba6e0209f960000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": "https://airtable.com",
  "_modules": {
    "ActionGetRecord": {
      "id": 14615,
      "api": {
        "url": "/{{encodeTable(parameters.table)}}/{{parameters.id}}",
        "response": {
          "output": "{{processRecord(body)}}"
        },
        "encodeUrl": false
      },
      "rev": 5,
      "crud": null,
      "name": "ActionGetRecord",
      "epoch": null,
      "flags": {},
      "label": "Retrieve a record",
      "scope": [],
      "expect": [
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "grouped": true,
          "options": {
            "store": "rpc://app%23airtable@1/RpcGetTables",
            "nested": {
              "store": [
                {
                  "name": "id",
                  "type": "text",
                  "label": "Record Id",
                  "required": true
                }
              ],
              "domain": "expect"
            }
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "airtable",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/{{encodeTable(parameters.table)}}/{{parameters.id}}\",\n\t\"response\": {\n\t\t\"output\": \"{{processRecord(body)}}\"\n\t},\n\t\"encodeUrl\": false\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23airtable@1/RpcGetSchema?for=interface"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "airtable",
      "description": "Retrieve a single record by its Id",
      "expectJsonc": "[\n    {\n        \"name\": \"table\",\n        \"type\": \"select\",\n        \"label\": \"Table\",\n        \"grouped\": true,\n        \"options\": {\n            \"store\": \"rpc://app%23airtable@1/RpcGetTables\",\n            \"nested\": {\n                \"store\": [\n                    {\n                        \"name\": \"id\",\n                        \"type\": \"text\",\n                        \"label\": \"Record Id\",\n                        \"required\": true\n                    }\n                ],\n                \"domain\": \"expect\"\n            }\n        },\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    \"rpc://app%23airtable@1/RpcGetSchema?for=interface\"\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "ActionCreateRecord": {
      "id": 14616,
      "api": {
        "url": "/{{encodeTable(parameters.table)}}",
        "body": {
          "fields": "{{prepareRecord(removeNulls(parameters.record))}}",
          "typecast": "{{parameters.typecast}}"
        },
        "method": "POST",
        "response": {
          "output": "{{processRecord(body)}}"
        },
        "encodeUrl": false
      },
      "rev": 5,
      "crud": "create",
      "name": "ActionCreateRecord",
      "epoch": null,
      "flags": {},
      "label": "Create a record",
      "scope": [],
      "expect": [
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "grouped": true,
          "options": {
            "store": "rpc://app%23airtable@1/RpcGetTables",
            "nested": {
              "store": "rpc://app%23airtable@1/RpcGetSchema",
              "domain": "expect"
            }
          },
          "required": true
        },
        {
          "help": "Allows you to put names instead of record IDs to fields that link with another table. The record is automatically created in linked table if there is no match.",
          "name": "typecast",
          "type": "boolean",
          "label": "Smart links",
          "default": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "airtable",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/{{encodeTable(parameters.table)}}\",\n\t\"body\": {\n\t\t\"fields\": \"{{prepareRecord(removeNulls(parameters.record))}}\",\n\t\t\"typecast\": \"{{parameters.typecast}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"response\": {\n\t\t\"output\": \"{{processRecord(body)}}\"\n\t},\n\t\"encodeUrl\": false\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23airtable@1/RpcGetSchema?for=interface"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "airtable",
      "description": "Creates a new record in Airtable",
      "expectJsonc": "[\n    {\n        \"name\": \"table\",\n        \"type\": \"select\",\n        \"label\": \"Table\",\n        \"grouped\": true,\n        \"options\": {\n            \"store\": \"rpc://app%23airtable@1/RpcGetTables\",\n            \"nested\": {\n                \"store\": \"rpc://app%23airtable@1/RpcGetSchema\",\n                \"domain\": \"expect\"\n            }\n        },\n        \"required\": true\n    },\n    {\n        \"help\": \"Allows you to put names instead of record IDs to fields that link with another table. The record is automatically created in linked table if there is no match.\",\n        \"name\": \"typecast\",\n        \"type\": \"boolean\",\n        \"label\": \"Smart links\",\n        \"default\": false,\n        \"required\": true\n    }\n]",
      "samplesJsonc": "{\n    \n}",
      "altAccountName": null,
      "interfaceJsonc": "[\n    \"rpc://app%23airtable@1/RpcGetSchema?for=interface\"\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "ActionDeleteRecord": {
      "id": 14617,
      "api": {
        "url": "/{{encodeTable(parameters.table)}}/{{parameters.id}}",
        "method": "DELETE",
        "response": {
          "output": {
            "id": "{{body.id}}"
          }
        },
        "encodeUrl": false
      },
      "rev": 4,
      "crud": null,
      "name": "ActionDeleteRecord",
      "epoch": null,
      "flags": {},
      "label": "Delete a record",
      "scope": [],
      "expect": [
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "grouped": true,
          "options": {
            "store": "rpc://app%23airtable@1/RpcGetTables",
            "nested": {
              "store": [
                {
                  "name": "id",
                  "type": "text",
                  "label": "Record Id",
                  "required": true
                }
              ],
              "domain": "expect"
            }
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "airtable",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/{{encodeTable(parameters.table)}}/{{parameters.id}}\",\n\t\"method\": \"DELETE\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"id\": \"{{body.id}}\"\n\t\t}\n\t},\n\t\"encodeUrl\": false\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Record Id"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "airtable",
      "description": "Delete a record by its Id",
      "expectJsonc": "[\n    {\n        \"name\": \"table\",\n        \"type\": \"select\",\n        \"label\": \"Table\",\n        \"grouped\": true,\n        \"options\": {\n            \"store\": \"rpc://app%23airtable@1/RpcGetTables\",\n            \"nested\": {\n                \"store\": [\n                    {\n                        \"name\": \"id\",\n                        \"type\": \"text\",\n                        \"label\": \"Record Id\",\n                        \"required\": true\n                    }\n                ],\n                \"domain\": \"expect\"\n            }\n        },\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Record Id\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "ActionSearchRecords": {
      "id": 14618,
      "api": {
        "qs": "{{applySort(temp.qs, parameters.sort)}}",
        "url": "/{{encodeTable(parameters.table)}}",
        "temp": {
          "qs": {
            "view": "{{parameters.view}}",
            "filterByFormula": "{{parameters.formula}}"
          }
        },
        "response": {
          "limit": "{{parameters.maxRecords}}",
          "output": "{{processRecord(item)}}",
          "iterate": "{{body.records}}"
        },
        "encodeUrl": false,
        "pagination": {
          "qs": {
            "offset": "{{body.offset}}"
          },
          "condition": "{{body.offset}}"
        }
      },
      "rev": 5,
      "crud": null,
      "name": "ActionSearchRecords",
      "epoch": null,
      "flags": {},
      "label": "Search records",
      "scope": [],
      "expect": [
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "grouped": true,
          "options": {
            "store": "rpc://app%23airtable@1/RpcGetTables",
            "nested": {
              "store": [
                {
                  "help": "An Airtable formula used to filter records. The formula will be evaluated for each record, and if the result is not `0`, `false`, `\"\"`, `NaN`, `[]`, or `#Error!` the record will be included in the response. You can find more information about the formula on [Airtable's website](https://support.airtable.com/hc/en-us/articles/203255215-Formula-Field-Reference).\nFor example, to only include records where `Name` isn't empty, pass in: `NOT({Name} = '')`",
                  "name": "formula",
                  "type": "text",
                  "label": "Formula"
                },
                {
                  "name": "sort",
                  "spec": [
                    {
                      "name": "field",
                      "type": "select",
                      "label": "Field",
                      "options": "rpc://app%23airtable@1/RpcGetSchema?for=rpc"
                    },
                    {
                      "name": "direction",
                      "type": "select",
                      "label": "Direction",
                      "options": [
                        {
                          "label": "Descending",
                          "value": "desc"
                        },
                        {
                          "label": "Ascending",
                          "value": "asc"
                        }
                      ]
                    }
                  ],
                  "type": "array",
                  "label": "Sort"
                },
                {
                  "name": "view",
                  "type": "select",
                  "label": "View",
                  "options": "rpc://app%23airtable@1/RpcGetTableViews"
                },
                {
                  "help": "The maximum total number of records that will be returned.",
                  "name": "maxRecords",
                  "type": "integer",
                  "label": "Max Records"
                }
              ],
              "domain": "expect"
            }
          },
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "airtable",
      "samples": null,
      "apiJsonc": "{\n\t\"qs\": \"{{applySort(temp.qs, parameters.sort)}}\",\n\t\"url\": \"/{{encodeTable(parameters.table)}}\",\n\t\"temp\": {\n\t\t\"qs\": {\n\t\t\t\"filterByFormula\": \"{{parameters.formula}}\",\n\t\t\t\"view\": \"{{parameters.view}}\"\n\t\t}\n\t},\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.maxRecords}}\",\n\t\t\"output\": \"{{processRecord(item)}}\",\n\t\t\"iterate\": \"{{body.records}}\"\n\t},\n\t\"encodeUrl\": false,\n\t\"pagination\": {\n\t\t\"qs\": {\n\t\t\t\"offset\": \"{{body.offset}}\"\n\t\t},\n\t\t\"condition\": \"{{body.offset}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23airtable@1/RpcGetSchema?for=interface"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "airtable",
      "description": "Search for specific records or return all records",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"table\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Table\",\n\t\t\"grouped\": true,\n\t\t\"options\": {\n\t\t\t\"store\": \"rpc://RpcGetTables\",\n\t\t\t\"nested\": {\n\t\t\t\t\"store\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"help\": \"An Airtable formula used to filter records. The formula will be evaluated for each record, and if the result is not `0`, `false`, `\\\"\\\"`, `NaN`, `[]`, or `#Error!` the record will be included in the response. You can find more information about the formula on [Airtable's website](https://support.airtable.com/hc/en-us/articles/203255215-Formula-Field-Reference).\\nFor example, to only include records where `Name` isn't empty, pass in: `NOT({Name} = '')`\",\n\t\t\t\t\t\t\"name\": \"formula\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"Formula\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"sort\",\n\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"field\",\n\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\"label\": \"Field\",\n\t\t\t\t\t\t\t\t\"options\": \"rpc://RpcGetSchema?for=rpc\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"name\": \"direction\",\n\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\"label\": \"Direction\",\n\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Descending\",\n\t\t\t\t\t\t\t\t\t\t\"value\": \"desc\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Ascending\",\n\t\t\t\t\t\t\t\t\t\t\"value\": \"asc\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"label\": \"Sort\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"view\",\n\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\"label\": \"View\",\n\t\t\t\t\t\t\"options\": \"rpc://RpcGetTableViews\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"help\": \"The maximum total number of records that will be returned.\",\n\t\t\t\t\t\t\"name\": \"maxRecords\",\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"label\": \"Max Records\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"domain\": \"expect\"\n\t\t\t}\n\t\t},\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    \"rpc://app%23airtable@1/RpcGetSchema?for=interface\"\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "ActionUpdateRecords": {
      "id": 14619,
      "api": {
        "url": "/{{encodeTable(parameters.table)}}/{{parameters.id}}",
        "body": {
          "fields": "{{prepareRecord(removeNulls(parameters.record))}}",
          "typecast": "{{parameters.typecast}}"
        },
        "method": "PATCH",
        "response": {
          "output": "{{processRecord(body)}}"
        },
        "encodeUrl": false
      },
      "rev": 5,
      "crud": null,
      "name": "ActionUpdateRecords",
      "epoch": null,
      "flags": {},
      "label": "Update a record",
      "scope": [],
      "expect": [
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "grouped": true,
          "options": {
            "store": "rpc://app%23airtable@1/RpcGetTables",
            "nested": {
              "store": [
                {
                  "name": "id",
                  "type": "text",
                  "label": "Record Id",
                  "required": true
                },
                "rpc://app%23airtable@1/RpcGetSchema"
              ],
              "domain": "expect"
            }
          },
          "required": true
        },
        {
          "help": "Allows you to put names instead of record IDs to fields that link with another table. The record is automatically created in linked table if there is no match.",
          "name": "typecast",
          "type": "boolean",
          "label": "Smart links",
          "default": false,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "airtable",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/{{encodeTable(parameters.table)}}/{{parameters.id}}\",\n\t\"body\": {\n\t\t\"fields\": \"{{prepareRecord(removeNulls(parameters.record))}}\",\n\t\t\"typecast\": \"{{parameters.typecast}}\"\n\t},\n\t\"method\": \"PATCH\",\n\t\"response\": {\n\t\t\"output\": \"{{processRecord(body)}}\"\n\t},\n\t\"encodeUrl\": false\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23airtable@1/RpcGetSchema?for=interface"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "airtable",
      "description": "Update a record by its Id",
      "expectJsonc": "[\n    {\n        \"name\": \"table\",\n        \"type\": \"select\",\n        \"label\": \"Table\",\n        \"grouped\": true,\n        \"options\": {\n            \"store\": \"rpc://app%23airtable@1/RpcGetTables\",\n            \"nested\": {\n                \"store\": [\n                    {\n                        \"name\": \"id\",\n                        \"type\": \"text\",\n                        \"label\": \"Record Id\",\n                        \"required\": true\n                    },\n                    \"rpc://app%23airtable@1/RpcGetSchema\"\n                ],\n                \"domain\": \"expect\"\n            }\n        },\n        \"required\": true\n    },\n    {\n        \"help\": \"Allows you to put names instead of record IDs to fields that link with another table. The record is automatically created in linked table if there is no match.\",\n        \"name\": \"typecast\",\n        \"type\": \"boolean\",\n        \"label\": \"Smart links\",\n        \"default\": false,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    \"rpc://app%23airtable@1/RpcGetSchema?for=interface\"\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "TriggerWatchRecords": {
      "id": 14620,
      "api": {
        "qs": {
          "pageSize": 100,
          "sort[0][field]": "{{parameters.config.triggerField}}",
          "filterByFormula": "{{parameters.formula}}",
          "sort[0][direction]": "desc"
        },
        "url": "/{{encodeTable(parameters.table)}}",
        "response": {
          "limit": "{{parameters.maxRecords}}",
          "output": "{{processRecord(item)}}",
          "iterate": "{{body.records)}}",
          "trigger": {
            "id": "{{item.id}}",
            "date": "{{get(item.fields, parameters.config.triggerField)}}",
            "type": "date",
            "order": "desc"
          }
        },
        "encodeUrl": false,
        "pagination": {
          "qs": {
            "offset": "{{body.offset}}"
          },
          "condition": "{{body.offset}}"
        }
      },
      "rev": 5,
      "crud": null,
      "name": "TriggerWatchRecords",
      "epoch": {
        "qs": {
          "pageSize": 100,
          "sort[0][direction]": "desc"
        },
        "response": {
          "limit": 100,
          "output": {
            "date": "{{item.createdTime}}",
            "label": "{{get(item.fields, parameters.config.labelField)}}"
          }
        }
      },
      "flags": {},
      "label": "Watch records",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "airtable",
      "samples": null,
      "apiJsonc": "{\n\t\"qs\": {\n\t\t\"pageSize\": 100,\n\t\t\"sort[0][field]\": \"{{parameters.config.triggerField}}\",\n\t\t\"filterByFormula\": \"{{parameters.formula}}\",\n\t\t\"sort[0][direction]\": \"desc\"\n\t},\n\t\"url\": \"/{{encodeTable(parameters.table)}}\",\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.maxRecords}}\",\n\t\t\"output\": \"{{processRecord(item)}}\",\n\t\t\"iterate\": \"{{body.records)}}\",\n\t\t\"trigger\": {\n\t\t\t\"id\": \"{{item.id}}\",\n\t\t\t\"date\": \"{{get(item.fields, parameters.config.triggerField)}}\",\n\t\t\t\"type\": \"date\",\n\t\t\t\"order\": \"desc\"\n\t\t}\n\t},\n\t\"encodeUrl\": false,\n\t\"pagination\": {\n\t\t\"qs\": {\n\t\t\t\"offset\": \"{{body.offset}}\"\n\t\t},\n\t\t\"condition\": \"{{body.offset}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23airtable@1/RpcGetSchema?for=interface"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"qs\": {\n        \"pageSize\": 100,\n        \"sort[0][direction]\": \"desc\"\n    },\n    \"response\": {\n        \"limit\": 100,\n        \"output\": {\n            \"date\": \"{{item.createdTime}}\",\n            \"label\": \"{{get(item.fields, parameters.config.labelField)}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "grouped": true,
          "options": {
            "store": "rpc://app%23airtable@1/RpcGetTables",
            "nested": {
              "store": [
                {
                  "name": "config",
                  "spec": [
                    {
                      "help": "A `Created Time` field that will be used to sort records. If you do not have a `Created Time` field in your schema, we ask you to create one, becuase without this field trigger will not work correctly.",
                      "name": "triggerField",
                      "type": "select",
                      "label": "Trigger field",
                      "options": "rpc://app%23airtable@1/RpcGetSchema?for=rpc&filter=formula",
                      "required": true
                    },
                    {
                      "help": "A field that will be used as a label for a record",
                      "name": "labelField",
                      "type": "select",
                      "label": "Label field",
                      "options": "rpc://app%23airtable@1/RpcGetSchema?for=rpc",
                      "required": true
                    }
                  ],
                  "type": "collection",
                  "label": "Trigger configuration",
                  "required": false
                },
                {
                  "help": "An Airtable formula used to filter records. The formula will be evaluated for each record, and if the result is not 0, false, \"\", NaN, [], or #Error! the record will be included in the response. You can find more information about the formula on Airtable's website",
                  "name": "formula",
                  "type": "text",
                  "label": "Formula"
                },
                {
                  "help": "The maximum total number of records that will be returned.",
                  "name": "maxRecords",
                  "type": "text",
                  "label": "Max Records",
                  "default": 1,
                  "required": true
                }
              ]
            }
          },
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "airtable",
      "description": "Runs when a new record is added. Please note that in order for the trigger to work, you need to have (or add) a Created Time field to your table.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    \"rpc://app%23airtable@1/RpcGetSchema?for=interface\"\n]",
      "parametersJsonc": "[\n\t{\n\t\t\"name\": \"table\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Table\",\n\t\t\"grouped\": true,\n\t\t\"options\": {\n\t\t\t\"store\": \"rpc://RpcGetTables\",\n\t\t\t\"nested\": {\n\t\t\t\t\"store\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"config\",\n\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"help\": \"A `Created Time` field that will be used to sort records. If you do not have a `Created Time` field in your schema, we ask you to create one, becuase without this field trigger will not work correctly.\",\n\t\t\t\t\t\t\t\t\"name\": \"triggerField\",\n\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\"label\": \"Trigger field\",\n\t\t\t\t\t\t\t\t\"options\": \"rpc://RpcGetSchema?for=rpc&filter=formula\",\n\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"help\": \"A field that will be used as a label for a record\",\n\t\t\t\t\t\t\t\t\"name\": \"labelField\",\n\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\"label\": \"Label field\",\n\t\t\t\t\t\t\t\t\"options\": \"rpc://RpcGetSchema?for=rpc\",\n\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\"label\": \"Trigger configuration\",\n\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"help\": \"An Airtable formula used to filter records. The formula will be evaluated for each record, and if the result is not 0, false, \\\"\\\", NaN, [], or #Error! the record will be included in the response. You can find more information about the formula on Airtable's website\",\n\t\t\t\t\t\t\"name\": \"formula\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"Formula\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"help\": \"The maximum total number of records that will be returned.\",\n\t\t\t\t\t\t\"name\": \"maxRecords\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"Max Records\",\n\t\t\t\t\t\t\"default\": 1,\n\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"required\": true\n\t}\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "TriggerWatchRecordsInView": {
      "id": 14621,
      "api": {
        "qs": {
          "view": "{{parameters.view}}",
          "pageSize": 100,
          "sort[0][field]": "{{parameters.config.triggerField}}",
          "filterByFormula": "{{parameters.formula}}",
          "sort[0][direction]": "desc"
        },
        "url": "/{{encodeTable(parameters.table)}}",
        "response": {
          "limit": "{{parameters.maxRecords}}",
          "output": "{{processRecord(item)}}",
          "iterate": "{{body.records}}",
          "trigger": {
            "id": "{{item.id}}",
            "date": "{{get(item.fields, parameters.config.triggerField)}}",
            "type": "date",
            "order": "desc"
          }
        },
        "encodeUrl": false,
        "pagination": {
          "qs": {
            "offset": "{{body.offset}}"
          },
          "condition": "{{body.offset}}"
        }
      },
      "rev": 5,
      "crud": null,
      "name": "TriggerWatchRecordsInView",
      "epoch": {
        "qs": {
          "view": "{{parameters.view}}",
          "pageSize": 100,
          "sort[0][direction]": "desc"
        },
        "response": {
          "limit": 100,
          "output": {
            "date": "{{item.createdTime}}",
            "label": "{{get(item.fields, parameters.config.labelField)}}"
          }
        }
      },
      "flags": {},
      "label": "Watch records in view",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "airtable",
      "samples": null,
      "apiJsonc": "{\n\t\"qs\": {\n\t\t\"view\": \"{{parameters.view}}\",\n\t\t\"pageSize\": 100,\n\t\t\"sort[0][field]\": \"{{parameters.config.triggerField}}\",\n\t\t\"filterByFormula\": \"{{parameters.formula}}\",\n\t\t\"sort[0][direction]\": \"desc\"\n\t},\n\t\"url\": \"/{{encodeTable(parameters.table)}}\",\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.maxRecords}}\",\n\t\t\"output\": \"{{processRecord(item)}}\",\n\t\t\"iterate\": \"{{body.records}}\",\n\t\t\"trigger\": {\n\t\t\t\"id\": \"{{item.id}}\",\n\t\t\t\"date\": \"{{get(item.fields, parameters.config.triggerField)}}\",\n\t\t\t\"type\": \"date\",\n\t\t\t\"order\": \"desc\"\n\t\t}\n\t},\n\t\"encodeUrl\": false,\n\t\"pagination\": {\n\t\t\"qs\": {\n\t\t\t\"offset\": \"{{body.offset}}\"\n\t\t},\n\t\t\"condition\": \"{{body.offset}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23airtable@1/RpcGetSchema?for=interface"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"qs\": {\n        \"view\": \"{{parameters.view}}\",\n        \"pageSize\": 100,\n        \"sort[0][direction]\": \"desc\"\n    },\n    \"response\": {\n        \"limit\": 100,\n        \"output\": {\n            \"date\": \"{{item.createdTime}}\",\n            \"label\": \"{{get(item.fields, parameters.config.labelField)}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "name": "table",
          "type": "select",
          "label": "Table",
          "grouped": true,
          "options": {
            "store": "rpc://app%23airtable@1/RpcGetTables",
            "nested": {
              "store": [
                {
                  "name": "config",
                  "spec": [
                    {
                      "help": "A `Created Time` field that will be used to sort records. If you do not have a `Created Time` field in your schema, we ask you to create one, becuase without this field trigger will not work correctly.",
                      "name": "triggerField",
                      "type": "select",
                      "label": "Trigger field",
                      "options": "rpc://app%23airtable@1/RpcGetSchema?for=rpc&filter=formula",
                      "required": true
                    },
                    {
                      "help": "A `Text` field that will be used as a label for a record",
                      "name": "labelField",
                      "type": "select",
                      "label": "Label field",
                      "options": "rpc://app%23airtable@1/RpcGetSchema?for=rpc",
                      "required": true
                    }
                  ],
                  "type": "collection",
                  "label": "Trigger configuration",
                  "required": false
                },
                {
                  "name": "view",
                  "type": "select",
                  "label": "View",
                  "options": "rpc://app%23airtable@1/RpcGetTableViews"
                },
                {
                  "help": "The maximum total number of records that will be returned.",
                  "name": "maxRecords",
                  "type": "text",
                  "label": "Max Records",
                  "default": 1,
                  "required": true
                }
              ]
            }
          },
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "airtable",
      "description": "Runs when a new record is added in view. Please note that in order for the trigger to work, you need to have (or add) a Created Time field to your table",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    \"rpc://app%23airtable@1/RpcGetSchema?for=interface\"\n]",
      "parametersJsonc": "[\n\t{\n\t\t\"name\": \"table\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Table\",\n\t\t\"grouped\": true,\n\t\t\"options\": {\n\t\t\t\"store\": \"rpc://RpcGetTables\",\n\t\t\t\"nested\": {\n\t\t\t\t\"store\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"config\",\n\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"help\": \"A `Created Time` field that will be used to sort records. If you do not have a `Created Time` field in your schema, we ask you to create one, becuase without this field trigger will not work correctly.\",\n\t\t\t\t\t\t\t\t\"name\": \"triggerField\",\n\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\"label\": \"Trigger field\",\n\t\t\t\t\t\t\t\t\"options\": \"rpc://RpcGetSchema?for=rpc&filter=formula\",\n\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"help\": \"A `Text` field that will be used as a label for a record\",\n\t\t\t\t\t\t\t\t\"name\": \"labelField\",\n\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\"label\": \"Label field\",\n\t\t\t\t\t\t\t\t\"options\": \"rpc://RpcGetSchema?for=rpc\",\n\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\"label\": \"Trigger configuration\",\n\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"view\",\n\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\"label\": \"View\",\n\t\t\t\t\t\t\"options\": \"rpc://RpcGetTableViews\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"help\": \"The maximum total number of records that will be returned.\",\n\t\t\t\t\t\t\"name\": \"maxRecords\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"Max Records\",\n\t\t\t\t\t\t\"default\": 1,\n\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"required\": true\n\t}\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "airtable": {
      "api": [
        {
          "url": "https://airtable.com/login",
          "response": {
            "temp": {
              "csrf": "{{getCsrfFromBody(body)}}"
            },
            "type": "text"
          },
          "shareCookies": true
        },
        {
          "log": {
            "sanitize": [
              "request.body.password"
            ]
          },
          "url": "https://airtable.com/auth/login/",
          "body": {
            "_csrf": "{{temp.csrf}}",
            "email": "{{parameters.email}}",
            "password": "{{parameters.password}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "type": "text",
            "error": {
              "429": {
                "message": "Too many requests. Please try again in 5 minutes."
              },
              "message": "Can't log in. Invalid credentials."
            },
            "valid": "{{isLoginValid(body)}}",
            "metadata": {
              "type": "text",
              "value": "{{getUserName(body)}}"
            }
          },
          "shareCookies": true
        }
      ],
      "rev": 16,
      "name": "airtable",
      "type": "basic",
      "label": "Airtable (legacy)",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "airtable",
      "install": {},
      "apiJsonc": "[\n\t{\n\t\t\"url\": \"https://airtable.com/login\",\n\t\t\"response\": {\n\t\t\t\"temp\": {\n\t\t\t\t\"csrf\": \"{{getCsrfFromBody(body)}}\"\n\t\t\t},\n\t\t\t\"type\": \"text\"\n\t\t},\n\t\t\"shareCookies\": true\n\t},\n\t{\n\t\t\"url\": \"https://airtable.com/auth/login/\",\n\t\t\"body\": {\n\t\t\t\"_csrf\": \"{{temp.csrf}}\",\n\t\t\t\"email\": \"{{parameters.email}}\",\n\t\t\t\"password\": \"{{parameters.password}}\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"method\": \"POST\",\n\t\t\"response\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"error\": {\n\t\t\t\t\"429\": {\n\t\t\t\t\t\"message\": \"Too many requests. Please try again in 5 minutes.\"\n\t\t\t\t},\n\t\t\t\t\"message\": \"Can't log in. Invalid credentials.\"\n\t\t\t},\n\t\t\t\"valid\": \"{{isLoginValid(body)}}\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"value\": \"{{getUserName(body)}}\"\n\t\t\t}\n\t\t},\n\t\t\"shareCookies\": true,\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.body.password\"]\n\t\t}\n\t}\n]",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "email",
          "type": "email",
          "label": "Email",
          "required": true
        },
        {
          "name": "password",
          "type": "password",
          "label": "Password",
          "required": true
        },
        {
          "name": "apiToken",
          "type": "text",
          "label": "API Token",
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "installSpec": [],
      "scopesJsonc": "{\n}",
      "installJsonc": "{\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"email\",\n        \"type\": \"email\",\n        \"label\": \"Email\",\n        \"required\": true\n    },\n    {\n        \"name\": \"password\",\n        \"type\": \"password\",\n        \"label\": \"Password\",\n        \"required\": true\n    },\n    {\n        \"name\": \"apiToken\",\n        \"type\": \"text\",\n        \"label\": \"API Token\",\n        \"required\": true\n    }\n]",
      "installSpecJsonc": "[\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n\t\"baseUrl\": \"https://api.airtable.com/v0\",\n\t\"response\": {\n\t\t\"error\": \"{{body.error.message || body.error.type || body.error}}\"\n\t},\n\t\"headers\": {\n\t\t\"authorization\": \"Bearer {{connection.apiToken}}\"\n\t},\n\t\"log\": {\n\t\t\"sanitize\": [\"request.headers.authorization\"]\n\t}\n}",
  "countries": null,
  "_functions": {
    "match": {
      "rev": 3,
      "code": "function match(text, regexp, flags) {\n\tconst re = new RegExp(regexp, flags);\n\tconst ma = String(text).match(re);\n\tif (!ma) return null;\n\treturn ma[1];\n}",
      "name": "match",
      "test": null,
      "appName": "airtable",
      "arguments": "(text, regexp, flags)",
      "appVersion": 1
    },
    "getViews": {
      "rev": 3,
      "code": "function getViews(body, name) {\n\tconst views = body.data.tableSchemas.find(schema => schema.name === name).views;\n\tif (!views) return;\n\t\n\treturn views.map(view => ({label: view.name, value: view.id}));\n}",
      "name": "getViews",
      "test": null,
      "appName": "airtable",
      "arguments": "(body, name)",
      "appVersion": 1
    },
    "applySort": {
      "rev": 3,
      "code": "function applySort(qs, sort) {\n\tif (!sort || !Array.isArray(sort)) return qs;\n\t\n\tsort.forEach((item, idx) => {\n\t\tqs[`sort[${idx}][field]`] = item.field;\n\t\tqs[`sort[${idx}][direction]`] = item.direction;\n\t});\n\t\n\treturn qs;\n}",
      "name": "applySort",
      "test": null,
      "appName": "airtable",
      "arguments": "(qs, sort)",
      "appVersion": 1
    },
    "getSchema": {
      "rev": 3,
      "code": "function getSchema(body, name, _for, _filterIn) {\n\tconst columns = body.data.tableSchemas.find(schema => schema.name === name).columns;\n\tif (!columns) return;\n\t\n\tif (_filterIn && !Array.isArray(_filterIn)) {\n\t\t_filterIn = [_filterIn];\n\t}\n\t\n\tif (Array.isArray(_filterIn)) {\n\t\t_filterIn = _filterIn.map(item => item.toLowerCase());\n\t}\n\t\n\tif (!_filterIn || !_filterIn.length) {\n\t\t_filterIn = null;\n\t}\n\t\n\tconst result = columns.map(col => {\n\t\tconst field = {\n\t\t\tname: col.name,\n\t\t\tlabel: col.label,\n\t\t\ttype: \"text\"\n\t\t};\n\t\t\n\t\tif (_filterIn && !_filterIn.includes(col.type.toLowerCase())) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tswitch(col.type) {\n\t\t\tcase \"multilineText\":\n\t\t\t\tfield.multiline = true;\n\t\t\t\tbreak;\n\t\t\tcase \"multipleAttachment\":\n\t\t\t\t// For interface\n\t\t\t\tif (_for === 'interface') {\n\t\t\t\t\tfield.type = \"array\";\n\t\t\t\t\tfield.spec = [{\n\t\t\t\t\t\tname: \"url\",\n\t\t\t\t\t\ttype: \"url\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: \"filename\",\n\t\t\t\t\t\ttype: \"text\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: \"size\",\n\t\t\t\t\t\ttype: \"number\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: \"type\",\n\t\t\t\t\t\tlabel: \"MIME type\",\n\t\t\t\t\t\ttype: \"text\"\n\t\t\t\t\t}];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// For expect\n\t\t\t\tfield.type = \"array\";\n\t\t\t\tfield.editable = true;\n\t\t\t\tfield.spec = [{\n\t\t\t\t\tname: \"url\",\n\t\t\t\t\tlabel: \"File URL\",\n\t\t\t\t\ttype: \"url\",\n\t\t\t\t\thelp: \"Airtable will download the file at the given url and keep its own copy of it.\",\n\t\t\t\t\trequired: true\n\t\t\t\t}, {\n\t\t\t\t\tname: \"filename\",\n\t\t\t\t\tlabel: \"File name\",\n\t\t\t\t\ttype: \"filename\",\n\t\t\t\t\thelp: \"If empty, Airtable will generate the name automatically.\"\n\t\t\t\t}];\n\t\t\t\tbreak;\n\t\t\tcase \"checkbox\":\n\t\t\t\tfield.type = \"boolean\";\n\t\t\t\tbreak;\n\t\t\tcase \"multiSelect\":\n\t\t\t\t// For interface\n\t\t\t\tif (_for === 'interface') {\n\t\t\t\t\tfield.type = \"array\";\n\t\t\t\t\tfield.spec = { type: \"text\" };\n\t\t\t\t\tfield.editable = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// For expect\n\t\t\t\tfield.multiple = true;\n\t\t\t\t// Switch fall through is made on purpose because multi select and select have common processing logic in expect.\n\t\t\tcase \"select\":\n\t\t\t\t// For interface\n\t\t\t\tif (['interface', 'rpc'].includes(_for)) break; // Keep select field as text for interface and rpc\n\t\t\t\t\n\t\t\t\t// For expect\n\t\t\t\tfield.type = \"select\";\n\t\t\t\tfield.editable = true;\n\t\t\t\tfield.options = col.typeOptions.choiceOrder.map(choiceId => ({\n\t\t\t\t\tlabel: col.typeOptions.choices[choiceId].name,\n\t\t\t\t\tvalue: col.typeOptions.choices[choiceId].name\n\t\t\t\t}));\n\t\t\t\tbreak;\n\t\t\tcase \"collaborator\":\n\t\t\t\t// For interface\n\t\t\t\tif (['interface', 'rpc'].includes(_for)) {\n\t\t\t\t\tfield.type = \"collection\";\n\t\t\t\t\tfield.spec = [{\n\t\t\t\t\t\tname: \"email\",\n\t\t\t\t\t\ttype: \"email\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\ttype: \"text\"\n\t\t\t\t\t}];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfield.type = \"collection\";\n\t\t\t\tfield.spec = [{\n\t\t\t\t\tname: \"email\",\n\t\t\t\t\ttype: \"email\",\n\t\t\t\t\tlabel: \"Email\",\n\t\t\t\t\thelp: \"Email that uniquely identifies a user in Airtable who this base is shared with\"\n\t\t\t\t}];\n\t\t\t\tbreak;\n\t\t\tcase \"multiCollaborator\":\n\t\t\t\t// For interface\n\t\t\t\tif (['interface', 'rpc'].includes(_for)) {\n\t\t\t\t\tfield.type = \"array\";\n\t\t\t\t\tfield.spec = [{\n\t\t\t\t\t\tname: \"email\",\n\t\t\t\t\t\ttype: \"email\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\ttype: \"text\"\n\t\t\t\t\t}];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfield.type = \"array\";\n\t\t\t\tfield.spec = [{\n\t\t\t\t\tname: \"email\",\n\t\t\t\t\ttype: \"email\",\n\t\t\t\t\tlabel: \"Email\",\n\t\t\t\t\thelp: \"Email that uniquely identifies a user in Airtable who this base is shared with\"\n\t\t\t\t}];\n\t\t\t\tbreak;\n\t\t\tcase \"date\":\n\t\t\t\tfield.type = \"date\";\n\t\t\t\tfield.time = col.typeOptions.isDateTime;\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\tif (col.typeOptions && col.typeOptions.validatorName === \"email\") field.type = \"email\";\n\t\t\t\tif (col.typeOptions && col.typeOptions.validatorName === \"url\") field.type = \"url\";\n\t\t\t\tbreak;\n\t\t\tcase \"number\":\n\t\t\t\tfield.type = \"number\";\n\t\t\t\tif (col.typeOptions.format === \"integer\") field.type = \"integer\";\n\t\t\t\tif (col.typeOptions.format === \"currency\") field.help = `Currency: ${col.typeOptions.symbol}`;\n\t\t\t\tif (col.typeOptions.format === \"percent\") field.help = \"Percent\";\n\t\t\t\tif (!col.typeOptions.negative) field.validate = { min: 0 };\n\t\t\t\tbreak;\n\t\t\tcase \"autoNumber\":\n\t\t\tcase \"formula\":\n\t\t\t\tif (['interface', 'rpc'].includes(_for)) break;\n\t\t\t\treturn;\n\t\t\tcase \"foreignKey\":\n\t\t\t\tfield.type = \"array\";\n\t\t\t\tfield.editable = true;\n\t\t\t\tfield.help = \"Array of Airtable record Ids\";\n\t\t\t\tfield.spec = { type: \"text\" };\n\t\t\t\tbreak;\n\t\t\tcase \"barcode\":\n\t\t\t\tfield.type = \"collection\";\n\t\t\t\tfield.spec = [{\n\t\t\t\t\tname: \"text\",\n\t\t\t\t\ttype: \"text\"\n\t\t\t\t}];\n\t\t\t\tbreak;\n\t\t\tcase \"rating\":\n\t\t\t\tfield.type = \"uinteger\";\n\t\t\t\tfield.validate = {\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: col.typeOptions.max\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase \"lookup\":\n\t\t\t\tif (!['interface', 'rpc'].includes(_for)) return;\n\t\t\t\tfield.type = \"array\";\n\t\t\t\tfield.spec = { type: \"any\" };\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\treturn field;\n\t}).filter(field => !!field);\n\t\n\tif (_for === 'interface') {\n\t\tresult.unshift({\n\t\t\tname: 'id',\n\t\t\ttype: 'text'\n\t\t}, {\n\t\t\tname: 'createdTime',\n\t\t\ttype: 'date'\n\t\t});\n\t} else if (_for === 'rpc') {\n\t\treturn result\n\t\t\t.map(item => ({label: item.name, value: item.name}));\n\t}\n\t\n\treturn result;\n}",
      "name": "getSchema",
      "test": null,
      "appName": "airtable",
      "arguments": "(body, name, _for, _filterIn)",
      "appVersion": 1
    },
    "getTables": {
      "rev": 3,
      "code": "function getTables(body) {\n\tconst ma = String(body).match(/window.initData = (\\{.+\\});\\n/);\n\tif (!ma) return [];\n\tconst data = JSON.parse(ma[1]);\n\treturn Object.keys(data.rawApplications).map(appid => ({\n\t\tlabel: data.rawApplications[appid].name,\n\t\toptions: data.rawApplications[appid].visibleTableOrder.map(tabid => ({\n\t\t\tlabel: data.rawTables[tabid].name,\n\t\t\tvalue: `${appid}/${data.rawTables[tabid].name}`\n\t\t}))\n\t}));\n}",
      "name": "getTables",
      "test": null,
      "appName": "airtable",
      "arguments": "(body)",
      "appVersion": 1
    },
    "stringify": {
      "rev": 3,
      "code": "function stringify(obj) {\n\treturn JSON.stringify(obj);\n}",
      "name": "stringify",
      "test": null,
      "appName": "airtable",
      "arguments": "(obj)",
      "appVersion": 1
    },
    "wrapOutput": {
      "rev": 3,
      "code": "function wrapOutput(output, _for) {\n\tif (['interface', 'rpc'].includes(_for)) return output;\n\treturn [\n\t\t{\n\t\t\t\"name\": \"record\",\n\t\t\t\"spec\": output,\n\t\t\t\"type\": \"collection\",\n\t\t\t\"label\": \"Record\"\n\t\t}\n\t]\n}",
      "name": "wrapOutput",
      "test": null,
      "appName": "airtable",
      "arguments": "(output, _for)",
      "appVersion": 1
    },
    "encodeTable": {
      "rev": 3,
      "code": "function encodeTable(str) {\n\tconst app = iml.substring(str, 0, iml.indexOf(str, '/'));\n\tconst table = iml.substring(str, iml.indexOf(str, '/') + 1);\n\treturn `${app}/${iml.encodeURL(table)}`;\n}",
      "name": "encodeTable",
      "test": null,
      "appName": "airtable",
      "arguments": "(str)",
      "appVersion": 1
    },
    "getUserName": {
      "rev": 3,
      "code": "function getUserName(body) {\nconst ma = String(body).match(/window.initData = (\\{.+\\});\\n/);\n\tif (!ma) return [];\n\tconst data = JSON.parse(ma[1]);\n\tconst user = data.rawUsers[data.sessionUserId] || data.rawUsers[Object.keys(data.rawUsers)[0]];\n\treturn user.name;\n}",
      "name": "getUserName",
      "test": null,
      "appName": "airtable",
      "arguments": "(body)",
      "appVersion": 1
    },
    "removeNulls": {
      "rev": 3,
      "code": "function removeNulls(record) {\n\tObject.keys(record).forEach(key => {\n\t\tif (record[key] === null) delete record[key];\n\t\telse if (Array.isArray(record[key]) && !record[key].length) delete record[key];\n\t\telse if (record[key].text === null) delete record[key];\n\t\telse if (record[key].email === null) delete record[key];\n\t});\n\treturn record;\n}",
      "name": "removeNulls",
      "test": null,
      "appName": "airtable",
      "arguments": "(record)",
      "appVersion": 1
    },
    "isLoginValid": {
      "rev": 3,
      "code": "function isLoginValid(body) {\n\treturn body.indexOf('window.initData') > 0\n}",
      "name": "isLoginValid",
      "test": null,
      "appName": "airtable",
      "arguments": "(body)",
      "appVersion": 1
    },
    "prepareRecord": {
      "rev": 3,
      "code": "function prepareRecord(record) {\n\tmetadata.expect.filter(param => param.name === 'record')[0].spec\n\t\t.filter(param => param.type === 'date' && param.time === false && record[param.name] != null)\n\t\t.forEach(param => record[param.name] = iml.formatDate(record[param.name], 'YYYY-MM-DD', environment.timezone))\n\t\t\n\treturn record;\n}",
      "name": "prepareRecord",
      "test": null,
      "appName": "airtable",
      "arguments": "(record)",
      "appVersion": 1
    },
    "processRecord": {
      "rev": 3,
      "code": "function processRecord(record) {\n\treturn Object.assign(record.fields, {id: record.id, createdTime: record.createdTime});\n}",
      "name": "processRecord",
      "test": null,
      "appName": "airtable",
      "arguments": "(record)",
      "appVersion": 1
    },
    "getCsrfFromBody": {
      "rev": 3,
      "code": "function getCsrfFromBody(body) {\n  let csrfNameIdx = body.indexOf('name=\"_csrf\"');\n  let input = body.substring(body.lastIndexOf('<', csrfNameIdx), body.indexOf('>', csrfNameIdx));\n  let [fullMatch, csrf] = input.match(/value=\"(.+)\"/i);\n  return csrf;\n}",
      "name": "getCsrfFromBody",
      "test": null,
      "appName": "airtable",
      "arguments": "(body)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-03-21T08:34:45.494048+00:00",
  "categories": [],
  "opensource": false,
  "description": "Automate workflows using Airtable and {{integromat}}. What are you waiting for? Connect Airtable to Gmail, Trello, Google Calendar, Office365 (and more) with our templates, or create your own scenarios to get the best out of Airtable.",
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "536d2dee4aef7e8b341c80c586e1ff81",
  "versionFull": "1.1.0",
  "compiledName": "airtable",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 1,
  "compilationError": null,
  "installSpecJsonc": "[\n]"
}
