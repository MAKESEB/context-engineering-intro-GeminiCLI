{
  "rev": 11,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization"
      ]
    },
    "baseUrl": "https://cloud.feedly.com/v3",
    "headers": {
      "authorization": "{{connection.accessToken}}"
    },
    "response": {
      "error": "[{{statusCode}}] {{body.errorMessage || body}}"
    }
  },
  "beta": false,
  "docs": null,
  "name": "feedly",
  "_rpcs": {
    "RpcTag": {
      "api": {
        "url": "/tags",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{if(item.label === '' || item.label === null, get(split(item.id, '/'), 4), item.label}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "name": "RpcTag",
      "label": "Get tags (boards)",
      "appName": "feedly",
      "apiJsonc": "{\n\t\"url\": \"/tags\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"label\": \"{{if(item.label === '' || item.label === null, get(split(item.id, '/'), 4), item.label}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t},\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "feedly",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "RpcFeed": {
      "api": {
        "qs": {
          "query": "{{parameters.query}}"
        },
        "url": "/search/feeds",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.title}}",
            "value": "{{item.feedId}}"
          },
          "iterate": "{{body.results}}"
        }
      },
      "rev": 3,
      "name": "RpcFeed",
      "label": "Search feeds",
      "appName": "feedly",
      "apiJsonc": "{\n\t\"qs\": {\n\t\t\"query\": \"{{parameters.query}}\"\n\t},\n\t\"url\": \"/search/feeds\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.title}}\",\n\t\t\t\"value\": \"{{item.feedId}}\"\n\t\t},\n\t\t\"iterate\": \"{{body.results}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [
        {
          "name": "query",
          "type": "text",
          "required": true
        }
      ],
      "accountName": "feedly",
      "altAccountName": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"query\",\n        \"type\": \"text\",\n        \"required\": true\n    }\n]"
    },
    "FeedList": {
      "api": {
        "url": "/collections?withEnterprise=true",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.label}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "name": "FeedList",
      "label": "Retrieve list of feeds",
      "appName": "feedly",
      "apiJsonc": "{\n\t\"url\": \"/collections?withEnterprise=true\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.label}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t},\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "feedly",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "BoardList": {
      "api": {
        "url": "/boards?withEnterprise=true",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{if(indexOf(item.id; 'global.saved') > 0, 'Saved For Later' , item.label)}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "name": "BoardList",
      "label": "Retrieve list of boards",
      "appName": "feedly",
      "apiJsonc": "{\n\t\"url\": \"/boards?withEnterprise=true\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"label\": \"{{if(indexOf(item.id; 'global.saved') > 0, 'Saved For Later' , item.label)}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t},\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "feedly",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "Priorities": {
      "api": {
        "url": "/priorities/labels?withGlobalAll=true",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.label}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "name": "Priorities",
      "label": "Retrive list of priorities",
      "appName": "feedly",
      "apiJsonc": "{\n\t\"url\": \"/priorities/labels?withGlobalAll=true\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.label}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t},\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "feedly",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "RpcCategory": {
      "api": {
        "qs": {
          "withEnterprise": true
        },
        "url": "/collections",
        "method": "GET",
        "response": {
          "limit": 300,
          "output": {
            "label": "{{item.label}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body}}"
        }
      },
      "rev": 4,
      "name": "RpcCategory",
      "label": "Get categories of feeds",
      "appName": "feedly",
      "apiJsonc": "{\n\t\"url\": \"/collections\",\n\t\"method\": \"GET\",\n\t\"qs\": {\n\t\t\"withEnterprise\": true\n\t},\n\t\"response\": {\n\t\t\"limit\": 300,\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.label}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t},\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "feedly",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    }
  },
  "flags": {},
  "label": "Feedly",
  "theme": "#2bb24c",
  "_hooks": {
    "feedly": {
      "api": {
        "output": "{{body}}",
        "respond": {
          "status": 200
        }
      },
      "rev": 5,
      "name": "feedly",
      "type": "web",
      "flags": {},
      "label": "New Article In Board",
      "scope": [],
      "attach": {
        "url": "/integromat/triggers",
        "body": {
          "event": "NewArticleInBoard",
          "targetUrl": "{{webhook.url}}",
          "resourceId": "{{parameters.resourceId}}"
        },
        "method": "POST",
        "response": {
          "data": {
            "externalHookId": "{{body.id}}"
          }
        }
      },
      "detach": {
        "url": "/integromat/triggers/{{webhook.externalHookId}}",
        "method": "DELETE"
      },
      "update": null,
      "aliasTo": null,
      "appName": "feedly",
      "apiJsonc": "{\n\t\"respond\": {\n\t\t\"status\": 200\n\t},\n\t\"output\": \"{{body}}\"\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "resourceId",
          "type": "select",
          "label": "Board",
          "options": "rpc://app%23feedly@1/BoardList",
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "attachJsonc": "{\n\t\"url\": \"/integromat/triggers\",\n\t\"body\": {\n\t\t\"event\": \"NewArticleInBoard\",\n\t\t\"targetUrl\": \"{{webhook.url}}\",\n\t\t\"resourceId\": \"{{parameters.resourceId}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"response\": {\n\t\t\"data\": {\n\t\t\t\"externalHookId\": \"{{body.id}}\"\n\t\t}\n\t}\n}",
      "detachJsonc": "{\n\t\"url\": \"/integromat/triggers/{{webhook.externalHookId}}\",\n\t\"method\": \"DELETE\"\n}",
      "updateJsonc": null,
      "altAccountName": null,
      "parametersJsonc": "[\n\t{\n\t\t\"name\": \"resourceId\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Board\",\n\t\t\"options\": \"rpc://BoardList\",\n\t\t\"required\": true\n\t}\n]"
    },
    "feedly2": {
      "api": {
        "output": "{{body}}",
        "respond": {
          "status": 200
        }
      },
      "rev": 4,
      "name": "feedly2",
      "type": "web",
      "flags": {},
      "label": "New Highlight",
      "scope": [],
      "attach": {
        "url": "/integromat/triggers",
        "body": {
          "event": "NewHighlight",
          "targetUrl": "{{webhook.url}}"
        },
        "method": "POST",
        "response": {
          "data": {
            "externalHookId": "{{body.id}}"
          }
        }
      },
      "detach": {
        "url": "/integromat/triggers/{{webhook.externalHookId}}",
        "method": "DELETE"
      },
      "update": null,
      "aliasTo": null,
      "appName": "feedly",
      "apiJsonc": "{\n\t\"respond\": {\n\t\t\"status\": 200\n\t},\n\t\"output\": \"{{body}}\"\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "attachJsonc": "{\n\t\"url\": \"/integromat/triggers\",\n\t\"body\": {\n\t\t\"event\": \"NewHighlight\",\n\t\t\"targetUrl\": \"{{webhook.url}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"response\": {\n\t\t\"data\": {\n\t\t\t\"externalHookId\": \"{{body.id}}\"\n\t\t}\n\t}\n}",
      "detachJsonc": "{\n\t\"url\": \"/integromat/triggers/{{webhook.externalHookId}}\",\n\t\"method\": \"DELETE\"\n}",
      "updateJsonc": null,
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "feedly3": {
      "api": {
        "output": "{{body}}",
        "respond": {
          "status": 200
        }
      },
      "rev": 4,
      "name": "feedly3",
      "type": "web",
      "flags": {},
      "label": "New Note",
      "scope": [],
      "attach": {
        "url": "/integromat/triggers",
        "body": {
          "event": "NewNote",
          "targetUrl": "{{webhook.url}}"
        },
        "method": "POST",
        "response": {
          "data": {
            "externalHookId": "{{body.id}}"
          }
        }
      },
      "detach": {
        "url": "/integromat/triggers/{{webhook.externalHookId}}",
        "method": "DELETE"
      },
      "update": null,
      "aliasTo": null,
      "appName": "feedly",
      "apiJsonc": "{\n\t\"respond\": {\n\t\t\"status\": 200\n\t},\n\t\"output\": \"{{body}}\"\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "attachJsonc": "{\n\t\"url\": \"/integromat/triggers\",\n\t\"body\": {\n\t\t\"event\": \"NewNote\",\n\t\t\"targetUrl\": \"{{webhook.url}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"response\": {\n\t\t\"data\": {\n\t\t\t\"externalHookId\": \"{{body.id}}\"\n\t\t}\n\t}\n}",
      "detachJsonc": "{\n\t\"url\": \"/integromat/triggers/{{webhook.externalHookId}}\",\n\t\"method\": \"DELETE\"\n}",
      "updateJsonc": null,
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "feedly4": {
      "api": {
        "output": "{{getWebhookBody(body)}}",
        "respond": {
          "status": 200
        }
      },
      "rev": 5,
      "name": "feedly4",
      "type": "web",
      "flags": {},
      "label": "New Prioritized Article",
      "scope": [],
      "attach": {
        "url": "/integromat/triggers",
        "body": {
          "event": "NewPrioritizedArticle",
          "targetUrl": "{{webhook.url}}",
          "resourceId": "{{parameters.resourceId}}"
        },
        "method": "POST",
        "response": {
          "data": {
            "externalHookId": "{{body.id}}"
          }
        }
      },
      "detach": {
        "url": "/integromat/triggers/{{webhook.externalHookId}}",
        "method": "DELETE"
      },
      "update": null,
      "aliasTo": null,
      "appName": "feedly",
      "apiJsonc": "{\n\t\"respond\": {\n\t\t\"status\": 200\n\t},\n\t\"output\": \"{{getWebhookBody(body)}}\"\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "resourceId",
          "type": "select",
          "label": "Priority",
          "options": "rpc://app%23feedly@1/Priorities",
          "required": true
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "attachJsonc": "{\n\t\"url\": \"/integromat/triggers\",\n\t\"body\": {\n\t\t\"event\": \"NewPrioritizedArticle\",\n\t\t\"targetUrl\": \"{{webhook.url}}\",\n\t\t\"resourceId\": \"{{parameters.resourceId}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"response\": {\n\t\t\"data\": {\n\t\t\t\"externalHookId\": \"{{body.id}}\"\n\t\t}\n\t}\n}",
      "detachJsonc": "{\n\t\"url\": \"/integromat/triggers/{{webhook.externalHookId}}\",\n\t\"method\": \"DELETE\"\n}",
      "updateJsonc": null,
      "altAccountName": null,
      "parametersJsonc": "[\n\t{\n\t\t\"name\": \"resourceId\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Priority\",\n\t\t\"options\": \"rpc://Priorities\",\n\t\t\"required\": true\n\t}\n]"
    }
  },
  "global": true,
  "groups": [
    {
      "label": "Other",
      "modules": [
        "AddEntryToPersonalBoard",
        "AddSourceToPersonalFeed",
        "CreatePersonalArticle",
        "FetchFeed",
        "getCategories",
        "getSubscriptions",
        "ListFeeds",
        "NewArticleInPersonalBoard",
        "NewPriorizedArticle",
        "newEntries",
        "NewPersonalHighlight",
        "NewPersonalNote",
        "searchEntries",
        "subcribeToFeed",
        "tagEntry",
        "MakeAPICall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000001d04944415458c3d5d6bd6bd4701807f0e7da137c19449da42a8254902e2208ee8283ff80080add2ae21b2a8e627db70ece1d04274745145c15bab9f92f880a62a5a8ad9e70f771b8848be15e9a9023f8c02db9249f6f9e3cf925111516029bdaedf6a356abb5d2e97466d14095cc507c23ae634db73ee3c4d84364f01bf8e5dffa825398184b880c3edf074feb030e541e2087ff36b89e6147a501d281c3cd11f8734c25fb578edfaa13bf5d277e07ad3af0cdb85b277eaf4efcfe7f83631f4e625be930c989b6e041417c1a6fd0c662a910197c017f4ae069b5f118dbd77d6b32f8c382f8fe1c9e0df1045b8b0438826f15e0697dc24cd10e2c0cb8f745f1ef3887e6ba67416fc59bd7fbb8e894c42f14c2fb84388ed3ba5f363b0be03f70b1143e22548abf1d815faa0bff89cb95e2990093ba8fd430fc0a36548ae73a308b9501f8d5b1e07dba703699f0b45671ad0cde281322229a11311711c722e26b442c45c4d3886825bb4d47c4d1887819111f23221a8dc2d4c84e4ca48396fbcd6029e9cc0bec52e52b7a48a0c021bccbcdc62bec196b88e4e407f17ec0d3f13a5dc4f23551618ea988d83be0bfc311b17b3c97dfeb401367b09cbbfa65cc55be300d0831a9fbe65b4df0359c4fb6f73dee2f7d3b2da504e504190000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000003a14944415478daed9bc76b146118c69fdd188c5d34370b8ae0453c5882a028114411452122622f1841b1802078b0f71293d810154ffe031e040f8278d1830741ec055191a86996d812233f0f33c37eac9b75673633bb33e3030bcbb2b3dffb7bbe6fdff72b335208040828ebe8e8a8696d6da5adaded0950617f5ee8f00281ef09ec00be93d21d605ca44d707a1ed805fce06fdd052646d204037e7717f08eee019322658201bfe71ff08e1e009323618201bf374778478f81a9a136210dfea70b78474f80b1a134c086ef05ecf3080fd0092c089d0106fcfe3ce0011e0263426580017f204ff847c09450e50003fe605ce17b038780f6b8c21f8e33fc91fff03184ef031c8d33fc31a023aef0c7e30c5f1357f8be71873f1167f8dab8c2f703eae20c5f0ffc8a2bfc49bfe0edcf9258abc7d2a2312860f825c04de02230a4e026d801f4074ef90c9f0096014dc6355780a10533c1803f5d0078475781e1819b60c09f09007e7917f08eae01230333c16e680070b608e01d5d0746f96e421a7c6791c03bba018cf6cd0403fe5c11c23bba098cf0d3806a9fe19379c063c756e5c680a44b1f4a24253c7af85852b5a45b929448a47ec60e38296999a43a49e51edb6894d4e0f1daecb27b681070c1c328c8a5e75700cd798cae466031d65fc8170fcc3c504fee8b9da0e097fa0a9f16741fac3dfd7f9de60401df843551f21f3e2df8326027f0adc0f0cbf381f79ad01ca89e92d648aa946446d02ee9bca4db52d684572b69b0c7105a246d95745912661b818954dd4e667865ebf99579f67c0bb0ca692714ea66f8d571856f05d6c4197e6d5ce13f624dc343072f605e37c0af034afc8077bb16f0a2f1f25eea3e4bda2ee992a4df0529755e658c8069c02b0f3dff0958ef57cf076dc25ce0ad0bf8cfc08650c36730a10a789f23fcc648c0a79990c0dad7cfb6d9f105d804f4880c7c06135661d574479d580f42bc033677054faaa4960303e9a6d55fa069d50eb844d2024963247d90b58bd36cbf7f21e9577ab627b5805a2c699ba42fb2aac35f8badc8c9eef912ac89508b31721e11f6dbe373842f05b6d8c9315d4f81e9913481d4c352db81af5912e70b6046a44c207543e53e727b6ae425302b1226903a6eafc1dd0d95af8039a136c1287587f07600f306a8746340108b21b72a95344156b974ab61922adc5c508c06b4cbdae86cf6706da3a4fb8506c84bc68c7111d0e062f837000b09f27cc0671304cc075ee700ff1a6be325bc09308b0933816759e09fdbdf890e7c06136691793fa101989d0ffc1f0b841f8b3eb00af30000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-05-09T14:52:53.800483+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda7930000076b4944415478daed9d5b8c55d51d877f83228243b90e141b6235a26978101f34626d0bb5696d9a6a34deaab189e9435f481fdad43b855683e9059baab485565bf17e8dc64b0835de1e4c1b43d214a70c4c011104c5568a03548661be3eecb53b8bd301e670cede6befb5fe5f721e2639d997f5fdf6ac7dd65532da0e20e0c4ddbb77dfd9d3d333d0ddddcdfaf5ebfbfbfafa16032700a12fd1280a277f0c7033b08743e9037e682188144ffeadc05e86672f708bfb5ee84b36da4583fc7d1c997dc08f80132d0411e0c95f3802f939ff017e028cb510d49863949ff309b00438c9425043f2b77df7efbc59f939fb819f019d16821ae1c95fd482fc9c7ee02e60bc85a00678f217bbbabc1df4037703132c0415a620f93907805f03132d0415c4c91f0bfcb800f93903c00a60b285a04278f26f277b7b2f9201e07e608a85a002942c3fe720f000d0e5ce1fba18d2c415fe38e08e12e5fb2c2c3200c7872ee02ae30a7d9ca45b25fd40d298009731bdc8835b000e8327ff3649df5718f985332af40554910ac91f94b43574792485ab6f4f02ee0c54e7e70c00cbb13681f2f0e4ff94ac8ddee4a782c94f1827bf93ac57cee4a78427ffe7263f311ae4f79bfc84f0e4ffc2e42786933f1e586af213c3937f97c94f0c4ffe2f4d7e6298fc8471f23f05fc8a6cd895c94f05939f309efcbb4d7e6238f913807b4c7e6278f2ef35f98961f213c6c99f082c33f989e1c9ff8d1360f253c1e4278cc94f18277f922b78939f129efc15263f314c7ec238f99381df99fcc4f0e4ffdee4278627ff3eb2a9d3263f159cfc29263f413cf97f30f98961f213c6c99f0afcd1e4278627ff01939f189efc9526bf783a425f808f2be82e494b255dab702b981c94749fa41b25fdbba3a3b962f20273bebb8fd192f64b5a29e92d496af698d1e39efc2ee0c13a3ff9ee3e047c0158d770ecb5c0f9f9770c872b9069c043c06004f2bf388cfc9c6e170e0b815768d3808713909fd303cc4f3e0489cacfe905be926c08dc8d4f071e4d507ece46e06bc985c0e41fc266e01b4984c02bb0e9c06326ff7f6c012e8e3a045e817d1a78dce4ff1fdb80cb808ee842d020ff09937f58b6035746150293df34ef03df8a22045e81cd009e34f9236627701d30aab621f00aec64e0a980e2eb263fe743e07ae0b8da85c0e4b78d7f015751b75f070cedb1b3b202f27fdb26f93d81eee1de22035064776ba7a439051eff68e45dba37a9b52edd799256483a33e0bd1446ac5bc6b4ab3f7f9ea4e592ce08782ffd451ebcc8ff00fb24f51679f1872126f96b253d12f0fcc78657779e06bc54729ddf8e17be79c0fa40757ece5ae0bc22ebffb24230137886e2db004c7ed5e0d056c087296ea8574cf2df26b661630c4df02862466f4cf2bba393df50d013c956ed6cd762cd31c9ff3b704194f21b0abc936c67ae56f7e48b49fe3a521928ca502be122609fc9a787aca5317ef90d02c60037007d89cbff5252f21b448c061600bb5c810c1ee5732022f91bdc7504951f747e92bbf1d192e64b9a29e94825d121698fa4d59276d5bc85af57d27725bd2ad934b1c2f19efcf91578f27b810b433ff9c9d0207f4360f9ff20e5c92065e3c9ff7205e46f34f9255231f99b80af9afc926890df5b01f9e94dff0a45c5e46f062e32f9255131f9ef005f37f9255131f95b4865c2671530f9095331f9ef02df34f925e1c9bfb002f2b712fb14efaac1d05a036b02cbdf065c5247f9a1d6e16b27e3244d0b78fef7242d90f49c54bf8e9d18021092ed92be27e959a97ef2a53802f04f496f0638ef0e65f29f91ea29bff630f412381378b1c43a7f0770791debfce8f042702af07249f2af2086153c62c10bc119c01b05ca7f9fd8d6f089052f04b3813f1724ff6a935f61bc10cca1bd6d031f10cbc24db1e385e05cb24996adb213b8c6e4d7082f049fa7b5a55d7602d79afc1ae285603ed960cc66f990ba2fd5963a5e082e22eba63d1a0781fd646dfbdf6e45be77ee4eb28dae270127542d4cd1375f79057eb1b2bd883a257d2c6997a48f94b5247e2069a7f7d926699da4816369e1f3ce3957d2224953dcdfaf485a2269b7b51c96887b124701b38033c9562e9de09ec851b4b145cf7bf2e7914df9f639002c23f29dc892a5a1ca39dc7b473eb975928520229cf80ee052b291414762806c23ec29168208f0aa986bc8fa0a46c241b29d51bb2c0435c6c93f0ef88efbe9d80c83648b674d6fe77b8851120cbfc641b30c92eda032c3425023686d9593e142f034f0190b410d7092c6018b81bd2dcaf779966c708b85a0aa3839e369cf4a67c3f102708a85a08230b4d6e13db46fadc3e15845b6ceb285a02a381953c97ebfb77bb5d3e1f81370ba8520300cb5ee15bddef170bc42d6746d21088517805b4a14eff31c598f6221f717c3bc80b29818e8bca74a1a5bd4c12d00236730f40514810560e4ac92b429c0793f52c1fb0619478123f7f117c9dfc8c635da4b6068bc10cc05fe5a82fc35c03926bf427821381bf84b81f2df04ce32f915c40bc16ce0f502e4bf067ccee457182f04b380d56d94bf1a6bfdab075e084e216bac69755bbce781cf9afc1ae185e064e0318ead99781078121b0b505f9cb82ee07e9aeb281a001ec48684d51f867a0b1f6d22004f03d3428aff2fd2db0856fc343c9d0000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "tagEntry": {
      "id": 29168,
      "api": {
        "url": "/tags/{{encodeURL(join(parameters.tagIds, ','))}}",
        "body": {
          "entryIds": [
            "{{parameters.entryId}}"
          ]
        },
        "method": "PUT"
      },
      "rev": 4,
      "crud": null,
      "name": "tagEntry",
      "epoch": null,
      "flags": {},
      "label": "Add an article to a board (deprecated)",
      "scope": [],
      "expect": [
        {
          "name": "entryId",
          "type": "text",
          "label": "Article ID",
          "required": true
        },
        {
          "name": "tagIds",
          "type": "select",
          "label": "Board",
          "options": "rpc://app%23feedly@1/RpcTag",
          "multiple": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/tags/{{encodeURL(join(parameters.tagIds, ','))}}\",\n\t\"body\": {\n\t\t\"entryIds\": [\n\t\t\t\"{{parameters.entryId}}\"\n\t\t]\n\t},\n\t\"method\": \"PUT\"\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": true,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Adds an article to one or more boards.",
      "expectJsonc": "[\n    {\n        \"name\": \"entryId\",\n        \"type\": \"text\",\n        \"label\": \"Article ID\",\n        \"required\": true\n    },\n    {\n        \"name\": \"tagIds\",\n        \"type\": \"select\",\n        \"label\": \"Board\",\n        \"options\": \"rpc://app%23feedly@1/RpcTag\",\n        \"multiple\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "FetchFeed": {
      "id": 29169,
      "api": {
        "qs": {},
        "url": "/feeds/.mget",
        "body": [
          "{{parameters.id}}"
        ],
        "method": "POST",
        "headers": {},
        "response": {
          "output": "{{body[1]}}"
        }
      },
      "rev": 3,
      "crud": null,
      "name": "FetchFeed",
      "epoch": null,
      "flags": {},
      "label": "Get a Feed",
      "scope": [],
      "expect": [
        {
          "name": "id",
          "type": "text",
          "label": "Feed ID",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"qs\": {},\n\t\"url\": \"/feeds/.mget\",\n\t\"body\": [\n\t\t\"{{parameters.id}}\"\n\t],\n\t\"method\": \"POST\",\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"output\": \"{{body[1]}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "feedId",
          "type": "text",
          "label": "Feed ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "topics",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Topics"
        },
        {
          "name": "language",
          "type": "text",
          "label": "Language"
        },
        {
          "name": "website",
          "type": "text",
          "label": "Website"
        },
        {
          "name": "velocity",
          "type": "number",
          "label": "Velocity"
        },
        {
          "name": "featured",
          "type": "boolean",
          "label": "Featured"
        },
        {
          "name": "sponsored",
          "type": "boolean",
          "label": "Sponsored"
        },
        {
          "name": "curated",
          "type": "boolean",
          "label": "Curated"
        },
        {
          "name": "subscribers",
          "type": "number",
          "label": "Subscribers"
        },
        {
          "name": "state",
          "type": "text",
          "label": "State"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Gets the metadata about a specific feed.",
      "expectJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Feed ID\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"feedId\",\n        \"type\": \"text\",\n        \"label\": \"Feed ID\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"topics\",\n        \"spec\": {\n            \"type\": \"text\"\n        },\n        \"type\": \"array\",\n        \"label\": \"Topics\"\n    },\n    {\n        \"name\": \"language\",\n        \"type\": \"text\",\n        \"label\": \"Language\"\n    },\n    {\n        \"name\": \"website\",\n        \"type\": \"text\",\n        \"label\": \"Website\"\n    },\n    {\n        \"name\": \"velocity\",\n        \"type\": \"number\",\n        \"label\": \"Velocity\"\n    },\n    {\n        \"name\": \"featured\",\n        \"type\": \"boolean\",\n        \"label\": \"Featured\"\n    },\n    {\n        \"name\": \"sponsored\",\n        \"type\": \"boolean\",\n        \"label\": \"Sponsored\"\n    },\n    {\n        \"name\": \"curated\",\n        \"type\": \"boolean\",\n        \"label\": \"Curated\"\n    },\n    {\n        \"name\": \"subscribers\",\n        \"type\": \"number\",\n        \"label\": \"Subscribers\"\n    },\n    {\n        \"name\": \"state\",\n        \"type\": \"text\",\n        \"label\": \"State\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "ListFeeds": {
      "id": 29170,
      "api": {
        "qs": {
          "count": "{{parameters.limit}}",
          "query": "{{parameters.query}}"
        },
        "url": "/search/feeds",
        "body": {},
        "method": "GET",
        "headers": {},
        "response": {
          "output": "{{item}}",
          "iterate": "{{body.results}}"
        }
      },
      "rev": 3,
      "crud": null,
      "name": "ListFeeds",
      "epoch": null,
      "flags": {},
      "label": "Find Feeds",
      "scope": [],
      "expect": [
        {
          "help": "Enter the search query. Can be a feed url, a site title, a site url or a #topic.",
          "name": "query",
          "type": "text",
          "label": "Query",
          "required": true
        },
        {
          "help": "Enter a maximum limit of items in the result.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"qs\": {\n\t\t\"count\": \"{{parameters.limit}}\",\n\t\t\"query\": \"{{parameters.query}}\"\n\t},\n\t\"url\": \"/search/feeds\",\n\t\"body\": {},\n\t\"method\": \"GET\",\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"output\": \"{{item}}\",\n\t\t\"iterate\": \"{{body.results}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "website",
          "type": "text",
          "label": "Website"
        },
        {
          "name": "feedId",
          "type": "text",
          "label": "Feed ID"
        },
        {
          "name": "velocity",
          "type": "number",
          "label": "Velocity"
        },
        {
          "name": "subscribers",
          "type": "number",
          "label": "Subscribers"
        },
        {
          "name": "curated",
          "type": "boolean",
          "label": "Curated"
        },
        {
          "name": "featured",
          "type": "boolean",
          "label": "Featured"
        },
        {
          "name": "score",
          "type": "number",
          "label": "Score"
        },
        {
          "name": "coverage",
          "type": "number",
          "label": "Coverage"
        },
        {
          "name": "hint",
          "type": "text",
          "label": "Hint"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        },
        {
          "name": "language",
          "type": "text",
          "label": "Language"
        },
        {
          "name": "coverUrl",
          "type": "url",
          "label": "Cover URL"
        },
        {
          "name": "visualUrl",
          "type": "url",
          "label": "Visual URL"
        },
        {
          "name": "iconUrl",
          "type": "url",
          "label": "Icon URL"
        },
        {
          "name": "coverageScore",
          "type": "number",
          "label": "Coverage score"
        },
        {
          "name": "estimatedEngagement",
          "type": "number",
          "label": "Estimated engagement"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Searches feeds based on title, url or #topic.",
      "expectJsonc": "[\n    {\n        \"help\": \"Enter the search query. Can be a feed url, a site title, a site url or a #topic.\",\n        \"name\": \"query\",\n        \"type\": \"text\",\n        \"label\": \"Query\",\n        \"required\": true\n    },\n    {\n        \"help\": \"Enter a maximum limit of items in the result.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 10,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"website\",\n        \"type\": \"text\",\n        \"label\": \"Website\"\n    },\n    {\n        \"name\": \"feedId\",\n        \"type\": \"text\",\n        \"label\": \"Feed ID\"\n    },\n    {\n        \"name\": \"velocity\",\n        \"type\": \"number\",\n        \"label\": \"Velocity\"\n    },\n    {\n        \"name\": \"subscribers\",\n        \"type\": \"number\",\n        \"label\": \"Subscribers\"\n    },\n    {\n        \"name\": \"curated\",\n        \"type\": \"boolean\",\n        \"label\": \"Curated\"\n    },\n    {\n        \"name\": \"featured\",\n        \"type\": \"boolean\",\n        \"label\": \"Featured\"\n    },\n    {\n        \"name\": \"score\",\n        \"type\": \"number\",\n        \"label\": \"Score\"\n    },\n    {\n        \"name\": \"coverage\",\n        \"type\": \"number\",\n        \"label\": \"Coverage\"\n    },\n    {\n        \"name\": \"hint\",\n        \"type\": \"text\",\n        \"label\": \"Hint\"\n    },\n    {\n        \"name\": \"description\",\n        \"type\": \"text\",\n        \"label\": \"Description\"\n    },\n    {\n        \"name\": \"language\",\n        \"type\": \"text\",\n        \"label\": \"Language\"\n    },\n    {\n        \"name\": \"coverUrl\",\n        \"type\": \"url\",\n        \"label\": \"Cover URL\"\n    },\n    {\n        \"name\": \"visualUrl\",\n        \"type\": \"url\",\n        \"label\": \"Visual URL\"\n    },\n    {\n        \"name\": \"iconUrl\",\n        \"type\": \"url\",\n        \"label\": \"Icon URL\"\n    },\n    {\n        \"name\": \"coverageScore\",\n        \"type\": \"number\",\n        \"label\": \"Coverage score\"\n    },\n    {\n        \"name\": \"estimatedEngagement\",\n        \"type\": \"number\",\n        \"label\": \"Estimated engagement\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "newEntries": {
      "id": 29171,
      "api": {
        "qs": {
          "count": 1000,
          "ranked": "oldest",
          "streamId": "{{parameters.streamId}}",
          "newerThan": "{{dateToUnix(data.lastDate)}}"
        },
        "url": "/streams/contents",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": {
            "id": "{{item.id}}",
            "image": "{{item.thumbnail}}",
            "title": "{{item.title}}",
            "author": "{{item.author}}",
            "source": {
              "id": "{{item.originId}}",
              "url": "{{item.origin.htmlUrl}}",
              "title": "{{item.origin.title}}",
              "streamId": "{{item.origin.streamId}}"
            },
            "visual": "{{item.visual}}",
            "content": "{{item.content.content}}",
            "created": "{{parseDate(item.crawled/1000, X)}}",
            "summary": "{{item.summary.content}}",
            "updated": "{{parseDate(item.recrawled/1000, X)}}",
            "keywords": "{{item.keywords}}",
            "alternate": "{{item.alternate}}",
            "canonical": "{{item.canonical}}",
            "enclosure": "{{item.enclosure}}",
            "thumbnail": "{{item.thumbnail}}",
            "categories": "{{item.categories}}",
            "engagement": "{{item.engagement}}",
            "engagementRate": "{{item.engagementRate}}"
          },
          "iterate": "{{body.items}}",
          "trigger": {
            "id": "{{item.id}}",
            "date": "{{parseDate(item.crawled/1000, X)}}",
            "type": "date",
            "order": "unordered"
          }
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "newEntries",
      "epoch": {
        "qs": {
          "count": 200,
          "ranked": "newest",
          "newerThan": null
        },
        "response": {
          "limit": 200,
          "output": {
            "date": "{{parseDate(decrementAndUnder1000(item.crawled), X)}}",
            "label": "{{item.title}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Articles",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"qs\": {\n\t\t\"count\": 1000,\n\t\t\"ranked\": \"oldest\",\n\t\t\"streamId\": \"{{parameters.streamId}}\",\n\t\t\"newerThan\": \"{{dateToUnix(data.lastDate)}}\"\n\t},\n\t\"url\": \"/streams/contents\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.limit}}\",\n\t\t\"output\": {\n\t\t\t\"id\": \"{{item.id}}\",\n\t\t\t\"image\": \"{{item.thumbnail}}\",\n\t\t\t\"title\": \"{{item.title}}\",\n\t\t\t\"author\": \"{{item.author}}\",\n\t\t\t\"source\": {\n\t\t\t\t\"id\": \"{{item.originId}}\",\n\t\t\t\t\"url\": \"{{item.origin.htmlUrl}}\",\n\t\t\t\t\"title\": \"{{item.origin.title}}\",\n\t\t\t\t\"streamId\": \"{{item.origin.streamId}}\"\n\t\t\t},\n\t\t\t\"visual\": \"{{item.visual}}\",\n\t\t\t\"content\": \"{{item.content.content}}\",\n\t\t\t\"created\": \"{{parseDate(item.crawled/1000, X)}}\",\n\t\t\t\"summary\": \"{{item.summary.content}}\",\n\t\t\t\"updated\": \"{{parseDate(item.recrawled/1000, X)}}\",\n\t\t\t\"keywords\": \"{{item.keywords}}\",\n\t\t\t\"canonical\": \"{{item.canonical}}\",\n\t\t\t\"enclosure\": \"{{item.enclosure}}\",\n\t\t\t\"thumbnail\": \"{{item.thumbnail}}\",\n\t\t\t\"categories\": \"{{item.categories}}\",\n\t\t\t\"engagement\": \"{{item.engagement}}\",\n\t\t\t\"engagementRate\": \"{{item.engagementRate}}\",\n\t\t\t\"alternate\": \"{{item.alternate}}\"\n\t\t},\n\t\t\"iterate\": \"{{body.items}}\",\n\t\t\"trigger\": {\n\t\t\t\"id\": \"{{item.id}}\",\n\t\t\t\"date\": \"{{parseDate(item.crawled/1000, X)}}\",\n\t\t\t\"type\": \"date\",\n\t\t\t\"order\": \"unordered\"\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "author",
          "type": "text",
          "label": "Author"
        },
        {
          "name": "source",
          "spec": [
            {
              "name": "id",
              "type": "text",
              "label": "Source ID"
            },
            {
              "name": "url",
              "type": "url",
              "label": "Source url"
            },
            {
              "name": "title",
              "type": "text",
              "label": "Source title"
            },
            {
              "name": "streamId",
              "type": "text",
              "label": "Source stream ID"
            }
          ],
          "type": "collection",
          "label": "Source"
        },
        {
          "name": "created",
          "type": "date",
          "label": "Date created"
        },
        {
          "name": "updated",
          "type": "date",
          "label": "Date updated"
        },
        {
          "name": "keywords",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Keywords"
        },
        {
          "name": "summary",
          "type": "text",
          "label": "Summary"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Content (HTML)"
        },
        {
          "name": "categories",
          "spec": [
            {
              "name": "id",
              "type": "text",
              "label": "ID"
            },
            {
              "name": "label",
              "type": "text",
              "label": "Title"
            }
          ],
          "type": "array",
          "label": "Feeds"
        },
        {
          "name": "engagement",
          "type": "integer",
          "label": "Engagement"
        },
        {
          "name": "engagementRate",
          "type": "number",
          "label": "Engagement Rate"
        },
        {
          "name": "thumbnail",
          "spec": [
            {
              "name": "url",
              "type": "url",
              "label": "URL"
            },
            {
              "name": "width",
              "type": "number",
              "label": "Width"
            },
            {
              "name": "height",
              "type": "number",
              "label": "Height"
            }
          ],
          "type": "array",
          "label": "Thumbnail"
        },
        {
          "name": "canonical",
          "spec": [
            {
              "name": "href",
              "type": "url",
              "label": "Href"
            },
            {
              "name": "type",
              "type": "text",
              "label": "Type"
            }
          ],
          "type": "array",
          "label": "Canonical"
        },
        {
          "name": "enclosure",
          "spec": [
            {
              "name": "href",
              "type": "url",
              "label": "Href"
            },
            {
              "name": "width",
              "type": "number",
              "label": "Width"
            },
            {
              "name": "height",
              "type": "number",
              "label": "Height"
            }
          ],
          "type": "array",
          "label": "Enclosure"
        },
        {
          "name": "visual",
          "spec": [
            {
              "name": "url",
              "type": "url",
              "label": "URL"
            },
            {
              "name": "width",
              "type": "number",
              "label": "Width"
            },
            {
              "name": "height",
              "type": "number",
              "label": "Height"
            },
            {
              "name": "processor",
              "type": "text",
              "label": "Processor"
            },
            {
              "name": "contentType",
              "type": "text",
              "label": "Content type"
            }
          ],
          "type": "collection",
          "label": "Visual"
        },
        {
          "name": "alternate",
          "spec": [
            {
              "name": "href",
              "type": "url",
              "label": "URL"
            },
            {
              "name": "type",
              "type": "text",
              "label": "Type"
            }
          ],
          "type": "array",
          "label": "Alternate"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"qs\": {\n        \"count\": 200,\n        \"ranked\": \"newest\",\n        \"newerThan\": null\n    },\n    \"response\": {\n        \"limit\": 200,\n        \"output\": {\n            \"date\": \"{{parseDate(decrementAndUnder1000(item.crawled), X)}}\",\n            \"label\": \"{{item.title}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "help": "Select the source to search in. Can be a feed, a category of feeds or a board.",
          "name": "streamType",
          "type": "select",
          "label": "Select what you want to watch",
          "default": "category",
          "options": [
            {
              "label": "Category of feeds",
              "value": "category",
              "nested": [
                {
                  "on": {
                    "change": "reset_epoch"
                  },
                  "name": "streamId",
                  "type": "select",
                  "label": "Category",
                  "options": "rpc://app%23feedly@1/RpcCategory",
                  "editable": {
                    "help": "Enter the category ID",
                    "enabled": true
                  },
                  "required": true
                }
              ]
            },
            {
              "label": "Feed",
              "value": "feed",
              "nested": [
                {
                  "on": {
                    "change": "reset_epoch"
                  },
                  "rpc": {
                    "url": "rpc://app%23feedly@1/RpcFeed",
                    "label": "Choose feed",
                    "parameters": [
                      {
                        "name": "query",
                        "type": "text",
                        "label": "Query"
                      }
                    ]
                  },
                  "name": "streamId",
                  "type": "text",
                  "label": "Feed",
                  "editable": {
                    "help": "Enter the feed ID",
                    "enabled": true
                  },
                  "required": true
                }
              ]
            },
            {
              "label": "Board",
              "value": "board",
              "nested": [
                {
                  "on": {
                    "change": "reset_epoch"
                  },
                  "name": "streamId",
                  "type": "select",
                  "label": "Board",
                  "options": "rpc://app%23feedly@1/BoardList",
                  "editable": {
                    "help": "Enter the board ID",
                    "enabled": true
                  },
                  "required": true
                }
              ]
            }
          ],
          "required": true
        },
        {
          "help": "Enter a maximum limit of items in the result.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 1,
          "required": true,
          "validate": {
            "max": 200,
            "min": 1
          }
        }
      ],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Triggers when a new article is published in a feed or in a category of feeds, or added to a selected board.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\"\n\t},\n\t{\n\t\t\"name\": \"title\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Title\"\n\t},\n\t{\n\t\t\"name\": \"author\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Author\"\n\t},\n\t{\n\t\t\"name\": \"source\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Source ID\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"url\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"Source url\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"title\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Source title\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"streamId\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Source stream ID\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"collection\",\n\t\t\"label\": \"Source\"\n\t},\n\t{\n\t\t\"name\": \"created\",\n\t\t\"type\": \"date\",\n\t\t\"label\": \"Date created\"\n\t},\n\t{\n\t\t\"name\": \"updated\",\n\t\t\"type\": \"date\",\n\t\t\"label\": \"Date updated\"\n\t},\n\t{\n\t\t\"name\": \"keywords\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"text\"\n\t\t},\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Keywords\"\n\t},\n\t{\n\t\t\"name\": \"summary\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Summary\"\n\t},\n\t{\n\t\t\"name\": \"content\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Content (HTML)\"\n\t},\n\t{\n\t\t\"name\": \"categories\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"ID\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"label\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Title\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Feeds\"\n\t},\n\t{\n\t\t\"name\": \"engagement\",\n\t\t\"type\": \"integer\",\n\t\t\"label\": \"Engagement\"\n\t},\n\t{\n\t\t\"name\": \"engagementRate\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Engagement Rate\"\n\t},\n\t{\n\t\t\"name\": \"thumbnail\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"url\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"URL\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"width\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Width\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"height\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Height\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Thumbnail\"\n\t},\n\t{\n\t\t\"name\": \"canonical\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"href\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"Href\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"type\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Type\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Canonical\"\n\t},\n\t{\n\t\t\"name\": \"enclosure\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"href\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"Href\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"width\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Width\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"height\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Height\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Enclosure\"\n\t},\n\t{\n\t\t\"name\": \"visual\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"url\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"URL\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"width\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Width\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"height\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Height\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"processor\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Processor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"contentType\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Content type\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"collection\",\n\t\t\"label\": \"Visual\"\n\t},\n\t{\n\t\t\"name\": \"alternate\",\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Alternate\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"href\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"URL\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"type\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Type\"\n\t\t\t}\n\t\t]\n\t}\n]",
      "parametersJsonc": "[\n    {\n        \"help\": \"Select the source to search in. Can be a feed, a category of feeds or a board.\",\n        \"name\": \"streamType\",\n        \"type\": \"select\",\n        \"label\": \"Select what you want to watch\",\n        \"default\": \"category\",\n        \"options\": [\n            {\n                \"label\": \"Category of feeds\",\n                \"value\": \"category\",\n                \"nested\": [\n                    {\n                        \"on\": {\n                            \"change\": \"reset_epoch\"\n                        },\n                        \"name\": \"streamId\",\n                        \"type\": \"select\",\n                        \"label\": \"Category\",\n                        \"options\": \"rpc://app%23feedly@1/RpcCategory\",\n                        \"editable\": {\n                            \"help\": \"Enter the category ID\",\n                            \"enabled\": true\n                        },\n                        \"required\": true\n                    }\n                ]\n            },\n            {\n                \"label\": \"Feed\",\n                \"value\": \"feed\",\n                \"nested\": [\n                    {\n                        \"on\": {\n                            \"change\": \"reset_epoch\"\n                        },\n                        \"rpc\": {\n                            \"url\": \"rpc://app%23feedly@1/RpcFeed\",\n                            \"label\": \"Choose feed\",\n                            \"parameters\": [\n                                {\n                                    \"name\": \"query\",\n                                    \"type\": \"text\",\n                                    \"label\": \"Query\"\n                                }\n                            ]\n                        },\n                        \"name\": \"streamId\",\n                        \"type\": \"text\",\n                        \"label\": \"Feed\",\n                        \"editable\": {\n                            \"help\": \"Enter the feed ID\",\n                            \"enabled\": true\n                        },\n                        \"required\": true\n                    }\n                ]\n            },\n            {\n                \"label\": \"Board\",\n                \"value\": \"board\",\n                \"nested\": [\n                    {\n                        \"on\": {\n                            \"change\": \"reset_epoch\"\n                        },\n                        \"name\": \"streamId\",\n                        \"type\": \"select\",\n                        \"label\": \"Board\",\n                        \"options\": \"rpc://BoardList\",\n                        \"editable\": {\n                            \"help\": \"Enter the board ID\",\n                            \"enabled\": true\n                        },\n                        \"required\": true\n                    }\n                ]\n            }\n        ],\n        \"required\": true\n    },\n    {\n        \"help\": \"Enter a maximum limit of items in the result.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 1,\n        \"required\": true,\n        \"validate\": {\n            \"max\": 200,\n            \"min\": 1\n        }\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "MakeAPICall": {
      "id": 29172,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://cloud.feedly.com/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 3,
      "crud": null,
      "name": "MakeAPICall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://cloud.feedly.com/`. For example: `/v3/subscriptions`.",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://cloud.feedly.com/{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n\t},\n    \"headers\": {\n\t\t\"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n\t},\n\t\"body\": \"{{parameters.body}}\",\n\t\"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n\t\t\t\"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to `https://cloud.feedly.com/`. For example: `/v3/subscriptions`.\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n\t\t\"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n\t\t\"default\": [\n\t\t\t{\n\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\"value\": \"application/json\"\n\t\t\t}\n\t\t]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getCategories": {
      "id": 29173,
      "api": {
        "url": "/categories",
        "method": "GET",
        "response": {
          "output": "{{item}}",
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "crud": null,
      "name": "getCategories",
      "epoch": null,
      "flags": {},
      "label": "List Categories",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 9,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/categories\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": \"{{item}}\",\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "label",
          "type": "text",
          "label": "Label"
        },
        {
          "name": "description",
          "type": "text",
          "label": "Description"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Gets categories of feeds.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"label\",\n        \"type\": \"text\",\n        \"label\": \"Label\"\n    },\n    {\n        \"name\": \"description\",\n        \"type\": \"text\",\n        \"label\": \"Description\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "searchEntries": {
      "id": 29174,
      "api": {
        "qs": {
          "count": "{{parameters.limit}}",
          "query": "{{constructQuery(parameters.advancedSearch, parameters.advancedSearch.andOrAll, parameters.query, parameters.not)}}",
          "fields": "{{if(parameters.fields.length == 3, 'all', join(parameters.fields, ' '))}}",
          "embedded": "{{parameters.media}}",
          "streamId": "{{parameters.streamId}}",
          "newerThan": "{{parameters.newerThan}}"
        },
        "url": "/search/contents",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": {
            "id": "{{item.id}}",
            "href": "{{item.alternate[1].href}}",
            "feeds": "{{item.categories}}",
            "title": "{{item.title}}",
            "author": "{{item.author}}",
            "source": {
              "url": "{{item.origin.htmlUrl}}",
              "title": "{{item.origin.title}}",
              "streamId": "{{item.origin.streamId}}"
            },
            "visual": "{{item.visual}}",
            "content": "{{item.content}}",
            "created": "{{parseDate(item.crawled/1000, X)}}",
            "summary": "{{item.summary}}",
            "updated": "{{parseDate(item.recrawled/1000, X)}}",
            "keywords": "{{item.keywords}}",
            "canonical": "{{item.canonical}}",
            "enclosure": "{{item.enclosure}}",
            "thumbnail": "{{item.thumbnail}}",
            "engagement": "{{item.engagement}}",
            "engagementRate": "{{item.engagementRate}}"
          },
          "iterate": "{{body.items}}"
        }
      },
      "rev": 5,
      "crud": "read",
      "name": "searchEntries",
      "epoch": null,
      "flags": {},
      "label": "Search for Articles",
      "scope": [],
      "expect": [
        {
          "help": "Select the source to search in. Can be a category, a feed or a board.",
          "name": "streamType",
          "type": "select",
          "label": "Choose where you want to search",
          "default": "category",
          "options": [
            {
              "label": "In categories",
              "value": "category",
              "nested": [
                {
                  "name": "streamId",
                  "type": "select",
                  "label": "Category of feeds",
                  "options": "rpc://app%23feedly@1/RpcCategory",
                  "editable": {
                    "help": "Enter the category ID",
                    "enabled": true
                  },
                  "required": true
                }
              ]
            },
            {
              "label": "In feeds",
              "value": "feed",
              "nested": [
                {
                  "rpc": {
                    "url": "rpc://app%23feedly@1/RpcFeed",
                    "label": "Choose a feed",
                    "parameters": [
                      {
                        "name": "query",
                        "type": "text"
                      }
                    ]
                  },
                  "name": "streamId",
                  "type": "text",
                  "label": "Feed",
                  "editable": {
                    "help": "Enter the feed ID",
                    "enabled": true
                  },
                  "required": true
                }
              ]
            },
            {
              "label": "In boards",
              "value": "board",
              "nested": [
                {
                  "name": "streamId",
                  "type": "select",
                  "label": "Board",
                  "options": "rpc://app%23feedly@1/BoardList",
                  "editable": {
                    "help": "Enter the board ID",
                    "enabled": true
                  },
                  "required": true
                }
              ]
            }
          ],
          "required": true
        },
        {
          "name": "advancedSearch",
          "type": "select",
          "label": "Advanced search",
          "default": false,
          "options": [
            {
              "label": "Yes",
              "value": true,
              "nested": [
                {
                  "name": "andOrAll",
                  "type": "select",
                  "label": "Limit search for",
                  "default": "or",
                  "options": [
                    {
                      "label": "All of the followng words",
                      "value": "and"
                    },
                    {
                      "label": "Any of the followng words",
                      "value": "or"
                    },
                    {
                      "label": "The exact following phrase",
                      "value": "exact"
                    }
                  ]
                },
                {
                  "help": "Keywords or a phrase to be searched for. Must be words with letters, numbers, dashes(-) or underscores(_) separated by spaces.",
                  "name": "query",
                  "type": "text",
                  "label": "Search for",
                  "required": true,
                  "validate": {
                    "pattern": "^[\\w\\pL-]+(?: [\\w\\pL-]+)*$"
                  }
                },
                {
                  "help": "Keywords not to be searched for. Must be words with letters, numbers, dashes(-) or underscores(_) separated by spaces.",
                  "name": "not",
                  "type": "text",
                  "label": "And none of these words",
                  "required": true,
                  "validate": {
                    "pattern": "^[\\w\\pL-]+(?: [\\w\\pL-]+)*$"
                  }
                }
              ]
            },
            {
              "label": "No",
              "value": false,
              "nested": [
                {
                  "name": "query",
                  "type": "text",
                  "label": "Search for"
                }
              ]
            }
          ]
        },
        {
          "name": "fields",
          "type": "select",
          "label": "In fields",
          "options": [
            {
              "label": "Title",
              "value": "title"
            },
            {
              "label": "Author",
              "value": "author"
            },
            {
              "label": "Keywords",
              "value": "keywords"
            }
          ],
          "multiple": true
        },
        {
          "name": "media",
          "type": "select",
          "label": "Contains media",
          "options": [
            {
              "label": "Audio",
              "value": "audio"
            },
            {
              "label": "Video",
              "value": "video"
            },
            {
              "label": "Document",
              "value": "doc"
            },
            {
              "label": "At least one of above",
              "value": "any"
            }
          ]
        },
        {
          "help": "A unix timestamp.",
          "name": "newerThan",
          "type": "text",
          "label": "Newer than"
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 20,
          "required": true
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"qs\": {\n\t\t\"count\": \"{{parameters.limit}}\",\n\t\t\"query\": \"{{constructQuery(parameters.advancedSearch, parameters.advancedSearch.andOrAll, parameters.query, parameters.not)}}\",\n\t\t\"fields\": \"{{if(parameters.fields.length == 3, 'all', join(parameters.fields, ' '))}}\",\n\t\t\"embedded\": \"{{parameters.media}}\",\n\t\t\"streamId\": \"{{parameters.streamId}}\",\n\t\t//\"newerThan\": \"{{if(parameters.newerThan, dateToUnix(parameters.newerThan)*1000, null)}}\",\n\t\t\"newerThan\": \"{{parameters.newerThan}}\"\n\t},\n\t\"url\": \"/search/contents\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"limit\": \"{{parameters.limit}}\",\n\t\t\"output\": {\n\t\t\t\"id\": \"{{item.id}}\",\n\t\t\t\"href\": \"{{item.alternate[1].href}}\",\n\t\t\t\"feeds\": \"{{item.categories}}\",\n\t\t\t\"title\": \"{{item.title}}\",\n\t\t\t\"author\": \"{{item.author}}\",\n\t\t\t\"source\": {\n\t\t\t\t\"url\": \"{{item.origin.htmlUrl}}\",\n\t\t\t\t\"title\": \"{{item.origin.title}}\",\n\t\t\t\t\"streamId\": \"{{item.origin.streamId}}\"\n\t\t\t},\n\t\t\t\"visual\": \"{{item.visual}}\",\n\t\t\t\"content\": \"{{item.content}}\",\n\t\t\t\"created\": \"{{parseDate(item.crawled/1000, X)}}\",\n\t\t\t\"summary\": \"{{item.summary}}\",\n\t\t\t\"updated\": \"{{parseDate(item.recrawled/1000, X)}}\",\n\t\t\t\"keywords\": \"{{item.keywords}}\",\n\t\t\t\"canonical\": \"{{item.canonical}}\",\n\t\t\t\"enclosure\": \"{{item.enclosure}}\",\n\t\t\t\"thumbnail\": \"{{item.thumbnail}}\",\n\t\t\t\"engagement\": \"{{item.engagement}}\",\n\t\t\t\"engagementRate\": \"{{item.engagementRate}}\"\n\t\t},\n\t\t\"iterate\": \"{{body.items}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "author",
          "type": "text",
          "label": "Author"
        },
        {
          "name": "href",
          "type": "url",
          "label": "Article address"
        },
        {
          "name": "source",
          "spec": [
            {
              "name": "title",
              "type": "text",
              "label": "RSS source title"
            },
            {
              "name": "url",
              "type": "url",
              "label": "RSS source url"
            },
            {
              "name": "streamId",
              "type": "text",
              "label": "RSS source stream ID"
            }
          ],
          "type": "collection",
          "label": "RSS source"
        },
        {
          "name": "created",
          "type": "date",
          "label": "Date created"
        },
        {
          "name": "updated",
          "type": "date",
          "label": "Date updated"
        },
        {
          "name": "keywords",
          "spec": {
            "type": "text"
          },
          "type": "array",
          "label": "Keywords"
        },
        {
          "name": "summary",
          "type": "text",
          "label": "Summary"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Content (HTML)"
        },
        {
          "name": "feeds",
          "spec": [
            {
              "name": "id",
              "type": "text",
              "label": "ID"
            },
            {
              "name": "label",
              "type": "text",
              "label": "Title"
            }
          ],
          "type": "array",
          "label": "Feeds"
        },
        {
          "name": "engagement",
          "type": "integer",
          "label": "Engagement"
        },
        {
          "name": "engagementRate",
          "type": "number",
          "label": "Engagement Rate"
        },
        {
          "name": "thumbnail",
          "spec": [
            {
              "name": "url",
              "type": "url",
              "label": "URL"
            },
            {
              "name": "width",
              "type": "number",
              "label": "Width"
            },
            {
              "name": "height",
              "type": "number",
              "label": "Height"
            }
          ],
          "type": "array",
          "label": "Thumbnail"
        },
        {
          "name": "canonical",
          "spec": [
            {
              "name": "href",
              "type": "url",
              "label": "Href"
            },
            {
              "name": "type",
              "type": "text",
              "label": "Type"
            }
          ],
          "type": "array",
          "label": "Canonical"
        },
        {
          "name": "enclosure",
          "spec": [
            {
              "name": "href",
              "type": "url",
              "label": "Href"
            },
            {
              "name": "width",
              "type": "number",
              "label": "Width"
            },
            {
              "name": "height",
              "type": "number",
              "label": "Height"
            }
          ],
          "type": "array",
          "label": "Enclosure"
        },
        {
          "name": "visual",
          "spec": [
            {
              "name": "url",
              "type": "url",
              "label": "URL"
            },
            {
              "name": "width",
              "type": "number",
              "label": "Width"
            },
            {
              "name": "height",
              "type": "number",
              "label": "Height"
            },
            {
              "name": "processor",
              "type": "text",
              "label": "Processor"
            },
            {
              "name": "contentType",
              "type": "text",
              "label": "Content type"
            }
          ],
          "type": "collection",
          "label": "Visual"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Searches articles using criteria.",
      "expectJsonc": "[\n\t{\n\t\t\"help\": \"Select the source to search in. Can be a category, a feed or a board.\",\n\t\t\"name\": \"streamType\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Choose where you want to search\",\n\t\t\"default\": \"category\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"In categories\",\n\t\t\t\t\"value\": \"category\",\n\t\t\t\t\"nested\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"streamId\",\n\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\"label\": \"Category of feeds\",\n\t\t\t\t\t\t\"options\": \"rpc://RpcCategory\",\n\t\t\t\t\t\t\"editable\": {\n\t\t\t\t\t\t\t\"help\": \"Enter the category ID\",\n\t\t\t\t\t\t\t\"enabled\": true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"In feeds\",\n\t\t\t\t\"value\": \"feed\",\n\t\t\t\t\"nested\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"rpc\": {\n\t\t\t\t\t\t\t\"url\": \"rpc://RpcFeed\",\n\t\t\t\t\t\t\t\"label\": \"Choose a feed\",\n\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"query\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"name\": \"streamId\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"Feed\",\n\t\t\t\t\t\t\"editable\": {\n\t\t\t\t\t\t\t\"help\": \"Enter the feed ID\",\n\t\t\t\t\t\t\t\"enabled\": true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"In boards\",\n\t\t\t\t\"value\": \"board\",\n\t\t\t\t\"nested\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"streamId\",\n\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\"label\": \"Board\",\n\t\t\t\t\t\t\"options\": \"rpc://BoardList\",\n\t\t\t\t\t\t\"editable\": {\n\t\t\t\t\t\t\t\"help\": \"Enter the board ID\",\n\t\t\t\t\t\t\t\"enabled\": true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"advancedSearch\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Advanced search\",\n\t\t\"default\": false,\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Yes\",\n\t\t\t\t\"value\": true,\n\t\t\t\t\"nested\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"andOrAll\",\n\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\"label\": \"Limit search for\",\n\t\t\t\t\t\t\"default\": \"or\",\n\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"label\": \"All of the followng words\",\n\t\t\t\t\t\t\t\t\"value\": \"and\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"label\": \"Any of the followng words\",\n\t\t\t\t\t\t\t\t\"value\": \"or\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"label\": \"The exact following phrase\",\n\t\t\t\t\t\t\t\t\"value\": \"exact\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"help\": \"Keywords or a phrase to be searched for. Must be words with letters, numbers, dashes(-) or underscores(_) separated by spaces.\",\n\t\t\t\t\t\t\"name\": \"query\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"Search for\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"validate\": {\n\t\t\t\t\t\t\t\"pattern\": \"^[\\\\w\\\\pL-]+(?: [\\\\w\\\\pL-]+)*$\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"help\": \"Keywords not to be searched for. Must be words with letters, numbers, dashes(-) or underscores(_) separated by spaces.\",\n\t\t\t\t\t\t\"name\": \"not\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"And none of these words\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"validate\": {\n\t\t\t\t\t\t\t\"pattern\": \"^[\\\\w\\\\pL-]+(?: [\\\\w\\\\pL-]+)*$\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"No\",\n\t\t\t\t\"value\": false,\n\t\t\t\t\"nested\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"query\",\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"label\": \"Search for\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"fields\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"In fields\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Title\",\n\t\t\t\t\"value\": \"title\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Author\",\n\t\t\t\t\"value\": \"author\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Keywords\",\n\t\t\t\t\"value\": \"keywords\"\n\t\t\t}\n\t\t],\n\t\t\"multiple\": true\n\t},\n\t{\n\t\t\"name\": \"media\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Contains media\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Audio\",\n\t\t\t\t\"value\": \"audio\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Video\",\n\t\t\t\t\"value\": \"video\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"Document\",\n\t\t\t\t\"value\": \"doc\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"At least one of above\",\n\t\t\t\t\"value\": \"any\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"newerThan\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Newer than\",\n\t\t\"help\": \"A unix timestamp.\"\n\t},\n\t{\n\t\t\"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n\t\t\"name\": \"limit\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Limit\",\n\t\t\"default\": 20,\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"ID\"\n\t},\n\t{\n\t\t\"name\": \"title\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Title\"\n\t},\n\t{\n\t\t\"name\": \"author\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Author\"\n\t},\n\t{\n\t\t\"name\": \"href\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article address\"\n\t},\n\t{\n\t\t\"name\": \"source\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"title\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"RSS source title\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"url\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"RSS source url\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"streamId\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"RSS source stream ID\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"collection\",\n\t\t\"label\": \"RSS source\"\n\t},\n\t{\n\t\t\"name\": \"created\",\n\t\t\"type\": \"date\",\n\t\t\"label\": \"Date created\"\n\t},\n\t{\n\t\t\"name\": \"updated\",\n\t\t\"type\": \"date\",\n\t\t\"label\": \"Date updated\"\n\t},\n\t{\n\t\t\"name\": \"keywords\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"text\"\n\t\t},\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Keywords\"\n\t},\n\t{\n\t\t\"name\": \"summary\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Summary\"\n\t},\n\t{\n\t\t\"name\": \"content\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Content (HTML)\"\n\t},\n\t{\n\t\t\"name\": \"feeds\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"ID\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"label\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Title\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Feeds\"\n\t},\n\t{\n\t\t\"name\": \"engagement\",\n\t\t\"type\": \"integer\",\n\t\t\"label\": \"Engagement\"\n\t},\n\t{\n\t\t\"name\": \"engagementRate\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Engagement Rate\"\n\t},\n\t{\n\t\t\"name\": \"thumbnail\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"url\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"URL\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"width\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Width\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"height\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Height\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Thumbnail\"\n\t},\n\t{\n\t\t\"name\": \"canonical\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"href\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"Href\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"type\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Type\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Canonical\"\n\t},\n\t{\n\t\t\"name\": \"enclosure\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"href\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"Href\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"width\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Width\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"height\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Height\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Enclosure\"\n\t},\n\t{\n\t\t\"name\": \"visual\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"url\",\n\t\t\t\t\"type\": \"url\",\n\t\t\t\t\"label\": \"URL\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"width\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Width\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"height\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"label\": \"Height\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"processor\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Processor\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"contentType\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"Content type\"\n\t\t\t}\n\t\t],\n\t\t\"type\": \"collection\",\n\t\t\"label\": \"Visual\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "subcribeToFeed": {
      "id": 29175,
      "api": {
        "url": "/subscriptions",
        "body": {
          "id": "{{ifempty(parameters.feedId, 'feed/' + parameters.feedUrl)}}",
          "title": "{{parameters.title}}",
          "categories": "{{categoryArrayToObjectArray(parameters.categoryIds)}}"
        },
        "method": "POST",
        "response": {
          "output": "{{body[1]}}"
        }
      },
      "rev": 4,
      "crud": null,
      "name": "subcribeToFeed",
      "epoch": null,
      "flags": {},
      "label": "Subscribe a Feed",
      "scope": [],
      "expect": [
        {
          "name": "type",
          "type": "select",
          "label": "Indentify a source by its ID, or URL",
          "default": "feedId",
          "options": [
            {
              "label": "ID",
              "value": "feedId",
              "nested": [
                {
                  "name": "feedId",
                  "type": "text",
                  "label": "ID",
                  "required": true
                }
              ]
            },
            {
              "label": "URL",
              "value": "url",
              "nested": [
                {
                  "name": "feedUrl",
                  "type": "url",
                  "label": "URL",
                  "required": true
                }
              ]
            }
          ],
          "required": true
        },
        {
          "help": "Enter the title. If omitted, the source title in Feedly will be used.",
          "name": "title",
          "type": "text",
          "label": "Title",
          "required": false
        },
        {
          "name": "categoryIds",
          "type": "select",
          "label": "Categories of feeds",
          "options": "rpc://app%23feedly@1/RpcCategory",
          "multiple": true,
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/subscriptions\",\n\t\"body\": {\n\t\t\"id\": \"{{ifempty(parameters.feedId, 'feed/' + parameters.feedUrl)}}\",\n\t\t\"title\": \"{{parameters.title}}\",\n\t\t\"categories\": \"{{categoryArrayToObjectArray(parameters.categoryIds)}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"response\": {\n\t\t\"output\": \"{{body[1]}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "website",
          "type": "url",
          "label": "Website"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Subscribes a feed to categories. If title is not present, the feed title will be used. If categories is missing, the feed will automatically be added to the uncategorized category.",
      "expectJsonc": "[\n    {\n        \"name\": \"type\",\n        \"type\": \"select\",\n        \"label\": \"Indentify a source by its ID, or URL\",\n        \"default\": \"feedId\",\n        \"options\": [\n            {\n                \"label\": \"ID\",\n                \"value\": \"feedId\",\n                \"nested\": [\n                    {\n                        \"name\": \"feedId\",\n                        \"type\": \"text\",\n                        \"label\": \"ID\",\n                        \"required\": true\n                    }\n                ]\n            },\n            {\n                \"label\": \"URL\",\n                \"value\": \"url\",\n                \"nested\": [\n                    {\n                        \"name\": \"feedUrl\",\n                        \"type\": \"url\",\n                        \"label\": \"URL\",\n                        \"required\": true\n                    }\n                ]\n            }\n        ],\n        \"required\": true\n    },\n    {\n        \"help\": \"Enter the title. If omitted, the source title in Feedly will be used.\",\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\",\n        \"required\": false\n    },\n    {\n        \"name\": \"categoryIds\",\n        \"type\": \"select\",\n        \"label\": \"Categories of feeds\",\n        \"options\": \"rpc://app%23feedly@1/RpcCategory\",\n        \"multiple\": true,\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"ID\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Title\"\n    },\n    {\n        \"name\": \"website\",\n        \"type\": \"url\",\n        \"label\": \"Website\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "NewPersonalNote": {
      "id": 29176,
      "api": {},
      "rev": 3,
      "crud": null,
      "name": "NewPersonalNote",
      "epoch": null,
      "flags": {},
      "label": "New Note",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 10,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n}",
      "approved": false,
      "hookName": "feedly3",
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Note ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Article Title"
        },
        {
          "name": "author",
          "type": "text",
          "label": "Article Author"
        },
        {
          "name": "url",
          "type": "url",
          "label": "Article URL"
        },
        {
          "name": "feedlyUrl",
          "type": "url",
          "label": "Article URL in Feedly"
        },
        {
          "name": "publishedTimestamp",
          "type": "timestamp",
          "label": "Article Publication Timestamp"
        },
        {
          "name": "annotationTimestamp",
          "type": "timestamp",
          "label": "Note Timestamp"
        },
        {
          "name": "visualUrl",
          "type": "url",
          "label": "Article Cover Image URL"
        },
        {
          "name": "comment",
          "type": "text",
          "label": "Note"
        },
        {
          "name": "addedBy",
          "type": "text",
          "label": "Note Author"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": null,
      "description": "This trigger fires when you add a note to a Feedly article.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Note ID\"\n\t},\n\t{\n\t\t\"name\": \"title\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Title\"\n\t},\n\t{\n\t\t\"name\": \"author\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Author\"\n\t},\n\t{\n\t\t\"name\": \"url\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article URL\"\n\t},\n\t{\n\t\t\"name\": \"feedlyUrl\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article URL in Feedly\"\n\t},\n\t{\n\t\t\"name\": \"publishedTimestamp\",\n\t\t\"type\": \"timestamp\",\n\t\t\"label\": \"Article Publication Timestamp\"\n\t},\n\t{\n\t\t\"name\": \"annotationTimestamp\",\n\t\t\"type\": \"timestamp\",\n\t\t\"label\": \"Note Timestamp\"\n\t},\n\t{\n\t\t\"name\": \"visualUrl\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article Cover Image URL\"\n\t},\n\t{\n\t\t\"name\": \"comment\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Note\"\n\t},\n\t{\n\t\t\"name\": \"addedBy\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Note Author\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getSubscriptions": {
      "id": 29177,
      "api": {
        "url": "/subscriptions",
        "method": "GET",
        "response": {
          "output": "{{item}}",
          "iterate": "{{body}}"
        }
      },
      "rev": 3,
      "crud": null,
      "name": "getSubscriptions",
      "epoch": null,
      "flags": {},
      "label": "List Subscriptions",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 9,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/subscriptions\",\n\t\"method\": \"GET\",\n\t\"response\": {\n\t\t\"output\": \"{{item}}\",\n\t\t\"iterate\": \"{{body}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Source ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Source title"
        },
        {
          "name": "website",
          "type": "url",
          "label": "Source website"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "Gets all sources to which a user is currently subscribed.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Source ID\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"text\",\n        \"label\": \"Source title\"\n    },\n    {\n        \"name\": \"website\",\n        \"type\": \"url\",\n        \"label\": \"Source website\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "NewPriorizedArticle": {
      "id": 29178,
      "api": {},
      "rev": 3,
      "crud": null,
      "name": "NewPriorizedArticle",
      "epoch": null,
      "flags": {},
      "label": "New Prioritized Article",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 10,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n}",
      "approved": false,
      "hookName": "feedly4",
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Article ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Title"
        },
        {
          "name": "author",
          "type": "text",
          "label": "Author"
        },
        {
          "name": "url",
          "type": "url",
          "label": "URL"
        },
        {
          "name": "feedlyUrl",
          "type": "url",
          "label": "URL in Feedly"
        },
        {
          "name": "contentHtml",
          "type": "text",
          "label": "Content (may contain HTML)"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Content (no HTML)"
        },
        {
          "name": "publishedTimestamp",
          "type": "timestamp",
          "label": "Publication Timestamp"
        },
        {
          "name": "publishedDate",
          "type": "date",
          "label": "Publication Date"
        },
        {
          "name": "visualUrl",
          "type": "url",
          "label": "Cover Image URL"
        },
        {
          "name": "keywords",
          "spec": {
            "type": "text",
            "label": "Keyword"
          },
          "type": "array",
          "label": "Keywords"
        },
        {
          "name": "engagement",
          "type": "number",
          "label": "Engagement (Popularity)"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": null,
      "description": "This trigger fires when an article is prioritized.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article ID\"\n\t},\n\t{\n\t\t\"name\": \"title\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Title\"\n\t},\n\t{\n\t\t\"name\": \"author\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Author\"\n\t},\n\t{\n\t\t\"name\": \"url\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"URL\"\n\t},\n\t{\n\t\t\"name\": \"feedlyUrl\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"URL in Feedly\"\n\t},\n\t{\n\t\t\"name\": \"contentHtml\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Content (may contain HTML)\"\n\t},\n\t{\n\t\t\"name\": \"content\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Content (no HTML)\"\n\t},\n\t{\n\t\t\"name\": \"publishedTimestamp\",\n\t\t\"type\": \"timestamp\",\n\t\t\"label\": \"Publication Timestamp\"\n\t},\n\t{\n\t\t\"name\": \"publishedDate\",\n\t\t\"type\": \"date\",\n\t\t\"label\": \"Publication Date\"\n\t},\n\t{\n\t\t\"name\": \"visualUrl\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Cover Image URL\"\n\t},\n\t{\n\t\t\"name\": \"keywords\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"label\": \"Keyword\"\n\t\t},\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Keywords\"\n\t},\n\t{\n\t\t\"name\": \"engagement\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Engagement (Popularity)\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "NewPersonalHighlight": {
      "id": 29179,
      "api": {},
      "rev": 3,
      "crud": null,
      "name": "NewPersonalHighlight",
      "epoch": null,
      "flags": {},
      "label": "New Highlight",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 10,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n}",
      "approved": false,
      "hookName": "feedly2",
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Highlight ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Article Title"
        },
        {
          "name": "author",
          "type": "text",
          "label": "Article Author"
        },
        {
          "name": "url",
          "type": "url",
          "label": "Article URL"
        },
        {
          "name": "feedlyUrl",
          "type": "url",
          "label": "Article URL in Feedly"
        },
        {
          "name": "publishedTimestamp",
          "type": "timestamp",
          "label": "Article Publication Timestamp"
        },
        {
          "name": "annotationTimestamp",
          "type": "timestamp",
          "label": "Highlight Timestamp"
        },
        {
          "name": "visualUrl",
          "type": "url",
          "label": "Article Cover Image URL"
        },
        {
          "name": "highlight",
          "type": "text",
          "label": "Highlighted Text"
        },
        {
          "name": "addedBy",
          "type": "text",
          "label": "Highlight Author"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": null,
      "description": "This trigger fires when you highlight text in a Feedly article.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Highlight ID\"\n\t},\n\t{\n\t\t\"name\": \"title\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Title\"\n\t},\n\t{\n\t\t\"name\": \"author\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Author\"\n\t},\n\t{\n\t\t\"name\": \"url\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article URL\"\n\t},\n\t{\n\t\t\"name\": \"feedlyUrl\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article URL in Feedly\"\n\t},\n\t{\n\t\t\"name\": \"publishedTimestamp\",\n\t\t\"type\": \"timestamp\",\n\t\t\"label\": \"Article Publication Timestamp\"\n\t},\n\t{\n\t\t\"name\": \"annotationTimestamp\",\n\t\t\"type\": \"timestamp\",\n\t\t\"label\": \"Highlight Timestamp\"\n\t},\n\t{\n\t\t\"name\": \"visualUrl\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article Cover Image URL\"\n\t},\n\t{\n\t\t\"name\": \"highlight\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Highlighted Text\"\n\t},\n\t{\n\t\t\"name\": \"addedBy\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Highlight Author\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "CreatePersonalArticle": {
      "id": 29180,
      "api": {
        "url": "/integromat/actions",
        "body": {
          "url": "{{parameters.url}}",
          "title": "{{parameters.title}}",
          "action": "CreateArticle",
          "author": "{{parameters.author}}",
          "content": "{{parameters.content}}",
          "resourceId": "{{parameters.resourceId}}"
        },
        "method": "POST",
        "headers": {},
        "response": {
          "output": {
            "id": "{{body.id}}"
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "CreatePersonalArticle",
      "epoch": null,
      "flags": {},
      "label": "Create an Article in a Board",
      "scope": [],
      "expect": [
        {
          "name": "url",
          "type": "url",
          "label": "Article URL",
          "required": true
        },
        {
          "name": "resourceId",
          "type": "select",
          "label": "Board",
          "options": "rpc://app%23feedly@1/BoardList",
          "required": true
        },
        {
          "name": "content",
          "type": "text",
          "label": "Article Content",
          "required": true
        },
        {
          "name": "title",
          "type": "text",
          "label": "Article Title",
          "required": true
        },
        {
          "name": "author",
          "type": "text",
          "label": "Article Author",
          "required": false
        },
        {
          "name": "comment",
          "type": "text",
          "label": "Note",
          "required": false
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/integromat/actions\",\n\t\"body\": {\n\t\t\"url\": \"{{parameters.url}}\",\n\t\t\"title\": \"{{parameters.title}}\",\n\t\t\"action\": \"CreateArticle\",\n\t\t\"author\": \"{{parameters.author}}\",\n\t\t\"content\": \"{{parameters.content}}\",\n\t\t\"resourceId\": \"{{parameters.resourceId}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"headers\": {},\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"id\": \"{{body.id}}\"\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Article ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "This action will create a new article in a Feedly board. It requires content, a URL, and a title.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"url\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article URL\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"resourceId\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Board\",\n\t\t\"options\": \"rpc://BoardList\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"content\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Content\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"title\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Title\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"author\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Author\",\n\t\t\"required\": false\n\t},\n\t{\n\t\t\"name\": \"comment\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Note\",\n\t\t\"required\": false\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article ID\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "AddEntryToPersonalBoard": {
      "id": 29181,
      "api": {
        "url": "/integromat/actions",
        "body": {
          "url": "{{parameters.url}}",
          "action": "AddArticleToBoard",
          "resourceId": "{{parameters.resourceId}}"
        },
        "method": "POST",
        "response": {
          "output": {
            "id": "{{body.id}}"
          }
        }
      },
      "rev": 5,
      "crud": null,
      "name": "AddEntryToPersonalBoard",
      "epoch": null,
      "flags": {},
      "label": "Add an Article to a Board",
      "scope": [],
      "expect": [
        {
          "name": "url",
          "type": "url",
          "label": "Article URL",
          "required": true
        },
        {
          "name": "resourceId",
          "type": "select",
          "label": "Board",
          "options": "rpc://app%23feedly@1/BoardList",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/integromat/actions\",\n\t\"body\": {\n\t\t\"url\": \"{{parameters.url}}\",\n\t\t\"action\": \"AddArticleToBoard\",\n\t\t\"resourceId\": \"{{parameters.resourceId}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"id\": \"{{body.id}}\"\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Article ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "This action will read content from a URL, and create a new article in a board.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"url\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article URL\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"resourceId\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Board\",\n\t\t\"options\": \"rpc://BoardList\",\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article ID\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "AddSourceToPersonalFeed": {
      "id": 29182,
      "api": {
        "url": "/integromat/actions",
        "body": {
          "url": "{{parameters.url}}",
          "action": "AddSourceToFeed",
          "resourceId": "{{parameters.resourceId}}"
        },
        "method": "POST",
        "response": {
          "output": {
            "id": "{{body.id}}"
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "AddSourceToPersonalFeed",
      "epoch": null,
      "flags": {},
      "label": "Add a Source to a Feed",
      "scope": [],
      "expect": [
        {
          "name": "url",
          "type": "url",
          "label": "Source URL",
          "required": true
        },
        {
          "name": "resourceId",
          "type": "select",
          "label": "Feed",
          "options": "rpc://app%23feedly@1/FeedList",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/integromat/actions\",\n\t\"body\": {\n\t\t\"url\": \"{{parameters.url}}\",\n\t\t\"action\": \"AddSourceToFeed\",\n\t\t\"resourceId\": \"{{parameters.resourceId}}\"\n\t},\n\t\"method\": \"POST\",\n\t\"response\": {\n\t\t\"output\": {\n\t\t\t\"id\": \"{{body.id}}\"\n\t\t}\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Source ID"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "feedly",
      "description": "This action will try to find a source from a URL, and add it to a personal feed.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"url\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Source URL\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"resourceId\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Feed\",\n\t\t\"options\": \"rpc://FeedList\",\n\t\t\"required\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Source ID\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "NewArticleInPersonalBoard": {
      "id": 29183,
      "api": {},
      "rev": 4,
      "crud": null,
      "name": "NewArticleInPersonalBoard",
      "epoch": null,
      "flags": {},
      "label": "New Article In Board",
      "scope": [],
      "expect": [],
      "public": true,
      "typeId": 10,
      "appName": "feedly",
      "samples": null,
      "apiJsonc": "{\n}",
      "approved": false,
      "hookName": "feedly",
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Article ID"
        },
        {
          "name": "title",
          "type": "text",
          "label": "Article Title"
        },
        {
          "name": "author",
          "type": "text",
          "label": "Article Author"
        },
        {
          "name": "url",
          "type": "url",
          "label": "Article URL"
        },
        {
          "name": "feedlyUrl",
          "type": "url",
          "label": "Article URL in Feedly"
        },
        {
          "name": "contentHtml",
          "type": "text",
          "label": "Article Content (may contain HTML)"
        },
        {
          "name": "content",
          "type": "text",
          "label": "Article Content (no HTML)"
        },
        {
          "name": "publishedTimestamp",
          "type": "timestamp",
          "label": "Article Publication Timestamp"
        },
        {
          "name": "visualUrl",
          "type": "url",
          "label": "Article Cover Image URL"
        },
        {
          "name": "keywords",
          "spec": {
            "type": "text",
            "label": "Keyword"
          },
          "type": "array",
          "label": "Article Keywords"
        },
        {
          "name": "engagement",
          "type": "number",
          "label": "Article Engagement (Popularity)"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": null,
      "description": "Activated when you add an article in a Feedly board.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article ID\"\n\t},\n\t{\n\t\t\"name\": \"title\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Title\"\n\t},\n\t{\n\t\t\"name\": \"author\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Author\"\n\t},\n\t{\n\t\t\"name\": \"url\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article URL\"\n\t},\n\t{\n\t\t\"name\": \"feedlyUrl\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article URL in Feedly\"\n\t},\n\t{\n\t\t\"name\": \"contentHtml\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Content (may contain HTML)\"\n\t},\n\t{\n\t\t\"name\": \"content\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"Article Content (no HTML)\"\n\t},\n\t{\n\t\t\"name\": \"publishedTimestamp\",\n\t\t\"type\": \"timestamp\",\n\t\t\"label\": \"Article Publication Timestamp\"\n\t},\n\t{\n\t\t\"name\": \"visualUrl\",\n\t\t\"type\": \"url\",\n\t\t\"label\": \"Article Cover Image URL\"\n\t},\n\t{\n\t\t\"name\": \"keywords\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"label\": \"Keyword\"\n\t\t},\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Article Keywords\"\n\t},\n\t{\n\t\t\"name\": \"engagement\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Article Engagement (Popularity)\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "feedly": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://cloud.feedly.com/v3/profile",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {
            "uid": "{{body.id}}",
            "error": "[{{statusCode}}] {{body.errorMessage || body}}",
            "metadata": {
              "type": "text",
              "value": "{{body.email}}"
            }
          }
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.code",
              "request.body.client_secret",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://cloud.feedly.com/v3/auth/token",
          "body": {
            "code": "{{temp.code}}",
            "client_id": "{{ifempty(data.clientId, common.clientId)}}",
            "grant_type": "authorization_code",
            "redirect_uri": "{{oauth.redirectUri}}",
            "client_secret": "{{ifempty(data.clientSecret, common.clientSecret)}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            }
          }
        },
        "refresh": {
          "log": {
            "sanitize": [
              "request.body.client_secret",
              "request.body.refresh_token",
              "response.body.access_token"
            ]
          },
          "url": "https://cloud.feedly.com/v3/auth/token",
          "body": {
            "client_id": "{{common.clientId}}",
            "grant_type": "refresh_token",
            "client_secret": "{{common.clientSecret}}",
            "refresh_token": "{{data.refreshToken}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}"
            }
          },
          "condition": "{{data.expires < addMinutes(now, 1)}}"
        },
        "authorize": {
          "qs": {
            "scope": "{{join(oauth.scope, ',')}}",
            "client_id": "{{common.clientId}}",
            "redirect_uri": "{{oauth.redirectUri}}",
            "response_type": "code"
          },
          "url": "https://cloud.feedly.com/v3/auth/auth",
          "response": {
            "temp": {
              "code": "{{query.code}}"
            }
          }
        },
        "invalidate": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://cloud.feedly.com/v3/auth/logout",
          "method": "POST",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          }
        }
      },
      "rev": 11,
      "name": "feedly",
      "type": "oauth",
      "label": "Feedly",
      "scope": [
        "https://cloud.feedly.com/subscriptions"
      ],
      "scopes": {
        "https://cloud.feedly.com/subscriptions": "Default scope"
      },
      "aliasTo": null,
      "appName": "feedly",
      "install": {
        "common": {
          "clientId": "{{parameters.clientId}}",
          "clientSecret": "{{parameters.clientSecret}}"
        }
      },
      "apiJsonc": "{\n\t\"info\": {\n\t\t\"url\": \"https://cloud.feedly.com/v3/profile\",\n\t\t\"headers\": {\n\t\t\t\"authorization\": \"Bearer {{connection.accessToken}}\"\n\t\t},\n\t\t\"response\": {\n\t\t\t\"uid\": \"{{body.id}}\",\n\t\t\t\"error\": \"[{{statusCode}}] {{body.errorMessage || body}}\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"value\": \"{{body.email}}\"\n\t\t\t}\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.headers.authorization\"]\n\t\t}\n\t},\n\t\"token\": {\n\t\t\"url\": \"https://cloud.feedly.com/v3/auth/token\",\n\t\t\"body\": {\n\t\t\t\"code\": \"{{temp.code}}\",\n\t\t\t\"client_id\": \"{{ifempty(data.clientId, common.clientId)}}\",\n\t\t\t\"grant_type\": \"authorization_code\",\n\t\t\t\"redirect_uri\": \"{{oauth.redirectUri}}\",\n\t\t\t\"client_secret\": \"{{ifempty(data.clientSecret, common.clientSecret)}}\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"method\": \"POST\",\n\t\t\"response\": {\n\t\t\t\"data\": {\n\t\t\t\t\"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n\t\t\t\t\"accessToken\": \"{{body.access_token}}\",\n\t\t\t\t\"refreshToken\": \"{{body.refresh_token}}\"\n\t\t\t}\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.body.code\", \"request.body.client_secret\", \"response.body.access_token\", \"response.body.refresh_token\"]\n\t\t}\n\t},\n\t\"refresh\": {\n\t\t\"url\": \"https://cloud.feedly.com/v3/auth/token\",\n\t\t\"body\": {\n\t\t\t\"client_id\": \"{{common.clientId}}\",\n\t\t\t\"grant_type\": \"refresh_token\",\n\t\t\t\"client_secret\": \"{{common.clientSecret}}\",\n\t\t\t\"refresh_token\": \"{{data.refreshToken}}\"\n\t\t},\n\t\t\"type\": \"urlencoded\",\n\t\t\"method\": \"POST\",\n\t\t\"response\": {\n\t\t\t\"data\": {\n\t\t\t\t\"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n\t\t\t\t\"accessToken\": \"{{body.access_token}}\"\n\t\t\t}\n\t\t},\n\t\t\"condition\": \"{{data.expires < addMinutes(now, 1)}}\",\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.body.client_secret\", \"request.body.refresh_token\", \"response.body.access_token\"]\n\t\t}\n\t},\n\t\"authorize\": {\n\t\t\"qs\": {\n\t\t\t\"scope\": \"{{join(oauth.scope, ',')}}\",\n\t\t\t\"client_id\": \"{{common.clientId}}\",\n\t\t\t\"redirect_uri\": \"{{oauth.redirectUri}}\",\n\t\t\t\"response_type\": \"code\"\n\t\t},\n\t\t\"url\": \"https://cloud.feedly.com/v3/auth/auth\",\n\t\t\"response\": {\n\t\t\t\"temp\": {\n\t\t\t\t\"code\": \"{{query.code}}\"\n\t\t\t}\n\t\t}\n\t},\n\t\"invalidate\": {\n\t\t\"url\": \"https://cloud.feedly.com/v3/auth/logout\",\n\t\t\"method\": \"POST\",\n\t\t\"headers\": {\n\t\t\t\"authorization\": \"Bearer {{connection.accessToken}}\"\n\t\t},\n\t\t\"log\": {\n\t\t\t\"sanitize\": [\"request.headers.authorization\"]\n\t\t}\n\t}\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "advanced": true,
          "editable": true
        },
        {
          "name": "clientSecret",
          "type": "password",
          "label": "Client Secret",
          "advanced": true,
          "editable": true
        }
      ],
      "scopeJsonc": "[\n    \"https://cloud.feedly.com/subscriptions\"\n]",
      "installSpec": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "text",
          "label": "Client Secret",
          "required": true
        }
      ],
      "scopesJsonc": "{\n    \"https://cloud.feedly.com/subscriptions\": \"Default scope\"\n}",
      "installJsonc": "{\n    \"common\": {\n        \"clientId\": \"{{parameters.clientId}}\",\n        \"clientSecret\": \"{{parameters.clientSecret}}\"\n    }\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"editable\": true,\n        \"advanced\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"password\",\n        \"label\": \"Client Secret\",\n        \"editable\": true,\n        \"advanced\": true\n    }\n]",
      "installSpecJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"required\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"text\",\n        \"label\": \"Client Secret\",\n        \"required\": true\n    }\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    },
    "feedly2": {
      "api": {},
      "rev": 4,
      "name": "feedly2",
      "type": "basic",
      "label": "Feedly DOESN'T USED",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "feedly",
      "install": {},
      "apiJsonc": "{}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "accessToken",
          "type": "text",
          "label": "Access Token",
          "required": true
        }
      ],
      "scopeJsonc": null,
      "installSpec": [],
      "scopesJsonc": null,
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"accessToken\",\n        \"type\": \"text\",\n        \"label\": \"Access Token\",\n        \"required\": true\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n\t\"baseUrl\": \"https://cloud.feedly.com/v3\",\n\t\"headers\": {\n\t\t\"authorization\": \"{{connection.accessToken}}\"\n\t},\n\t\"response\": {\n\t\t\"error\": \"[{{statusCode}}] {{body.errorMessage || body}}\"\n\t},\n\t\"log\": {\n\t\t\"sanitize\": [\"request.headers.authorization\"]\n\t}\n}",
  "countries": null,
  "_functions": {
    "dateToUnix": {
      "rev": 3,
      "code": "function dateToUnix(date) {\n\treturn date.getTime(date);\n}",
      "name": "dateToUnix",
      "test": null,
      "appName": "feedly",
      "arguments": "(date)",
      "appVersion": 1
    },
    "constructQuery": {
      "rev": 3,
      "code": "function constructQuery(advancedSearch, andOrAll, query, not) {\n\tif (advancedSearch) {\n\t\tswitch (andOrAll) {\n\t\t\tcase \"and\":\n\t\t\t\tquery = query.replace(\"/ +/\", \" AND \");\n\t\t\t\tbreak;\n\t\t\tcase \"or\":\n\t\t\t\tquery = query.replace(\"/ +/\", \" OR \");\n\t\t\t\tbreak;\n\t\t\tcase \"all\":\n\t\t\t\tquery = \"\\\"\" + query + \"\\\"\";\n\t\t\t\tbreak;\n\t\t}\n\t\tif (!(typeof not === \"undefined\" || not === \"\" || not === null)) {\n\t\t\tvar words = not.split(\"/ +/\");\n\t\t\twords.forEach(function(val, index, arr){\n\t\t\t\tquery += \" NOT \" + val;\n\t\t\t});\n\t\t}\n\t}\n\treturn query;\n}",
      "name": "constructQuery",
      "test": null,
      "appName": "feedly",
      "arguments": "(advancedSearch, andOrAll, query, not)",
      "appVersion": 1
    },
    "getWebhookBody": {
      "rev": 3,
      "code": "function getWebhookBody(body) {\n\tif (!body) {\n\t\treturn body\n\t}\n\tif (body.publishedDate) {\n\t\tdelete body.publishedDate\n\t\tif (body.publishedTimestamp) {\n\t\t\tbody.publishedDate = new Date(parseInt(body.publishedTimestamp, 10))\n\t\t}\n\t}\n\treturn body\n}",
      "name": "getWebhookBody",
      "test": null,
      "appName": "feedly",
      "arguments": "(body)",
      "appVersion": 1
    },
    "tagContructURL": {
      "rev": 3,
      "code": "function tagContructURL(tags) {\n\tvar ret = \"\";\n\tif (Array.isArray(tags)) {\n\t\ttags.forEach(function(tag) {\n\t\t\tret += tag + \",\";\n\t\t});\n\t\tret = ret.slice(0, -1);\n\t} else ret = tags;\n\treturn encodeURI(ret);\n}",
      "name": "tagContructURL",
      "test": null,
      "appName": "feedly",
      "arguments": "(tags)",
      "appVersion": 1
    },
    "decrementAndUnder1000": {
      "rev": 3,
      "code": "function decrementAndUnder1000(num) {\n\treturn (num - 1) / 1000;\n}",
      "name": "decrementAndUnder1000",
      "test": null,
      "appName": "feedly",
      "arguments": "(num)",
      "appVersion": 1
    },
    "categoryArrayToObjectArray": {
      "rev": 3,
      "code": "function categoryArrayToObjectArray(catogiryIds) {\n\tvar ret = [];\n\tcatogiryIds.forEach(function(id){\n\t\tret.push({\n\t\t\tid: id\n\t\t});\n\t});\n\treturn ret;\n}",
      "name": "categoryArrayToObjectArray",
      "test": null,
      "appName": "feedly",
      "arguments": "(catogiryIds)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-05-09T14:53:08.760341+00:00",
  "categories": [],
  "opensource": false,
  "description": null,
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "45c9672d7803550d30d86a0bdb6e02e8",
  "versionFull": "1.3.5",
  "compiledName": "feedly",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 1,
  "compilationError": null,
  "installSpecJsonc": "[\n]"
}
