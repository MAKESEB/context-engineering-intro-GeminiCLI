{
  "rev": 6,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.authorization"
      ]
    },
    "baseUrl": "https://graph.microsoft.com/beta",
    "headers": {
      "Authorization": "Bearer {{connection.accessToken}}"
    },
    "response": {
      "error": {
        "message": "[{{statusCode}}] {{body.error.message}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "microsoft-to-do",
  "_rpcs": {
    "listLists": {
      "api": {
        "url": "https://graph.microsoft.com/v1.0/me/todo/lists",
        "method": "GET",
        "response": {
          "limit": 500,
          "output": {
            "label": "{{item.displayName + if(item.wellknownListName === 'defaultList', ' (default)', '')}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.value}}"
        }
      },
      "rev": 2,
      "name": "listLists",
      "label": "List Lists",
      "appName": "microsoft-to-do",
      "apiJsonc": "{\n    \"url\": \"https://graph.microsoft.com/v1.0/me/todo/lists\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"iterate\": \"{{body.value}}\",\n        \"output\": {\n            \"label\": \"{{item.displayName + if(item.wellknownListName === 'defaultList', ' (default)', '')}}\",\n            \"value\": \"{{item.id}}\"\n        },\n        \"limit\": 500\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "microsoft-to-do",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listTasks": {
      "api": {
        "qs": {
          "$top": 500
        },
        "url": "/me/outlook/tasks",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.subject + if(item.completedDateTime, ' (Completed)')}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.value}}"
        }
      },
      "rev": 2,
      "name": "listTasks",
      "label": "List Tasks",
      "appName": "microsoft-to-do",
      "apiJsonc": "{\n    \"url\": \"/me/outlook/tasks\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"$top\": 500\n    },\n    \"response\": {\n        \"iterate\": \"{{body.value}}\",\n        \"output\": {\n            \"label\": \"{{item.subject + if(item.completedDateTime, ' (Completed)')}}\",\n            \"value\": \"{{item.id}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "microsoft-to-do",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    },
    "listCategories": {
      "api": {
        "qs": {
          "$top": 500
        },
        "url": "/me/outlook/masterCategories",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.displayName}}",
            "value": "{{item.displayName}}"
          },
          "iterate": "{{body.value}}"
        }
      },
      "rev": 2,
      "name": "listCategories",
      "label": "List Categories",
      "appName": "microsoft-to-do",
      "apiJsonc": "{\n    \"url\": \"/me/outlook/masterCategories\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"$top\": 500\n    },\n    \"response\": {\n        \"iterate\": \"{{body.value}}\",\n        \"output\": {\n            \"label\": \"{{item.displayName}}\",\n            \"value\": \"{{item.displayName}}\"\n        }\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "microsoft-to-do",
      "altAccountName": null,
      "parametersJsonc": "[\n]"
    }
  },
  "flags": {},
  "label": "Microsoft To Do",
  "theme": "#0078d7",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Task",
      "modules": [
        "watchTasks",
        "listTasks",
        "listOverdueTasks",
        "getATask",
        "createATask",
        "updateATask",
        "deleteATask",
        "completeATask"
      ]
    },
    {
      "label": "List",
      "modules": [
        "listLists",
        "getAList",
        "createAList",
        "updateAList",
        "deleteAList"
      ]
    },
    {
      "label": "Attachment",
      "modules": [
        "listAttachments",
        "addAnAttachment"
      ]
    },
    {
      "label": "Other",
      "modules": [
        "listGroups",
        "createAGroup",
        "makeApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000001054944415458c3edd6314a03411480e1890a8a202adec1564472150b7b05f1088a859e2aa5758aec55b488a6fa2c32600c33ebaed91d11f695cbcefb7ec24036846186f9e319f5b518dfa1519adaea11df0f21dc8610ce5341bd0d02f6f08c05a6388bcf8be21fbea67dc4cab29326076bf0f611f1a55d3c6282d3ba830df0e6112bf803e6f1e04b2ea2050e6fb8cc066470b98896f82beeb0fd1b3c19d1351e7083f71f964d701c6337c7d702c6a86a96cd2d2fe661677822e202b30c7e8f033c758a3788e81fcf4454112b8367eec4358e8ae1898810972e8ae1995fa22a8a67eec4ac28de20a27f3c135159feb194c11311635c616753bcf547e93a98fbd81c66987f339f4c79b872de2f6cb90000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000001c04944415478daed9a3d4a03511446a398e0a8d9869d362e4048e3122c751782692c045da49541101154c81456c7226f203cbccecfbb2f66eedcb380ccfdbef38919c868e4388ee3388ee3388ed3138011300566c03ef0df276d3cfc01f0007c00b7c078102544e1bf59510237e64b10c2572c4d2fa1263ca697d030bccd25b40cbfd92584e30ae014d8d37e58c7f09b5942386e0ccc8105700dec683d2c317cde2584e326a1e16578d83b70a5518252f8f525ccc3bd6ae1c7217c193d2cb904e5f0154fc071720182f998ce25640aff065ca64869623eb9844ce15f35c3d799ef5c8225f3ad4bb068be710999c2ab9a9fb0fa17d2d6bc54c26e7554a6f03ae6d70e9c85e33578064ec2e76eaff9a88023a5234be02e84de6ef3c2dfe87dc2b1d577f249a6f0bae685128a8e4797acbd9064089fc7bcd212fa6d3e710936cc775c822df32d9760d37cc325d8365fb3844f56df186d9b174a9802e7a10cfbe66bca381c84f93f0ab800be06653e2a406b01fd31ff4b09a9ef0efd322f94d0f5dda19fe68512da2ea1dfe685129a2ec18679a184ba25d8322f94202dc1a679a1847809b6cd0b2514c023f032a8f0510953e08c0cbf27701cc7711cc7711cc769c30f891d82535670b6520000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2022-02-21T23:55:37.289694+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda793000003ec4944415478daedddb16e1c551487f1b33622b184c22bc00b5040192aa0e7292822d140433a1a84d2a4489e899a0780e41d36487190207c143bc8cb66d633ded9997bee9defd7d8b29bd973cedcff5969bc8e902449922449922449922449922449922449b5da94be8035022222ae228288f873b329d7868bd2c5589baef90f22e249443c8a888bee676a1d10c015f01cf81bd802df01f71d82c675cd7f003c05de70e30df018b874081ab577e73fedeefc435be05be09e43d098bd3bfff9c19d7fe8751707ee04ade8c9fc21ee04adb825f387b813d46e44e68f3909dc096a7487cc1fe24e509b1332df9da01513327f883b41764ccffc3127813b41469c2ff387b4b71374c5db745f4b5fcea9d77fcecc1f7312b4b11374c57b0f78047c55db10305fe60fa97f27d8bb731e037f002f812f6a1902e6cffc3127419d3b4157bc8bee28bbde7b512f6a180296cbfc21f5ed045df1ee7717beed7951a98780e5337f483d3b4157bc4b76c7fe6d774eca21a05ce60fc9bf13f0ffccdf8e7851a98680f2993fe415f075865a1d2b5e5fe6573104e4c9fcdbfc067c966e0018cefcd44340becceff30bf069a91a0d156f4ce6a71c02f266fe616d1e666dfe5d323fd510903ff36177e7a76dfe29999f6208a827f3d31efb5332bfe81060e64f2ede3932bfc81060e64f2ede39337f4c21ce360498f9938b3747e60f39cb1060e64f6efe9c993f64d21060e64f6efe12993fe4a421c0cc9fdcfc25337f4ca1460f0166fee4e697c8fc21a38600337f72f3df67d7fc57a5abd4e305f0f9b1a261e6bfe3944f08d944c44711f1c1ec5777771f47c4277dbfe0e693397e8a886f22e2b2f4c5f67819113f44c4af1111253f3ae628f21ea1af819fbb6bebbb6633ffcc4390a9a05b760be915fdcdcf38b0fb7266fe8821f8ef6d54c965f0e8235198f98b0cc13d7647ef5f058a77f4a1487c9fbfe810943862af39f25834f922aa4f3d993f7208962cb8999f0dcbed04667e56ccbf1398f9d931df116ce6d762868698f9b5e17c3b81995f2ba6ef04667eed38fd8836f35b7142c3ccfcd6307e2730f35bc5f04e60e6b78ee347b899bf16070d7dcbeef132337f4df61afb04f81e337f7db879c2f8d8b16fe6af1166fe7a61e6af17376f139f91fbce6fa6f919ff73e83f11715dfa228ec8ffdc7eedc81b0166fe52c8b7049af94b23cfdf1d3495f955a1fcdf1df83ebf34caed04667e162cbf1398f9d9b0dc4e60e667c5fc3b81999f1df3ed04667e2d38ff4e60e6d786f3ed04667ead98be1398f9b5e3f49dc0cc6fc5093b8199df9a3bec04667eab46ec04667eeb6ed909ccfcb538d809de02bf7becaf4cd7ec0f811f812f6d7ebfa61f6aeb1abe8988dd373ec32749922449922449922449922449922449921af22f340b6af2a367d31b0000000049454e44ae426082",
  "icon256": "\\x89504e470d0a1a0a0000000d49484452000001000000010008060000005c72a86600000006624b474400ff00ff00ffa0bda79300000b394944415478daedddcd8e1c5719c6f1672236f68c2d1668ecdc03b7c015a0ec1c69566c90854021b2f996b29885574002516261a1109656946467ee809be00ae2b1c5827866c206f96171aad5ed49b7abab4ed5f9aaff4f8a1091a2e9aeaaf7ad73ce73aa5a020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a7290fb030029d996a49bddff7d7170b0ec127823f7070052e98aff58d2a792ee6ffc3b002db32ddbc7b63f777066fb4ef7ef737f3c0073b952fc2fbd4613005ad615f7a1edc7578a7fe5a9edf76cdfa009000de98aff96ed07b6bff66e2f6c9fda3ea209000d78cdb07f9773db274c0780ca8d287ed604801674c57bad1bf68f71d68d040e6902404536eefc8fbb21fd5897ddc2202301a00611c37ea60340cd66287e9a005003f7e7fcb1d8270094c8fbe7fcb1d8270094c4f30dfb77619f0050820cc5bfc29a009093e373fe299a00fb0480d43c5dce1f8b7d02404ace37ecdf85e900904281c54f130052f0fc397facaaf7097c27f7070076e90aea96a47724fd5065bec4f6b6a4df2ad4d207b62f96fea251209acb1df6efc23e01600a1516ff4a756b024c015094ae70ae49fab9a4b7737f9e816e497aa850574f6c5f321d00f6e47272fe58ec13008670bdc3fe5daa980e303e41765eff62cf434977d4ce75f94c21c1f852924a9c0e94f789b0285df11f4afa44d289dabb26cf141adb4792ce4b6b028bfe6dc06e7876d3f64f6cbf59f250ad455ee7fcbf53b9397facd53e815f48e27d02a558cdcd1cb2db17dddcf3981394468373fe3eec132885d7db4b4fbac51a7717214d20810516ff4a150b834deb0efe7587573c5d5c394134819939fff3fcb9f13e815cbc1ef6bfe790d56e43139889dbc9f963b14f2035af8bff8ed7c3fe5d680213f37287fdbb301d48c5c38a7f8526301153fcbbd004e6d61ddc1b0e43aea7034f104d2092cb7f9e3fb7aadf275034878befc861c1efc5c813441318c9e9dedb5f3b7e77606a7e35e78f5d70a2090c6486fd43b14f602ade9ef3c7a209ecc914ff5867b6df76c226d0dc56e0eec05d97f42b497f53d86a3a85038507551e4aa209ece06f3fcfdfe2f6deb9acb6457f2fd51f6cea85201b45795fd26f141ac194564d4092deb1fdbcb4873b72f2faa9be0f25bd95fbf354ea89a47fa7fa63cd34808de2bfa370f799baf85768025bb8dd477a53b1c263c37f91d23d3adcc449ba52fc0f35ddb0ffb57f56e184bd2369d14d80e28ff654d25fbb7fce525e4bd59fa8eee2bb21e95d8562bc9df2cf6be14dc0ed3fcf3fb70b4977257d26a57f6948d55380eee23b5278d6fa970a8d20a5454f075cc77bfb4b668539ff1329cf1b83aa3d611bc3fe1385bbcf51ce8fa3858d0418f6472be29aa97204b031ec7c4b61c53967f14b0b1b0950fcd12e14eefaf794f986515d03b892f3ff5aa1119460114d604bce8f619e2914fe1349d97f37a0aa069020e78fd5741320e79fc423655af0dba69a069030e78fd5641360d81f6d35e77f249551fc5225273153ce1ffdb155c022cf245f84e28f952de7ef53ce27d92173ce1ffdf155791320e78f9635e7ef53f414a0809c3f56d5d30172fe68d973fe3ee57da24e61397ff4d75165230186fdd1aa38e7458e000accf963553512a0f8a31593f3f729ae01149cf3c7aaa20990f3472b2ae7ef535403a820e78f55741320e79f4451397f9f621a4045397fac229b00c3fe6845e6fc7d8af89495e6fcd15f5b852c1251fcd18acdf9fb64ffa495e7fcd15f5f999b00397fb4a273fe3e59a7000de4fcb1b24e07c8f9a3159ff3f7c9f6891bcbf963251f0930ec8f967df436852c23800673fe58494702147fb46a72fe3ec91b40c3397fac244d809c3f5a55397f9fa40d6001397fac599b0039ff24aacaf9fb246b000bcaf963cdd20418f647ab32e7ef93e45b2c34e78f35d92213c51fadda9cbfcfecdf6423e7bf2fe9a75a56ce1fcb0ac3cdbb1a39df24e78f5675cedf27d514c092be2f8a7fa803493f90f45d499743ff6372fe68d5e7fc7d666f00070707b27da170114a0c4187b0a47f4afacfe0ff703decff581cf3315653b07b6a60b57f97242380ae093c174d6088cdac79d005c89c3f5a33397f9f6429c09526f03f85186ae91b8076b994f4bea43f4afa6644f193f38fd754cedfe78d947fac3b98cf25fd58218bc6b75d2a14fed8e23f96f4a9c2458ce156397ff3c52f651a1a3244dd69f4dd87631aad89bdfd43e57e18880b766d74dcc4b18cd66ccedf27eb37bd1253bd2be966ee0392c9b9a40fba7f2e46143f39ff784de7fc7db2be0fa05b187c26e9f70a0b834b7c27c099c29dfb238d2b7e72fef19acff9fb14f18d177c177ba650bc5f4a0cfb135be49cffaa62bef5022f688a3f9fc5e4fc7d8a792bf0c2f6097ca3b0436f6cf193f38fb7a89cbf4fd27d007d16b24fe052d21f24fd79e33bef859c7f128bcaf9fb1479041a1ee292f3e7c39c7f8b628f4283173c397f3e8bcdf9fb147d241ada2740ce9fcfa273fe3ec52c026ed3c83e0172fe7c169ff3f7a9e288547c1724eacb8739ff1eaa392a151604c59f0f39ff9e8a9e026caa6c9f00397f3ee4fc0314b50fa04f25fb04c8f9f322e71fa0ca2354f010999c3f1fe6fc23547b940a2c1872fe7cc8f947aafa4815b44f809c3f1f72fe08d52c026e53c83e0172fe7cc8f9233571c432de4589faf261ce3f81668e5a8682a2f8f321e79f48d553804d89f70990f3e743ce3fa1aaf601f449b44f809c3f2f727ebc9e6dd93eb6fdb9ed979ece99ed13db871b3f799efb332dc54b876377ec81c71ebb35db423dfd3c9b9c3f1f72fe99347d243ddd3e0172fe7cc8f967d4cc22e03613ed1320e7cf879c1ff11ce6df87b61f7bd8fcfbccf69deebf1ff33799f38fc79c1fd3f1f082a4f8f3397768d614ffcc9a9e026c1ab84f809c3f1f727eccc7e1ee7ccdf6831d779f0bdba7b6af0fbdfb787de77fdcddc530dca9478cba80bd79f7109d9c3f1fe6fc48c7af16ac1deed82766ce9fc3570e77fedba6f8935af404abbbd86e4bfa91c2bac02792cec9f99322e7cf88a31dc1e5bc90a4565628fcbb62c12f8bc5a40053f37a7befc7627bef18abe7f9ef89e2cf86a33e82d9db1f8be7f90bc108602093f3c722e72f080d60808d3bff870a1b8930dcea797e16fc0a4003d813c3fe68ab39ff2389e22f050d600f147fb4cde7f999f3178433d1a32bfe23497f1773fe31c8f90bd6d43b01677420e95f0a2f06c1fe789ebf709c913db0db6f14dedb5f01ceca9e580718849cbf129c9901b6c48073fdee40cdc8f92bc21ac000897e77a076bcb7bf22348081ba8bfabf0acf007ca130d745380e5f889cbf2a9ca59158137805efedaf14672a028f034b22e7af1a538008ddc5befadd813f6979fb04c8f92b470388d45df41792de97f40f2d674d80e7f91bc0599bc8c2d604c8f91bc1999bd042f60990f3378429c08416b24f809cbf2134808935bc4f809cbf419cc59934b62640cedf28cee48c1ad92740cedf30a600336a609f00393f10cbe1a7c30e1d7e34b4969f0ee3b7fa80a9b8aedf0f3c776856143f3015d7f1f3e1a37f2119408fae095cb3fd2077a5ef70ea11bf900c604f2e733ac09c1f48a5b026f095c39dff36c50f24d235815b0ed381af3315ffb9c39c9f613f905a577847dd1df845e2e27fe9b020c9821f908bf3ec1360ce0f94c269d704c8f981d238cd3e01727ea0549e7f9fc0a959f003cae579a603ccf9815a4cdc04c8f981da789a7d02e4fc40ad1cb74f809c1fa89dc7ed1360ce0fb462e09a00393fd01aefb74f809c1f6895fbf7099cb2e007346cc77480393fb0145b9a00c50f2c49d704deb4fdb3ee7f737f2400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008019fc1ff7a0760081adf6b00000000049454e44ae426082",
  "icon512": "\\x89504e470d0a1a0a0000000d4948445200000200000002000806000000f478d4fa00000006624b474400ff00ff00ffa0bda793000012574944415478daeddddb8ee338b60450e5a0ffff97731eaa0b5d97bcd8b2a820196b01039ce9010e64698b11625aeeb7f7f7f70300e8f2bff4010000f7530000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a090020000851400800eeffffe078ee35000001a087efea20000ecedfd9bff4e290500605fef4ffe738a2800007bfa2ee49580720a00c07e1e0d7725a0980200b09767435d0928a50000ece36c987b45b09002000085fe491f00002fbbeae9fde7ff9fb7f407623c3b00006bb375cf290a00c0ba4685bf525140010058d3e890560236a70000ace7ae70560236a60000ace5ee50560236a50000f01d2560435e030458433a84bd22b8193b0000f34b873f1b520000e6365bf8cf763c9ca40000cc6bd6b09df5b87882020030a7d94376f6e3e31b0a00c07c5609d7558e930f28000073592d54573b5efea50000cc63d5307d5ff8d86b29000050c80f0101e4edf2f4ecc78216620700206b97f067310a0040ceaee1bfebe7da8a020090b17b48eefef996a70000dcaf251c5b3ee7921400807bb58562dbe75d860200c0684ac084bc0608708ff610f48ae064ec00008cd71efe4c480100184bf8ffcef998840200308eb0fb98f332010500600c21f735e7274c0100b89e707b8cf314a400005c4ba83dc7f90a510000ae23ccce793f9cbbdb29000050c80f0101bcced3eb35fc58d08dec0000bc46f8b3240500e03ce13f86f37a030500e01c213596f33b980200f03ce1740fe779200500e03942e95ecef7200a0000b3530206f01a20c06384509657042f660700e07bc29fed2800005f13fe73713d2ea200007c4ed8ccc975b9800200f031213337d7e7450a00c0df84cb1a5ca717280000bf132a6b71bd4e520000fe234cd6f47eb8764f530000a0901f02e2273fb241334f8f7bb08e3dc10e007fb210d2c6cc534901e038fe5e002d88b430eb7b725d1fa000f0fee43f875d98f1bdb9bedf5000ba7d7783b881d895d9eee03a7f4101e8f4cc2b336e207663a6bbb8de9f500078841b08589935ec035e03ecf2ca4df07e78b586b509816e5e11fc831d009e610165556617fea000f4b86a01b490b21a33cbafccc3bf14800e570fbc1b885598553e622e0e05a0c1a8417703313b33ca57eae74301d8dbe801afbf819896d9e411d573a200ecebaec1aebe81989299e419b5f3a200ec27f1efc5aebd81988e59e48cc4ba19a7007095ba9b0760657e08681f3304b01f0b226586f9677d553f16640780ab5988b99b99831314803dccb600ce763ceccbac3142c55c2900eb9b7550673d2ef661c61869fbf95200d636fb80ce7e7caccb6c7187ade74c0158d34aafacac729cacc34c71a76de74d01e00edbde4000abf21ae05a560e52af08f2aa95e79f756dbb6ed901e04e1670ce323b703105601dbb2c80bb7c0eee636648d9f6e9ff38148055ecb600eef67918c7ac90b275f81f8702b0825d17c05d3f17d73123a46c1ffec7a100cc6ef70570f7cfc779668384b7a324fc8f43019859cb02d8f239799c9920a126f87f5200e6b3d28ffc5cf999e138cc021975e17f1c0a00f3b0f003dcc80f01cd4300fab1a066e69f94da35c70e00b311047d5c73526ac3ff3814805958007fe77cf470ad49a90effe35000666001fc98f3b23fd79894faf03f0e0520cd02f835e7675fae2d29c2ff5fbe049861f17b9c2f06eec7fc93601df9831d00562030805708ff0fd801b897203bcf4ec0facc3f09d68d4fd801602502645dae1d4c4601b88f05f01acee37a5c33523cfd7f4101b88705f05acee73a5c2b5284ff371480f12c806338aff3738d4811fe0f5000c6b2008ee5fccecbb521e1ed10fe0f5300c6b100dec3799e8f6b4282e07f920270bdf7c3027837e77b1eae0509c2ff0405805d081e8027f821a0eb08a03c3f169463fe4971cf9f640780dd08a2fb39e7a408ff172800d7b000cec5f5b88f734d8af07f9102f03a0be09c5c97f19c635284ff051480d75800e7e6fa8ce3dc9222fc2fe24b80e758fcd6e18b81d733ff24b88f2f66078006020bd626fc07b003f01c41b22e3b01af33ff24b86f07b103401301769e73079b51001e6701dc83ebf83ce78c144fff0329008fb100eec5f57c9c73458af01f4c01f89e05704faeebf79c235284ff0d1480af5900f7e6fa7eceb921e1ed10feb751003e6701ece03affcd392141f0df4c01f8dbfb61016ce37affc7b92041f8072800f083e003aaf821a0ff08009a7f2cc8fc93d27acfc5d90180df350661e367660ec23f4801f8c102c8af9ae6a1e9b33217e11fa6005800f958c35c347c46e624fc27d05e002c807c65e7f9d8f9b33137e13f89d62f015afc78d48e5f0c34ff24ec761f2daf7d07001e2130e135c27f426d3b001672ceda6127c0fc93b0fa7db32d3b00f0b8950374e5630706682a001640aeb0e21cad78ccecc1d3ffc45a0a8005902bad344f2b1d2b7b11fe936b28001640465861ae563846f624fc17b07b01b00032d2ccf335f3b1b1afb743f82f63e7026001e40e33ced98cc7c4fe04ff62762c00ef8705907bcd346f331d0b3d84ff82762c0000c037762c009a288dec7c9162cd5dd48e05e0380c245d043f29d6da85ed5a008ec360729fe4ac097f52acb18bdbb9001c8701653ce14f236beb06762f00c761501947f8d3c89aba89967f1be0db61c1e43ae905d02c93909e7b2ed6b003f093e10538c7fab9a1961d809f7e0eb12728ce482f82e69684f4dc3348d30e00ac4cf803976a2d001a2dcf48ff0b4e843f29d6ca8db51680e330d83c263d27c29f94f4ec33587301380e03ced7d2f321fc4949cf3e37682f00c761d0f9587a2e843f09e93f77712305e00703cf4c843f09d6c1326daf017ec52b821c477e11347f24a4e79e003b000050c80ec0dfec04744a3f01993752d2b34f881d00c82f80c29f94f4ec13a4007cce8dd1217d9d853f29e9d9274c01f89a1b646fe9eb2bfc4949cf3e135000bee746d953faba0a7f52d2b3cf241480c7b861f692be9ec29f043ff2c36f1480c7b971805559bff88bd7009fe315c1b5a517417343427aee99941d00b887f007a6a2009ca351af25fdb74fe14f8ab58a4f2900e7b9b1d690be4ec29f94f4ec333905e0356eb0b9a5af8ff027253dfb2c4001789d1b6d4ee9eb22fc4948ffb98b852800d770c3f12be14f827588a7780df03a5e119c437a1174fd4948cf3d0bb203000085ec005ccf4e4046fa09c8f526253dfb2cca0e003b482f80c29f94f4ecb33005601c37e63dd2e759f893929e7d16a7008ce5061d2b7d7e853f29e9d967030ac0786ed431d2e755f893929e7d36a100dcc30d7badf4f914fe24f8911f2ea500dcc78d0b9c65fde0725e03bc9757045f935e045d3712d273cfa6ec00c063843fb015052043a37f4efa6f9fc29f146b05c32800396eecc7a4cf93f027253dfb6c4e01c872837f2d7d7e843f29e9d9a7800290e746ff58fabc087f12d27feea28802300737fc5c843f09d6016ee535c0797845f087f422d87efec948cf3d85ec000040213b00f369dd09483f01b59d6fe6919e7d4ad9016006e90550f893929e7d8a2900f36a5918d29f53f893929e7dca290073db7d81487f3ee14f4a7af6410158c0ae0b45fa73097f52d2b30fc7712800abd86dc1487f1ee14f821ff9612a0ac03a2c1cb02ef72fd3f11ae05a567f4530bd08ae7ade585b7aeee14376006821fc017ea100ac69b5278af4df3e853f29abddab145100d6b5cac2923e4ee14f4a7af6e14b0ac0da665f60d2c727fc4949cf3e7c4b0158dfac0b4dfab8843f09e93f77c1c314803d58707e27fc49701fb214af01ee63965704d38b60faf3d3293df7f0343b000050c80ec07e523b01e927204ffea4a4671f4eb103c015d20ba0f027253dfb709a02b0afbb16a6f40228fc4949cf3ebc4401d8dbe8052abd000a7f52d2b30f2f5300f6376aa14a2f80c29f94f4ecc32514800e572f58e90550f893e0477ed88a02d0c3c205e7b97fd88ed700bbbcfa8a607a11f4e44f427aee61083b00ac42f8035c4801e8f4ec134dfa6f9fc29f144fff6c4b01e8f5e8c2965e00853f29e9d987a114806edf2d70e90550f893929e7d184e01e0edc97f7e17e14f42facf5d701b0580e3986fc113fe24cc761fc0505e03e4a759163fe14fc22cf30fb7b103000085ec00300b4ffea478faa7921d006620fc4911fed452004813fea4087faa290024097f52843ff5140052843f29c21f0e5f022443f89320f8e11776008006c21ffe6007803b79f22741f8c307ec007017e10f301105803b087f523cfdc32714004613fea4087ff88202c048c29f14e10fdff025404611fe24087e78901d004610fe24087f788202c0d5843f09c21f9ea4000040210580abbd1d9ec6b89779831314006065c21f4e520018c5c2cc68660c5ea0003092059a51cc16bc480160340b35573353700105803b58b0b9822f98c2851400ee62e1e615e6072ea60070274f709c616660000500000a29002478a2e351660506510048b1b0f31d33020329002459e0f98cd980c11400d22cf4fcca1745e1260a0033b0e0731ce6006ea500300b4f7edd5c7bb899020000851400666327a08feb0d010a009024fc214401605682617fae31042900cc4c40eccbb585300580d9098afdb8a63001058015088c3df882274c4401601582636dae1f4c460160259e20d7e49ac18414000028a400b0224f94eb70ad60520a00ab122cf3738d60620a002b1330f3726d60720a00ab133473f1454d588402c00e04ce1c5c07588802c02e3c796639f7b0180500000a2900ecc64ec0fd9c6f58900200bc42f8c3a21400762598c6738e61610a003b1350e338b7b0380580dd09aaeb39a7b00105800602eb1abe60091b51006821b85ee3fcc16614009a78823dc739830d290000504801a09127dac73957b02905805682ed7bce116c4c01a09980fb9c73039b53006827e87ee78b925042010081f793f300451400f8a1fdc9b7f9b343250500000a2900f0bbc69d80b6cf0b1c0a00b413fe504a01808f350463c367043ea100c0e7760ec89d3f1bf0000500beb66350eef89980272900f0bd5d02b3f10b8ec027140078cceac1b9faf103175300e071ab3e41af78ccc0600a0000145200e0792b3d51af74acc08d1400386785605de11881100500ce9b3960673e3660020a00bc66b6a05df58b8ac0cd140078dd2c813bcb71000b5000e01ae9276fe10f3c45010080420a005c2bb113e0e91f789a02006b13fec0290a008c7147300b7fe0340500c61919d0c21f78890200638d086ae10fbc4c0180f1ae0aecf4ab86c0461400b8c7abc12df8814b2900709fb34ff0c21fb89c020000851400b8df334ff49efe81211400c87824d8853f308c0200396f27ff378097290090f5f6e03f03b8940200796f9ffcdf00c3fc933e00e0380ec10fdccc0e000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028a4000040210500000a2900005048010080420a000014520000a0900200008514000028f47fce70b86e7c10b8c90000000049454e44ae426082",
  "install": {},
  "ipmRepo": "https://ipm.integromat.com",
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "getAList": {
      "id": 3830,
      "api": {
        "url": "/me/outlook/taskFolders/{{parameters.list}}",
        "method": "GET",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getAList",
      "epoch": null,
      "flags": {},
      "label": "Get a List",
      "scope": [
        "Tasks.Read"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "list",
          "type": "select",
          "label": "List ID",
          "options": "rpc://listLists",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/taskFolders/{{parameters.list}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "isDefaultFolder",
          "type": "boolean",
          "label": "Is Default Folder"
        },
        {
          "name": "parentGroupKey",
          "type": "text",
          "label": "Parent Group Key"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.Read\"]",
      "accountName": "microsoft-to-do",
      "description": "Gets the details of a Microsoft To-do list.",
      "expectJsonc": "[\n    {\n        \"name\": \"list\",\n        \"label\": \"List ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLists\",\n        \"required\": true,\n        \"mode\": \"edit\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"List ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"changeKey\",\n        \"label\": \"Change Key\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"name\",\n        \"label\": \"Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"isDefaultFolder\",\n        \"label\": \"Is Default Folder\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"name\": \"parentGroupKey\",\n        \"label\": \"Parent Group Key\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "getATask": {
      "id": 3831,
      "api": {
        "url": "/me/outlook/tasks/{{parameters.task}}",
        "method": "GET",
        "response": {
          "output": "{{taskResponse(body)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "getATask",
      "epoch": null,
      "flags": {},
      "label": "Get a Task",
      "scope": [
        "Tasks.Read"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "task",
          "type": "select",
          "label": "Task ID",
          "options": "rpc://listTasks",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/tasks/{{parameters.task}}\",\n    \"method\": \"GET\",\n    \"response\": {\n        \"output\": \"{{taskResponse(body)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "Etag"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Task ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "categories",
          "type": "array",
          "label": "Categories"
        },
        {
          "name": "assignedTo",
          "type": "text",
          "label": "Assigned To"
        },
        {
          "name": "hasAttachments",
          "type": "boolean",
          "label": "Has Attachments"
        },
        {
          "name": "importance",
          "type": "text",
          "label": "Importance"
        },
        {
          "name": "isReminderOn",
          "type": "boolean",
          "label": "Is Reminder On"
        },
        {
          "name": "owner",
          "type": "text",
          "label": "Owner"
        },
        {
          "name": "parentFolderId",
          "type": "text",
          "label": "Parent Folder ID"
        },
        {
          "name": "sensitivity",
          "type": "text",
          "label": "Sensitivity"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "completedDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Completed Date Time"
        },
        {
          "name": "startDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Start Date Time"
        },
        {
          "name": "body",
          "spec": [
            {
              "name": "contentType",
              "type": "text",
              "label": "Content Type"
            },
            {
              "name": "content",
              "type": "text",
              "label": "Content"
            }
          ],
          "type": "collection",
          "label": "Body"
        },
        {
          "name": "dueDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Due Date Time"
        },
        {
          "name": "recurrence",
          "spec": [
            {
              "name": "pattern",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "interval",
                  "type": "number",
                  "label": "Interval"
                },
                {
                  "name": "month",
                  "type": "number",
                  "label": "Month"
                },
                {
                  "name": "dayOfMonth",
                  "type": "number",
                  "label": "Day Of Month"
                },
                {
                  "name": "firstDayOfWeek",
                  "type": "text",
                  "label": "First Day Of Week"
                },
                {
                  "name": "index",
                  "type": "text",
                  "label": "Index"
                }
              ],
              "type": "collection",
              "label": "Pattern"
            },
            {
              "name": "range",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "startDate",
                  "type": "text",
                  "label": "Start Date"
                },
                {
                  "name": "endDate",
                  "type": "text",
                  "label": "End Date"
                },
                {
                  "name": "recurrenceTimeZone",
                  "type": "text",
                  "label": "Recurrence Time Zone"
                },
                {
                  "name": "numberOfOccurrences",
                  "type": "number",
                  "label": "Number Of Occurrences"
                },
                {
                  "name": "daysOfWeek",
                  "type": "array",
                  "label": "Days Of Week"
                }
              ],
              "type": "collection",
              "label": "Range"
            }
          ],
          "type": "collection",
          "label": "Recurrence"
        },
        {
          "name": "reminderDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Reminder Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Tasks.Read\"\n]",
      "accountName": "microsoft-to-do",
      "description": "Gets the details of a Microsoft To-do task.",
      "expectJsonc": "[\n    {\n        \"name\": \"task\",\n        \"label\": \"Task ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listTasks\",\n        \"required\": true,\n        \"mode\": \"edit\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Etag\",\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Task ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Created Date Time\",\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Categories\",\n        \"name\": \"categories\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Assigned To\",\n        \"name\": \"assignedTo\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Has Attachments\",\n        \"name\": \"hasAttachments\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Importance\",\n        \"name\": \"importance\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Reminder On\",\n        \"name\": \"isReminderOn\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Owner\",\n        \"name\": \"owner\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Parent Folder ID\",\n        \"name\": \"parentFolderId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Sensitivity\",\n        \"name\": \"sensitivity\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Subject\",\n        \"name\": \"subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Completed Date Time\",\n        \"name\": \"completedDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Start Date Time\",\n        \"name\": \"startDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Body\",\n        \"name\": \"body\",\n        \"spec\": [\n            {\n                \"label\": \"Content Type\",\n                \"name\": \"contentType\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Content\",\n                \"name\": \"content\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Due Date Time\",\n        \"name\": \"dueDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Recurrence\",\n        \"name\": \"recurrence\",\n        \"spec\": [\n            {\n                \"label\": \"Pattern\",\n                \"name\": \"pattern\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Interval\",\n                        \"name\": \"interval\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Month\",\n                        \"name\": \"month\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Day Of Month\",\n                        \"name\": \"dayOfMonth\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"First Day Of Week\",\n                        \"name\": \"firstDayOfWeek\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Index\",\n                        \"name\": \"index\",\n                        \"type\": \"text\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Range\",\n                \"name\": \"range\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Start Date\",\n                        \"name\": \"startDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"End Date\",\n                        \"name\": \"endDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Recurrence Time Zone\",\n                        \"name\": \"recurrenceTimeZone\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Number Of Occurrences\",\n                        \"name\": \"numberOfOccurrences\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days Of Week\",\n                        \"type\": \"array\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Reminder Date Time\",\n        \"name\": \"reminderDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listLists": {
      "id": 3832,
      "api": {
        "qs": {
          "$top": 500,
          "$filter": "{{filterTeams(parameters.filter)}}"
        },
        "url": "/me/outlook/taskFolders",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "listLists",
      "epoch": null,
      "flags": {},
      "label": "Search Lists",
      "scope": [
        "Tasks.Read"
      ],
      "expect": [
        {
          "name": "filter",
          "type": "filter",
          "label": "Filter",
          "options": {
            "store": [
              {
                "label": "Name",
                "value": "name",
                "default": true
              }
            ],
            "operators": [
              {
                "label": "Available operators",
                "options": [
                  {
                    "label": "Starts with",
                    "value": "startsWith"
                  },
                  {
                    "label": "Equals",
                    "value": "eq"
                  },
                  {
                    "label": "Not equals",
                    "value": "ne"
                  }
                ]
              }
            ]
          }
        },
        {
          "help": "Maximum number of results.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/taskFolders\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"$top\": 500,\n        \"$filter\": \"{{filterTeams(parameters.filter)}}\"\n    },\n    \"response\": {\n        \"output\": \"{{item}}\",\n        \"iterate\": \"{{body.value}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "isDefaultFolder",
          "type": "boolean",
          "label": "Is Default Folder"
        },
        {
          "name": "parentGroupKey",
          "type": "text",
          "label": "Parent Group Key"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.Read\"]",
      "accountName": "microsoft-to-do",
      "description": "Searches for Microsoft To-do lists by a filter.",
      "expectJsonc": "[\r\n    {\r\n        \"name\": \"filter\",\r\n        \"label\": \"Filter\",\r\n        \"type\": \"filter\",\r\n        \"options\": {\r\n            \"store\": [\r\n                {\r\n                    \"label\": \"Name\",\r\n                    \"value\": \"name\",\r\n                    \"default\": true\r\n                }\r\n            ],\r\n            \"operators\": [\r\n                {\r\n                    \"label\": \"Available operators\",\r\n                    \"options\": [\r\n                        {\r\n                            \"label\": \"Starts with\",\r\n                            \"value\": \"startsWith\"\r\n                        },\r\n                        {\r\n                            \"label\": \"Equals\",\r\n                            \"value\": \"eq\"\r\n                        },\r\n                        {\r\n                            \"label\": \"Not equals\",\r\n                            \"value\": \"ne\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"limit\",\r\n        \"label\": \"Limit\",\r\n        \"type\": \"uinteger\",\r\n        \"help\": \"Maximum number of results.\",\r\n        \"default\": 10\r\n    }\r\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"List ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"changeKey\",\n        \"label\": \"Change Key\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"name\",\n        \"label\": \"Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"isDefaultFolder\",\n        \"label\": \"Is Default Folder\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"name\": \"parentGroupKey\",\n        \"label\": \"Parent Group Key\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listTasks": {
      "id": 3833,
      "api": {
        "qs": {
          "$top": 500,
          "$filter": "{{filterTeams(parameters.filter)}}",
          "$orderby": "{{parameters.orderby}}"
        },
        "url": "/me/outlook/{{if(parameters.list, 'taskFolders/' +parameters.list+ '/')}}tasks",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{taskResponse(item)}}",
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "listTasks",
      "epoch": null,
      "flags": {},
      "label": "Search Tasks",
      "scope": [
        "Tasks.Read"
      ],
      "expect": [
        {
          "name": "filter",
          "type": "filter",
          "label": "Filter",
          "options": {
            "store": [
              {
                "label": "Subject",
                "value": "subject"
              },
              {
                "label": "Last Modified Date Time",
                "value": "lastModifiedDateTime"
              },
              {
                "label": "Created Date Time",
                "value": "createdDateTime"
              }
            ],
            "operators": [
              {
                "label": "Available operators",
                "options": [
                  {
                    "label": "Starts with",
                    "value": "startsWith"
                  },
                  {
                    "label": "Equals",
                    "value": "eq"
                  },
                  {
                    "label": "Not equals",
                    "value": "ne"
                  },
                  {
                    "label": "Greater than",
                    "value": "gt"
                  },
                  {
                    "label": "Greater than or equals",
                    "value": "ge"
                  },
                  {
                    "label": "Less than",
                    "value": "lt"
                  },
                  {
                    "label": "Less than or equals",
                    "value": "le"
                  }
                ]
              }
            ]
          }
        },
        {
          "help": "Lists tasks in a selected list.",
          "name": "list",
          "type": "select",
          "label": "List",
          "options": "rpc://listLists"
        },
        {
          "name": "orderby",
          "type": "select",
          "label": "Order by",
          "options": [
            {
              "label": "Subject Ascending",
              "value": "subject asc"
            },
            {
              "label": "Subject Descending",
              "value": "subject desc"
            },
            {
              "label": "Created Date Time Ascending",
              "value": "createdDateTime asc"
            },
            {
              "label": "Created Date Time Descending",
              "value": "createdDateTime desc"
            },
            {
              "label": "Last Modified Date Time Ascending",
              "value": "lastModifiedDateTime asc"
            },
            {
              "label": "Last Modified Date Time Descending",
              "value": "lastModifiedDateTime desc"
            }
          ]
        },
        {
          "help": "Maximum number of results.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/{{if(parameters.list, 'taskFolders/' +parameters.list+ '/')}}tasks\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"$top\": 500,\n        \"$orderby\": \"{{parameters.orderby}}\",\n        \"$filter\": \"{{filterTeams(parameters.filter)}}\"\n    },\n    \"response\": {\n        \"output\": \"{{taskResponse(item)}}\",\n        \"iterate\": \"{{body.value}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "Etag"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Task ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "categories",
          "type": "array",
          "label": "Categories"
        },
        {
          "name": "assignedTo",
          "type": "text",
          "label": "Assigned To"
        },
        {
          "name": "hasAttachments",
          "type": "boolean",
          "label": "Has Attachments"
        },
        {
          "name": "importance",
          "type": "text",
          "label": "Importance"
        },
        {
          "name": "isReminderOn",
          "type": "boolean",
          "label": "Is Reminder On"
        },
        {
          "name": "owner",
          "type": "text",
          "label": "Owner"
        },
        {
          "name": "parentFolderId",
          "type": "text",
          "label": "Parent Folder ID"
        },
        {
          "name": "sensitivity",
          "type": "text",
          "label": "Sensitivity"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "completedDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Completed Date Time"
        },
        {
          "name": "startDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Start Date Time"
        },
        {
          "name": "body",
          "spec": [
            {
              "name": "contentType",
              "type": "text",
              "label": "Content Type"
            },
            {
              "name": "content",
              "type": "text",
              "label": "Content"
            }
          ],
          "type": "collection",
          "label": "Body"
        },
        {
          "name": "dueDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Due Date Time"
        },
        {
          "name": "recurrence",
          "spec": [
            {
              "name": "pattern",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "interval",
                  "type": "number",
                  "label": "Interval"
                },
                {
                  "name": "month",
                  "type": "number",
                  "label": "Month"
                },
                {
                  "name": "dayOfMonth",
                  "type": "number",
                  "label": "Day Of Month"
                },
                {
                  "name": "firstDayOfWeek",
                  "type": "text",
                  "label": "First Day Of Week"
                },
                {
                  "name": "index",
                  "type": "text",
                  "label": "Index"
                },
                {
                  "name": "daysOfWeek",
                  "type": "array",
                  "label": "Days Of Week"
                }
              ],
              "type": "collection",
              "label": "Pattern"
            },
            {
              "name": "range",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "startDate",
                  "type": "text",
                  "label": "Start Date"
                },
                {
                  "name": "endDate",
                  "type": "text",
                  "label": "End Date"
                },
                {
                  "name": "recurrenceTimeZone",
                  "type": "text",
                  "label": "Recurrence Time Zone"
                },
                {
                  "name": "numberOfOccurrences",
                  "type": "number",
                  "label": "Number Of Occurrences"
                }
              ],
              "type": "collection",
              "label": "Range"
            }
          ],
          "type": "collection",
          "label": "Recurrence"
        },
        {
          "name": "reminderDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Reminder Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n    \"Tasks.Read\"\n]",
      "accountName": "microsoft-to-do",
      "description": "Searches for Microsoft To-do tasks by a filter.",
      "expectJsonc": "[\r\n    {\r\n        \"name\": \"filter\",\r\n        \"label\": \"Filter\",\r\n        \"type\": \"filter\",\r\n        \"options\": {\r\n            \"store\": [\r\n                {\r\n                    \"label\": \"Subject\",\r\n                    \"value\": \"subject\"\r\n                },\r\n                {\r\n                    \"label\": \"Last Modified Date Time\",\r\n                    \"value\": \"lastModifiedDateTime\"\r\n                },\r\n                {\r\n                    \"label\": \"Created Date Time\",\r\n                    \"value\": \"createdDateTime\"\r\n                }\r\n            ],\r\n            \"operators\": [\r\n                {\r\n                    \"label\": \"Available operators\",\r\n                    \"options\": [\r\n                        {\r\n                            \"label\": \"Starts with\",\r\n                            \"value\": \"startsWith\"\r\n                        },\r\n                        {\r\n                            \"label\": \"Equals\",\r\n                            \"value\": \"eq\"\r\n                        },\r\n                        {\r\n                            \"label\": \"Not equals\",\r\n                            \"value\": \"ne\"\r\n                        },\r\n                        {\r\n                            \"label\": \"Greater than\",\r\n                            \"value\": \"gt\"\r\n                        },\r\n                        {\r\n                            \"label\": \"Greater than or equals\",\r\n                            \"value\": \"ge\"\r\n                        },\r\n                        {\r\n                            \"label\": \"Less than\",\r\n                            \"value\": \"lt\"\r\n                        },\r\n                        {\r\n                            \"label\": \"Less than or equals\",\r\n                            \"value\": \"le\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    {\r\n        \"name\": \"list\",\r\n        \"label\": \"List\",\r\n        \"type\": \"select\",\r\n        \"options\": \"rpc://listLists\",\r\n        \"help\": \"Lists tasks in a selected list.\"\r\n    },\r\n    {\r\n        \"name\": \"orderby\",\r\n        \"label\": \"Order by\",\r\n        \"type\": \"select\",\r\n        \"options\": [\r\n            {\r\n                \"label\": \"Subject Ascending\",\r\n                \"value\": \"subject asc\"\r\n            },\r\n            {\r\n                \"label\": \"Subject Descending\",\r\n                \"value\": \"subject desc\"\r\n            },\r\n            {\r\n                \"label\": \"Created Date Time Ascending\",\r\n                \"value\": \"createdDateTime asc\"\r\n            },\r\n            {\r\n                \"label\": \"Created Date Time Descending\",\r\n                \"value\": \"createdDateTime desc\"\r\n            },\r\n            {\r\n                \"label\": \"Last Modified Date Time Ascending\",\r\n                \"value\": \"lastModifiedDateTime asc\"\r\n            },\r\n            {\r\n                \"label\": \"Last Modified Date Time Descending\",\r\n                \"value\": \"lastModifiedDateTime desc\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"limit\",\r\n        \"label\": \"Limit\",\r\n        \"type\": \"uinteger\",\r\n        \"help\": \"Maximum number of results.\",\r\n        \"default\": 10\r\n    }\r\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Etag\",\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Task ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Created Date Time\",\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Categories\",\n        \"name\": \"categories\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Assigned To\",\n        \"name\": \"assignedTo\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Has Attachments\",\n        \"name\": \"hasAttachments\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Importance\",\n        \"name\": \"importance\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Reminder On\",\n        \"name\": \"isReminderOn\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Owner\",\n        \"name\": \"owner\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Parent Folder ID\",\n        \"name\": \"parentFolderId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Sensitivity\",\n        \"name\": \"sensitivity\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Subject\",\n        \"name\": \"subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Completed Date Time\",\n        \"name\": \"completedDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Start Date Time\",\n        \"name\": \"startDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Body\",\n        \"name\": \"body\",\n        \"spec\": [\n            {\n                \"label\": \"Content Type\",\n                \"name\": \"contentType\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Content\",\n                \"name\": \"content\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Due Date Time\",\n        \"name\": \"dueDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Recurrence\",\n        \"name\": \"recurrence\",\n        \"spec\": [\n            {\n                \"label\": \"Pattern\",\n                \"name\": \"pattern\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Interval\",\n                        \"name\": \"interval\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Month\",\n                        \"name\": \"month\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Day Of Month\",\n                        \"name\": \"dayOfMonth\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"First Day Of Week\",\n                        \"name\": \"firstDayOfWeek\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Index\",\n                        \"name\": \"index\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days Of Week\",\n                        \"type\": \"array\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Range\",\n                \"name\": \"range\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Start Date\",\n                        \"name\": \"startDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"End Date\",\n                        \"name\": \"endDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Recurrence Time Zone\",\n                        \"name\": \"recurrenceTimeZone\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Number Of Occurrences\",\n                        \"name\": \"numberOfOccurrences\",\n                        \"type\": \"number\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Reminder Date Time\",\n        \"name\": \"reminderDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listGroups": {
      "id": 3834,
      "api": {
        "qs": {
          "$top": 500
        },
        "url": "/me/outlook/taskGroups",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{item}}",
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "listGroups",
      "epoch": null,
      "flags": {},
      "label": "List Groups",
      "scope": [
        "Tasks.Read"
      ],
      "expect": [
        {
          "help": "Maximum number of results.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": false,
      "typeId": 9,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/taskGroups\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"$top\": 500\n    },\n    \"response\": {\n        \"output\": \"{{item}}\",\n        \"iterate\": \"{{body.value}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Group ID"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "isDefaultGroup",
          "type": "boolean",
          "label": "Is Default Group"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "groupKey",
          "type": "text",
          "label": "Group Key"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.Read\"]",
      "accountName": "microsoft-to-do",
      "description": "Retrieves a list all Microsoft To-do groups.",
      "expectJsonc": "[\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"help\": \"Maximum number of results.\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Group ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Default Group\",\n        \"name\": \"isDefaultGroup\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Name\",\n        \"name\": \"name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Group Key\",\n        \"name\": \"groupKey\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "watchTasks": {
      "id": 3835,
      "api": {
        "qs": {
          "$top": 500,
          "$filter": "{{filterTeams(parameters.filter)}}"
        },
        "url": "/me/outlook/{{if(parameters.list, 'taskFolders/' +parameters.list+ '/')}}tasks",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{taskResponse(item)}}",
          "iterate": "{{filterWatchTask(body.value, parameters)}}",
          "trigger": {
            "id": "{{item.id}}",
            "date": "{{switch(parameters.select, 'create', item.createdDateTime, 'modify', item.lastModifiedDateTime, 'due', item.dueDateTime.dateTime, 'complete', item.completedDateTime.dateTime)}}",
            "type": "date",
            "order": "desc"
          }
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "watchTasks",
      "epoch": {
        "response": {
          "limit": 500,
          "output": {
            "date": "{{switch(parameters.select, 'create', item.createdDateTime, 'modify', item.lastModifiedDateTime, 'due', item.dueDateTime.dateTime, 'complete', item.completedDateTime.dateTime)}}",
            "label": "{{item.subject}}"
          }
        }
      },
      "flags": {},
      "label": "Watch Tasks",
      "scope": [
        "Tasks.Read"
      ],
      "expect": [],
      "public": true,
      "typeId": 1,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/{{if(parameters.list, 'taskFolders/' +parameters.list+ '/')}}tasks\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"$top\": 500,\n        \"$filter\": \"{{filterTeams(parameters.filter)}}\"\n    },\n    \"response\": {\n        \"iterate\": \"{{filterWatchTask(body.value, parameters)}}\",\n        \"trigger\": {\n            \"id\": \"{{item.id}}\",\n            \"date\": \"{{switch(parameters.select, 'create', item.createdDateTime, 'modify', item.lastModifiedDateTime, 'due', item.dueDateTime.dateTime, 'complete', item.completedDateTime.dateTime)}}\",\n            \"type\": \"date\",\n            \"order\": \"desc\"\n        },\n        \"output\": \"{{taskResponse(item)}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "Etag"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Task ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "categories",
          "type": "array",
          "label": "Categories"
        },
        {
          "name": "assignedTo",
          "type": "text",
          "label": "Assigned To"
        },
        {
          "name": "hasAttachments",
          "type": "boolean",
          "label": "Has Attachments"
        },
        {
          "name": "importance",
          "type": "text",
          "label": "Importance"
        },
        {
          "name": "isReminderOn",
          "type": "boolean",
          "label": "Is Reminder On"
        },
        {
          "name": "owner",
          "type": "text",
          "label": "Owner"
        },
        {
          "name": "parentFolderId",
          "type": "text",
          "label": "Parent Folder ID"
        },
        {
          "name": "sensitivity",
          "type": "text",
          "label": "Sensitivity"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "completedDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Completed Date Time"
        },
        {
          "name": "startDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Start Date Time"
        },
        {
          "name": "body",
          "spec": [
            {
              "name": "contentType",
              "type": "text",
              "label": "Content Type"
            },
            {
              "name": "content",
              "type": "text",
              "label": "Content"
            }
          ],
          "type": "collection",
          "label": "Body"
        },
        {
          "name": "dueDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Due Date Time"
        },
        {
          "name": "recurrence",
          "spec": [
            {
              "name": "pattern",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "interval",
                  "type": "number",
                  "label": "Interval"
                },
                {
                  "name": "month",
                  "type": "number",
                  "label": "Month"
                },
                {
                  "name": "dayOfMonth",
                  "type": "number",
                  "label": "Day Of Month"
                },
                {
                  "name": "firstDayOfWeek",
                  "type": "text",
                  "label": "First Day Of Week"
                },
                {
                  "name": "index",
                  "type": "text",
                  "label": "Index"
                },
                {
                  "name": "daysOfWeek",
                  "type": "array",
                  "label": "Days Of Week"
                }
              ],
              "type": "collection",
              "label": "Pattern"
            },
            {
              "name": "range",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "startDate",
                  "type": "text",
                  "label": "Start Date"
                },
                {
                  "name": "endDate",
                  "type": "text",
                  "label": "End Date"
                },
                {
                  "name": "recurrenceTimeZone",
                  "type": "text",
                  "label": "Recurrence Time Zone"
                },
                {
                  "name": "numberOfOccurrences",
                  "type": "number",
                  "label": "Number Of Occurrences"
                }
              ],
              "type": "collection",
              "label": "Range"
            }
          ],
          "type": "collection",
          "label": "Recurrence"
        },
        {
          "name": "reminderDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Reminder Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": "{\n    \"response\": {\n        \"limit\": 500,\n        \"output\": {\n            \"date\": \"{{switch(parameters.select, 'create', item.createdDateTime, 'modify', item.lastModifiedDateTime, 'due', item.dueDateTime.dateTime, 'complete', item.completedDateTime.dateTime)}}\",\n            \"label\": \"{{item.subject}}\"\n        }\n    }\n}",
      "parameters": [
        {
          "name": "select",
          "type": "select",
          "label": "Watch Tasks",
          "options": [
            {
              "label": "By Created Time",
              "value": "create",
              "default": true
            },
            {
              "label": "By Modified Time",
              "value": "modify"
            },
            {
              "label": "By Due Date Time",
              "value": "due"
            },
            {
              "label": "By Completed Date Time",
              "value": "complete"
            }
          ],
          "mappable": false,
          "required": true
        },
        {
          "name": "filter",
          "type": "filter",
          "label": "Filter",
          "options": {
            "store": [
              {
                "label": "Subject",
                "value": "subject"
              }
            ],
            "operators": [
              {
                "label": "Available operators",
                "options": [
                  {
                    "label": "Starts with",
                    "value": "startsWith"
                  },
                  {
                    "label": "Equals",
                    "value": "eq"
                  },
                  {
                    "label": "Not equals",
                    "value": "ne"
                  },
                  {
                    "label": "Greater than",
                    "value": "gt"
                  },
                  {
                    "label": "Greater than or equals",
                    "value": "ge"
                  },
                  {
                    "label": "Less than",
                    "value": "lt"
                  },
                  {
                    "label": "Less than or equals",
                    "value": "le"
                  }
                ]
              }
            ]
          }
        },
        {
          "help": "Lists tasks in a selected list.",
          "name": "list",
          "type": "select",
          "label": "List",
          "options": "rpc://listLists"
        },
        {
          "help": "The maximum number of results to be worked with during one execution cycle.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 2,
          "required": true
        }
      ],
      "scopeJsonc": "[\"Tasks.Read\"]",
      "accountName": "microsoft-to-do",
      "description": "Triggers when a new task is created or modified.",
      "expectJsonc": "[\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Etag\",\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Task ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Created Date Time\",\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Categories\",\n        \"name\": \"categories\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Assigned To\",\n        \"name\": \"assignedTo\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Has Attachments\",\n        \"name\": \"hasAttachments\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Importance\",\n        \"name\": \"importance\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Reminder On\",\n        \"name\": \"isReminderOn\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Owner\",\n        \"name\": \"owner\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Parent Folder ID\",\n        \"name\": \"parentFolderId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Sensitivity\",\n        \"name\": \"sensitivity\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Subject\",\n        \"name\": \"subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Completed Date Time\",\n        \"name\": \"completedDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Start Date Time\",\n        \"name\": \"startDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Body\",\n        \"name\": \"body\",\n        \"spec\": [\n            {\n                \"label\": \"Content Type\",\n                \"name\": \"contentType\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Content\",\n                \"name\": \"content\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Due Date Time\",\n        \"name\": \"dueDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Recurrence\",\n        \"name\": \"recurrence\",\n        \"spec\": [\n            {\n                \"label\": \"Pattern\",\n                \"name\": \"pattern\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Interval\",\n                        \"name\": \"interval\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Month\",\n                        \"name\": \"month\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Day Of Month\",\n                        \"name\": \"dayOfMonth\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"First Day Of Week\",\n                        \"name\": \"firstDayOfWeek\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Index\",\n                        \"name\": \"index\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days Of Week\",\n                        \"type\": \"array\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Range\",\n                \"name\": \"range\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Start Date\",\n                        \"name\": \"startDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"End Date\",\n                        \"name\": \"endDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Recurrence Time Zone\",\n                        \"name\": \"recurrenceTimeZone\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Number Of Occurrences\",\n                        \"name\": \"numberOfOccurrences\",\n                        \"type\": \"number\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Reminder Date Time\",\n        \"name\": \"reminderDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": "[\n    {\n        \"name\": \"select\",\n        \"label\": \"Watch Tasks\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"By Created Time\",\n                \"value\": \"create\",\n                \"default\": true\n            },\n            {\n                \"label\": \"By Modified Time\",\n                \"value\": \"modify\"\n            },\n            {\n                \"label\": \"By Due Date Time\",\n                \"value\": \"due\"\n            },\n            {\n                \"label\": \"By Completed Date Time\",\n                \"value\": \"complete\"\n            }\n        ]\n    },\n    {\n        \"name\": \"filter\",\n        \"label\": \"Filter\",\n        \"type\": \"filter\",\n        \"options\": {\n            \"store\": [\n                {\n                    \"label\": \"Subject\",\n                    \"value\": \"subject\"\n                }\n            ],\n            \"operators\": [\n                {\n                    \"label\": \"Available operators\",\n                    \"options\": [\n                        {\n                            \"label\": \"Starts with\",\n                            \"value\": \"startsWith\"\n                        },\n                        {\n                            \"label\": \"Equals\",\n                            \"value\": \"eq\"\n                        },\n                        {\n                            \"label\": \"Not equals\",\n                            \"value\": \"ne\"\n                        },\n                        {\n                            \"label\": \"Greater than\",\n                            \"value\": \"gt\"\n                        },\n                        {\n                            \"label\": \"Greater than or equals\",\n                            \"value\": \"ge\"\n                        },\n                        {\n                            \"label\": \"Less than\",\n                            \"value\": \"lt\"\n                        },\n                        {\n                            \"label\": \"Less than or equals\",\n                            \"value\": \"le\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    {\n        \"name\": \"list\",\n        \"label\": \"List\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLists\",\n        \"help\": \"Lists tasks in a selected list.\"\n    },\n    {\n        \"help\": \"The maximum number of results to be worked with during one execution cycle.\",\n        \"name\": \"limit\",\n        \"type\": \"uinteger\",\n        \"label\": \"Limit\",\n        \"default\": 2,\n        \"required\": true\n    }\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createAList": {
      "id": 3836,
      "api": {
        "url": "/me/outlook/taskFolders",
        "body": {
          "name": "{{parameters.name}}"
        },
        "method": "POST",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 2,
      "crud": "create",
      "name": "createAList",
      "epoch": null,
      "flags": {},
      "label": "Create a List",
      "scope": [
        "Tasks.ReadWrite"
      ],
      "expect": [
        {
          "name": "name",
          "type": "text",
          "label": "List Name",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/taskFolders\",\n    \"method\": \"POST\",\n    \"body\": {\n        \"name\": \"{{parameters.name}}\"\n    },\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "isDefaultFolder",
          "type": "boolean",
          "label": "Is Default Folder"
        },
        {
          "name": "parentGroupKey",
          "type": "text",
          "label": "Parent Group Key"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.ReadWrite\"]",
      "accountName": "microsoft-to-do",
      "description": "Creates a new list.",
      "expectJsonc": "[\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"List Name\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"List ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"changeKey\",\n        \"label\": \"Change Key\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"name\",\n        \"label\": \"Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"isDefaultFolder\",\n        \"label\": \"Is Default Folder\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"name\": \"parentGroupKey\",\n        \"label\": \"Parent Group Key\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createATask": {
      "id": 3837,
      "api": [
        {
          "url": "/me/outlook/tasks",
          "body": "{{taskRequest(parameters)}}",
          "method": "POST",
          "response": {
            "temp": {
              "id": "{{body.id}}"
            },
            "output": "{{taskResponse(body)}}"
          }
        },
        {
          "url": "/me/outlook/tasks/{{temp.id}}",
          "body": {
            "parentFolderId": "{{parameters.parentFolderId}}"
          },
          "method": "PATCH",
          "response": {
            "temp": {
              "updatedId": "{{body.id}}"
            }
          },
          "condition": "{{parameters.parentFolderId}}"
        },
        {
          "url": "/me/outlook/tasks/{{if(parameters.parentFolderId, temp.updatedId, temp.id)}}/attachments",
          "body": {
            "name": "{{parameters.filename}}",
            "@odata.type": "#microsoft.graph.fileAttachment",
            "contentBytes": "{{base64(parameters.data)}}"
          },
          "method": "POST",
          "response": {
            "error": {
              "413": {
                "message": "{{if(body === 'The page was not displayed because the request entity is too large.', 'File cannot be uploaded more than 3MB.', body)}}"
              },
              "500": {
                "message": "File cannot be uploaded more than 3MB."
              },
              "message": "[{{statusCode}}] {{body.error.message}}"
            },
            "output": "{{body}}"
          },
          "condition": "{{parameters.filename && parameters.data}}"
        },
        {
          "url": "/me/outlook/tasks/{{if(parameters.parentFolderId, temp.updatedId, temp.id)}}",
          "method": "GET",
          "response": {
            "output": "{{taskResponse(body)}}"
          },
          "condition": "{{parameters.filename && parameters.data}}"
        }
      ],
      "rev": 2,
      "crud": "create",
      "name": "createATask",
      "epoch": null,
      "flags": {},
      "label": "Create a Task",
      "scope": [
        "MailboxSettings.Read",
        "Tasks.ReadWrite"
      ],
      "expect": [
        {
          "name": "subject",
          "type": "text",
          "label": "Subject",
          "required": true
        },
        {
          "name": "startDateTime",
          "time": true,
          "type": "date",
          "label": "Start Date Time"
        },
        {
          "name": "dueDateTime",
          "time": true,
          "type": "date",
          "label": "Due Date Time"
        },
        {
          "name": "reminderDateTime",
          "time": true,
          "type": "date",
          "label": "Reminder Date Time"
        },
        {
          "name": "parentFolderId",
          "type": "select",
          "label": "List ID",
          "options": "rpc://listLists"
        },
        {
          "name": "importance",
          "type": "select",
          "label": "Importance",
          "options": [
            {
              "label": "Normal",
              "value": "normal",
              "default": true
            },
            {
              "label": "High",
              "value": "high"
            },
            {
              "label": "Low",
              "value": "low"
            }
          ]
        },
        {
          "name": "note",
          "type": "text",
          "label": "Note"
        },
        {
          "help": "This parameter is compatible only with the on-premise version. i.e. Outlook",
          "name": "categories",
          "type": "select",
          "label": "Categories",
          "options": "rpc://listCategories",
          "advanced": true,
          "multiple": true
        },
        {
          "help": "File name, including the extension, e.g.`invoice.xml`",
          "name": "filename",
          "type": "filename",
          "label": "File Name",
          "advanced": true,
          "semantic": "file:name"
        },
        {
          "name": "data",
          "type": "buffer",
          "label": "Data",
          "advanced": true,
          "semantic": "file:data"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "[\n    {\n        \"url\": \"/me/outlook/tasks\",\n        \"method\": \"POST\",\n        \"body\": \"{{taskRequest(parameters)}}\",\n        \"response\": {\n            \"temp\": {\n                \"id\": \"{{body.id}}\"\n            },\n            \"output\": \"{{taskResponse(body)}}\"\n        }\n    },\n    {\n        \"url\": \"/me/outlook/tasks/{{temp.id}}\",\n        \"method\": \"PATCH\",\n        \"body\": {\n            \"parentFolderId\": \"{{parameters.parentFolderId}}\"\n        },\n        \"response\": {\n            \"temp\": {\n                \"updatedId\": \"{{body.id}}\"\n            }\n        },\n        \"condition\": \"{{parameters.parentFolderId}}\"\n    },\n    {\n        \"url\": \"/me/outlook/tasks/{{if(parameters.parentFolderId, temp.updatedId, temp.id)}}/attachments\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"@odata.type\": \"#microsoft.graph.fileAttachment\",\n            \"name\": \"{{parameters.filename}}\",\n            \"contentBytes\": \"{{base64(parameters.data)}}\"\n        },\n        \"response\": {\n            \"output\": \"{{body}}\",\n            \"error\": {\n                \"413\": {\n                    \"message\": \"{{if(body === 'The page was not displayed because the request entity is too large.', 'File cannot be uploaded more than 3MB.', body)}}\"\n                },\n                \"500\": {\n                    \"message\": \"File cannot be uploaded more than 3MB.\"\n                },\n                \"message\": \"[{{statusCode}}] {{body.error.message}}\"\n            }\n        },\n        \"condition\": \"{{parameters.filename && parameters.data}}\"\n    },\n    {\n        \"url\": \"/me/outlook/tasks/{{if(parameters.parentFolderId, temp.updatedId, temp.id)}}\",\n        \"method\": \"GET\",\n        \"response\": {\n            \"output\": \"{{taskResponse(body)}}\"\n        },\n        \"condition\": \"{{parameters.filename && parameters.data}}\"\n    }\n]",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "Etag"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Task ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "categories",
          "type": "array",
          "label": "Categories"
        },
        {
          "name": "assignedTo",
          "type": "text",
          "label": "Assigned To"
        },
        {
          "name": "hasAttachments",
          "type": "boolean",
          "label": "Has Attachments"
        },
        {
          "name": "importance",
          "type": "text",
          "label": "Importance"
        },
        {
          "name": "isReminderOn",
          "type": "boolean",
          "label": "Is Reminder On"
        },
        {
          "name": "owner",
          "type": "text",
          "label": "Owner"
        },
        {
          "name": "parentFolderId",
          "type": "text",
          "label": "Parent Folder ID"
        },
        {
          "name": "sensitivity",
          "type": "text",
          "label": "Sensitivity"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "completedDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Completed Date Time"
        },
        {
          "name": "startDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Start Date Time"
        },
        {
          "name": "body",
          "spec": [
            {
              "name": "contentType",
              "type": "text",
              "label": "Content Type"
            },
            {
              "name": "content",
              "type": "text",
              "label": "Content"
            }
          ],
          "type": "collection",
          "label": "Body"
        },
        {
          "name": "dueDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Due Date Time"
        },
        {
          "name": "recurrence",
          "spec": [
            {
              "name": "pattern",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "interval",
                  "type": "number",
                  "label": "Interval"
                },
                {
                  "name": "month",
                  "type": "number",
                  "label": "Month"
                },
                {
                  "name": "dayOfMonth",
                  "type": "number",
                  "label": "Day Of Month"
                },
                {
                  "name": "firstDayOfWeek",
                  "type": "text",
                  "label": "First Day Of Week"
                },
                {
                  "name": "index",
                  "type": "text",
                  "label": "Index"
                }
              ],
              "type": "collection",
              "label": "Pattern"
            },
            {
              "name": "range",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "startDate",
                  "type": "text",
                  "label": "Start Date"
                },
                {
                  "name": "endDate",
                  "type": "text",
                  "label": "End Date"
                },
                {
                  "name": "recurrenceTimeZone",
                  "type": "text",
                  "label": "Recurrence Time Zone"
                },
                {
                  "name": "numberOfOccurrences",
                  "type": "number",
                  "label": "Number Of Occurrences"
                },
                {
                  "name": "daysOfWeek",
                  "type": "array",
                  "label": "Days Of Week"
                }
              ],
              "type": "collection",
              "label": "Range"
            }
          ],
          "type": "collection",
          "label": "Recurrence"
        },
        {
          "name": "reminderDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Reminder Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"MailboxSettings.Read\",\r\n    \"Tasks.ReadWrite\"\r\n]",
      "accountName": "microsoft-to-do",
      "description": "Creates a new task with a file attachment (File size should not be above 3MB).",
      "expectJsonc": "[\n    {\n        \"name\": \"subject\",\n        \"label\": \"Subject\",\n        \"type\": \"text\",\n        \"required\": true\n    },\n    {\n        \"name\": \"startDateTime\",\n        \"label\": \"Start Date Time\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"dueDateTime\",\n        \"label\": \"Due Date Time\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"reminderDateTime\",\n        \"label\": \"Reminder Date Time\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"parentFolderId\",\n        \"label\": \"List ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLists\"\n    },\n    {\n        \"name\": \"importance\",\n        \"label\": \"Importance\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Normal\",\n                \"value\": \"normal\",\n                \"default\": true\n            },\n            {\n                \"label\": \"High\",\n                \"value\": \"high\"\n            },\n            {\n                \"label\": \"Low\",\n                \"value\": \"low\"\n            }\n        ]\n    },\n    {\n        \"name\": \"note\",\n        \"label\": \"Note\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"categories\",\n        \"label\": \"Categories\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listCategories\",\n        \"multiple\": true,\n        \"advanced\": true,\n        \"help\": \"This parameter is compatible only with the on-premise version. i.e. Outlook\"\n    },\n    {\n        \"name\": \"filename\",\n        \"type\": \"filename\",\n        \"label\": \"File Name\",\n        \"semantic\": \"file:name\",\n        \"help\": \"File name, including the extension, e.g.`invoice.xml`\",\n        \"advanced\": true\n    },\n    {\n        \"name\": \"data\",\n        \"type\": \"buffer\",\n        \"label\": \"Data\",\n        \"semantic\": \"file:data\",\n        \"advanced\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Etag\",\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Task ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Created Date Time\",\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Categories\",\n        \"name\": \"categories\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Assigned To\",\n        \"name\": \"assignedTo\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Has Attachments\",\n        \"name\": \"hasAttachments\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Importance\",\n        \"name\": \"importance\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Reminder On\",\n        \"name\": \"isReminderOn\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Owner\",\n        \"name\": \"owner\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Parent Folder ID\",\n        \"name\": \"parentFolderId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Sensitivity\",\n        \"name\": \"sensitivity\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Subject\",\n        \"name\": \"subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Completed Date Time\",\n        \"name\": \"completedDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Start Date Time\",\n        \"name\": \"startDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Body\",\n        \"name\": \"body\",\n        \"spec\": [\n            {\n                \"label\": \"Content Type\",\n                \"name\": \"contentType\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Content\",\n                \"name\": \"content\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Due Date Time\",\n        \"name\": \"dueDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Recurrence\",\n        \"name\": \"recurrence\",\n        \"spec\": [\n            {\n                \"label\": \"Pattern\",\n                \"name\": \"pattern\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Interval\",\n                        \"name\": \"interval\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Month\",\n                        \"name\": \"month\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Day Of Month\",\n                        \"name\": \"dayOfMonth\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"First Day Of Week\",\n                        \"name\": \"firstDayOfWeek\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Index\",\n                        \"name\": \"index\",\n                        \"type\": \"text\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Range\",\n                \"name\": \"range\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Start Date\",\n                        \"name\": \"startDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"End Date\",\n                        \"name\": \"endDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Recurrence Time Zone\",\n                        \"name\": \"recurrenceTimeZone\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Number Of Occurrences\",\n                        \"name\": \"numberOfOccurrences\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days Of Week\",\n                        \"type\": \"array\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Reminder Date Time\",\n        \"name\": \"reminderDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteAList": {
      "id": 3838,
      "api": {
        "url": "/me/outlook/taskFolders/{{parameters.list}}",
        "method": "DELETE",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 2,
      "crud": "delete",
      "name": "deleteAList",
      "epoch": null,
      "flags": {},
      "label": "Delete a List",
      "scope": [
        "Tasks.ReadWrite"
      ],
      "expect": [
        {
          "help": "The default list cannot be deleted.",
          "mode": "edit",
          "name": "list",
          "type": "select",
          "label": "List ID",
          "options": "rpc://listLists",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/taskFolders/{{parameters.list}}\",\n    \"method\": \"DELETE\",\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.ReadWrite\"]",
      "accountName": "microsoft-to-do",
      "description": "Deletes a list.",
      "expectJsonc": "[\n    {\n        \"name\": \"list\",\n        \"label\": \"List ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLists\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"help\": \"The default list cannot be deleted.\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "deleteATask": {
      "id": 3839,
      "api": {
        "url": "/me/outlook/tasks/{{parameters.task}}",
        "method": "DELETE",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 2,
      "crud": "delete",
      "name": "deleteATask",
      "epoch": null,
      "flags": {},
      "label": "Delete a Task",
      "scope": [
        "Tasks.ReadWrite"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "task",
          "type": "select",
          "label": "Task ID",
          "options": "rpc://listTasks",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/tasks/{{parameters.task}}\",\n    \"method\": \"DELETE\",\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.ReadWrite\"]",
      "accountName": "microsoft-to-do",
      "description": "Deletes a task.",
      "expectJsonc": "[\n    {\n        \"name\": \"task\",\n        \"label\": \"Task ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listTasks\",\n        \"required\": true,\n        \"mode\": \"edit\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n   \n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "makeApiCall": {
      "id": 3840,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://graph.microsoft.com/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 3,
      "crud": null,
      "name": "makeApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://graph.microsoft.com`.\ne.g.`/v1.0/me`",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "GET",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Headers",
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": [
            {
              "name": "key",
              "type": "text",
              "label": "Key"
            },
            {
              "name": "value",
              "type": "text",
              "label": "Value"
            }
          ],
          "type": "array",
          "label": "Query String"
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"https://graph.microsoft.com/{{parameters.url}}\",\n    \"method\": \"{{parameters.method}}\",\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"response\": {\n        \"output\": {\n            \"headers\": \"{{headers}}\",\n            \"body\": \"{{body}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "microsoft-to-do",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n    {\n        \"name\": \"url\",\n        \"type\": \"text\",\n        \"label\": \"URL\",\n        \"help\": \"Enter a path relative to `https://graph.microsoft.com`.\\ne.g.`/v1.0/me`\",\n        \"required\": true\n    },\n    {\n        \"name\": \"method\",\n        \"type\": \"select\",\n        \"label\": \"Method\",\n        \"required\": true,\n        \"default\": \"GET\",\n        \"options\": [\n            {\n                \"label\": \"GET\",\n                \"value\": \"GET\"\n            },\n            {\n                \"label\": \"POST\",\n                \"value\": \"POST\"\n            },\n            {\n                \"label\": \"PUT\",\n                \"value\": \"PUT\"\n            },\n            {\n                \"label\": \"PATCH\",\n                \"value\": \"PATCH\"\n            },\n            {\n                \"label\": \"DELETE\",\n                \"value\": \"DELETE\"\n            }\n        ]\n    },\n    {\n        \"name\": \"headers\",\n        \"label\": \"Headers\",\n        \"help\": \"You don't have to add authorization headers; we already did that for you.\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ],\n        \"default\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ]\n    },\n    {\n        \"name\": \"qs\",\n        \"label\": \"Query String\",\n        \"type\": \"array\",\n        \"spec\": [\n            {\n                \"name\": \"key\",\n                \"label\": \"Key\",\n                \"type\": \"text\"\n            },\n            {\n                \"name\": \"value\",\n                \"label\": \"Value\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"name\": \"body\",\n        \"label\": \"Body\",\n        \"type\": \"any\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n\t{\n\t\t\"name\": \"body\",\n\t\t\"label\": \"Body\",\n\t\t\"type\": \"any\"\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"type\": \"collection\"\n\t},\n\t{\n\t\t\"name\": \"statusCode\",\n\t\t\"label\": \"Status code\",\n\t\t\"type\": \"number\"\n\t}\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateAList": {
      "id": 3841,
      "api": {
        "url": "/me/outlook/taskFolders/{{parameters.list}}",
        "body": {
          "name": "{{parameters.name}}"
        },
        "method": "PATCH",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 2,
      "crud": "update",
      "name": "updateAList",
      "epoch": null,
      "flags": {},
      "label": "Update a List",
      "scope": [
        "Tasks.ReadWrite"
      ],
      "expect": [
        {
          "help": "The default list cannot be edited.",
          "mode": "edit",
          "name": "list",
          "type": "select",
          "label": "List ID",
          "options": "rpc://listLists",
          "required": true
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/taskFolders/{{parameters.list}}\",\n    \"method\": \"PATCH\",\n    \"body\": {\n        \"name\": \"{{parameters.name}}\"\n        //\"isDefaultFolder\": \"{{parameters.isDefaultFolder}}\"\n    },\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "List ID"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "isDefaultFolder",
          "type": "boolean",
          "label": "Is Default Folder"
        },
        {
          "name": "parentGroupKey",
          "type": "text",
          "label": "Parent Group Key"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.ReadWrite\"]",
      "accountName": "microsoft-to-do",
      "description": "Updates an existing list.",
      "expectJsonc": "[\n    {\n        \"name\": \"list\",\n        \"label\": \"List ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLists\",\n        \"required\": true,\n        \"mode\": \"edit\",\n        \"help\": \"The default list cannot be edited.\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\"\n    }\n    /* {\n        \"name\": \"isDefaultFolder\",\n        \"label\": \"Default List\",\n        \"type\": \"boolean\",\n        \"advanced\": true\n    } */\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"id\",\n        \"label\": \"List ID\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"changeKey\",\n        \"label\": \"Change Key\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"name\",\n        \"label\": \"Name\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"isDefaultFolder\",\n        \"label\": \"Is Default Folder\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"name\": \"parentGroupKey\",\n        \"label\": \"Parent Group Key\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "updateATask": {
      "id": 3842,
      "api": [
        {
          "url": "/me/outlook/tasks/{{parameters.task}}",
          "body": "{{taskRequest(parameters)}}",
          "method": "PATCH",
          "response": {
            "temp": {
              "id": "{{body.id}}"
            },
            "output": "{{taskResponse(body)}}"
          }
        },
        {
          "url": "/me/outlook/tasks/{{temp.id}}/attachments",
          "body": {
            "name": "{{parameters.filename}}",
            "@odata.type": "#microsoft.graph.fileAttachment",
            "contentBytes": "{{base64(parameters.data)}}"
          },
          "method": "POST",
          "response": {
            "output": "{{body}}"
          },
          "condition": "{{parameters.filename && parameters.data}}"
        },
        {
          "url": "/me/outlook/tasks/{{temp.id}}",
          "method": "GET",
          "response": {
            "output": "{{taskResponse(body)}}"
          },
          "condition": "{{parameters.filename && parameters.data}}"
        }
      ],
      "rev": 2,
      "crud": "update",
      "name": "updateATask",
      "epoch": null,
      "flags": {},
      "label": "Update a Task",
      "scope": [
        "MailboxSettings.Read",
        "Tasks.ReadWrite"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "task",
          "type": "select",
          "label": "Task ID",
          "options": "rpc://listTasks",
          "required": true
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "dueDateTime",
          "time": true,
          "type": "date",
          "label": "Due Date Time"
        },
        {
          "name": "reminderDateTime",
          "time": true,
          "type": "date",
          "label": "Reminder Date Time"
        },
        {
          "help": "If left empty, the task is stored at a default list.",
          "name": "list",
          "type": "select",
          "label": "List ID",
          "options": "rpc://listLists"
        },
        {
          "name": "importance",
          "type": "select",
          "label": "Importance",
          "options": [
            {
              "label": "Normal",
              "value": "normal",
              "default": true
            },
            {
              "label": "High",
              "value": "high"
            },
            {
              "label": "Low",
              "value": "low"
            }
          ]
        },
        {
          "name": "note",
          "type": "text",
          "label": "Note"
        },
        {
          "help": "This parameter is compatible only with the on-premise version. i.e. Outlook",
          "name": "categories",
          "type": "select",
          "label": "Categories",
          "options": "rpc://listCategories",
          "advanced": true,
          "multiple": true
        },
        {
          "help": "File name, including the extension, e.g.`invoice.xml`",
          "name": "filename",
          "type": "filename",
          "label": "File Name",
          "advanced": true,
          "semantic": "file:name"
        },
        {
          "name": "data",
          "type": "buffer",
          "label": "Data",
          "advanced": true,
          "semantic": "file:data"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "[\n    {\n        \"url\": \"/me/outlook/tasks/{{parameters.task}}\",\n        \"method\": \"PATCH\",\n        \"body\": \"{{taskRequest(parameters)}}\",\n        \"response\": {\n            \"temp\": {\n                \"id\": \"{{body.id}}\"\n            },\n            \"output\": \"{{taskResponse(body)}}\"\n        }\n    },\n    {\n        \"url\": \"/me/outlook/tasks/{{temp.id}}/attachments\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"@odata.type\": \"#microsoft.graph.fileAttachment\",\n            \"name\": \"{{parameters.filename}}\",\n            \"contentBytes\": \"{{base64(parameters.data)}}\"\n        },\n        \"response\": {\n            \"output\": \"{{body}}\"\n        },\n        \"condition\": \"{{parameters.filename && parameters.data}}\"\n    },\n    {\n        \"url\": \"/me/outlook/tasks/{{temp.id}}\",\n        \"method\": \"GET\",\n        \"response\": {\n            \"output\": \"{{taskResponse(body)}}\"\n        },\n        \"condition\": \"{{parameters.filename && parameters.data}}\"\n    }\n]",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "Etag"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Task ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "categories",
          "type": "array",
          "label": "Categories"
        },
        {
          "name": "assignedTo",
          "type": "text",
          "label": "Assigned To"
        },
        {
          "name": "hasAttachments",
          "type": "boolean",
          "label": "Has Attachments"
        },
        {
          "name": "importance",
          "type": "text",
          "label": "Importance"
        },
        {
          "name": "isReminderOn",
          "type": "boolean",
          "label": "Is Reminder On"
        },
        {
          "name": "owner",
          "type": "text",
          "label": "Owner"
        },
        {
          "name": "parentFolderId",
          "type": "text",
          "label": "Parent Folder ID"
        },
        {
          "name": "sensitivity",
          "type": "text",
          "label": "Sensitivity"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "completedDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Completed Date Time"
        },
        {
          "name": "startDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Start Date Time"
        },
        {
          "name": "body",
          "spec": [
            {
              "name": "contentType",
              "type": "text",
              "label": "Content Type"
            },
            {
              "name": "content",
              "type": "text",
              "label": "Content"
            }
          ],
          "type": "collection",
          "label": "Body"
        },
        {
          "name": "dueDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Due Date Time"
        },
        {
          "name": "recurrence",
          "spec": [
            {
              "name": "pattern",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "interval",
                  "type": "number",
                  "label": "Interval"
                },
                {
                  "name": "month",
                  "type": "number",
                  "label": "Month"
                },
                {
                  "name": "dayOfMonth",
                  "type": "number",
                  "label": "Day Of Month"
                },
                {
                  "name": "firstDayOfWeek",
                  "type": "text",
                  "label": "First Day Of Week"
                },
                {
                  "name": "index",
                  "type": "text",
                  "label": "Index"
                }
              ],
              "type": "collection",
              "label": "Pattern"
            },
            {
              "name": "range",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "startDate",
                  "type": "text",
                  "label": "Start Date"
                },
                {
                  "name": "endDate",
                  "type": "text",
                  "label": "End Date"
                },
                {
                  "name": "recurrenceTimeZone",
                  "type": "text",
                  "label": "Recurrence Time Zone"
                },
                {
                  "name": "numberOfOccurrences",
                  "type": "number",
                  "label": "Number Of Occurrences"
                },
                {
                  "name": "daysOfWeek",
                  "type": "array",
                  "label": "Days Of Week"
                }
              ],
              "type": "collection",
              "label": "Range"
            }
          ],
          "type": "collection",
          "label": "Recurrence"
        },
        {
          "name": "reminderDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Reminder Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"MailboxSettings.Read\",\r\n    \"Tasks.ReadWrite\"]",
      "accountName": "microsoft-to-do",
      "description": "Updates an existing task.",
      "expectJsonc": "[\n    {\n        \"name\": \"task\",\n        \"label\": \"Task ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listTasks\",\n        \"required\": true,\n        \"mode\": \"edit\"\n    },\n    {\n        \"name\": \"subject\",\n        \"label\": \"Subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"dueDateTime\",\n        \"label\": \"Due Date Time\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"reminderDateTime\",\n        \"label\": \"Reminder Date Time\",\n        \"type\": \"date\",\n        \"time\": true\n    },\n    {\n        \"name\": \"list\",\n        \"label\": \"List ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLists\",\n        \"help\": \"If left empty, the task is stored at a default list.\"\n    },\n    {\n        \"name\": \"importance\",\n        \"label\": \"Importance\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Normal\",\n                \"value\": \"normal\",\n                \"default\": true\n            },\n            {\n                \"label\": \"High\",\n                \"value\": \"high\"\n            },\n            {\n                \"label\": \"Low\",\n                \"value\": \"low\"\n            }\n        ]\n    },\n    {\n        \"name\": \"note\",\n        \"label\": \"Note\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"categories\",\n        \"label\": \"Categories\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listCategories\",\n        \"multiple\": true,\n        \"advanced\": true,\n        \"help\": \"This parameter is compatible only with the on-premise version. i.e. Outlook\"\n    },\n    {\n        \"name\": \"filename\",\n        \"type\": \"filename\",\n        \"label\": \"File Name\",\n        \"semantic\": \"file:name\",\n        \"help\": \"File name, including the extension, e.g.`invoice.xml`\",\n        \"advanced\": true\n    },\n    {\n        \"name\": \"data\",\n        \"type\": \"buffer\",\n        \"label\": \"Data\",\n        \"semantic\": \"file:data\",\n        \"advanced\": true\n    }\n    /* {\n        \"name\": \"repeat\",\n        \"label\": \"Repeat\",\n        \"type\": \"select\",\n        \"options\": [\n            {\n                \"label\": \"Daily\",\n                \"value\": \"daily\",\n                \"nested\": [\n                    {\n                        \"name\": \"interval\",\n                        \"label\": \"Number of Days\",\n                        \"type\": \"uinteger\",\n                        \"default\": 1\n                    }\n                ]\n            },\n            {\n                \"label\": \"Weekly\",\n                \"value\": \"weekly\",\n                \"nested\": [\n                    {\n                        \"name\": \"interval\",\n                        \"label\": \"Number of Weeks\",\n                        \"type\": \"uinteger\",\n                        \"default\": 1\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days of Week\",\n                        \"type\": \"select\",\n                        \"multiple\": true,\n                        \"options\": [\n                            {\n                                \"label\": \"Monday\",\n                                \"value\": \"monday\"\n                            },\n                            {\n                                \"label\": \"Tuesday\",\n                                \"value\": \"tuesday\"\n                            },\n                            {\n                                \"label\": \"Wednesday\",\n                                \"value\": \"wednesday\"\n                            },\n                            {\n                                \"label\": \"Thursday\",\n                                \"value\": \"thursday\"\n                            },\n                            {\n                                \"label\": \"Friday\",\n                                \"value\": \"friday\"\n                            },\n                            {\n                                \"label\": \"Saturday\",\n                                \"value\": \"saturday\"\n                            },\n                            {\n                                \"label\": \"Sunday\",\n                                \"value\": \"sunday\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"label\": \"Monthly\",\n                \"value\": \"absoluteMonthly\",\n                \"nested\": [\n                    {\n                        \"name\": \"interval\",\n                        \"label\": \"Number of Months\",\n                        \"type\": \"uinteger\",\n                        \"default\": 1\n                    }\n                ]\n            },\n            {\n                \"label\": \"Yearly\",\n                \"value\": \"absoluteYearly\",\n                \"nested\": [\n                    {\n                        \"name\": \"interval\",\n                        \"label\": \"Number of Years\",\n                        \"type\": \"uinteger\",\n                        \"default\": 1\n                    }\n                ]\n            }\n        ]\n    } */\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Etag\",\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Task ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Created Date Time\",\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Categories\",\n        \"name\": \"categories\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Assigned To\",\n        \"name\": \"assignedTo\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Has Attachments\",\n        \"name\": \"hasAttachments\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Importance\",\n        \"name\": \"importance\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Reminder On\",\n        \"name\": \"isReminderOn\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Owner\",\n        \"name\": \"owner\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Parent Folder ID\",\n        \"name\": \"parentFolderId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Sensitivity\",\n        \"name\": \"sensitivity\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Subject\",\n        \"name\": \"subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Completed Date Time\",\n        \"name\": \"completedDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Start Date Time\",\n        \"name\": \"startDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Body\",\n        \"name\": \"body\",\n        \"spec\": [\n            {\n                \"label\": \"Content Type\",\n                \"name\": \"contentType\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Content\",\n                \"name\": \"content\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Due Date Time\",\n        \"name\": \"dueDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Recurrence\",\n        \"name\": \"recurrence\",\n        \"spec\": [\n            {\n                \"label\": \"Pattern\",\n                \"name\": \"pattern\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Interval\",\n                        \"name\": \"interval\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Month\",\n                        \"name\": \"month\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Day Of Month\",\n                        \"name\": \"dayOfMonth\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"First Day Of Week\",\n                        \"name\": \"firstDayOfWeek\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Index\",\n                        \"name\": \"index\",\n                        \"type\": \"text\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Range\",\n                \"name\": \"range\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Start Date\",\n                        \"name\": \"startDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"End Date\",\n                        \"name\": \"endDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Recurrence Time Zone\",\n                        \"name\": \"recurrenceTimeZone\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Number Of Occurrences\",\n                        \"name\": \"numberOfOccurrences\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days Of Week\",\n                        \"type\": \"array\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Reminder Date Time\",\n        \"name\": \"reminderDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createAGroup": {
      "id": 3843,
      "api": {
        "url": "/me/outlook/taskGroups",
        "body": {
          "name": "{{parameters.name}}"
        },
        "method": "POST",
        "response": {
          "output": "{{body}}"
        }
      },
      "rev": 2,
      "crud": "create",
      "name": "createAGroup",
      "epoch": null,
      "flags": {},
      "label": "Create a Group",
      "scope": [
        "Tasks.ReadWrite"
      ],
      "expect": [
        {
          "name": "name",
          "type": "text",
          "label": "Name",
          "required": true
        }
      ],
      "public": false,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/taskGroups\",\n    \"method\": \"POST\",\n    \"body\": {\n        \"name\": \"{{parameters.name}}\"\n    },\n    \"response\": {\n        \"output\": \"{{body}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "id",
          "type": "text",
          "label": "Group ID"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "isDefaultGroup",
          "type": "boolean",
          "label": "Is Default Group"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "groupKey",
          "type": "text",
          "label": "Group Key"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.ReadWrite\"]",
      "accountName": "microsoft-to-do",
      "description": "Creates a new group.",
      "expectJsonc": "[\n    {\n        \"name\": \"name\",\n        \"type\": \"text\",\n        \"label\": \"Name\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Group ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Default Group\",\n        \"name\": \"isDefaultGroup\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Name\",\n        \"name\": \"name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Group Key\",\n        \"name\": \"groupKey\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "completeATask": {
      "id": 3844,
      "api": {
        "url": "/me/outlook/tasks/{{parameters.task}}/complete",
        "method": "POST",
        "response": {
          "output": "{{taskResponse(body.value[])}}"
        }
      },
      "rev": 2,
      "crud": "create",
      "name": "completeATask",
      "epoch": null,
      "flags": {},
      "label": "Complete a Task",
      "scope": [
        "Tasks.ReadWrite"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "task",
          "type": "select",
          "label": "Task ID",
          "options": "rpc://listTasks",
          "required": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/tasks/{{parameters.task}}/complete\",\n    \"method\": \"POST\",\n    \"response\": {\n        \"output\": \"{{taskResponse(body.value[])}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "Etag"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Task ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "categories",
          "type": "array",
          "label": "Categories"
        },
        {
          "name": "assignedTo",
          "type": "text",
          "label": "Assigned To"
        },
        {
          "name": "hasAttachments",
          "type": "boolean",
          "label": "Has Attachments"
        },
        {
          "name": "importance",
          "type": "text",
          "label": "Importance"
        },
        {
          "name": "isReminderOn",
          "type": "boolean",
          "label": "Is Reminder On"
        },
        {
          "name": "owner",
          "type": "text",
          "label": "Owner"
        },
        {
          "name": "parentFolderId",
          "type": "text",
          "label": "Parent Folder ID"
        },
        {
          "name": "sensitivity",
          "type": "text",
          "label": "Sensitivity"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "completedDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Completed Date Time"
        },
        {
          "name": "startDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Start Date Time"
        },
        {
          "name": "body",
          "spec": [
            {
              "name": "contentType",
              "type": "text",
              "label": "Content Type"
            },
            {
              "name": "content",
              "type": "text",
              "label": "Content"
            }
          ],
          "type": "collection",
          "label": "Body"
        },
        {
          "name": "dueDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Due Date Time"
        },
        {
          "name": "recurrence",
          "spec": [
            {
              "name": "pattern",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "interval",
                  "type": "number",
                  "label": "Interval"
                },
                {
                  "name": "month",
                  "type": "number",
                  "label": "Month"
                },
                {
                  "name": "dayOfMonth",
                  "type": "number",
                  "label": "Day Of Month"
                },
                {
                  "name": "firstDayOfWeek",
                  "type": "text",
                  "label": "First Day Of Week"
                },
                {
                  "name": "index",
                  "type": "text",
                  "label": "Index"
                }
              ],
              "type": "collection",
              "label": "Pattern"
            },
            {
              "name": "range",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "startDate",
                  "type": "text",
                  "label": "Start Date"
                },
                {
                  "name": "endDate",
                  "type": "text",
                  "label": "End Date"
                },
                {
                  "name": "recurrenceTimeZone",
                  "type": "text",
                  "label": "Recurrence Time Zone"
                },
                {
                  "name": "numberOfOccurrences",
                  "type": "number",
                  "label": "Number Of Occurrences"
                },
                {
                  "name": "daysOfWeek",
                  "type": "array",
                  "label": "Days Of Week"
                }
              ],
              "type": "collection",
              "label": "Range"
            }
          ],
          "type": "collection",
          "label": "Recurrence"
        },
        {
          "name": "reminderDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Reminder Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.ReadWrite\"]",
      "accountName": "microsoft-to-do",
      "description": "Completes a task.",
      "expectJsonc": "[\n    {\n        \"name\": \"task\",\n        \"label\": \"Task ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listTasks\",\n        \"required\": true,\n        \"mode\": \"edit\"\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Etag\",\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Task ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Created Date Time\",\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Categories\",\n        \"name\": \"categories\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Assigned To\",\n        \"name\": \"assignedTo\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Has Attachments\",\n        \"name\": \"hasAttachments\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Importance\",\n        \"name\": \"importance\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Reminder On\",\n        \"name\": \"isReminderOn\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Owner\",\n        \"name\": \"owner\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Parent Folder ID\",\n        \"name\": \"parentFolderId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Sensitivity\",\n        \"name\": \"sensitivity\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Subject\",\n        \"name\": \"subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Completed Date Time\",\n        \"name\": \"completedDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Start Date Time\",\n        \"name\": \"startDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Body\",\n        \"name\": \"body\",\n        \"spec\": [\n            {\n                \"label\": \"Content Type\",\n                \"name\": \"contentType\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Content\",\n                \"name\": \"content\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Due Date Time\",\n        \"name\": \"dueDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Recurrence\",\n        \"name\": \"recurrence\",\n        \"spec\": [\n            {\n                \"label\": \"Pattern\",\n                \"name\": \"pattern\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Interval\",\n                        \"name\": \"interval\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Month\",\n                        \"name\": \"month\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Day Of Month\",\n                        \"name\": \"dayOfMonth\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"First Day Of Week\",\n                        \"name\": \"firstDayOfWeek\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Index\",\n                        \"name\": \"index\",\n                        \"type\": \"text\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Range\",\n                \"name\": \"range\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Start Date\",\n                        \"name\": \"startDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"End Date\",\n                        \"name\": \"endDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Recurrence Time Zone\",\n                        \"name\": \"recurrenceTimeZone\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Number Of Occurrences\",\n                        \"name\": \"numberOfOccurrences\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days Of Week\",\n                        \"type\": \"array\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Reminder Date Time\",\n        \"name\": \"reminderDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "addAnAttachment": {
      "id": 3845,
      "api": {
        "url": "/me/outlook/tasks/{{parameters.task}}/attachments",
        "body": {
          "name": "{{parameters.filename}}",
          "@odata.type": "#microsoft.graph.fileAttachment",
          "contentBytes": "{{base64(parameters.data)}}"
        },
        "method": "POST",
        "response": {
          "error": {
            "413": {
              "message": "{{if(body === 'The page was not displayed because the request entity is too large.', 'File cannot be uploaded more than 3MB.', body)}}"
            },
            "500": {
              "message": "File cannot be uploaded more than 3MB."
            },
            "message": "[{{statusCode}}] {{body.error.message}}"
          },
          "output": "{{taskResponse(body)}}"
        }
      },
      "rev": 2,
      "crud": "create",
      "name": "addAnAttachment",
      "epoch": null,
      "flags": {},
      "label": "Add an Attachment",
      "scope": [],
      "expect": [
        {
          "mode": "edit",
          "name": "task",
          "type": "select",
          "label": "Task ID",
          "options": "rpc://listTasks",
          "required": true
        },
        {
          "help": "File name, including the extension, e.g.`invoice.xml`",
          "name": "filename",
          "type": "filename",
          "label": "File Name",
          "required": true,
          "semantic": "file:name"
        },
        {
          "name": "data",
          "type": "buffer",
          "label": "Data",
          "required": true,
          "semantic": "file:data"
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/tasks/{{parameters.task}}/attachments\",\n    \"method\": \"POST\",\n    \"body\": {\n        \"@odata.type\": \"#microsoft.graph.fileAttachment\",\n        \"name\": \"{{parameters.filename}}\",\n        \"contentBytes\": \"{{base64(parameters.data)}}\"\n    },\n    \"response\": {\n        \"output\": \"{{taskResponse(body)}}\",\n        \"error\": {\n            \"413\": {\n                \"message\": \"{{if(body === 'The page was not displayed because the request entity is too large.', 'File cannot be uploaded more than 3MB.', body)}}\"\n            },\n            \"500\": {\n                \"message\": \"File cannot be uploaded more than 3MB.\"\n            },\n            \"message\": \"[{{statusCode}}] {{body.error.message}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "Etag"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Task ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "categories",
          "type": "array",
          "label": "Categories"
        },
        {
          "name": "assignedTo",
          "type": "text",
          "label": "Assigned To"
        },
        {
          "name": "hasAttachments",
          "type": "boolean",
          "label": "Has Attachments"
        },
        {
          "name": "importance",
          "type": "text",
          "label": "Importance"
        },
        {
          "name": "isReminderOn",
          "type": "boolean",
          "label": "Is Reminder On"
        },
        {
          "name": "owner",
          "type": "text",
          "label": "Owner"
        },
        {
          "name": "parentFolderId",
          "type": "text",
          "label": "Parent Folder ID"
        },
        {
          "name": "sensitivity",
          "type": "text",
          "label": "Sensitivity"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "completedDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Completed Date Time"
        },
        {
          "name": "startDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Start Date Time"
        },
        {
          "name": "body",
          "spec": [
            {
              "name": "contentType",
              "type": "text",
              "label": "Content Type"
            },
            {
              "name": "content",
              "type": "text",
              "label": "Content"
            }
          ],
          "type": "collection",
          "label": "Body"
        },
        {
          "name": "dueDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Due Date Time"
        },
        {
          "name": "recurrence",
          "spec": [
            {
              "name": "pattern",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "interval",
                  "type": "number",
                  "label": "Interval"
                },
                {
                  "name": "month",
                  "type": "number",
                  "label": "Month"
                },
                {
                  "name": "dayOfMonth",
                  "type": "number",
                  "label": "Day Of Month"
                },
                {
                  "name": "firstDayOfWeek",
                  "type": "text",
                  "label": "First Day Of Week"
                },
                {
                  "name": "index",
                  "type": "text",
                  "label": "Index"
                }
              ],
              "type": "collection",
              "label": "Pattern"
            },
            {
              "name": "range",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "startDate",
                  "type": "text",
                  "label": "Start Date"
                },
                {
                  "name": "endDate",
                  "type": "text",
                  "label": "End Date"
                },
                {
                  "name": "recurrenceTimeZone",
                  "type": "text",
                  "label": "Recurrence Time Zone"
                },
                {
                  "name": "numberOfOccurrences",
                  "type": "number",
                  "label": "Number Of Occurrences"
                },
                {
                  "name": "daysOfWeek",
                  "type": "array",
                  "label": "Days Of Week"
                }
              ],
              "type": "collection",
              "label": "Range"
            }
          ],
          "type": "collection",
          "label": "Recurrence"
        },
        {
          "name": "reminderDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Reminder Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "microsoft-to-do",
      "description": "Adds an attachment to a Microsoft To-do Task (The file must not be larger than 3MB).",
      "expectJsonc": "[\n    {\n        \"name\": \"task\",\n        \"label\": \"Task ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listTasks\",\n        \"required\": true,\n        \"mode\": \"edit\"\n    },\n    {\n        \"name\": \"filename\",\n        \"type\": \"filename\",\n        \"label\": \"File Name\",\n        \"semantic\": \"file:name\",\n        \"help\": \"File name, including the extension, e.g.`invoice.xml`\",\n        \"required\": true\n    },\n    {\n        \"name\": \"data\",\n        \"type\": \"buffer\",\n        \"label\": \"Data\",\n        \"semantic\": \"file:data\",\n        \"required\": true\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Etag\",\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Task ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Created Date Time\",\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Categories\",\n        \"name\": \"categories\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Assigned To\",\n        \"name\": \"assignedTo\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Has Attachments\",\n        \"name\": \"hasAttachments\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Importance\",\n        \"name\": \"importance\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Reminder On\",\n        \"name\": \"isReminderOn\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Owner\",\n        \"name\": \"owner\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Parent Folder ID\",\n        \"name\": \"parentFolderId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Sensitivity\",\n        \"name\": \"sensitivity\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Subject\",\n        \"name\": \"subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Completed Date Time\",\n        \"name\": \"completedDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Start Date Time\",\n        \"name\": \"startDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Body\",\n        \"name\": \"body\",\n        \"spec\": [\n            {\n                \"label\": \"Content Type\",\n                \"name\": \"contentType\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Content\",\n                \"name\": \"content\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Due Date Time\",\n        \"name\": \"dueDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Recurrence\",\n        \"name\": \"recurrence\",\n        \"spec\": [\n            {\n                \"label\": \"Pattern\",\n                \"name\": \"pattern\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Interval\",\n                        \"name\": \"interval\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Month\",\n                        \"name\": \"month\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Day Of Month\",\n                        \"name\": \"dayOfMonth\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"First Day Of Week\",\n                        \"name\": \"firstDayOfWeek\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Index\",\n                        \"name\": \"index\",\n                        \"type\": \"text\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Range\",\n                \"name\": \"range\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Start Date\",\n                        \"name\": \"startDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"End Date\",\n                        \"name\": \"endDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Recurrence Time Zone\",\n                        \"name\": \"recurrenceTimeZone\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Number Of Occurrences\",\n                        \"name\": \"numberOfOccurrences\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days Of Week\",\n                        \"type\": \"array\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Reminder Date Time\",\n        \"name\": \"reminderDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listAttachments": {
      "id": 3846,
      "api": {
        "qs": {
          "$top": 500
        },
        "url": "/me/outlook/tasks/{{parameters.task}}/attachments",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{taskResponse(item)}}",
          "iterate": "{{body.value}}"
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "listAttachments",
      "epoch": null,
      "flags": {},
      "label": "List Attachments",
      "scope": [
        "Tasks.Read"
      ],
      "expect": [
        {
          "mode": "edit",
          "name": "task",
          "type": "select",
          "label": "Task ID",
          "options": "rpc://listTasks",
          "required": true
        },
        {
          "help": "Maximum number of results.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/tasks/{{parameters.task}}/attachments\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"$top\": 500\n    },\n    \"response\": {\n        \"output\": \"{{taskResponse(item)}}\",\n        \"iterate\": \"{{body.value}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.type",
          "type": "text",
          "label": "Type"
        },
        {
          "name": "@odata.mediaContentType",
          "type": "text",
          "label": "Media Content Type"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Attachment ID"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "name",
          "type": "text",
          "label": "Name"
        },
        {
          "name": "contentType",
          "type": "text",
          "label": "Content Type"
        },
        {
          "name": "size",
          "type": "number",
          "label": "Size"
        },
        {
          "name": "isInline",
          "type": "boolean",
          "label": "Is Inline"
        },
        {
          "name": "contentId",
          "type": "text",
          "label": "Content ID"
        },
        {
          "name": "contentLocation",
          "type": "text",
          "label": "Content Location"
        },
        {
          "name": "contentBytes",
          "type": "text",
          "label": "Content Bytes"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\"Tasks.Read\"\r\n]",
      "accountName": "microsoft-to-do",
      "description": "Get a list of attachment objects attached to an Outlook task.",
      "expectJsonc": "[\n    {\n        \"name\": \"task\",\n        \"label\": \"Task ID\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listTasks\",\n        \"required\": true,\n        \"mode\": \"edit\"\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"help\": \"Maximum number of results.\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Type\",\n        \"name\": \"@odata.type\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Media Content Type\",\n        \"name\": \"@odata.mediaContentType\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Attachment ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Name\",\n        \"name\": \"name\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Content Type\",\n        \"name\": \"contentType\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Size\",\n        \"name\": \"size\",\n        \"type\": \"number\"\n    },\n    {\n        \"label\": \"Is Inline\",\n        \"name\": \"isInline\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Content ID\",\n        \"name\": \"contentId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Content Location\",\n        \"name\": \"contentLocation\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Content Bytes\",\n        \"name\": \"contentBytes\",\n        \"type\": \"text\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "listOverdueTasks": {
      "id": 3847,
      "api": {
        "qs": {
          "$top": 500,
          "$filter": "{{filterTeams(parameters.filter)}}"
        },
        "url": "/me/outlook/{{if(parameters.list, 'taskFolders/' +parameters.list+ '/')}}tasks",
        "method": "GET",
        "response": {
          "limit": "{{parameters.limit}}",
          "output": "{{taskResponse(item)}}",
          "iterate": "{{overdueTaskResponse(body.value, parameters.orderby)}}"
        },
        "pagination": {
          "url": "{{body.`@odata.nextLink`}}",
          "condition": "{{ifempty(body.`@odata.nextLink`, false)}}"
        }
      },
      "rev": 2,
      "crud": "read",
      "name": "listOverdueTasks",
      "epoch": null,
      "flags": {},
      "label": "Search Overdue Tasks",
      "scope": [
        "Tasks.Read"
      ],
      "expect": [
        {
          "name": "filter",
          "type": "filter",
          "label": "Filter",
          "options": {
            "store": [
              {
                "label": "Subject",
                "value": "subject"
              },
              {
                "label": "Last Modified Date Time",
                "value": "lastModifiedDateTime"
              },
              {
                "label": "Created Date Time",
                "value": "createdDateTime"
              }
            ],
            "operators": [
              {
                "label": "Available operators",
                "options": [
                  {
                    "label": "Starts with",
                    "value": "startsWith"
                  },
                  {
                    "label": "Equals",
                    "value": "eq"
                  },
                  {
                    "label": "Not equals",
                    "value": "ne"
                  },
                  {
                    "label": "Greater than",
                    "value": "gt"
                  },
                  {
                    "label": "Greater than or equals",
                    "value": "ge"
                  },
                  {
                    "label": "Less than",
                    "value": "lt"
                  },
                  {
                    "label": "Less than or equals",
                    "value": "le"
                  }
                ]
              }
            ]
          }
        },
        {
          "help": "Lists tasks in a selected list.",
          "name": "list",
          "type": "select",
          "label": "List",
          "options": "rpc://listLists"
        },
        {
          "name": "orderby",
          "type": "select",
          "label": "Order by",
          "options": [
            {
              "label": "Due Date Acending",
              "value": "asc"
            },
            {
              "label": "Due Date Descending",
              "value": "desc",
              "default": true
            }
          ],
          "mappable": false
        },
        {
          "help": "Maximum number of results.",
          "name": "limit",
          "type": "uinteger",
          "label": "Limit",
          "default": 10
        }
      ],
      "public": true,
      "typeId": 9,
      "appName": "microsoft-to-do",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/me/outlook/{{if(parameters.list, 'taskFolders/' +parameters.list+ '/')}}tasks\",\n    \"method\": \"GET\",\n    \"qs\": {\n        \"$top\": 500,\n        \"$filter\": \"{{filterTeams(parameters.filter)}}\"\n    },\n    \"response\": {\n        \"output\": \"{{taskResponse(item)}}\",\n        \"iterate\": \"{{overdueTaskResponse(body.value, parameters.orderby)}}\",\n        \"limit\": \"{{parameters.limit}}\"\n    },\n    \"pagination\": {\n        \"url\": \"{{body.`@odata.nextLink`}}\",\n        \"condition\": \"{{ifempty(body.`@odata.nextLink`, false)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "@odata.etag",
          "type": "text",
          "label": "Etag"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Task ID"
        },
        {
          "name": "createdDateTime",
          "type": "date",
          "label": "Created Date Time"
        },
        {
          "name": "lastModifiedDateTime",
          "type": "date",
          "label": "Last Modified Date Time"
        },
        {
          "name": "changeKey",
          "type": "text",
          "label": "Change Key"
        },
        {
          "name": "categories",
          "type": "array",
          "label": "Categories"
        },
        {
          "name": "assignedTo",
          "type": "text",
          "label": "Assigned To"
        },
        {
          "name": "hasAttachments",
          "type": "boolean",
          "label": "Has Attachments"
        },
        {
          "name": "importance",
          "type": "text",
          "label": "Importance"
        },
        {
          "name": "isReminderOn",
          "type": "boolean",
          "label": "Is Reminder On"
        },
        {
          "name": "owner",
          "type": "text",
          "label": "Owner"
        },
        {
          "name": "parentFolderId",
          "type": "text",
          "label": "Parent Folder ID"
        },
        {
          "name": "sensitivity",
          "type": "text",
          "label": "Sensitivity"
        },
        {
          "name": "status",
          "type": "text",
          "label": "Status"
        },
        {
          "name": "subject",
          "type": "text",
          "label": "Subject"
        },
        {
          "name": "completedDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Completed Date Time"
        },
        {
          "name": "startDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Start Date Time"
        },
        {
          "name": "body",
          "spec": [
            {
              "name": "contentType",
              "type": "text",
              "label": "Content Type"
            },
            {
              "name": "content",
              "type": "text",
              "label": "Content"
            }
          ],
          "type": "collection",
          "label": "Body"
        },
        {
          "name": "dueDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Due Date Time"
        },
        {
          "name": "recurrence",
          "spec": [
            {
              "name": "pattern",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "interval",
                  "type": "number",
                  "label": "Interval"
                },
                {
                  "name": "month",
                  "type": "number",
                  "label": "Month"
                },
                {
                  "name": "dayOfMonth",
                  "type": "number",
                  "label": "Day Of Month"
                },
                {
                  "name": "firstDayOfWeek",
                  "type": "text",
                  "label": "First Day Of Week"
                },
                {
                  "name": "index",
                  "type": "text",
                  "label": "Index"
                },
                {
                  "name": "daysOfWeek",
                  "type": "array",
                  "label": "Days Of Week"
                }
              ],
              "type": "collection",
              "label": "Pattern"
            },
            {
              "name": "range",
              "spec": [
                {
                  "name": "type",
                  "type": "text",
                  "label": "Type"
                },
                {
                  "name": "startDate",
                  "type": "text",
                  "label": "Start Date"
                },
                {
                  "name": "endDate",
                  "type": "text",
                  "label": "End Date"
                },
                {
                  "name": "recurrenceTimeZone",
                  "type": "text",
                  "label": "Recurrence Time Zone"
                },
                {
                  "name": "numberOfOccurrences",
                  "type": "number",
                  "label": "Number Of Occurrences"
                }
              ],
              "type": "collection",
              "label": "Range"
            }
          ],
          "type": "collection",
          "label": "Recurrence"
        },
        {
          "name": "reminderDateTime",
          "spec": [
            {
              "name": "dateTime",
              "type": "date",
              "label": "Date Time"
            },
            {
              "name": "timeZone",
              "type": "text",
              "label": "Time Zone"
            }
          ],
          "type": "collection",
          "label": "Reminder Date Time"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\r\n    \"Tasks.Read\"\r\n]",
      "accountName": "microsoft-to-do",
      "description": "Searches for overdue Microsoft To-do tasks with a filter.",
      "expectJsonc": "[\n    {\n        \"name\": \"filter\",\n        \"label\": \"Filter\",\n        \"type\": \"filter\",\n        \"options\": {\n            \"store\": [\n                {\n                    \"label\": \"Subject\",\n                    \"value\": \"subject\"\n                },\n                {\n                    \"label\": \"Last Modified Date Time\",\n                    \"value\": \"lastModifiedDateTime\"\n                },\n                {\n                    \"label\": \"Created Date Time\",\n                    \"value\": \"createdDateTime\"\n                }\n            ],\n            \"operators\": [\n                {\n                    \"label\": \"Available operators\",\n                    \"options\": [\n                        {\n                            \"label\": \"Starts with\",\n                            \"value\": \"startsWith\"\n                        },\n                        {\n                            \"label\": \"Equals\",\n                            \"value\": \"eq\"\n                        },\n                        {\n                            \"label\": \"Not equals\",\n                            \"value\": \"ne\"\n                        },\n                        {\n                            \"label\": \"Greater than\",\n                            \"value\": \"gt\"\n                        },\n                        {\n                            \"label\": \"Greater than or equals\",\n                            \"value\": \"ge\"\n                        },\n                        {\n                            \"label\": \"Less than\",\n                            \"value\": \"lt\"\n                        },\n                        {\n                            \"label\": \"Less than or equals\",\n                            \"value\": \"le\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    {\n        \"name\": \"list\",\n        \"label\": \"List\",\n        \"type\": \"select\",\n        \"options\": \"rpc://listLists\",\n        \"help\": \"Lists tasks in a selected list.\"\n    },\n    {\n        \"name\": \"orderby\",\n        \"label\": \"Order by\",\n        \"type\": \"select\",\n        \"mappable\": false,\n        \"options\": [\n            {\n                \"label\": \"Due Date Acending\",\n                \"value\": \"asc\"\n            },\n            {\n                \"label\": \"Due Date Descending\",\n                \"value\": \"desc\",\n                \"default\": true\n            }\n        ]\n    },\n    {\n        \"name\": \"limit\",\n        \"label\": \"Limit\",\n        \"type\": \"uinteger\",\n        \"help\": \"Maximum number of results.\",\n        \"default\": 10\n    }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"label\": \"Etag\",\n        \"name\": \"@odata.etag\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Task ID\",\n        \"name\": \"id\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Created Date Time\",\n        \"name\": \"createdDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Last Modified Date Time\",\n        \"name\": \"lastModifiedDateTime\",\n        \"type\": \"date\"\n    },\n    {\n        \"label\": \"Change Key\",\n        \"name\": \"changeKey\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Categories\",\n        \"name\": \"categories\",\n        \"type\": \"array\"\n    },\n    {\n        \"label\": \"Assigned To\",\n        \"name\": \"assignedTo\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Has Attachments\",\n        \"name\": \"hasAttachments\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Importance\",\n        \"name\": \"importance\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Is Reminder On\",\n        \"name\": \"isReminderOn\",\n        \"type\": \"boolean\"\n    },\n    {\n        \"label\": \"Owner\",\n        \"name\": \"owner\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Parent Folder ID\",\n        \"name\": \"parentFolderId\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Sensitivity\",\n        \"name\": \"sensitivity\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Status\",\n        \"name\": \"status\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Subject\",\n        \"name\": \"subject\",\n        \"type\": \"text\"\n    },\n    {\n        \"label\": \"Completed Date Time\",\n        \"name\": \"completedDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Start Date Time\",\n        \"name\": \"startDateTime\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ]\n    },\n    {\n        \"label\": \"Body\",\n        \"name\": \"body\",\n        \"spec\": [\n            {\n                \"label\": \"Content Type\",\n                \"name\": \"contentType\",\n                \"type\": \"text\"\n            },\n            {\n                \"label\": \"Content\",\n                \"name\": \"content\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Due Date Time\",\n        \"name\": \"dueDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Recurrence\",\n        \"name\": \"recurrence\",\n        \"spec\": [\n            {\n                \"label\": \"Pattern\",\n                \"name\": \"pattern\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Interval\",\n                        \"name\": \"interval\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Month\",\n                        \"name\": \"month\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"Day Of Month\",\n                        \"name\": \"dayOfMonth\",\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"label\": \"First Day Of Week\",\n                        \"name\": \"firstDayOfWeek\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Index\",\n                        \"name\": \"index\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"name\": \"daysOfWeek\",\n                        \"label\": \"Days Of Week\",\n                        \"type\": \"array\"\n                    }\n                ],\n                \"type\": \"collection\"\n            },\n            {\n                \"label\": \"Range\",\n                \"name\": \"range\",\n                \"spec\": [\n                    {\n                        \"label\": \"Type\",\n                        \"name\": \"type\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Start Date\",\n                        \"name\": \"startDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"End Date\",\n                        \"name\": \"endDate\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Recurrence Time Zone\",\n                        \"name\": \"recurrenceTimeZone\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"label\": \"Number Of Occurrences\",\n                        \"name\": \"numberOfOccurrences\",\n                        \"type\": \"number\"\n                    }\n                ],\n                \"type\": \"collection\"\n            }\n        ],\n        \"type\": \"collection\"\n    },\n    {\n        \"label\": \"Reminder Date Time\",\n        \"name\": \"reminderDateTime\",\n        \"spec\": [\n            {\n                \"label\": \"Date Time\",\n                \"name\": \"dateTime\",\n                \"type\": \"date\"\n            },\n            {\n                \"label\": \"Time Zone\",\n                \"name\": \"timeZone\",\n                \"type\": \"text\"\n            }\n        ],\n        \"type\": \"collection\"\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "microsoft-to-do": {
      "api": {
        "info": {
          "log": {
            "sanitize": [
              "request.headers.authorization"
            ]
          },
          "url": "https://graph.microsoft.com/v1.0/me/",
          "headers": {
            "authorization": "Bearer {{connection.accessToken}}"
          },
          "response": {
            "uid": "{{body.id}}",
            "error": {
              "message": "[{{statusCode}}] {{body.error.message}}"
            },
            "metadata": {
              "type": "text",
              "value": "{{body.displayName}}"
            }
          }
        },
        "token": {
          "log": {
            "sanitize": [
              "request.body.code",
              "request.body.client_secret",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
          "body": {
            "code": "{{temp.code}}",
            "scope": "{{join(oauth.scope, ' ')}}",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "authorization_code",
            "redirect_uri": "{{oauth.redirectUri}}",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            }
          }
        },
        "refresh": {
          "log": {
            "sanitize": [
              "request.body.client_secret",
              "request.body.refresh_token",
              "response.body.access_token",
              "response.body.refresh_token"
            ]
          },
          "url": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
          "body": {
            "scope": "{{join(oauth.scope, ' ')}}",
            "resource": "https://graph.windows.net",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "grant_type": "refresh_token",
            "client_secret": "{{ifempty(parameters.clientSecret, common.clientSecret)}}",
            "refresh_token": "{{data.refreshToken}}"
          },
          "type": "urlencoded",
          "method": "POST",
          "response": {
            "data": {
              "expires": "{{addSeconds(now, body.expires_in)}}",
              "accessToken": "{{body.access_token}}",
              "refreshToken": "{{body.refresh_token}}"
            }
          },
          "condition": "{{data.expires < addMinutes(now, 1)}}"
        },
        "authorize": {
          "qs": {
            "scope": "{{join(oauth.scope, ' ')}}",
            "prompt": "consent",
            "client_id": "{{ifempty(parameters.clientId, common.clientId)}}",
            "redirect_uri": "{{oauth.redirectUri}}",
            "response_mode": "query",
            "response_type": "code"
          },
          "url": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
          "response": {
            "temp": {
              "code": "{{query.code}}"
            }
          }
        }
      },
      "rev": 3,
      "name": "microsoft-to-do",
      "type": "oauth",
      "label": "Microsoft To-Do",
      "scope": [
        "email",
        "offline_access",
        "openid",
        "profile",
        "Tasks.Read",
        "User.Read"
      ],
      "scopes": {},
      "aliasTo": "azure",
      "appName": "microsoft-to-do",
      "install": {
        "common": {
          "clientId": "{{parameters.clientId}}",
          "clientSecret": "{{parameters.clientSecret}}"
        }
      },
      "apiJsonc": "{\n    \"authorize\": {\n        \"qs\": {\n            \"scope\": \"{{join(oauth.scope, ' ')}}\",\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"redirect_uri\": \"{{oauth.redirectUri}}\",\n            \"response_type\": \"code\",\n            \"response_mode\": \"query\",\n            \"prompt\": \"consent\"\n        },\n        \"url\": \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n        \"response\": {\n            \"temp\": {\n                \"code\": \"{{query.code}}\"\n            }\n        }\n    },\n    \"token\": {\n        \"url\": \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"scope\": \"{{join(oauth.scope, ' ')}}\",\n            \"code\": \"{{temp.code}}\",\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"grant_type\": \"authorization_code\",\n            \"redirect_uri\": \"{{oauth.redirectUri}}\",\n            \"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\"\n        },\n        \"type\": \"urlencoded\",\n        \"response\": {\n            \"data\": {\n                \"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n                \"accessToken\": \"{{body.access_token}}\",\n                \"refreshToken\": \"{{body.refresh_token}}\"\n            }\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.body.code\",\n                \"request.body.client_secret\",\n                \"response.body.access_token\",\n                \"response.body.refresh_token\"\n            ]\n        }\n    },\n    \"refresh\": {\n        \"condition\": \"{{data.expires < addMinutes(now, 1)}}\",\n        \"url\": \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"client_id\": \"{{ifempty(parameters.clientId, common.clientId)}}\",\n            \"scope\": \"{{join(oauth.scope, ' ')}}\",\n            \"grant_type\": \"refresh_token\",\n            \"client_secret\": \"{{ifempty(parameters.clientSecret, common.clientSecret)}}\",\n            \"refresh_token\": \"{{data.refreshToken}}\",\n            \"resource\": \"https://graph.windows.net\"\n        },\n        \"type\": \"urlencoded\",\n        \"response\": {\n            \"data\": {\n                \"expires\": \"{{addSeconds(now, body.expires_in)}}\",\n                \"accessToken\": \"{{body.access_token}}\",\n                \"refreshToken\": \"{{body.refresh_token}}\"\n            }\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.body.client_secret\",\n                \"request.body.refresh_token\",\n                \"response.body.access_token\",\n                \"response.body.refresh_token\"\n            ]\n        }\n    },\n    \"info\": {\n        \"url\": \"https://graph.microsoft.com/v1.0/me/\",\n        \"headers\": {\n            \"authorization\": \"Bearer {{connection.accessToken}}\"\n        },\n        \"response\": {\n            \"uid\": \"{{body.id}}\",\n            \"metadata\": {\n                \"type\": \"text\",\n                \"value\": \"{{body.displayName}}\"\n            },\n            \"error\": {\n                \"message\": \"[{{statusCode}}] {{body.error.message}}\"\n            }\n        },\n        \"log\": {\n            \"sanitize\": [\n                \"request.headers.authorization\"\n            ]\n        }\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "advanced": true
        },
        {
          "name": "clientSecret",
          "type": "text",
          "label": "Client Secret",
          "advanced": true
        }
      ],
      "scopeJsonc": "[\"email\",\"offline_access\",\"openid\",\"profile\",\"Tasks.Read\",\"User.Read\"]",
      "installSpec": [
        {
          "name": "clientId",
          "type": "text",
          "label": "Client ID",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "text",
          "label": "Client Secret",
          "required": true
        }
      ],
      "scopesJsonc": "{\n}",
      "installJsonc": "{\n    \"common\": {\n        \"clientId\": \"{{parameters.clientId}}\",\n        \"clientSecret\": \"{{parameters.clientSecret}}\"\n    }\n}",
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"advanced\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"text\",\n        \"label\": \"Client Secret\",\n        \"advanced\": true\n    }\n]",
      "installSpecJsonc": "[\n    {\n        \"name\": \"clientId\",\n        \"type\": \"text\",\n        \"label\": \"Client ID\",\n        \"required\": true\n    },\n    {\n        \"name\": \"clientSecret\",\n        \"type\": \"text\",\n        \"label\": \"Client Secret\",\n        \"required\": true\n    }\n]",
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"https://graph.microsoft.com/beta\",\n    \"headers\": {\n        \"Authorization\": \"Bearer {{connection.accessToken}}\"\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.authorization\"\n        ]\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.error.message}}\"\n        }\n    }\n}",
  "countries": null,
  "_functions": {
    "filterTeams": {
      "rev": 2,
      "code": "function filterTeams(filter) {\n\n    if(!filter) return;\n\n    return filter.map(or => {\n        return or.map(and => {\n            if(!(and.a)||!(and.b)||!(and.o)) return;\n\n            if (and.o === 'startsWith') {\n                return `startsWith(${and.a}, '${and.b}')`;\n            }\n\n            else if (and.a === 'createdDateTime' || and.a === 'lastModifiedDateTime') {\n                return `${and.a} ${and.o} ${iml.formatDate(and.b, 'YYYY-MM-DDTHH:mm:ss.SSSSSSS')}Z`\n            }\n\n            return `${and.a} ${and.o} '${and.b}'`\n        }).join(' and ');\n    }).join(' or ');\n\n}",
      "name": "filterTeams",
      "test": null,
      "appName": "microsoft-to-do",
      "arguments": "(filter)",
      "appVersion": 1
    },
    "taskRequest": {
      "rev": 2,
      "code": "function taskRequest(parameter) {\n\n    let body = {};\n\n    body.subject = parameter.subject;\n    body.isReminderOn = iml.if(parameter.reminderDateTime, true, false);\n\n    if (parameter.note) {\n        body.body = {\n            contentType: \"Text\",\n            content: parameter.note\n        };\n    }\n    if (parameter.categories) {\n        body.categories = parameter.categories;\n    }\n\n    if (parameter.startDateTime) {\n        body.startDateTime = {\n            dateTime: iml.parseDate(parameter.startDateTime),\n            timeZone: \"UTC\"\n        };\n    }\n\n    if (parameter.dueDateTime) {\n        body.dueDateTime = {\n            dateTime: iml.parseDate(parameter.dueDateTime),\n            timeZone: \"UTC\"\n        };\n    }\n\n    if (parameter.reminderDateTime) {\n        body.reminderDateTime = {\n            dateTime: iml.parseDate(parameter.reminderDateTime),\n            timeZone: \"UTC\"\n        };\n    }\n\n    if(parameter.list) {\n        body.parentFolderId = parameter.list;\n    }\n\n    if(parameter.importance) {\n        body.importance = parameter.importance;\n    }\n\n    /* if (parameter.repeat === 'weekly') {\n        if (parameter.daysOfWeek) {\n            body.recurrence = {\n                pattern: {\n                    type: parameter.repeat,\n                    interval: parameter.interval,\n                    daysOfWeek: parameter.daysOfWeek\n                },\n                range: {\n                    type: 'noEnd',\n                    startDate: iml.formatDate(iml.if(parameter.dueDateTime, parameter.dueDateTime, new Date()), 'YYYY-MM-DD'),\n                    endDate: '0001-01-01'\n                }\n            };\n        }\n        else {\n            body.recurrence = {\n                pattern: {\n                    type: parameter.repeat,\n                    interval: parameter.interval\n                },\n                range: {\n                    type: 'noEnd',\n                    startDate: iml.formatDate(iml.if(parameter.dueDateTime, parameter.dueDateTime, new Date()), 'YYYY-MM-DD')\n                }\n            };\n        }\n    }\n\n    else if (parameter.repeat === 'daily') {\n        body.recurrence = {\n            pattern: {\n                type: parameter.repeat,\n                interval: parameter.interval\n            },\n            range: {\n                type: 'noEnd',\n                startDate: iml.formatDate(iml.if(parameter.dueDateTime, parameter.dueDateTime, new Date()), 'YYYY-MM-DD')\n            }\n        };\n    }\n\n    else if (parameter.repeat === 'absoluteMonthly') {\n        body.recurrence = {\n            pattern: {\n                type: parameter.repeat,\n                interval: parameter.interval,\n                month: 0,\n                dayOfMonth: 4\n            },\n            range: {\n                type: 'noEnd',\n                startDate: iml.formatDate(iml.if(parameter.dueDateTime, parameter.dueDateTime, new Date()), 'YYYY-MM-DD')\n            }\n        };\n    } */\n\n    return body;\n}",
      "name": "taskRequest",
      "test": null,
      "appName": "microsoft-to-do",
      "arguments": "(parameter)",
      "appVersion": 1
    },
    "taskResponse": {
      "rev": 2,
      "code": "function taskResponse(item) {\n\n    if (item.createdDateTime) {\n\n        item.createdDateTime = iml.parseDate(item.createdDateTime);\n    }\n\n    if (item.lastModifiedDateTime) {\n\n        item.lastModifiedDateTime = iml.parseDate(item.lastModifiedDateTime);\n    }\n\n    if (item.dueDateTime) {\n        item.dueDateTime.dateTime = iml.parseDate(item.dueDateTime.dateTime);\n    }\n    if (item.reminderDateTime) {\n        item.reminderDateTime.dateTime = iml.parseDate(item.reminderDateTime.dateTime);\n    }\n    if (item.completedDateTime) {\n        item.completedDateTime.dateTime = iml.parseDate(item.completedDateTime.dateTime);\n    }\n    if (item.dueDateTime) {\n        item.dueDateTime.dateTime = iml.parseDate(item.dueDateTime.dateTime);\n    }\n    if (item.startDateTime) {\n        item.startDateTime.dateTime = iml.parseDate(item.startDateTime.dateTime);\n    }\n\n    return item;\n}",
      "name": "taskResponse",
      "test": null,
      "appName": "microsoft-to-do",
      "arguments": "(item)",
      "appVersion": 1
    },
    "filterWatchTask": {
      "rev": 2,
      "code": "function filterWatchTask(body, param) {\n\n    let arr = [];\n\n    body.forEach(item => {\n        \n        if(param.select === 'due' && !item.dueDateTime){\n            return;\n        }\n        else if (param.select === 'complete' && !item.completedDateTime) {\n            return;\n        }\n        else {\n            arr.push(item);\n        }\n    });\n    return arr;\n}",
      "name": "filterWatchTask",
      "test": null,
      "appName": "microsoft-to-do",
      "arguments": "(body, param)",
      "appVersion": 1
    },
    "overdueTaskResponse": {
      "rev": 2,
      "code": "function overdueTaskResponse(body, order) {\n\n    let arr = [];\n    var now = new Date();\n\n    body.forEach(item => {\n\n        if (item.dueDateTime) {\n            if (iml.parseDate(item.dueDateTime.dateTime) < iml.parseDate(now)) {\n                if(item.status != 'completed') {\n                    arr.push(item);\n                }\n            }\n        }\n\n    });\n\n    if (order) {\n        return arr.sort(function (a, b) {\n            if (order === 'desc') {\n                if (a.dueDateTime.dateTime > b.dueDateTime.dateTime) {\n                    return -1;\n                }\n                if (a.dueDateTime.dateTime < b.dueDateTime.dateTime) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a.dueDateTime.dateTime > b.dueDateTime.dateTime) {\n                    return 1;\n                }\n                if (a.dueDateTime.dateTime < b.dueDateTime.dateTime) {\n                    return -1;\n                }\n                return 0;\n            }\n        });\n    }\n    else return arr;\n}",
      "name": "overdueTaskResponse",
      "test": null,
      "appName": "microsoft-to-do",
      "arguments": "(body, order)",
      "appVersion": 1
    }
  },
  "approvedAt": "2022-02-21T23:55:40.686155+00:00",
  "categories": [],
  "opensource": false,
  "description": null,
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [],
  "inviteToken": "333256406951a2dc811903717b7cb436",
  "versionFull": "1.4.1",
  "compiledName": "microsoft-to-do",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n}",
  "manifestVersion": 2,
  "compilationError": "Failed to publish compiled app. Response status 502. <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n",
  "installSpecJsonc": "[\n]"
}
