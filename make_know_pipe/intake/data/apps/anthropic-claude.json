{
  "rev": 56,
  "base": {
    "log": {
      "sanitize": [
        "request.headers.x-api-key"
      ]
    },
    "method": "POST",
    "baseUrl": "https://api.anthropic.com/v1",
    "headers": {
      "x-api-key": "{{connection.apiKey}}",
      "anthropic-version": "2023-06-01"
    },
    "timeout": "{{common.timeout || 40000}}",
    "response": {
      "error": {
        "429": {
          "type": "RateLimitError",
          "message": "[{{statusCode}}] {{body.error.message || 'Too many requests.'}}"
        },
        "message": "[{{statusCode}}] {{body.error.message}} {{if(body.error.type == 'not_found_error', 'not found!', '')}}"
      }
    }
  },
  "beta": false,
  "docs": null,
  "name": "anthropic-claude",
  "_rpcs": {
    "listModels": {
      "api": {
        "qs": {
          "limit": 100
        },
        "url": "/models",
        "method": "GET",
        "response": {
          "output": {
            "label": "{{item.display_name}}",
            "value": "{{item.id}}"
          },
          "iterate": "{{body.data}}"
        },
        "pagination": {
          "qs": {
            "after_id": "{{body.last_id}}"
          },
          "condition": "{{body.has_more}}"
        }
      },
      "rev": 2,
      "name": "listModels",
      "label": "List Models",
      "appName": "anthropic-claude",
      "apiJsonc": "{\n\t\"url\": \"/models\",\n\t\"method\": \"GET\",\n\t\"qs\": {\n\t\t\"limit\": 100\n\t},\n\t\"response\": {\n\t\t\"iterate\": \"{{body.data}}\",\n\t\t\"output\": {\n\t\t\t\"label\": \"{{item.display_name}}\",\n\t\t\t\"value\": \"{{item.id}}\"\n\t\t}\n\t},\n    \"pagination\": {\n\t\t\"condition\": \"{{body.has_more}}\",\n\t\t\"qs\": {\n            \"after_id\": \"{{body.last_id}}\" \n        }\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "anthropic-claude",
      "altAccountName": null,
      "parametersJsonc": null
    },
    "notePdfDocument": {
      "api": {
        "response": {
          "output": {
            "type": "html",
            "label": "<div style='color: #69502E; background: #F9ECD7; border-radius: 5px; padding: 12px 16px 12px 16px; font-size: 12px;'>PDF support is currently available on the following Claude Sonnet models:<br><b>claude-3-5-sonnet-20241022</b><br><b>claude-3-5-sonnet-20240620</b><br><b>claude-3-7-sonnet-20250219</b></div>"
          }
        }
      },
      "rev": 3,
      "name": "notePdfDocument",
      "label": "Note: PDF document",
      "appName": "anthropic-claude",
      "apiJsonc": "{\n\"response\": {\n\t\"output\": {\n\t\t\"type\": \"html\",\n\t\t\"label\": \"<div style='color: #69502E; background: #F9ECD7; border-radius: 5px; padding: 12px 16px 12px 16px; font-size: 12px;'>PDF support is currently available on the following Claude Sonnet models:<br><b>claude-3-5-sonnet-20241022</b><br><b>claude-3-5-sonnet-20240620</b><br><b>claude-3-7-sonnet-20250219</b></div>\"\n\t\t}\n\t}\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": null,
      "altAccountName": null,
      "parametersJsonc": null
    },
    "interfaceCreateACompletion": {
      "api": {
        "temp": {
          "streamInterface": [
            {
              "name": "eventStream",
              "type": "text",
              "label": "Event Stream"
            }
          ],
          "regularInterface": [
            {
              "name": "completion",
              "type": "text",
              "label": "Completion"
            },
            {
              "name": "stop_reason",
              "type": "text",
              "label": "Stop Reason"
            },
            {
              "name": "model",
              "type": "text",
              "label": "Model"
            },
            {
              "name": "stop",
              "type": "text",
              "label": "Stop"
            },
            {
              "name": "log_id",
              "type": "text",
              "label": "Log ID"
            }
          ]
        },
        "response": {
          "output": "{{if(parameters.stream, temp.streamInterface, temp.regularInterface)}}"
        }
      },
      "rev": 2,
      "name": "interfaceCreateACompletion",
      "label": "Interface: Create a Completion",
      "appName": "anthropic-claude",
      "apiJsonc": "{\n    \"temp\": {\n        \"regularInterface\": [\n            {\n                \"name\": \"completion\",\n                \"type\": \"text\",\n                \"label\": \"Completion\"\n            },\n            {\n                \"name\": \"stop_reason\",\n                \"type\": \"text\",\n                \"label\": \"Stop Reason\"\n            },\n            {\n                \"name\": \"model\",\n                \"type\": \"text\",\n                \"label\": \"Model\"\n            },\n            {\n                \"name\": \"stop\",\n                \"type\": \"text\",\n                \"label\": \"Stop\"\n            },\n            {\n                \"name\": \"log_id\",\n                \"type\": \"text\",\n                \"label\": \"Log ID\"\n            }\n        ],\n        \"streamInterface\": [\n            {\n                \"name\": \"eventStream\",\n                \"type\": \"text\",\n                \"label\": \"Event Stream\"\n            }\n        ]\n    },\n    \"response\": {\n        \"output\": \"{{if(parameters.stream, temp.streamInterface, temp.regularInterface)}}\"\n    }\n}",
      "appVersion": 1,
      "parameters": [],
      "accountName": "anthropic-claude",
      "altAccountName": null,
      "parametersJsonc": null
    }
  },
  "flags": {
    "sandboxes": [
      {
        "allowed": true,
        "version": 1
      },
      {
        "allowed": false,
        "version": 2
      }
    ]
  },
  "label": "Anthropic Claude",
  "theme": "#cc9b7a",
  "_hooks": {},
  "global": true,
  "groups": [
    {
      "label": "Other",
      "modules": [
        "createACompletion",
        "createAMessage",
        "makeAnApiCall"
      ]
    }
  ],
  "icon32": "\\x89504e470d0a1a0a0000000d4948445200000020000000200806000000737a7af400000006624b474400ff00ff00ffa0bda793000002794944415458c3ed96cb6f8e4114879fef730f0d0d8a364208e29eb011a2a5694242e312acfc03fe031b1662614d221622b113b790b044856882d425b112344a34162ad5d6a5dac7e23d4dc7abea6bd3c4e6fb259377e6fce69c3973ce999917ca28a38cff8c4229935480f9c086d029002f819698520d6c048a403fd00cbc2f144a32ffefc5a39d30c3cff836a9d3835ba6b6aafdc11d1bd01b2b076ad417fe8e2e755bf0e3d47309f7449d538a03c512420f500f2ccdd15381bd918e3ee012d013dc0a604bcec6a8773f59bd1e3beb577bd4be18bf5197c4bc19eafd240a97d589ff72a058821f6b814dd1ef05ce021f62bc00d81efdcfc0b5446f33b06ad429483cdf05cc8c7e2b700ab817e302b007a888f14da02dfa5540e3a8d31061ad569f27613d19f203eaf7907d511b425ecc15638b5a35620792a37750ed0d639d6a7dc8e7aacf9285cea885e076a8dd21ff1ece8e2c0aa13049bd9a2c725bad489c3b9e70afd5c521af541f24dc4575c2df1c18ae08579315d200de02eb80ad402dd0017c0b6e2183c5d8c1efc5580bac1c4df8d31df6abdfe2080eb4afc9cda77a4b9d16ba2bd5770977b4e434c4c479b91c97824e756b72339e4fb847eaaca11c189f5f3cb005581efd1fc053a08b3f1faf22b006a8243b8afb8026b29bf132b01f9812e9ac03aea8fcf5914a8aef4acefbea904fceb529eae964ee2b7551528ccd097761b8624c1d58af7e4c148f0c95bfa4561accee02cdaee843097738b1d3aeaecddb29a606038dc06c40a01db801fc11b664fc10789cd8db4df65011baefc25615b033b7d6604e435820bbf76b42fc09b80bfc182a6f89a175c09258a807b80374478dd501b3625e1bd9cf8a63f2b3524619658c057e01a5c73adb42c93d940000000049454e44ae426082",
  "icon64": "\\x89504e470d0a1a0a0000000d4948445200000040000000400806000000aa6971de00000006624b474400ff00ff00ffa0bda793000004df4944415478daed9add6f164514879fb7a56abf25c5181114a81062628c1f48d010116c4b01ab2826fa27186ff5df502fbcf0d22b13a3b62ad85490889f4451bc688a26286230a91f68b07ca415dbe3c59917c6ed9c7d77f7ddbe6de23c49d37467ceee3967667e7b66b6108944229148241289442291ff1f95c576004044e63b56698c6ba53ec50be429a00f980b3cef12f01270aa1a64c2ae1f984dd83501a3c05b8d4c4ea10488c80d22724cd279def5f5ed10917d22326dd81c1191eed06c5912640ca2ca5111e9f18371b62b529277414406fdc4954153c97968019e04aeadd1ef4ee0816ae01e6781fd864d3bb0b76c9fcb4ec0edc0d60cfd5a5d30cdd50bdeba7e079834ec1e06d62db90478a3b807b829a3d90e607de0fa09e043c3660db02bf1ccc54f806305f0688efeabd1842583b98caafd4cc0a6023c0e7495e574dd09f09cdf0adc91d3fc3160f995e8ae2e838f8171c3e65ee0fe40e21627018e16601f705da0ed32f097617717b02510cc59e05dc3a61d9d05a5f85e56023602db8cb609e045e09f405b1bf084ef87370b0e00bf18f72c4d0ceb4a4042fc561add468157815346fb43463013e85208b106d899f0a1f10970f4608bdf9fc07bc04fc0584a30bb03c1fc0dbce97e27a9a0fad15182ffc5f02abf2111b964546fa322d2e6faed1091a9ac656e86b27acaddb3ae5950ef0c58868a5f6ba06d161841373f005f025f19f7b907d85c0ddce377b4300ad189ea475d3ba37a13b011d86eb4fd081cf2fe3eef12121aae0eb4840e89e17e6c311ca04e312c94006f9486809b8d6eefa36bdf0fe61070c6e8df076c085cff165b0cd712d68f854d80a3c72520c405e06de68ff649e0b061730b3aa221317c03bb32dc4b8995614d3cf1db93227e9f18a256cbee2311e90ad8dd2822df2c8418169d01cd6835d66ab48f90a8febc6570147dc787b81bb8af1ab8c7afd8dbe44ee74b21312c9a80f5683516e20c5afc5847577f00c3866d070965f7ee3102fc66d80da07a909b65793a272abfd546b7695498fa8c293907ac42f7082d81f67ea017f83e71fd04f019bae693ac7576af88c8c29d19ba75b65c443e4d39ee9a733f52b0cf9c883c2be133c3a74564c6b03b28221d797520f312f06ebc05ddc55954a8bd1ed3fa5495bdf3ca85ab237a04f8ceb0db8c6e951726018e66b46069cbfba09c6c42abc3a4184ea27b8b105dc023019b5213b0015bfccaa40b5b0c87d11239c46ee0d63c0fca94002fa383a88035829d84957d1cbb32bc0d15c3ccb320cf5be07ac20a0caae807809fc9ff3ede8e9e262759871e80be9c50f61974160c31ff2dd28cce9cd7808b39fd08e329f02e11b96828f08488accab3f6bcfb3e2322b3c67d0f8b48a751191e376cce89c8b6acbe64d5806a662df11b43473f33de888ea13bc7109bb02bc351c3a61b9da9952c49c89a80b4caef1cbaf1295a809c063e30da3a492cbbc407144b0c07c92886a909f03238805df91d038e1789bcfa18744d5b6bb61f5b0c3f376c7a09ef2cf325c0d18dbdd91074f40b098e379a5f005fa7041352f669f4034ae8b4b9093d336c2fe217d587b99f41d12fb3217e1091de22dbd0c0739e4b299d0f1a62b85244c653c4f041a9b14dcef21abc06789df9ffecd0ec46ed74e1e8d159e01c1c460f45daf8ef414a0598428ba3f309f349e005f4ab54f29f2a2a843fd4cceb648e4cc8d94693f4238b0f4bc5f748241289442291482412892c55fe055f174d1ebb2dfb810000000049454e44ae426082",
  "origin": "eu1.make.com",
  "public": true,
  "compile": false,
  "created": "2023-07-25T11:15:56.803641+00:00",
  "icon128": "\\x89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda79300000a474944415478daed9dd993165715c07fdf6c30300c31107180ac04468c466498a02443088404590c0689bbafbefb07f84ff866956f2ea5468d083126298b256421514c8231095b1013638138710694d9ae0fa73f72ed40be3e677a9baaf3abea2a6ae8eed37dfbdc7bcf3dcbfdc0711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7719c9941a3ea07c842080160167017d00304e53b8e012f02ff6e345abf72226f09f029e5a3368011e00830964596938110022184752184774308e3218431e5311242d895dc27abbcbb0df2c643086742087764915307daaa7e8056240dd90076018b800ea05379f4005f02ba14a28f223d5923af03580a3c183d7bada9bd0224dc0c6c9be63d36009f569c7f09d80b4c28e5b4015f04ae2fab71a643ad1520ea419f076e9fe6ed3e06ec48ddf7aa4473f7ef80370cb2061085abfd28506b05489807ec04da73b8d74e6488ceca19e009839c6ee06174534e25d45601a29e338058ff79d00fac4fddbf154f2296bd960dc08ac21a28276aab00d1f37d0db82ea7fb7521c66477ab13a369e059e09041d6626033d47b1aa8bb022c063e9bf33d87803b14e78f028fa137061bc894735d314d930fb55480a8c77c01f844ceb75f083c90927355a251e029e0a441d600f0b92cb2aaa2960a90d00d6c251fe32fa6013c02f429ae790bd8679035179972f27e87dca89d02443d650db0b620312b480c4b45cffc2570de206b133536066ba70011bb90e1ba08ba81af03b35b9d184d034781170cb26e06b6433da781ba2ac012e0be82650c011f579c7f09d883cd18dc4e4d8dc15a2940d4437690bff1976611b02525f7aaa43c83270cb2064814ba6ea340ad1420a169fc75142ca7017c199d31780678dc206b2eb2242cfa9dd4d44601529ebfbcd7fed7a21f184cc9bf2ad128f01870c1206b08585ed27b65a6360a90d040c2b63728af9b045e072e2bafeb06be4a066330e2687268b9158912d66a1aa89b02f49144d194bc0d7c0751022df7012b15e7373d839306599b80f9d36aa19ca98502443de2416cc6df7ee0696cf3f32232faeca369e037d88cc141605d165965510b0548e8460ca54ee57597805f01e348e4ee3d83ec87808f28ce3f0b1c34c89987b8b76be319ac5c01a29eb00a9bf1770c7826f9f7116434d0f249c4f8ccda33a7801f6333063733fde496dca85c012276011f355cf714efbb689bce1aedfcdc0b7c8b0ca34f340dbc84dd18ac4dce605d14a00fd868b8ee1de0e7f07f1f663fb6f9f95e6099e2fc51c416d02a5b1be280ea31b7568e54aa00510fd8842e46dfe44f7cf0639f460c422d4b110794c618dc834dd9ee498eca47813a8c00d6fcb9cbc08f808ba9bf076435a04de36a43a6214d36ef5bd8561ef3107777e5ed5ff903007702771bae3b4992aad5ec9151cf3c083c6f7c96b590791408c82830638dc1ca142015f8b1187ffb80bf5de3ff469169403bbef620c9229aa5e84bc8ea43cb3224ddbdd269a0ea116029b22ed6f22f64ed1fd2f577299fbd657ede88c408b2320a3c8aad80e4212a0e1357a20091c66f40d7d84dfe00fca5c5392780c3867bdf847c188d31b81f313eb51499f594892a478039d88cbf49e0a7c0708bf3a690f9f992e1d9b6020b14e79f46bc905aae14bd54350d54a9006bb065fdfc95c40d7badf2ebe8ef8780570d3256a14be09842a6a46183ac6de8329372a57405881a7433b6f9ef49b2cfede781df1a64cc413e4ccbf68994ed083663f04afa5b15a3405523c02dc8f0af6504e96953ad4e4c45eede35c81a42679f8c20c6a0c533f808ba2927374a558054d68f650dfc1ab2ec42b1fbc631e08041d63224654c630c1ee2da4bd30f637572944e1523c06ca4612d95b37b807f2aaf19037e8d3e5b086414e8559c7f1c7b01c90ea0adec69a00a05584952a1abe46d12b76bd6de9ff20cbe6990b9160912659d9f27914d252e663939c576e036c375d3a23405486df6b0c8708b03c09f8de2dfc196c031175912b6d4b848d95e40fc145a6e02ee4fb555e1943d02f421068f96cbc02f90ac1f0b01f819b6d2aefbd195765d007e88de186c4fdaa6d49cc1521420d2e8bbb079fede2009ee68b75e4b2570587df6daad650e6237065719ae3353e608301b7d0a7693c3c8326b5e08a1577b201eb706f09c41760329279fa7b8e6045245a4653ee2192ccd182c6527c3e46556234e194be4ef2ce2019ccef306a4de60b9e13ea388f2ee850f1f85a20fb713f8097a853f8538c94e95b1d164e1a54a51833c80ede303dc981c55d18358e9fb6811626e341acd777e063106b5b90e3722cbcf532104f594a7a5ac29a08fc4a93283d9886e99761ec9586ae9b54cd1097c9392c2c4852a40d4fbd75261c023276e435f40f22cf00f83ac414a3206cb18016601bbb1197f75a23d790f8d67f01836cf602f32e5348a3606cb50809514bfd94359ac41b7b5cc24a200ff35c8da82ec925628852940ca1ad6d4e0d7995e923cbe5644d3c0616c0524cbd06f6aa9a6e8116031b69cbf3ab30d9d31780ed9604afb156703df40dcd185518802441abb0e5de9f54ce076f4fb0cee457617d13288fe472b541439027421491f33ddf84bd38e1490683c83c7b1552bdd80b46161c660910ad08fade0632630886e6b9949244d7dd4206b2b053ac172f704460df23012e2d4328e44ffca8a89ce429f9c321f19050e903dead734068794b2fa11ffc30f8af00c16e50a5e40b2059b92007c1fa9bd2f63893a8914a67e17fdc614db80ef917d5b9a6124a1e51e74b1880ede8f2b5852dccba3f9a34c2184dd21848b41cfdf4308abcb8a8425cfba2c8470d2f0ac1321846f2b7f88aa3f8470dc20eb7c08617d56591a8ae8655dc84e5f730cd7ee47bc6765729a24caa7a41d89106aaa89dfc45640b20069d3dc23434528c00a6c5bbd8c2331f4b1029ee9aa24f3e91492ce3d6cb8c5407264252021718b31b801a921c895dc14201a9a766333fe5e25e91d15fce0e22bc866135a7a906ca196a55da900d1cb06592b499c6a794e03798f000b48f6bf31f03492bc5905ef21a38036740ba2009a1a870bc89250fb153b90a2d55c3d83b92840a491f7223b6e69398f54f0944e2a8fcfa2804bc8b8f75f24eb7124c349cb6ae03359646525cf11a01dd90ad5a2a12f027f4c3552d9bc862d74db097c05bd67d052babe10313c736ba43c156039c9efe3289940acf0cad6b891b7ee09e03f865bac4157da358ed4385a0a48d693639878da0a9032fe34dbac35394e8664cb92388cada8e37a64f46b99cd1bbde3efb1199efd640c466521af11603e49558b81e7a9cef84b730e31d02c6c41e7b3bf802d40d489289bc5cff201a6a50029e34fb31e6e328c54d168f7d7c99d9431682927bf958c091c91ac47b18589d79153ce601e23403b12f8b1187faf50bdf197e6656cfb0d7721091c1a63f0756cc6e00272f209e4a100b72059bf93887193f568966d0fe7f00c79328664f08c2adf6702e995772a644d2053ce88b2dd269151d75a6771856975bb44fb1622c3bff65e534878f45c8d7a7ff39d7a9178bf36420852c17c36cb3b25b27a9044d359e89c431348bde3709ddacf711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7711cc7719ca2f81f1f9413e802b266000000000049454e44ae426082",
  "icon256": "\\",
  "icon512": "\\",
  "install": {
    "common": {
      "timeout": "{{parameters.timeout}}"
    }
  },
  "ipmRepo": null,
  "ipmTags": null,
  "version": 1,
  "website": null,
  "_modules": {
    "makeAnApiCall": {
      "id": 152346,
      "api": {
        "qs": {
          "{{...}}": "{{toCollection(parameters.qs, 'key', 'value')}}"
        },
        "url": "https://api.anthropic.com/{{parameters.url}}",
        "body": "{{parameters.body}}",
        "type": "text",
        "method": "{{parameters.method}}",
        "headers": {
          "{{...}}": "{{toCollection(parameters.headers, 'key', 'value')}}"
        },
        "response": {
          "output": {
            "body": "{{body}}",
            "headers": "{{headers}}",
            "statusCode": "{{statusCode}}"
          }
        }
      },
      "rev": 4,
      "crud": null,
      "name": "makeAnApiCall",
      "epoch": null,
      "flags": {},
      "label": "Make an API Call",
      "scope": [],
      "expect": [
        {
          "help": "Enter a path relative to `https://api.anthropic.com`, e.g. `/v1/messages` ",
          "name": "url",
          "type": "text",
          "label": "URL",
          "required": true
        },
        {
          "name": "method",
          "type": "select",
          "label": "Method",
          "default": "POST",
          "options": [
            {
              "label": "GET",
              "value": "GET"
            },
            {
              "label": "POST",
              "value": "POST"
            },
            {
              "label": "PUT",
              "value": "PUT"
            },
            {
              "label": "PATCH",
              "value": "PATCH"
            },
            {
              "label": "DELETE",
              "value": "DELETE"
            }
          ],
          "required": true
        },
        {
          "help": "You don't have to add authorization headers; we already did that for you.",
          "name": "headers",
          "spec": {
            "spec": [
              {
                "name": "key",
                "type": "text",
                "label": "Key"
              },
              {
                "name": "value",
                "type": "text",
                "label": "Value"
              }
            ],
            "type": "collection",
            "label": "Header"
          },
          "type": "array",
          "label": "Headers",
          "labels": {
            "add": "Add header"
          },
          "default": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        {
          "name": "qs",
          "spec": {
            "spec": [
              {
                "name": "key",
                "type": "text",
                "label": "Key"
              },
              {
                "name": "value",
                "type": "text",
                "label": "Value"
              }
            ],
            "type": "collection",
            "label": "Parameter"
          },
          "type": "array",
          "label": "Query String",
          "labels": {
            "add": "Add parameter"
          }
        },
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        }
      ],
      "public": true,
      "typeId": 12,
      "appName": "anthropic-claude",
      "samples": null,
      "apiJsonc": "{\n    \"qs\": {\n        \"{{...}}\": \"{{toCollection(parameters.qs, 'key', 'value')}}\"\n    },\n    \"url\": \"https://api.anthropic.com/{{parameters.url}}\",\n    \"body\": \"{{parameters.body}}\",\n    \"type\": \"text\",\n    \"method\": \"{{parameters.method}}\",\n    \"headers\": {\n        \"{{...}}\": \"{{toCollection(parameters.headers, 'key', 'value')}}\"\n    },\n    \"response\": {\n        \"output\": {\n            \"body\": \"{{body}}\",\n            \"headers\": \"{{headers}}\",\n            \"statusCode\": \"{{statusCode}}\"\n        }\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "body",
          "type": "any",
          "label": "Body"
        },
        {
          "name": "headers",
          "type": "collection",
          "label": "Headers"
        },
        {
          "name": "statusCode",
          "type": "number",
          "label": "Status code"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": null,
      "accountName": "anthropic-claude",
      "description": "Performs an arbitrary authorized API call.",
      "expectJsonc": "[\n\t{\n\t\t\"help\": \"Enter a path relative to `https://api.anthropic.com`, e.g. `/v1/messages` \",\n\t\t\"name\": \"url\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"URL\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"method\",\n\t\t\"type\": \"select\",\n\t\t\"label\": \"Method\",\n\t\t\"default\": \"POST\",\n\t\t\"options\": [\n\t\t\t{\n\t\t\t\t\"label\": \"GET\",\n\t\t\t\t\"value\": \"GET\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"POST\",\n\t\t\t\t\"value\": \"POST\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"PUT\",\n\t\t\t\t\"value\": \"PUT\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"PATCH\",\n\t\t\t\t\"value\": \"PATCH\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"label\": \"DELETE\",\n\t\t\t\t\"value\": \"DELETE\"\n\t\t\t}\n\t\t],\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"headers\",\n\t\t\"label\": \"Headers\",\n\t\t\"help\": \"You don't have to add authorization headers; we already did that for you.\",\n\t\t\"type\": \"array\",\n\t\t\"spec\": {\n\t\t\t\"label\": \"Header\",\n\t\t\t\"type\": \"collection\",\n\t\t\t\"spec\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\"label\": \"Key\",\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"label\": \"Value\",\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"labels\": {\n\t\t\t\"add\": \"Add header\"\n\t\t},\n\t\t\"default\": [\n\t\t\t{\n\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\"value\": \"application/json\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"name\": \"qs\",\n\t\t\"label\": \"Query String\",\n\t\t\"type\": \"array\",\n\t\t\"spec\": {\n\t\t\t\"label\": \"Parameter\",\n\t\t\t\"type\": \"collection\",\n\t\t\t\"spec\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\"label\": \"Key\",\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"label\": \"Value\",\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"labels\": {\n\t\t\t\"add\": \"Add parameter\"\n\t\t}\n\t},\n\t{\n\t\t\"name\": \"body\",\n\t\t\"type\": \"any\",\n\t\t\"label\": \"Body\"\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": null,
      "parametersJsonc": null,
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createAMessage": {
      "id": 126497,
      "api": {
        "url": "/messages",
        "body": "{{mergeObjects(temp.body, temp.additionalParameters)}}",
        "temp": {
          "body": {
            "stream": false,
            "{{...}}": "{{omit(parameters, 'messages', 'additionalParameters', 'tools')}}",
            "messages": "{{formatAttachments(parameters.messages)}}"
          },
          "additionalParameters": "{{toCollection(parseTools(parameters.additionalParameters), 'key', 'value')}}"
        },
        "method": "POST",
        "headers": {
          "anthropic-beta": "{{generateBetaHeader(parameters.model)}}"
        },
        "response": {
          "output": "{{copyTextOutput(body)}}"
        }
      },
      "rev": 20,
      "crud": "create",
      "name": "createAMessage",
      "epoch": null,
      "flags": {},
      "label": "Create a Prompt",
      "scope": [],
      "expect": [
        {
          "help": "The model that will complete your prompt.",
          "name": "model",
          "type": "select",
          "label": "Model",
          "options": "rpc://app%23anthropic-claude@1/listModels",
          "required": true,
          "validate": false
        },
        {
          "help": "The maximum number of tokens to generate before stopping.",
          "name": "max_tokens",
          "type": "uinteger",
          "label": "Max Tokens",
          "required": true
        },
        {
          "help": "Input messages. The first message must always use the `user` role. Roles must alternate.",
          "name": "messages",
          "spec": {
            "spec": [
              {
                "name": "role",
                "type": "select",
                "label": "Role",
                "options": [
                  {
                    "label": "User",
                    "value": "user",
                    "nested": [
                      {
                        "name": "content",
                        "spec": {
                          "spec": [
                            {
                              "help": "For models that support image content blocks (vision), see the [Anthropic model comparison table](https://docs.anthropic.com/en/docs/about-claude/models#model-comparison-table).",
                              "name": "type",
                              "type": "select",
                              "label": "Type",
                              "options": [
                                {
                                  "label": "Text",
                                  "value": "text",
                                  "nested": [
                                    {
                                      "help": "Content of the message on behalf of the selected **Role** .",
                                      "name": "text",
                                      "type": "text",
                                      "label": "Text",
                                      "required": true
                                    }
                                  ]
                                },
                                {
                                  "label": "Image",
                                  "value": "image",
                                  "nested": [
                                    {
                                      "name": "source",
                                      "spec": [
                                        {
                                          "help": "File name, including the extension, for example, `image.jpg`.",
                                          "name": "filename",
                                          "type": "filename",
                                          "label": "Filename",
                                          "required": true,
                                          "semantic": "file:name",
                                          "extension": [
                                            "jpeg",
                                            "jpg",
                                            "png",
                                            "gif",
                                            "webp"
                                          ]
                                        },
                                        {
                                          "help": "Binary data of the image. For example, you can retrieve the binary data of your image using the **HTTP: Get a file** module.",
                                          "name": "data",
                                          "type": "buffer",
                                          "label": "Data",
                                          "required": true,
                                          "semantic": "file:data"
                                        }
                                      ],
                                      "type": "collection",
                                      "label": "Source",
                                      "required": true
                                    }
                                  ]
                                },
                                {
                                  "label": "PDF document",
                                  "value": "document",
                                  "nested": [
                                    "rpc://app%23anthropic-claude@1/notePdfDocument",
                                    {
                                      "name": "pdfFileName",
                                      "type": "filename",
                                      "label": "Filename",
                                      "required": true,
                                      "semantic": "file:name",
                                      "extension": [
                                        "pdf"
                                      ]
                                    },
                                    {
                                      "name": "pdfFileData",
                                      "type": "buffer",
                                      "label": "Data",
                                      "required": true,
                                      "semantic": "file:data"
                                    }
                                  ]
                                },
                                {
                                  "label": "Tool result",
                                  "value": "tool_result",
                                  "nested": [
                                    {
                                      "name": "tool_use_id",
                                      "type": "text",
                                      "label": "Tool Use ID",
                                      "required": true
                                    },
                                    {
                                      "name": "content",
                                      "type": "text",
                                      "label": "Content",
                                      "required": true
                                    }
                                  ]
                                }
                              ],
                              "required": true
                            }
                          ],
                          "type": "collection",
                          "label": "Content"
                        },
                        "type": "array",
                        "label": "Content",
                        "labels": {
                          "add": "Add content"
                        },
                        "required": true
                      }
                    ]
                  },
                  {
                    "label": "Assistant",
                    "value": "assistant",
                    "nested": [
                      {
                        "help": "If the request ends with an assistant turn, then the response content will continue directly from that last turn.",
                        "name": "content",
                        "type": "text",
                        "label": "Content",
                        "required": true
                      }
                    ]
                  },
                  {
                    "label": "Tool Assistant",
                    "value": "tool_assistant",
                    "nested": [
                      {
                        "name": "content",
                        "spec": {
                          "spec": [
                            {
                              "help": "You can send image content blocks starting with Claude 3 models.",
                              "name": "type",
                              "type": "select",
                              "label": "Type",
                              "options": [
                                {
                                  "label": "Text",
                                  "value": "text",
                                  "nested": [
                                    {
                                      "help": "Content of the message on behalf of the selected **Role** .",
                                      "name": "text",
                                      "type": "text",
                                      "label": "Text",
                                      "required": true
                                    }
                                  ]
                                },
                                {
                                  "label": "Tool Use",
                                  "value": "tool_use",
                                  "nested": [
                                    {
                                      "name": "id",
                                      "type": "text",
                                      "label": "Tool Use ID",
                                      "required": true
                                    },
                                    {
                                      "name": "name",
                                      "type": "text",
                                      "label": "Tool Name",
                                      "required": true
                                    },
                                    {
                                      "name": "input",
                                      "type": "any",
                                      "label": "Input",
                                      "required": true
                                    }
                                  ]
                                }
                              ],
                              "required": true
                            }
                          ],
                          "type": "collection",
                          "label": "Content"
                        },
                        "type": "array",
                        "label": "Content",
                        "labels": {
                          "add": "Add content"
                        },
                        "required": true
                      }
                    ]
                  }
                ],
                "required": true
              }
            ],
            "type": "collection",
            "label": "Message"
          },
          "type": "array",
          "label": "Messages",
          "labels": {
            "add": "Add message"
          },
          "required": true
        },
        {
          "help": "A system prompt is a way of providing context and instructions. For more information about System prompts, see the [Anthropic Claude System prompts guide](https://docs.anthropic.com/claude/docs/how-to-use-system-prompts).",
          "name": "system",
          "type": "text",
          "label": "System Prompt",
          "advanced": true
        },
        {
          "help": "An object describing metadata about the request.",
          "name": "metadata",
          "spec": [
            {
              "help": "An external identifier for the user who is associated with the request.",
              "name": "user_id",
              "type": "text",
              "label": "User ID"
            }
          ],
          "type": "collection",
          "label": "Metadata",
          "advanced": true
        },
        {
          "help": "Custom text sequences that will cause the model to stop generating.",
          "name": "stop_sequences",
          "spec": {
            "type": "text",
            "label": "Stop Sequence"
          },
          "type": "array",
          "label": "Stop Sequences",
          "labels": {
            "add": "Add sequence"
          },
          "advanced": true
        },
        {
          "help": "Higher temperatures generate more creative and generative responses. For example, `0.8`. Lower temperatures generate more analytical /multiple-choice responses. For example, `0.2`.\nThe default value is `1`.",
          "name": "temperature",
          "type": "number",
          "label": "Temperature",
          "default": 1,
          "advanced": true,
          "validate": {
            "max": 1,
            "min": 0
          }
        },
        {
          "help": "Probability value to compute the cumulative distribution over all options for each subsequent token. Computed in decreasing probability order until this value is reached. You should alter **Temperature** or **Top P** , but not both.",
          "name": "top_p",
          "type": "number",
          "label": "Top P",
          "advanced": true,
          "validate": {
            "max": 1
          }
        },
        {
          "help": "Used to remove `long tail` low probability responses.",
          "name": "top_k",
          "type": "uinteger",
          "label": "Top K",
          "advanced": true
        },
        {
          "help": "Additional parameters to use. For a complete list of parameters, see the [Anthropic API Reference](https://docs.anthropic.com/en/api/messages).",
          "name": "additionalParameters",
          "spec": {
            "spec": [
              {
                "name": "key",
                "type": "text",
                "label": "Parameter Name",
                "required": true
              },
              {
                "name": "type",
                "type": "select",
                "label": "Input Type",
                "options": [
                  {
                    "label": "Text",
                    "value": "text",
                    "nested": [
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Parameter Value"
                      }
                    ],
                    "default": true
                  },
                  {
                    "label": "Number",
                    "value": "number",
                    "nested": [
                      {
                        "name": "value",
                        "type": "number",
                        "label": "Parameter Value"
                      }
                    ]
                  },
                  {
                    "label": "Boolean",
                    "value": "boolean",
                    "nested": [
                      {
                        "name": "value",
                        "type": "boolean",
                        "label": "Parameter Value"
                      }
                    ]
                  },
                  {
                    "label": "Date",
                    "value": "date",
                    "nested": [
                      {
                        "name": "value",
                        "type": "date",
                        "label": "Parameter Value"
                      }
                    ]
                  },
                  {
                    "label": "Tools",
                    "value": "tools",
                    "nested": [
                      {
                        "name": "value",
                        "spec": {
                          "type": "text",
                          "label": "Parameter Value"
                        },
                        "type": "array",
                        "label": "Parameter Values",
                        "labels": {
                          "add": "Add parameter value"
                        }
                      }
                    ]
                  },
                  {
                    "label": "Any",
                    "value": "any",
                    "nested": [
                      {
                        "name": "value",
                        "type": "any",
                        "label": "Parameter Value"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "collection",
            "label": "Input Parameter"
          },
          "type": "array",
          "label": "Other Input Parameters",
          "labels": {
            "add": "Add input parameter"
          },
          "advanced": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "anthropic-claude",
      "samples": null,
      "apiJsonc": "{\n\t\"url\": \"/messages\",\n\t\"method\": \"POST\",\n\t\"headers\": {\n\t\t\"anthropic-beta\": \"{{generateBetaHeader(parameters.model)}}\"\n\t},\n\n\t\"temp\": {\n\t\t\"body\": {\n\t\t\t\"{{...}}\": \"{{omit(parameters, 'messages', 'additionalParameters', 'tools')}}\",\n\t\t\t\"stream\": false,\n\t\t\t\"messages\": \"{{formatAttachments(parameters.messages)}}\"\n\t\t},\n\t\t\"additionalParameters\": \"{{toCollection(parseTools(parameters.additionalParameters), 'key', 'value')}}\"\n\t},\n\n\t\"body\": \"{{mergeObjects(temp.body, temp.additionalParameters)}}\",\n\n\t\"response\": {\n\t\t\"output\": \"{{copyTextOutput(body)}}\"\n\t}\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        {
          "name": "textResponse",
          "type": "text",
          "label": "Text Response"
        },
        {
          "name": "id",
          "type": "text",
          "label": "Unique ID"
        },
        {
          "name": "type",
          "type": "text",
          "label": "Type"
        },
        {
          "name": "role",
          "type": "text",
          "label": "Role"
        },
        {
          "name": "content",
          "spec": {
            "spec": [
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              },
              {
                "name": "text",
                "type": "text",
                "label": "Text"
              },
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "name",
                "type": "text",
                "label": "Name"
              },
              {
                "name": "input",
                "spec": [],
                "type": "collection",
                "label": "Input"
              }
            ],
            "type": "collection"
          },
          "type": "array",
          "label": "Content"
        },
        {
          "name": "model",
          "type": "text",
          "label": "Model"
        },
        {
          "name": "stop_reason",
          "type": "text",
          "label": "Stop Reason"
        },
        {
          "name": "stop_sequence",
          "type": "text",
          "label": "Stop Sequence"
        },
        {
          "name": "usage",
          "spec": [
            {
              "name": "input_tokens",
              "type": "uinteger",
              "label": "Input Tokens"
            },
            {
              "name": "cache_creation_input_tokens",
              "type": "number",
              "label": "Cache Creation Input Tokens"
            },
            {
              "name": "cache_read_input_tokens",
              "type": "number",
              "label": "Cache Read Input Tokens"
            },
            {
              "name": "output_tokens",
              "type": "uinteger",
              "label": "Output Tokens"
            }
          ],
          "type": "collection",
          "label": "Usage"
        },
        {
          "name": "tools",
          "spec": [],
          "type": "collection",
          "label": "Tools"
        }
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "anthropic-claude",
      "description": "Creates a new prompt based on a structured list of input messages.",
      "expectJsonc": "[\n\t{\n\t\t\"name\": \"model\",\n\t\t\"type\": \"select\",\n\t\t\"options\": \"rpc://listModels\",\n\t\t\"label\": \"Model\",\n\t\t\"validate\": false,\n\t\t\"help\": \"The model that will complete your prompt.\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"max_tokens\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Max Tokens\",\n\t\t\"help\": \"The maximum number of tokens to generate before stopping.\",\n\t\t\"required\": true\n\t},\n\t{\n\t\t\"name\": \"messages\",\n\t\t\"type\": \"array\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"collection\",\n\t\t\t\"label\": \"Message\",\n\t\t\t\"spec\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"role\",\n\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"User\",\n\t\t\t\t\t\t\t\"value\": \"user\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"content\",\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Content\",\n\t\t\t\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"help\": \"Content of the message on behalf of the selected **Role** .\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Image\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"image\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"source\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"filename\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"filename\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Filename\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"semantic\": \"file:name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"help\": \"File name, including the extension, for example, `image.jpg`.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"extension\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"jpeg\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"jpg\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"png\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"gif\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"webp\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"data\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"buffer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Data\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"semantic\": \"file:data\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"help\": \"Binary data of the image. For example, you can retrieve the binary data of your image using the **HTTP: Get a file** module.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Source\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"PDF document\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"document\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"rpc://notePdfDocument\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"pdfFileName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"filename\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Filename\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"semantic\": \"file:name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"extension\": [ \"pdf\" ],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"pdfFileData\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"buffer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Data\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"semantic\": \"file:data\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Tool result\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"tool_result\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"tool_use_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Tool Use ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"content\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Content\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"help\": \"For models that support image content blocks (vision), see the [Anthropic model comparison table](https://docs.anthropic.com/en/docs/about-claude/models#model-comparison-table).\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"label\": \"Content\",\n\t\t\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\t\t\"labels\": {\n\t\t\t\t\t\t\t\t\t\t\"add\": \"Add content\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"Assistant\",\n\t\t\t\t\t\t\t\"value\": \"assistant\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"content\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Content\",\n\t\t\t\t\t\t\t\t\t\"help\": \"If the request ends with an assistant turn, then the response content will continue directly from that last turn.\",\n\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"Tool Assistant\",\n\t\t\t\t\t\t\t\"value\": \"tool_assistant\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"content\",\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"collection\",\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Content\",\n\t\t\t\t\t\t\t\t\t\t\"spec\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"help\": \"Content of the message on behalf of the selected **Role** .\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Tool Use\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"tool_use\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Tool Use ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Tool Name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"input\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Input\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\"label\": \"Type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"help\": \"You can send image content blocks starting with Claude 3 models.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"required\": true\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"label\": \"Content\",\n\t\t\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\t\t\"labels\": {\n\t\t\t\t\t\t\t\t\t\t\"add\": \"Add content\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"label\": \"Role\",\n\t\t\t\t\t\"required\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"label\": \"Messages\",\n\t\t\"help\": \"Input messages. The first message must always use the `user` role. Roles must alternate.\",\n\t\t\"required\": true,\n\t\t\"labels\": {\n\t\t\t\"add\": \"Add message\"\n\t\t}\n\t},\n\t{\n\t\t\"name\": \"system\",\n\t\t\"type\": \"text\",\n\t\t\"label\": \"System Prompt\",\n\t\t\"help\": \"A system prompt is a way of providing context and instructions. For more information about System prompts, see the [Anthropic Claude System prompts guide](https://docs.anthropic.com/claude/docs/how-to-use-system-prompts).\",\n\t\t\"advanced\": true\n\t},\n\t{\n\t\t\"name\": \"metadata\",\n\t\t\"type\": \"collection\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"user_id\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"label\": \"User ID\",\n\t\t\t\t\"help\": \"An external identifier for the user who is associated with the request.\"\n\t\t\t}\n\t\t],\n\t\t\"label\": \"Metadata\",\n\t\t\"help\": \"An object describing metadata about the request.\",\n\t\t\"advanced\": true\n\t},\n\t{\n\t\t\"name\": \"stop_sequences\",\n\t\t\"type\": \"array\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"label\": \"Stop Sequence\"\n\t\t},\n\t\t\"label\": \"Stop Sequences\",\n\t\t\"help\": \"Custom text sequences that will cause the model to stop generating.\",\n\t\t\"advanced\": true,\n\t\t\"labels\": {\n\t\t\t\"add\": \"Add sequence\"\n\t\t}\n\t},\n\t{\n\t\t\"name\": \"temperature\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Temperature\",\n\t\t\"default\": 1,\n\t\t\"validate\": {\n\t\t\t\"max\": 1,\n\t\t\t\"min\": 0\n\t\t},\n\t\t\"help\": \"Higher temperatures generate more creative and generative responses. For example, `0.8`. Lower temperatures generate more analytical /multiple-choice responses. For example, `0.2`.\\nThe default value is `1`.\",\n\t\t\"advanced\": true\n\t},\n\t{\n\t\t\"name\": \"top_p\",\n\t\t\"type\": \"number\",\n\t\t\"label\": \"Top P\",\n\t\t\"help\": \"Probability value to compute the cumulative distribution over all options for each subsequent token. Computed in decreasing probability order until this value is reached. You should alter **Temperature** or **Top P** , but not both.\",\n\t\t\"advanced\": true,\n\t\t\"validate\": {\n\t\t\t\"max\": 1\n\t\t}\n\t},\n\t{\n\t\t\"name\": \"top_k\",\n\t\t\"type\": \"uinteger\",\n\t\t\"label\": \"Top K\",\n\t\t\"help\": \"Used to remove `long tail` low probability responses.\",\n\t\t\"advanced\": true\n\t},\n\t{\n\t\t\"name\": \"additionalParameters\",\n\t\t\"spec\": {\n\t\t\t\"label\": \"Input Parameter\",\n\t\t\t\"type\": \"collection\",\n\t\t\t\"spec\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"key\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"label\": \"Parameter Name\",\n\t\t\t\t\t\"required\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\"label\": \"Input Type\",\n\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"Text\",\n\t\t\t\t\t\t\t\"value\": \"text\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Parameter Value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"default\": true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"Number\",\n\t\t\t\t\t\t\t\"value\": \"number\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Parameter Value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"Boolean\",\n\t\t\t\t\t\t\t\"value\": \"boolean\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Parameter Value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"Date\",\n\t\t\t\t\t\t\t\"value\": \"date\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Parameter Value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"Tools\",\n\t\t\t\t\t\t\t\"value\": \"tools\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Parameter Values\",\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\t\t\t\t\t\"label\": \"Parameter Value\",\n\t\t\t\t\t\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"labels\": {\n\t\t\t\t\t\t\t\t\t\t\"add\": \"Add parameter value\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": \"Any\",\n\t\t\t\t\t\t\t\"value\": \"any\",\n\t\t\t\t\t\t\t\"nested\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\t\t\t\t\"type\": \"any\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Parameter Value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"labels\": {\n\t\t\t\"add\": \"Add input parameter\"\n\t\t},\n\t\t\"type\": \"array\",\n\t\t\"label\": \"Other Input Parameters\",\n\t\t\"help\": \"Additional parameters to use. For a complete list of parameters, see the [Anthropic API Reference](https://docs.anthropic.com/en/api/messages).\",\n\t\t\"advanced\": true\n\t}\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    {\n        \"name\": \"textResponse\",\n        \"type\": \"text\",\n        \"label\": \"Text Response\"\n    },\n    {\n        \"name\": \"id\",\n        \"type\": \"text\",\n        \"label\": \"Unique ID\"\n    },\n    {\n        \"name\": \"type\",\n        \"type\": \"text\",\n        \"label\": \"Type\"\n    },\n    {\n        \"name\": \"role\",\n        \"type\": \"text\",\n        \"label\": \"Role\"\n    },\n    {\n        \"name\": \"content\",\n        \"type\": \"array\",\n        \"spec\": {\n            \"type\": \"collection\",\n            \"spec\": [\n                {\n                    \"name\": \"type\",\n                    \"type\": \"text\",\n                    \"label\": \"Type\"\n                },\n                {\n                    \"name\": \"text\",\n                    \"type\": \"text\",\n                    \"label\": \"Text\"\n                },\n                {\n                    \"name\": \"id\",\n                    \"label\": \"ID\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"label\": \"Name\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"name\": \"input\",\n                    \"label\": \"Input\",\n                    \"type\": \"collection\",\n                    \"spec\": []\n                }\n            ]\n        },\n        \"label\": \"Content\"\n    },\n    {\n        \"name\": \"model\",\n        \"type\": \"text\",\n        \"label\": \"Model\"\n    },\n    {\n        \"name\": \"stop_reason\",\n        \"type\": \"text\",\n        \"label\": \"Stop Reason\"\n    },\n    {\n        \"name\": \"stop_sequence\",\n        \"type\": \"text\",\n        \"label\": \"Stop Sequence\"\n    },\n    {\n        \"name\": \"usage\",\n        \"type\": \"collection\",\n        \"spec\": [\n            {\n                \"name\": \"input_tokens\",\n                \"type\": \"uinteger\",\n                \"label\": \"Input Tokens\"\n            },\n            {\n                \"name\": \"cache_creation_input_tokens\",\n                \"type\": \"number\",\n                \"label\": \"Cache Creation Input Tokens\"\n            },\n            {\n                \"name\": \"cache_read_input_tokens\",\n                \"type\": \"number\",\n                \"label\": \"Cache Read Input Tokens\"\n            },\n            {\n                \"name\": \"output_tokens\",\n                \"type\": \"uinteger\",\n                \"label\": \"Output Tokens\"\n            }\n        ],\n        \"label\": \"Usage\"\n    },\n    {\n        \"name\": \"tools\",\n        \"label\": \"Tools\",\n        \"type\": \"collection\",\n        \"spec\":[]\n    }\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    },
    "createACompletion": {
      "id": 109085,
      "api": {
        "url": "/complete",
        "body": {
          "prompt": "Human:{{parameters.prompt}} Assistant:",
          "{{...}}": "{{omit(parameters,'prompt')}}"
        },
        "method": "POST",
        "response": {
          "output": "{{parseEventStream(body, parameters.stream)}}"
        }
      },
      "rev": 10,
      "crud": "create",
      "name": "createACompletion",
      "epoch": null,
      "flags": {},
      "label": "Create a Chat Completion (Legacy)",
      "scope": [],
      "expect": [
        {
          "help": "The model that will complete your prompt.\nThis module supports only legacy models and will not be compatible with future models and features. We recommend migrating to **Create a Prompt** module.",
          "name": "model",
          "type": "select",
          "label": "Model",
          "options": [
            {
              "label": "Claude (Legacy)",
              "value": "claude-2"
            }
          ],
          "required": true,
          "validate": false
        },
        {
          "help": "The prompt that you want Claude to complete.",
          "name": "prompt",
          "type": "text",
          "label": "Prompt",
          "required": true
        },
        {
          "help": "The maximum number of tokens to generate before stopping.\nNote that Anthropic models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.",
          "name": "max_tokens_to_sample",
          "type": "uinteger",
          "label": "Max Tokens to Sample",
          "required": true
        },
        {
          "help": "Sequences that will cause the model to stop generating completion text. Anthropic models stop on \"\\n\\nHuman:\", and may include additional built-in stop sequences in the future. By providing the `Stop Sequences` parameter, you may include additional strings that will cause the model to stop generating.",
          "name": "stop_sequences",
          "spec": {
            "type": "text",
            "label": "Sequence"
          },
          "type": "array",
          "label": "Stop Sequences",
          "advanced": true
        },
        {
          "help": "Amount of randomness injected into the response.\nDefaults to `1`. Ranges from `0` to `1`. Use temp closer to `0` for analytical / multiple choice, and closer to `1` for creative and generative tasks.",
          "name": "temperature",
          "type": "number",
          "label": "Temperature",
          "default": 1,
          "advanced": true,
          "validate": {
            "max": 1,
            "min": 0
          }
        },
        {
          "help": "Nucleus sampling from Anthropic cuts off token options once cumulative probability reaches a specified Top-p. Alter Temperature or Top-p, not both.",
          "name": "top_p",
          "type": "number",
          "label": "Top-p",
          "advanced": true
        },
        {
          "help": "Only sample from the top K options for each subsequent token.Used to remove \"long tail\" low probability responses. [Learn more technical details here](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277).",
          "name": "top_k",
          "type": "uinteger",
          "label": "Top-k",
          "advanced": true
        },
        {
          "name": "metadata",
          "spec": [
            {
              "help": "An external identifier for the user who is associated with the request.\nThis should be a UUID, hash value, or other opaque identifier. Anthropic may use this ID to help detect abuse. Do not include any identifying information such as name, email address, or phone number.",
              "name": "user_id",
              "type": "text",
              "label": "User ID"
            }
          ],
          "type": "collection",
          "label": "Metadata",
          "advanced": true
        }
      ],
      "public": true,
      "typeId": 4,
      "appName": "anthropic-claude",
      "samples": null,
      "apiJsonc": "{\n    \"url\": \"/complete\",\n    \"method\": \"POST\",\n    \"body\": {\n        \"{{...}}\": \"{{omit(parameters,'prompt')}}\",\n        \"prompt\": \"Human:{{parameters.prompt}} Assistant:\"\n    },\n    \"response\": {\n        \"output\": \"{{parseEventStream(body, parameters.stream)}}\"\n    }\n}",
      "approved": false,
      "hookName": null,
      "learning": false,
      "interface": [
        "rpc://app%23anthropic-claude@1/interfaceCreateACompletion"
      ],
      "appVersion": 1,
      "deprecated": false,
      "epochJsonc": null,
      "parameters": [],
      "scopeJsonc": "[\n]",
      "accountName": "anthropic-claude",
      "description": "Creates a completion based on the given prompt.",
      "expectJsonc": "[\n\t/* {\n\t\t\"type\": \"html\",\n\t\t\"label\": \"<div style='color: #205671; background: #E8F6FF; border-radius: 5px; padding: 12px 16px 12px 16px; font-size: 12px;'>This module supports only legacy models and will not be compatible with future models and features. We recommend migrating to <strong>Create a Prompt</strong> module.</div>\"\n\t}, */\n\t{\n\t\t\"name\": \"model\",\n\t\t\"label\": \"Model\",\n\t\t\"type\": \"select\",\n\t\t\"options\": [\n\t\t\t// no longer available to use after November 6, 2024.\n\t\t\t/* {\n                \"label\": \"Claude Instant\",\n                \"value\": \"claude-instant-1\"\n            }, */\n\t\t\t{\n\t\t\t\t\"label\": \"Claude (Legacy)\",\n\t\t\t\t\"value\": \"claude-2\"\n\t\t\t}\n\t\t],\n\t\t\"validate\": false,\n\t\t\"required\": true,\n\t\t\"help\": \"The model that will complete your prompt.\\nThis module supports only legacy models and will not be compatible with future models and features. We recommend migrating to **Create a Prompt** module.\"\n\t},\n\t{\n\t\t\"name\": \"prompt\",\n\t\t\"label\": \"Prompt\",\n\t\t\"type\": \"text\",\n\t\t\"required\": true,\n\t\t\"help\": \"The prompt that you want Claude to complete.\"\n\t},\n\t{\n\t\t\"name\": \"max_tokens_to_sample\",\n\t\t\"label\": \"Max Tokens to Sample\",\n\t\t\"type\": \"uinteger\",\n\t\t\"required\": true,\n\t\t\"help\": \"The maximum number of tokens to generate before stopping.\\nNote that Anthropic models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.\"\n\t},\n\t{\n\t\t\"name\": \"stop_sequences\",\n\t\t\"label\": \"Stop Sequences\",\n\t\t\"type\": \"array\",\n\t\t\"spec\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"label\": \"Sequence\"\n\t\t},\n\t\t\"advanced\": true,\n\t\t\"help\": \"Sequences that will cause the model to stop generating completion text. Anthropic models stop on \\\"\\\\n\\\\nHuman:\\\", and may include additional built-in stop sequences in the future. By providing the `Stop Sequences` parameter, you may include additional strings that will cause the model to stop generating.\"\n\t},\n\t{\n\t\t\"name\": \"temperature\",\n\t\t\"label\": \"Temperature\",\n\t\t\"type\": \"number\",\n\t\t\"default\": 1,\n\t\t\"validate\": {\n\t\t\t\"min\": 0,\n\t\t\t\"max\": 1\n\t\t},\n\t\t\"advanced\": true,\n\t\t\"help\": \"Amount of randomness injected into the response.\\nDefaults to `1`. Ranges from `0` to `1`. Use temp closer to `0` for analytical / multiple choice, and closer to `1` for creative and generative tasks.\"\n\t},\n\t{\n\t\t\"name\": \"top_p\",\n\t\t\"label\": \"Top-p\",\n\t\t\"type\": \"number\",\n\t\t\"advanced\": true,\n\t\t\"help\": \"Nucleus sampling from Anthropic cuts off token options once cumulative probability reaches a specified Top-p. Alter Temperature or Top-p, not both.\"\n\t},\n\t{\n\t\t\"name\": \"top_k\",\n\t\t\"label\": \"Top-k\",\n\t\t\"type\": \"uinteger\",\n\t\t\"advanced\": true,\n\t\t\"help\": \"Only sample from the top K options for each subsequent token.Used to remove \\\"long tail\\\" low probability responses. [Learn more technical details here](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277).\"\n\t},\n\t{\n\t\t\"name\": \"metadata\",\n\t\t\"label\": \"Metadata\",\n\t\t\"type\": \"collection\",\n\t\t\"spec\": [\n\t\t\t{\n\t\t\t\t\"name\": \"user_id\",\n\t\t\t\t\"label\": \"User ID\",\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"help\": \"An external identifier for the user who is associated with the request.\\nThis should be a UUID, hash value, or other opaque identifier. Anthropic may use this ID to help detect abuse. Do not include any identifying information such as name, email address, or phone number.\"\n\t\t\t}\n\t\t],\n\t\t\"advanced\": true\n\t}\n\t// when \"stream\" is set to \"true\" the response is sent in text/plain format. The string consists of the \"log\" of every action that is done for forming the completion.\n\t// commented out due to not clear vision whether this feature is in demand or not. Will be re-enabled when the feature is requested.\n\t// {\n\t//     \"name\": \"stream\",\n\t//     \"label\": \"Stream\",\n\t//     \"type\": \"boolean\",\n\t//     \"advanced\": true,\n\t//     \"help\": \"Whether to incrementally stream the response using server-sent events.\\nSee [this guide to SSE events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events) for details.\\nThe module will return different output depending on whether `Stream` is enabled or not.\"\n\t// }\n]",
      "samplesJsonc": null,
      "altAccountName": null,
      "interfaceJsonc": "[\n    \"rpc://interfaceCreateACompletion\"\n]",
      "parametersJsonc": "[\n]",
      "centicreditsFormula": null,
      "centicreditsFormulaDescription": null,
      "centicreditsFormulaDocumentationUrl": null
    }
  },
  "approved": true,
  "authorId": 671322,
  "billable": true,
  "inReview": false,
  "keywords": null,
  "language": "en",
  "_accounts": {
    "anthropic-claude": {
      "api": {
        "log": {
          "sanitize": [
            "request.headers.x-api-key"
          ]
        },
        "url": "https://api.anthropic.com/v1/messages",
        "body": {
          "model": "claude-3-5-sonnet-20240620",
          "messages": [
            {
              "role": "user",
              "content": "What does \"2+2\" equal to?"
            }
          ],
          "max_tokens": 1
        },
        "method": "POST",
        "headers": {
          "x-api-key": "{{parameters.apiKey}}",
          "anthropic-version": "2023-06-01"
        },
        "response": {
          "error": {
            "message": "[{{statusCode}}] {{body.error.message}}"
          }
        }
      },
      "rev": 12,
      "name": "anthropic-claude",
      "type": "basic",
      "label": "Anthropic Claude",
      "scope": [],
      "scopes": {},
      "aliasTo": null,
      "appName": "anthropic-claude",
      "install": {},
      "apiJsonc": "{\n    \"url\": \"https://api.anthropic.com/v1/messages\",\n    \"method\": \"POST\",\n    \"headers\": {\n        \"x-api-key\": \"{{parameters.apiKey}}\",\n        \"anthropic-version\": \"2023-06-01\"\n    },\n    \"body\": {\n        \"model\": \"claude-3-5-sonnet-20240620\", // Guaranteed Available Until June 2025\n        \"max_tokens\": 1,\n        \"messages\": [\n            { \"role\": \"user\", \"content\": \"What does \\\"2+2\\\" equal to?\" }\n        ]\n    },\n    \"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.error.message}}\"\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.x-api-key\"\n        ]\n    }\n}",
      "authorId": 671322,
      "appVersion": 1,
      "parameters": [
        {
          "help": "You can obtain your API key on the [Anthropic Console API keys page](https://console.anthropic.com/settings/keys).",
          "name": "apiKey",
          "type": "password",
          "label": "API Key",
          "editable": true,
          "required": true
        }
      ],
      "scopeJsonc": null,
      "installSpec": [],
      "scopesJsonc": null,
      "installJsonc": null,
      "depAccountName": null,
      "depAccountScope": null,
      "parametersJsonc": "[\n    {\n        \"name\": \"apiKey\",\n        \"type\": \"password\",\n        \"label\": \"API Key\",\n        \"help\": \"You can obtain your API key on the [Anthropic Console API keys page](https://console.anthropic.com/settings/keys).\",\n        \"required\": true,\n        \"editable\": true\n    }\n]",
      "installSpecJsonc": null,
      "connectedSystemName": null,
      "depAccountScopeJsonc": null
    }
  },
  "baseJsonc": "{\n    \"baseUrl\": \"https://api.anthropic.com/v1\",\n    \"method\": \"POST\",\n    \"headers\": {\n        \"x-api-key\": \"{{connection.apiKey}}\",\n        \"anthropic-version\": \"2023-06-01\"\n    },\n    \"timeout\": \"{{common.timeout || 40000}}\",\n    \"response\": {\n        \"error\": {\n            \"message\": \"[{{statusCode}}] {{body.error.message}} {{if(body.error.type == 'not_found_error', 'not found!', '')}}\",\n            \"429\": {\n                \"type\": \"RateLimitError\",\n                \"message\": \"[{{statusCode}}] {{body.error.message || 'Too many requests.'}}\"\n            }\n        }\n    },\n    \"log\": {\n        \"sanitize\": [\n            \"request.headers.x-api-key\"\n        ]\n    }\n}",
  "countries": null,
  "_functions": {
    "parseTools": {
      "rev": 5,
      "code": "function parseTools(paramIn) {\n    if (!paramIn || !Array.isArray(paramIn))\n        return;\n\n    let param;\n    try {\n        param = JSON.parse(JSON.stringify(paramIn))\n    } catch (error) {\n        new TypeError('Invalid format for additional parameters. ' + error)\n    }\n\n    return param.map(i => {\n        if (i.type === 'tools') {\n            i.value = (i.value || []).map(j => {\n                if (!(j instanceof Object)) {\n                    try {\n                        return JSON.parse(j)\n                    } catch (error) {\n                        throw TypeError('Invalid JSON value for tools')\n                    }\n                }\n                return j;\n            })\n        }\n        return i\n    })\n}",
      "name": "parseTools",
      "test": "it('Should parse the inner JSON for items with type === tools, without modifying the input.', () => {\n\tconst input = [\n\t\t{\n\t\t\t\"key\": \"test\",\n\t\t\t\"type\": \"tools\",\n\t\t\t\"value\": [\n\t\t\t\t'{\"x\": 123}',\n\t\t\t\t'{\"y\": 456}'\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"key\": \"test\",\n\t\t\t\"type\": \"tools\",\n\t\t\t\"value\": [\n\t\t\t\t'{\"a\": \"bla\"}',\n\t\t\t\t'{\"b\": \"123\"}'\n\t\t\t]\n\t\t}\n\t];\n\n\tconst inputOriginal = [\n\t\t{\n\t\t\t\"key\": \"test\",\n\t\t\t\"type\": \"tools\",\n\t\t\t\"value\": [\n\t\t\t\t'{\"x\": 123}',\n\t\t\t\t'{\"y\": 456}'\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"key\": \"test\",\n\t\t\t\"type\": \"tools\",\n\t\t\t\"value\": [\n\t\t\t\t'{\"a\": \"bla\"}',\n\t\t\t\t'{\"b\": \"123\"}'\n\t\t\t]\n\t\t}\n\t];\n\n\tconst expected = [\n\t\t{\n\t\t\tkey: 'test',\n\t\t\ttype: 'tools',\n\t\t\tvalue: [{ x: 123 }, { y: 456 }]\n\t\t},\n\t\t{\n\t\t\tkey: 'test',\n\t\t\ttype: 'tools',\n\t\t\tvalue: [{ a: 'bla' }, { b: '123' }]\n\t\t}\n\t];\n\n\tassert.deepStrictEqual(parseTools(input), expected);\n\tassert.deepStrictEqual(input, inputOriginal);\n})",
      "appName": "anthropic-claude",
      "arguments": "(paramIn)",
      "appVersion": 1
    },
    "mergeObjects": {
      "rev": 2,
      "code": "function mergeObjects(...obj) {\n\n    return Object.assign(...obj);\n}",
      "name": "mergeObjects",
      "test": null,
      "appName": "anthropic-claude",
      "arguments": "(...obj)",
      "appVersion": 1
    },
    "copyTextOutput": {
      "rev": 13,
      "code": "function copyTextOutput(body) {\n    if(body && body.content && Array.isArray(body.content)) {\n\n        // Text content\n        let textResponse = \"\";\n\n        // formatted tool content\n        const tools = {};\n\n        body.content.forEach(item => {\n            if(item.text) {\n                textResponse += `${item.text}\\n`;\n            }\n            if(item.type === 'tool_use') {\n                tools[item.name] = item;\n            }\n        });\n\n\n        return {\n            textResponse: textResponse || undefined,\n            ...body,\n            tools: Object.keys(tools).length === 0 ? undefined : tools\n        };\n    }\n    return body;\n}",
      "name": "copyTextOutput",
      "test": "it('copies text response to top level (one item)', function() {\n    const input = {\n        \"type\": \"message\",\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"type\": \"text\",\n                \"text\": \"content\"\n            }\n        ]\n    };\n    const output = {\n        \"textResponse\": \"content\\n\",\n        \"type\": \"message\",\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"type\": \"text\",\n                \"text\": \"content\"\n            }\n        ]\n    };\n    assert.deepEqual(copyTextOutput(input), output);\n});\n\nit('copies text response to top level (multiple items)', function() {\n    const input = {\n        \"type\": \"message\",\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"type\": \"text\",\n                \"text\": \"content1\"\n            },\n            {\n                \"type\": \"text\",\n                \"text\": \"content2\"\n            }\n        ]\n    };\n    const output = {\n        \"textResponse\": \"content1\\ncontent2\\n\",\n        \"type\": \"message\",\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"type\": \"text\",\n                \"text\": \"content1\"\n            },\n            {\n                \"type\": \"text\",\n                \"text\": \"content2\"\n            }\n        ]\n    };\n    assert.deepEqual(copyTextOutput(input), output);\n});\n\nit('handles case without content (no items)', function() {\n    const input = {\n        \"type\": \"message\",\n        \"role\": \"assistant\",\n        \"content\": []\n    };\n    const output = {\n        \"textResponse\": undefined,\n        \"type\": \"message\",\n        \"role\": \"assistant\",\n        \"content\": []\n    };\n    assert.deepEqual(copyTextOutput(input), output);\n});",
      "appName": "anthropic-claude",
      "arguments": "(body)",
      "appVersion": 1
    },
    "parseEventStream": {
      "rev": 2,
      "code": "function parseEventStream(body, isStream) {\n    return isStream ? { eventStream: body } : body;\n}\n",
      "name": "parseEventStream",
      "test": null,
      "appName": "anthropic-claude",
      "arguments": "(body, isStream)",
      "appVersion": 1
    },
    "formatAttachments": {
      "rev": 16,
      "code": "function formatAttachments(messages) {\n\n/**\n * Returns a list of formatted messages\n * @param {array || undefined} [messages]\n * @return {\"role\": string, \"content\": string|{\"text\": string|undefined, \"type\": string}[]} - if the role is user and content is text\n * @return {\"role\": string, \"content\": {\"source\": {\"type\": string, \"media_type\": string, \"data\": string}, \"type\": string}[]} - if the role is user and content is file\n * @return {\"role\": string, \"content\": string} - if the role is assistant or system\n */\n\n    if (!messages) return messages\n    return messages.map((message) => ({\n        ...message,\n        content: Array.isArray(message.content) ? message.content.map((i) => ({\n            type: i.type,\n            ...(i.text && { text: i.text }),\n            ...((i.source || i.type === 'document') && {\n                source: {\n                    type: 'base64',\n                    media_type: iml.mime(i.source?.filename ?? i.pdfFileName),\n                    data: iml.base64(i.source?.data ?? i.pdfFileData)\n                }\n            })\n        })) : message.content\n    }))\n}",
      "name": "formatAttachments",
      "test": "it('returns the same message object if no attachments', function () {\n    const data = [\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\n                    \"text\": \"Hello!\",\n                    \"type\": \"text\"\n                }\n            ]\n        },\n        {\n            \"role\": \"assistant\",\n            \"content\": \"My name is\"\n        }\n    ];\n    assert.deepEqual(formatAttachments(data), data);\n});\n\nit('returns formatted message object if a message has attachments', function () {\n    const input = [\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\n                    \"type\": \"image\",\n                    \"source\": {\n                        \"data\": \"image data\",\n                        \"filename\": \"file.jpg\"\n                    }\n                }\n            ]\n        }\n    ];\n    const output = [\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\n                    \"type\": \"image\",\n                    \"source\": {\n                        \"type\": \"base64\",\n                        \"media_type\": \"image/jpeg\",\n                        \"data\": \"aW1hZ2UgZGF0YQ==\"\n                    }\n                }\n            ]\n        }\n    ];\n    assert.deepEqual(formatAttachments(input), output);\n});\n\n\nit('pdf document in the content array', function () {\n    const input = [\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\n                    \"type\": \"document\",\n                    \"pdfFileData\": \"image data\",\n                    \"pdfFileName\": \"gocardless-readme - Google Docs.pdf\"\n                }\n            ]\n        }\n    ];\n\n    const output = [\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\n                    \"type\": \"document\",\n                    \"source\": {\n                        \"type\": \"base64\",\n                        \"media_type\": \"application/pdf\",\n                        \"data\": \"aW1hZ2UgZGF0YQ==\"\n                    }\n                }\n            ]\n        }\n    ];\n    assert.deepEqual(formatAttachments(input), output);\n});",
      "appName": "anthropic-claude",
      "arguments": "(messages)",
      "appVersion": 1
    },
    "generateBetaHeader": {
      "rev": 3,
      "code": "function generateBetaHeader(model) {\n    if(!model) return undefined;\n\n    if(model === 'claude-3-5-sonnet-20241022' || model === 'claude-3-5-sonnet-20240620')\n        return 'pdfs-2024-09-25';\n    else if(model === 'claude-3-7-sonnet-20250219') return 'output-128k-2025-02-19';\n\n    return undefined;\n\n}",
      "name": "generateBetaHeader",
      "test": "it('should return \"pdfs-2024-09-25\" for model \"claude-3-5-sonnet-20241022\"', () => {\n    const result = generateBetaHeader('claude-3-5-sonnet-20241022');\n    assert.strictEqual(result, 'pdfs-2024-09-25');\n  });\n\n  it('should return \"pdfs-2024-09-25\" for model \"claude-3-5-sonnet-20240620\"', () => {\n    const result = generateBetaHeader('claude-3-5-sonnet-20240620');\n    assert.strictEqual(result, 'pdfs-2024-09-25');\n  });\n\n  it('should return \"output-128k-2025-02-19\" for model \"claude-3-7-sonnet-20250219\"', () => {\n    const result = generateBetaHeader('claude-3-7-sonnet-20250219');\n    assert.strictEqual(result, 'output-128k-2025-02-19');\n  });\n\n  it('should return undefined for any other model', () => {\n    const result = generateBetaHeader('some-other-model');\n    assert.strictEqual(result, undefined);\n  });",
      "appName": "anthropic-claude",
      "arguments": "(model)",
      "appVersion": 1
    },
    "removeFieldsFromArray": {
      "rev": 5,
      "code": "function removeFieldsFromArray(array, field) {\n    if(array && Array.isArray(array)) {\n        return array.map(item => {\n            delete item[field]\n            return item\n        })\n    }\n    return []\n}",
      "name": "removeFieldsFromArray",
      "test": "it('removes field from array of objects', function() {\n    const input = [\n        {\n            id: 1,\n            label: 'Item 1',\n            data: 'Some data'\n        },\n        {\n            id: 2,\n            label: 'Item 2',\n            data: 'Some data'\n        }\n    ];\n    const output = [\n        {\n            id: 1,\n            label: 'Item 1'\n        },\n        {\n            id: 2,\n            label: 'Item 2'\n        }\n    ];\n    assert.deepEqual(removeFieldsFromArray(input, 'data'), output);\n});\n\nit('returns the same array if fields not found', function() {\n    const array = [\n        {\n            id: 1,\n            label: 'Item 1',\n            data: 'Some data'\n        },\n        {\n            id: 2,\n            label: 'Item 2',\n            data: 'Some data'\n        }\n    ];\n    assert.deepEqual(removeFieldsFromArray(array, 'unexisting_data'), array);\n});\n\nit('handles unexpected inputs', function() {\n    assert.deepEqual(removeFieldsFromArray(undefined, 'unexisting_data'), []);\n    assert.deepEqual(removeFieldsFromArray(null, 'unexisting_data'), []);\n    assert.deepEqual(removeFieldsFromArray('', 'unexisting_data'), []);\n    assert.deepEqual(removeFieldsFromArray(0, 'unexisting_data'), []);\n    assert.deepEqual(removeFieldsFromArray(['item1, item2'], 'unexisting_data'), ['item1, item2']);\n});",
      "appName": "anthropic-claude",
      "arguments": "(array, field)",
      "appVersion": 1
    }
  },
  "approvedAt": "2023-07-26T09:00:20.308553+00:00",
  "categories": [],
  "opensource": false,
  "description": "Claude is a next-generation AI assistant based on Anthropic's research into training helpful, honest, and harmless AI systems. Safer: with Constitutional AI built in, Claude is designed to reduce brand risk. Best in class data retention, and no training on your data. Cleve: leading the industry with 100K+ token windows, Claude can handle complex multi-step instructions over large amounts of content. Yours: personalize Claude to excel at your use cases and speak in your voice. Make the model work for you.",
  "iconColor32": null,
  "iconColor64": null,
  "installSpec": [
    {
      "name": "timeout",
      "type": "uinteger",
      "label": "Module Timeout",
      "default": 40000
    }
  ],
  "inviteToken": "27232fe473fb8dcdb3b670a7d37b4b11",
  "versionFull": "1.2.18",
  "compiledName": "anthropic-claude",
  "iconColor128": null,
  "iconColor256": null,
  "iconColor512": null,
  "installJsonc": "{\n    \"common\": {\n        \"timeout\": \"{{parameters.timeout}}\"\n    }\n}",
  "manifestVersion": 2,
  "compilationError": null,
  "installSpecJsonc": "[\n    {\n        \"name\": \"timeout\",\n        \"label\": \"Module Timeout\",\n        \"type\": \"uinteger\",\n        \"default\": 40000\n    }\n]"
}
